(global["webpackJsonp"] = global["webpackJsonp"] || []).push([["common/vendor"],[
/* 0 */,
/* 1 */
/*!************************************************************!*\
  !*** ./node_modules/@dcloudio/uni-mp-weixin/dist/index.js ***!
  \************************************************************/
/*! no static exports found */
/***/ (function(module, exports, __webpack_require__) {

"use strict";
/* WEBPACK VAR INJECTION */(function(global) {Object.defineProperty(exports, "__esModule", { value: true });exports.createApp = createApp;exports.createComponent = createComponent;exports.createPage = createPage;exports.createPlugin = createPlugin;exports.createSubpackageApp = createSubpackageApp;exports.default = void 0;var _vue = _interopRequireDefault(__webpack_require__(/*! vue */ 3));
var _uniI18n = __webpack_require__(/*! @dcloudio/uni-i18n */ 4);function _interopRequireDefault(obj) {return obj && obj.__esModule ? obj : { default: obj };}function ownKeys(object, enumerableOnly) {var keys = Object.keys(object);if (Object.getOwnPropertySymbols) {var symbols = Object.getOwnPropertySymbols(object);if (enumerableOnly) symbols = symbols.filter(function (sym) {return Object.getOwnPropertyDescriptor(object, sym).enumerable;});keys.push.apply(keys, symbols);}return keys;}function _objectSpread(target) {for (var i = 1; i < arguments.length; i++) {var source = arguments[i] != null ? arguments[i] : {};if (i % 2) {ownKeys(Object(source), true).forEach(function (key) {_defineProperty(target, key, source[key]);});} else if (Object.getOwnPropertyDescriptors) {Object.defineProperties(target, Object.getOwnPropertyDescriptors(source));} else {ownKeys(Object(source)).forEach(function (key) {Object.defineProperty(target, key, Object.getOwnPropertyDescriptor(source, key));});}}return target;}function _slicedToArray(arr, i) {return _arrayWithHoles(arr) || _iterableToArrayLimit(arr, i) || _unsupportedIterableToArray(arr, i) || _nonIterableRest();}function _nonIterableRest() {throw new TypeError("Invalid attempt to destructure non-iterable instance.\nIn order to be iterable, non-array objects must have a [Symbol.iterator]() method.");}function _iterableToArrayLimit(arr, i) {if (typeof Symbol === "undefined" || !(Symbol.iterator in Object(arr))) return;var _arr = [];var _n = true;var _d = false;var _e = undefined;try {for (var _i = arr[Symbol.iterator](), _s; !(_n = (_s = _i.next()).done); _n = true) {_arr.push(_s.value);if (i && _arr.length === i) break;}} catch (err) {_d = true;_e = err;} finally {try {if (!_n && _i["return"] != null) _i["return"]();} finally {if (_d) throw _e;}}return _arr;}function _arrayWithHoles(arr) {if (Array.isArray(arr)) return arr;}function _defineProperty(obj, key, value) {if (key in obj) {Object.defineProperty(obj, key, { value: value, enumerable: true, configurable: true, writable: true });} else {obj[key] = value;}return obj;}function _toConsumableArray(arr) {return _arrayWithoutHoles(arr) || _iterableToArray(arr) || _unsupportedIterableToArray(arr) || _nonIterableSpread();}function _nonIterableSpread() {throw new TypeError("Invalid attempt to spread non-iterable instance.\nIn order to be iterable, non-array objects must have a [Symbol.iterator]() method.");}function _unsupportedIterableToArray(o, minLen) {if (!o) return;if (typeof o === "string") return _arrayLikeToArray(o, minLen);var n = Object.prototype.toString.call(o).slice(8, -1);if (n === "Object" && o.constructor) n = o.constructor.name;if (n === "Map" || n === "Set") return Array.from(o);if (n === "Arguments" || /^(?:Ui|I)nt(?:8|16|32)(?:Clamped)?Array$/.test(n)) return _arrayLikeToArray(o, minLen);}function _iterableToArray(iter) {if (typeof Symbol !== "undefined" && Symbol.iterator in Object(iter)) return Array.from(iter);}function _arrayWithoutHoles(arr) {if (Array.isArray(arr)) return _arrayLikeToArray(arr);}function _arrayLikeToArray(arr, len) {if (len == null || len > arr.length) len = arr.length;for (var i = 0, arr2 = new Array(len); i < len; i++) {arr2[i] = arr[i];}return arr2;}

var realAtob;

var b64 = 'ABCDEFGHIJKLMNOPQRSTUVWXYZabcdefghijklmnopqrstuvwxyz0123456789+/=';
var b64re = /^(?:[A-Za-z\d+/]{4})*?(?:[A-Za-z\d+/]{2}(?:==)?|[A-Za-z\d+/]{3}=?)?$/;

if (typeof atob !== 'function') {
  realAtob = function realAtob(str) {
    str = String(str).replace(/[\t\n\f\r ]+/g, '');
    if (!b64re.test(str)) {throw new Error("Failed to execute 'atob' on 'Window': The string to be decoded is not correctly encoded.");}

    // Adding the padding if missing, for semplicity
    str += '=='.slice(2 - (str.length & 3));
    var bitmap;var result = '';var r1;var r2;var i = 0;
    for (; i < str.length;) {
      bitmap = b64.indexOf(str.charAt(i++)) << 18 | b64.indexOf(str.charAt(i++)) << 12 |
      (r1 = b64.indexOf(str.charAt(i++))) << 6 | (r2 = b64.indexOf(str.charAt(i++)));

      result += r1 === 64 ? String.fromCharCode(bitmap >> 16 & 255) :
      r2 === 64 ? String.fromCharCode(bitmap >> 16 & 255, bitmap >> 8 & 255) :
      String.fromCharCode(bitmap >> 16 & 255, bitmap >> 8 & 255, bitmap & 255);
    }
    return result;
  };
} else {
  // 注意atob只能在全局对象上调用，例如：`const Base64 = {atob};Base64.atob('xxxx')`是错误的用法
  realAtob = atob;
}

function b64DecodeUnicode(str) {
  return decodeURIComponent(realAtob(str).split('').map(function (c) {
    return '%' + ('00' + c.charCodeAt(0).toString(16)).slice(-2);
  }).join(''));
}

function getCurrentUserInfo() {
  var token = wx.getStorageSync('uni_id_token') || '';
  var tokenArr = token.split('.');
  if (!token || tokenArr.length !== 3) {
    return {
      uid: null,
      role: [],
      permission: [],
      tokenExpired: 0 };

  }
  var userInfo;
  try {
    userInfo = JSON.parse(b64DecodeUnicode(tokenArr[1]));
  } catch (error) {
    throw new Error('获取当前用户信息出错，详细错误信息为：' + error.message);
  }
  userInfo.tokenExpired = userInfo.exp * 1000;
  delete userInfo.exp;
  delete userInfo.iat;
  return userInfo;
}

function uniIdMixin(Vue) {
  Vue.prototype.uniIDHasRole = function (roleId) {var _getCurrentUserInfo =


    getCurrentUserInfo(),role = _getCurrentUserInfo.role;
    return role.indexOf(roleId) > -1;
  };
  Vue.prototype.uniIDHasPermission = function (permissionId) {var _getCurrentUserInfo2 =


    getCurrentUserInfo(),permission = _getCurrentUserInfo2.permission;
    return this.uniIDHasRole('admin') || permission.indexOf(permissionId) > -1;
  };
  Vue.prototype.uniIDTokenValid = function () {var _getCurrentUserInfo3 =


    getCurrentUserInfo(),tokenExpired = _getCurrentUserInfo3.tokenExpired;
    return tokenExpired > Date.now();
  };
}

var _toString = Object.prototype.toString;
var hasOwnProperty = Object.prototype.hasOwnProperty;

function isFn(fn) {
  return typeof fn === 'function';
}

function isStr(str) {
  return typeof str === 'string';
}

function isPlainObject(obj) {
  return _toString.call(obj) === '[object Object]';
}

function hasOwn(obj, key) {
  return hasOwnProperty.call(obj, key);
}

function noop() {}

/**
                    * Create a cached version of a pure function.
                    */
function cached(fn) {
  var cache = Object.create(null);
  return function cachedFn(str) {
    var hit = cache[str];
    return hit || (cache[str] = fn(str));
  };
}

/**
   * Camelize a hyphen-delimited string.
   */
var camelizeRE = /-(\w)/g;
var camelize = cached(function (str) {
  return str.replace(camelizeRE, function (_, c) {return c ? c.toUpperCase() : '';});
});

var HOOKS = [
'invoke',
'success',
'fail',
'complete',
'returnValue'];


var globalInterceptors = {};
var scopedInterceptors = {};

function mergeHook(parentVal, childVal) {
  var res = childVal ?
  parentVal ?
  parentVal.concat(childVal) :
  Array.isArray(childVal) ?
  childVal : [childVal] :
  parentVal;
  return res ?
  dedupeHooks(res) :
  res;
}

function dedupeHooks(hooks) {
  var res = [];
  for (var i = 0; i < hooks.length; i++) {
    if (res.indexOf(hooks[i]) === -1) {
      res.push(hooks[i]);
    }
  }
  return res;
}

function removeHook(hooks, hook) {
  var index = hooks.indexOf(hook);
  if (index !== -1) {
    hooks.splice(index, 1);
  }
}

function mergeInterceptorHook(interceptor, option) {
  Object.keys(option).forEach(function (hook) {
    if (HOOKS.indexOf(hook) !== -1 && isFn(option[hook])) {
      interceptor[hook] = mergeHook(interceptor[hook], option[hook]);
    }
  });
}

function removeInterceptorHook(interceptor, option) {
  if (!interceptor || !option) {
    return;
  }
  Object.keys(option).forEach(function (hook) {
    if (HOOKS.indexOf(hook) !== -1 && isFn(option[hook])) {
      removeHook(interceptor[hook], option[hook]);
    }
  });
}

function addInterceptor(method, option) {
  if (typeof method === 'string' && isPlainObject(option)) {
    mergeInterceptorHook(scopedInterceptors[method] || (scopedInterceptors[method] = {}), option);
  } else if (isPlainObject(method)) {
    mergeInterceptorHook(globalInterceptors, method);
  }
}

function removeInterceptor(method, option) {
  if (typeof method === 'string') {
    if (isPlainObject(option)) {
      removeInterceptorHook(scopedInterceptors[method], option);
    } else {
      delete scopedInterceptors[method];
    }
  } else if (isPlainObject(method)) {
    removeInterceptorHook(globalInterceptors, method);
  }
}

function wrapperHook(hook) {
  return function (data) {
    return hook(data) || data;
  };
}

function isPromise(obj) {
  return !!obj && (typeof obj === 'object' || typeof obj === 'function') && typeof obj.then === 'function';
}

function queue(hooks, data) {
  var promise = false;
  for (var i = 0; i < hooks.length; i++) {
    var hook = hooks[i];
    if (promise) {
      promise = Promise.resolve(wrapperHook(hook));
    } else {
      var res = hook(data);
      if (isPromise(res)) {
        promise = Promise.resolve(res);
      }
      if (res === false) {
        return {
          then: function then() {} };

      }
    }
  }
  return promise || {
    then: function then(callback) {
      return callback(data);
    } };

}

function wrapperOptions(interceptor) {var options = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : {};
  ['success', 'fail', 'complete'].forEach(function (name) {
    if (Array.isArray(interceptor[name])) {
      var oldCallback = options[name];
      options[name] = function callbackInterceptor(res) {
        queue(interceptor[name], res).then(function (res) {
          /* eslint-disable no-mixed-operators */
          return isFn(oldCallback) && oldCallback(res) || res;
        });
      };
    }
  });
  return options;
}

function wrapperReturnValue(method, returnValue) {
  var returnValueHooks = [];
  if (Array.isArray(globalInterceptors.returnValue)) {
    returnValueHooks.push.apply(returnValueHooks, _toConsumableArray(globalInterceptors.returnValue));
  }
  var interceptor = scopedInterceptors[method];
  if (interceptor && Array.isArray(interceptor.returnValue)) {
    returnValueHooks.push.apply(returnValueHooks, _toConsumableArray(interceptor.returnValue));
  }
  returnValueHooks.forEach(function (hook) {
    returnValue = hook(returnValue) || returnValue;
  });
  return returnValue;
}

function getApiInterceptorHooks(method) {
  var interceptor = Object.create(null);
  Object.keys(globalInterceptors).forEach(function (hook) {
    if (hook !== 'returnValue') {
      interceptor[hook] = globalInterceptors[hook].slice();
    }
  });
  var scopedInterceptor = scopedInterceptors[method];
  if (scopedInterceptor) {
    Object.keys(scopedInterceptor).forEach(function (hook) {
      if (hook !== 'returnValue') {
        interceptor[hook] = (interceptor[hook] || []).concat(scopedInterceptor[hook]);
      }
    });
  }
  return interceptor;
}

function invokeApi(method, api, options) {for (var _len = arguments.length, params = new Array(_len > 3 ? _len - 3 : 0), _key = 3; _key < _len; _key++) {params[_key - 3] = arguments[_key];}
  var interceptor = getApiInterceptorHooks(method);
  if (interceptor && Object.keys(interceptor).length) {
    if (Array.isArray(interceptor.invoke)) {
      var res = queue(interceptor.invoke, options);
      return res.then(function (options) {
        return api.apply(void 0, [wrapperOptions(interceptor, options)].concat(params));
      });
    } else {
      return api.apply(void 0, [wrapperOptions(interceptor, options)].concat(params));
    }
  }
  return api.apply(void 0, [options].concat(params));
}

var promiseInterceptor = {
  returnValue: function returnValue(res) {
    if (!isPromise(res)) {
      return res;
    }
    return new Promise(function (resolve, reject) {
      res.then(function (res) {
        if (res[0]) {
          reject(res[0]);
        } else {
          resolve(res[1]);
        }
      });
    });
  } };


var SYNC_API_RE =
/^\$|Window$|WindowStyle$|sendNativeEvent|restoreGlobal|getCurrentSubNVue|getMenuButtonBoundingClientRect|^report|interceptors|Interceptor$|getSubNVueById|requireNativePlugin|upx2px|hideKeyboard|canIUse|^create|Sync$|Manager$|base64ToArrayBuffer|arrayBufferToBase64|getLocale|setLocale/;

var CONTEXT_API_RE = /^create|Manager$/;

// Context例外情况
var CONTEXT_API_RE_EXC = ['createBLEConnection'];

// 同步例外情况
var ASYNC_API = ['createBLEConnection'];

var CALLBACK_API_RE = /^on|^off/;

function isContextApi(name) {
  return CONTEXT_API_RE.test(name) && CONTEXT_API_RE_EXC.indexOf(name) === -1;
}
function isSyncApi(name) {
  return SYNC_API_RE.test(name) && ASYNC_API.indexOf(name) === -1;
}

function isCallbackApi(name) {
  return CALLBACK_API_RE.test(name) && name !== 'onPush';
}

function handlePromise(promise) {
  return promise.then(function (data) {
    return [null, data];
  }).
  catch(function (err) {return [err];});
}

function shouldPromise(name) {
  if (
  isContextApi(name) ||
  isSyncApi(name) ||
  isCallbackApi(name))
  {
    return false;
  }
  return true;
}

/* eslint-disable no-extend-native */
if (!Promise.prototype.finally) {
  Promise.prototype.finally = function (callback) {
    var promise = this.constructor;
    return this.then(
    function (value) {return promise.resolve(callback()).then(function () {return value;});},
    function (reason) {return promise.resolve(callback()).then(function () {
        throw reason;
      });});

  };
}

function promisify(name, api) {
  if (!shouldPromise(name)) {
    return api;
  }
  return function promiseApi() {var options = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : {};for (var _len2 = arguments.length, params = new Array(_len2 > 1 ? _len2 - 1 : 0), _key2 = 1; _key2 < _len2; _key2++) {params[_key2 - 1] = arguments[_key2];}
    if (isFn(options.success) || isFn(options.fail) || isFn(options.complete)) {
      return wrapperReturnValue(name, invokeApi.apply(void 0, [name, api, options].concat(params)));
    }
    return wrapperReturnValue(name, handlePromise(new Promise(function (resolve, reject) {
      invokeApi.apply(void 0, [name, api, Object.assign({}, options, {
        success: resolve,
        fail: reject })].concat(
      params));
    })));
  };
}

var EPS = 1e-4;
var BASE_DEVICE_WIDTH = 750;
var isIOS = false;
var deviceWidth = 0;
var deviceDPR = 0;

function checkDeviceWidth() {var _wx$getSystemInfoSync =




  wx.getSystemInfoSync(),platform = _wx$getSystemInfoSync.platform,pixelRatio = _wx$getSystemInfoSync.pixelRatio,windowWidth = _wx$getSystemInfoSync.windowWidth; // uni=>wx runtime 编译目标是 uni 对象，内部不允许直接使用 uni

  deviceWidth = windowWidth;
  deviceDPR = pixelRatio;
  isIOS = platform === 'ios';
}

function upx2px(number, newDeviceWidth) {
  if (deviceWidth === 0) {
    checkDeviceWidth();
  }

  number = Number(number);
  if (number === 0) {
    return 0;
  }
  var result = number / BASE_DEVICE_WIDTH * (newDeviceWidth || deviceWidth);
  if (result < 0) {
    result = -result;
  }
  result = Math.floor(result + EPS);
  if (result === 0) {
    if (deviceDPR === 1 || !isIOS) {
      result = 1;
    } else {
      result = 0.5;
    }
  }
  return number < 0 ? -result : result;
}

function getLocale() {
  // 优先使用 $locale
  var app = getApp({
    allowDefault: true });

  if (app && app.$vm) {
    return app.$vm.$locale;
  }
  return wx.getSystemInfoSync().language || 'zh-Hans';
}

function setLocale(locale) {
  var app = getApp();
  if (!app) {
    return false;
  }
  var oldLocale = app.$vm.$locale;
  if (oldLocale !== locale) {
    app.$vm.$locale = locale;
    onLocaleChangeCallbacks.forEach(function (fn) {return fn({
        locale: locale });});

    return true;
  }
  return false;
}

var onLocaleChangeCallbacks = [];
function onLocaleChange(fn) {
  if (onLocaleChangeCallbacks.indexOf(fn) === -1) {
    onLocaleChangeCallbacks.push(fn);
  }
}

if (typeof global !== 'undefined') {
  global.getLocale = getLocale;
}

var interceptors = {
  promiseInterceptor: promiseInterceptor };


var baseApi = /*#__PURE__*/Object.freeze({
  __proto__: null,
  upx2px: upx2px,
  getLocale: getLocale,
  setLocale: setLocale,
  onLocaleChange: onLocaleChange,
  addInterceptor: addInterceptor,
  removeInterceptor: removeInterceptor,
  interceptors: interceptors });


function findExistsPageIndex(url) {
  var pages = getCurrentPages();
  var len = pages.length;
  while (len--) {
    var page = pages[len];
    if (page.$page && page.$page.fullPath === url) {
      return len;
    }
  }
  return -1;
}

var redirectTo = {
  name: function name(fromArgs) {
    if (fromArgs.exists === 'back' && fromArgs.delta) {
      return 'navigateBack';
    }
    return 'redirectTo';
  },
  args: function args(fromArgs) {
    if (fromArgs.exists === 'back' && fromArgs.url) {
      var existsPageIndex = findExistsPageIndex(fromArgs.url);
      if (existsPageIndex !== -1) {
        var delta = getCurrentPages().length - 1 - existsPageIndex;
        if (delta > 0) {
          fromArgs.delta = delta;
        }
      }
    }
  } };


var previewImage = {
  args: function args(fromArgs) {
    var currentIndex = parseInt(fromArgs.current);
    if (isNaN(currentIndex)) {
      return;
    }
    var urls = fromArgs.urls;
    if (!Array.isArray(urls)) {
      return;
    }
    var len = urls.length;
    if (!len) {
      return;
    }
    if (currentIndex < 0) {
      currentIndex = 0;
    } else if (currentIndex >= len) {
      currentIndex = len - 1;
    }
    if (currentIndex > 0) {
      fromArgs.current = urls[currentIndex];
      fromArgs.urls = urls.filter(
      function (item, index) {return index < currentIndex ? item !== urls[currentIndex] : true;});

    } else {
      fromArgs.current = urls[0];
    }
    return {
      indicator: false,
      loop: false };

  } };


var UUID_KEY = '__DC_STAT_UUID';
var deviceId;
function addUuid(result) {
  deviceId = deviceId || wx.getStorageSync(UUID_KEY);
  if (!deviceId) {
    deviceId = Date.now() + '' + Math.floor(Math.random() * 1e7);
    wx.setStorage({
      key: UUID_KEY,
      data: deviceId });

  }
  result.deviceId = deviceId;
}

function addSafeAreaInsets(result) {
  if (result.safeArea) {
    var safeArea = result.safeArea;
    result.safeAreaInsets = {
      top: safeArea.top,
      left: safeArea.left,
      right: result.windowWidth - safeArea.right,
      bottom: result.windowHeight - safeArea.bottom };

  }
}

var getSystemInfo = {
  returnValue: function returnValue(result) {
    addUuid(result);
    addSafeAreaInsets(result);
  } };


// import navigateTo from 'uni-helpers/navigate-to'

var protocols = {
  redirectTo: redirectTo,
  // navigateTo,  // 由于在微信开发者工具的页面参数，会显示__id__参数，因此暂时关闭mp-weixin对于navigateTo的AOP
  previewImage: previewImage,
  getSystemInfo: getSystemInfo,
  getSystemInfoSync: getSystemInfo };

var todos = [
'vibrate',
'preloadPage',
'unPreloadPage',
'loadSubPackage'];

var canIUses = [];

var CALLBACKS = ['success', 'fail', 'cancel', 'complete'];

function processCallback(methodName, method, returnValue) {
  return function (res) {
    return method(processReturnValue(methodName, res, returnValue));
  };
}

function processArgs(methodName, fromArgs) {var argsOption = arguments.length > 2 && arguments[2] !== undefined ? arguments[2] : {};var returnValue = arguments.length > 3 && arguments[3] !== undefined ? arguments[3] : {};var keepFromArgs = arguments.length > 4 && arguments[4] !== undefined ? arguments[4] : false;
  if (isPlainObject(fromArgs)) {// 一般 api 的参数解析
    var toArgs = keepFromArgs === true ? fromArgs : {}; // returnValue 为 false 时，说明是格式化返回值，直接在返回值对象上修改赋值
    if (isFn(argsOption)) {
      argsOption = argsOption(fromArgs, toArgs) || {};
    }
    for (var key in fromArgs) {
      if (hasOwn(argsOption, key)) {
        var keyOption = argsOption[key];
        if (isFn(keyOption)) {
          keyOption = keyOption(fromArgs[key], fromArgs, toArgs);
        }
        if (!keyOption) {// 不支持的参数
          console.warn("The '".concat(methodName, "' method of platform '\u5FAE\u4FE1\u5C0F\u7A0B\u5E8F' does not support option '").concat(key, "'"));
        } else if (isStr(keyOption)) {// 重写参数 key
          toArgs[keyOption] = fromArgs[key];
        } else if (isPlainObject(keyOption)) {// {name:newName,value:value}可重新指定参数 key:value
          toArgs[keyOption.name ? keyOption.name : key] = keyOption.value;
        }
      } else if (CALLBACKS.indexOf(key) !== -1) {
        if (isFn(fromArgs[key])) {
          toArgs[key] = processCallback(methodName, fromArgs[key], returnValue);
        }
      } else {
        if (!keepFromArgs) {
          toArgs[key] = fromArgs[key];
        }
      }
    }
    return toArgs;
  } else if (isFn(fromArgs)) {
    fromArgs = processCallback(methodName, fromArgs, returnValue);
  }
  return fromArgs;
}

function processReturnValue(methodName, res, returnValue) {var keepReturnValue = arguments.length > 3 && arguments[3] !== undefined ? arguments[3] : false;
  if (isFn(protocols.returnValue)) {// 处理通用 returnValue
    res = protocols.returnValue(methodName, res);
  }
  return processArgs(methodName, res, returnValue, {}, keepReturnValue);
}

function wrapper(methodName, method) {
  if (hasOwn(protocols, methodName)) {
    var protocol = protocols[methodName];
    if (!protocol) {// 暂不支持的 api
      return function () {
        console.error("Platform '\u5FAE\u4FE1\u5C0F\u7A0B\u5E8F' does not support '".concat(methodName, "'."));
      };
    }
    return function (arg1, arg2) {// 目前 api 最多两个参数
      var options = protocol;
      if (isFn(protocol)) {
        options = protocol(arg1);
      }

      arg1 = processArgs(methodName, arg1, options.args, options.returnValue);

      var args = [arg1];
      if (typeof arg2 !== 'undefined') {
        args.push(arg2);
      }
      if (isFn(options.name)) {
        methodName = options.name(arg1);
      } else if (isStr(options.name)) {
        methodName = options.name;
      }
      var returnValue = wx[methodName].apply(wx, args);
      if (isSyncApi(methodName)) {// 同步 api
        return processReturnValue(methodName, returnValue, options.returnValue, isContextApi(methodName));
      }
      return returnValue;
    };
  }
  return method;
}

var todoApis = Object.create(null);

var TODOS = [
'onTabBarMidButtonTap',
'subscribePush',
'unsubscribePush',
'onPush',
'offPush',
'share'];


function createTodoApi(name) {
  return function todoApi(_ref)


  {var fail = _ref.fail,complete = _ref.complete;
    var res = {
      errMsg: "".concat(name, ":fail method '").concat(name, "' not supported") };

    isFn(fail) && fail(res);
    isFn(complete) && complete(res);
  };
}

TODOS.forEach(function (name) {
  todoApis[name] = createTodoApi(name);
});

var providers = {
  oauth: ['weixin'],
  share: ['weixin'],
  payment: ['wxpay'],
  push: ['weixin'] };


function getProvider(_ref2)




{var service = _ref2.service,success = _ref2.success,fail = _ref2.fail,complete = _ref2.complete;
  var res = false;
  if (providers[service]) {
    res = {
      errMsg: 'getProvider:ok',
      service: service,
      provider: providers[service] };

    isFn(success) && success(res);
  } else {
    res = {
      errMsg: 'getProvider:fail service not found' };

    isFn(fail) && fail(res);
  }
  isFn(complete) && complete(res);
}

var extraApi = /*#__PURE__*/Object.freeze({
  __proto__: null,
  getProvider: getProvider });


var getEmitter = function () {
  var Emitter;
  return function getUniEmitter() {
    if (!Emitter) {
      Emitter = new _vue.default();
    }
    return Emitter;
  };
}();

function apply(ctx, method, args) {
  return ctx[method].apply(ctx, args);
}

function $on() {
  return apply(getEmitter(), '$on', Array.prototype.slice.call(arguments));
}
function $off() {
  return apply(getEmitter(), '$off', Array.prototype.slice.call(arguments));
}
function $once() {
  return apply(getEmitter(), '$once', Array.prototype.slice.call(arguments));
}
function $emit() {
  return apply(getEmitter(), '$emit', Array.prototype.slice.call(arguments));
}

var eventApi = /*#__PURE__*/Object.freeze({
  __proto__: null,
  $on: $on,
  $off: $off,
  $once: $once,
  $emit: $emit });


var api = /*#__PURE__*/Object.freeze({
  __proto__: null });


var MPPage = Page;
var MPComponent = Component;

var customizeRE = /:/g;

var customize = cached(function (str) {
  return camelize(str.replace(customizeRE, '-'));
});

function initTriggerEvent(mpInstance) {
  {
    if (!wx.canIUse || !wx.canIUse('nextTick')) {
      return;
    }
  }
  var oldTriggerEvent = mpInstance.triggerEvent;
  mpInstance.triggerEvent = function (event) {for (var _len3 = arguments.length, args = new Array(_len3 > 1 ? _len3 - 1 : 0), _key3 = 1; _key3 < _len3; _key3++) {args[_key3 - 1] = arguments[_key3];}
    return oldTriggerEvent.apply(mpInstance, [customize(event)].concat(args));
  };
}

function initHook(name, options, isComponent) {
  var oldHook = options[name];
  if (!oldHook) {
    options[name] = function () {
      initTriggerEvent(this);
    };
  } else {
    options[name] = function () {
      initTriggerEvent(this);for (var _len4 = arguments.length, args = new Array(_len4), _key4 = 0; _key4 < _len4; _key4++) {args[_key4] = arguments[_key4];}
      return oldHook.apply(this, args);
    };
  }
}
if (!MPPage.__$wrappered) {
  MPPage.__$wrappered = true;
  Page = function Page() {var options = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : {};
    initHook('onLoad', options);
    return MPPage(options);
  };
  Page.after = MPPage.after;

  Component = function Component() {var options = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : {};
    initHook('created', options);
    return MPComponent(options);
  };
}

var PAGE_EVENT_HOOKS = [
'onPullDownRefresh',
'onReachBottom',
'onAddToFavorites',
'onShareTimeline',
'onShareAppMessage',
'onPageScroll',
'onResize',
'onTabItemTap'];


function initMocks(vm, mocks) {
  var mpInstance = vm.$mp[vm.mpType];
  mocks.forEach(function (mock) {
    if (hasOwn(mpInstance, mock)) {
      vm[mock] = mpInstance[mock];
    }
  });
}

function hasHook(hook, vueOptions) {
  if (!vueOptions) {
    return true;
  }

  if (_vue.default.options && Array.isArray(_vue.default.options[hook])) {
    return true;
  }

  vueOptions = vueOptions.default || vueOptions;

  if (isFn(vueOptions)) {
    if (isFn(vueOptions.extendOptions[hook])) {
      return true;
    }
    if (vueOptions.super &&
    vueOptions.super.options &&
    Array.isArray(vueOptions.super.options[hook])) {
      return true;
    }
    return false;
  }

  if (isFn(vueOptions[hook])) {
    return true;
  }
  var mixins = vueOptions.mixins;
  if (Array.isArray(mixins)) {
    return !!mixins.find(function (mixin) {return hasHook(hook, mixin);});
  }
}

function initHooks(mpOptions, hooks, vueOptions) {
  hooks.forEach(function (hook) {
    if (hasHook(hook, vueOptions)) {
      mpOptions[hook] = function (args) {
        return this.$vm && this.$vm.__call_hook(hook, args);
      };
    }
  });
}

function initVueComponent(Vue, vueOptions) {
  vueOptions = vueOptions.default || vueOptions;
  var VueComponent;
  if (isFn(vueOptions)) {
    VueComponent = vueOptions;
  } else {
    VueComponent = Vue.extend(vueOptions);
  }
  vueOptions = VueComponent.options;
  return [VueComponent, vueOptions];
}

function initSlots(vm, vueSlots) {
  if (Array.isArray(vueSlots) && vueSlots.length) {
    var $slots = Object.create(null);
    vueSlots.forEach(function (slotName) {
      $slots[slotName] = true;
    });
    vm.$scopedSlots = vm.$slots = $slots;
  }
}

function initVueIds(vueIds, mpInstance) {
  vueIds = (vueIds || '').split(',');
  var len = vueIds.length;

  if (len === 1) {
    mpInstance._$vueId = vueIds[0];
  } else if (len === 2) {
    mpInstance._$vueId = vueIds[0];
    mpInstance._$vuePid = vueIds[1];
  }
}

function initData(vueOptions, context) {
  var data = vueOptions.data || {};
  var methods = vueOptions.methods || {};

  if (typeof data === 'function') {
    try {
      data = data.call(context); // 支持 Vue.prototype 上挂的数据
    } catch (e) {
      if (Object({"NODE_ENV":"development","VUE_APP_NAME":"shop","VUE_APP_PLATFORM":"mp-weixin","BASE_URL":"/"}).VUE_APP_DEBUG) {
        console.warn('根据 Vue 的 data 函数初始化小程序 data 失败，请尽量确保 data 函数中不访问 vm 对象，否则可能影响首次数据渲染速度。', data);
      }
    }
  } else {
    try {
      // 对 data 格式化
      data = JSON.parse(JSON.stringify(data));
    } catch (e) {}
  }

  if (!isPlainObject(data)) {
    data = {};
  }

  Object.keys(methods).forEach(function (methodName) {
    if (context.__lifecycle_hooks__.indexOf(methodName) === -1 && !hasOwn(data, methodName)) {
      data[methodName] = methods[methodName];
    }
  });

  return data;
}

var PROP_TYPES = [String, Number, Boolean, Object, Array, null];

function createObserver(name) {
  return function observer(newVal, oldVal) {
    if (this.$vm) {
      this.$vm[name] = newVal; // 为了触发其他非 render watcher
    }
  };
}

function initBehaviors(vueOptions, initBehavior) {
  var vueBehaviors = vueOptions.behaviors;
  var vueExtends = vueOptions.extends;
  var vueMixins = vueOptions.mixins;

  var vueProps = vueOptions.props;

  if (!vueProps) {
    vueOptions.props = vueProps = [];
  }

  var behaviors = [];
  if (Array.isArray(vueBehaviors)) {
    vueBehaviors.forEach(function (behavior) {
      behaviors.push(behavior.replace('uni://', "wx".concat("://")));
      if (behavior === 'uni://form-field') {
        if (Array.isArray(vueProps)) {
          vueProps.push('name');
          vueProps.push('value');
        } else {
          vueProps.name = {
            type: String,
            default: '' };

          vueProps.value = {
            type: [String, Number, Boolean, Array, Object, Date],
            default: '' };

        }
      }
    });
  }
  if (isPlainObject(vueExtends) && vueExtends.props) {
    behaviors.push(
    initBehavior({
      properties: initProperties(vueExtends.props, true) }));


  }
  if (Array.isArray(vueMixins)) {
    vueMixins.forEach(function (vueMixin) {
      if (isPlainObject(vueMixin) && vueMixin.props) {
        behaviors.push(
        initBehavior({
          properties: initProperties(vueMixin.props, true) }));


      }
    });
  }
  return behaviors;
}

function parsePropType(key, type, defaultValue, file) {
  // [String]=>String
  if (Array.isArray(type) && type.length === 1) {
    return type[0];
  }
  return type;
}

function initProperties(props) {var isBehavior = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : false;var file = arguments.length > 2 && arguments[2] !== undefined ? arguments[2] : '';
  var properties = {};
  if (!isBehavior) {
    properties.vueId = {
      type: String,
      value: '' };

    // 用于字节跳动小程序模拟抽象节点
    properties.generic = {
      type: Object,
      value: null };

    // scopedSlotsCompiler auto
    properties.scopedSlotsCompiler = {
      type: String,
      value: '' };

    properties.vueSlots = { // 小程序不能直接定义 $slots 的 props，所以通过 vueSlots 转换到 $slots
      type: null,
      value: [],
      observer: function observer(newVal, oldVal) {
        var $slots = Object.create(null);
        newVal.forEach(function (slotName) {
          $slots[slotName] = true;
        });
        this.setData({
          $slots: $slots });

      } };

  }
  if (Array.isArray(props)) {// ['title']
    props.forEach(function (key) {
      properties[key] = {
        type: null,
        observer: createObserver(key) };

    });
  } else if (isPlainObject(props)) {// {title:{type:String,default:''},content:String}
    Object.keys(props).forEach(function (key) {
      var opts = props[key];
      if (isPlainObject(opts)) {// title:{type:String,default:''}
        var value = opts.default;
        if (isFn(value)) {
          value = value();
        }

        opts.type = parsePropType(key, opts.type);

        properties[key] = {
          type: PROP_TYPES.indexOf(opts.type) !== -1 ? opts.type : null,
          value: value,
          observer: createObserver(key) };

      } else {// content:String
        var type = parsePropType(key, opts);
        properties[key] = {
          type: PROP_TYPES.indexOf(type) !== -1 ? type : null,
          observer: createObserver(key) };

      }
    });
  }
  return properties;
}

function wrapper$1(event) {
  // TODO 又得兼容 mpvue 的 mp 对象
  try {
    event.mp = JSON.parse(JSON.stringify(event));
  } catch (e) {}

  event.stopPropagation = noop;
  event.preventDefault = noop;

  event.target = event.target || {};

  if (!hasOwn(event, 'detail')) {
    event.detail = {};
  }

  if (hasOwn(event, 'markerId')) {
    event.detail = typeof event.detail === 'object' ? event.detail : {};
    event.detail.markerId = event.markerId;
  }

  if (isPlainObject(event.detail)) {
    event.target = Object.assign({}, event.target, event.detail);
  }

  return event;
}

function getExtraValue(vm, dataPathsArray) {
  var context = vm;
  dataPathsArray.forEach(function (dataPathArray) {
    var dataPath = dataPathArray[0];
    var value = dataPathArray[2];
    if (dataPath || typeof value !== 'undefined') {// ['','',index,'disable']
      var propPath = dataPathArray[1];
      var valuePath = dataPathArray[3];

      var vFor;
      if (Number.isInteger(dataPath)) {
        vFor = dataPath;
      } else if (!dataPath) {
        vFor = context;
      } else if (typeof dataPath === 'string' && dataPath) {
        if (dataPath.indexOf('#s#') === 0) {
          vFor = dataPath.substr(3);
        } else {
          vFor = vm.__get_value(dataPath, context);
        }
      }

      if (Number.isInteger(vFor)) {
        context = value;
      } else if (!propPath) {
        context = vFor[value];
      } else {
        if (Array.isArray(vFor)) {
          context = vFor.find(function (vForItem) {
            return vm.__get_value(propPath, vForItem) === value;
          });
        } else if (isPlainObject(vFor)) {
          context = Object.keys(vFor).find(function (vForKey) {
            return vm.__get_value(propPath, vFor[vForKey]) === value;
          });
        } else {
          console.error('v-for 暂不支持循环数据：', vFor);
        }
      }

      if (valuePath) {
        context = vm.__get_value(valuePath, context);
      }
    }
  });
  return context;
}

function processEventExtra(vm, extra, event) {
  var extraObj = {};

  if (Array.isArray(extra) && extra.length) {
    /**
                                              *[
                                              *    ['data.items', 'data.id', item.data.id],
                                              *    ['metas', 'id', meta.id]
                                              *],
                                              *[
                                              *    ['data.items', 'data.id', item.data.id],
                                              *    ['metas', 'id', meta.id]
                                              *],
                                              *'test'
                                              */
    extra.forEach(function (dataPath, index) {
      if (typeof dataPath === 'string') {
        if (!dataPath) {// model,prop.sync
          extraObj['$' + index] = vm;
        } else {
          if (dataPath === '$event') {// $event
            extraObj['$' + index] = event;
          } else if (dataPath === 'arguments') {
            if (event.detail && event.detail.__args__) {
              extraObj['$' + index] = event.detail.__args__;
            } else {
              extraObj['$' + index] = [event];
            }
          } else if (dataPath.indexOf('$event.') === 0) {// $event.target.value
            extraObj['$' + index] = vm.__get_value(dataPath.replace('$event.', ''), event);
          } else {
            extraObj['$' + index] = vm.__get_value(dataPath);
          }
        }
      } else {
        extraObj['$' + index] = getExtraValue(vm, dataPath);
      }
    });
  }

  return extraObj;
}

function getObjByArray(arr) {
  var obj = {};
  for (var i = 1; i < arr.length; i++) {
    var element = arr[i];
    obj[element[0]] = element[1];
  }
  return obj;
}

function processEventArgs(vm, event) {var args = arguments.length > 2 && arguments[2] !== undefined ? arguments[2] : [];var extra = arguments.length > 3 && arguments[3] !== undefined ? arguments[3] : [];var isCustom = arguments.length > 4 ? arguments[4] : undefined;var methodName = arguments.length > 5 ? arguments[5] : undefined;
  var isCustomMPEvent = false; // wxcomponent 组件，传递原始 event 对象
  if (isCustom) {// 自定义事件
    isCustomMPEvent = event.currentTarget &&
    event.currentTarget.dataset &&
    event.currentTarget.dataset.comType === 'wx';
    if (!args.length) {// 无参数，直接传入 event 或 detail 数组
      if (isCustomMPEvent) {
        return [event];
      }
      return event.detail.__args__ || event.detail;
    }
  }

  var extraObj = processEventExtra(vm, extra, event);

  var ret = [];
  args.forEach(function (arg) {
    if (arg === '$event') {
      if (methodName === '__set_model' && !isCustom) {// input v-model value
        ret.push(event.target.value);
      } else {
        if (isCustom && !isCustomMPEvent) {
          ret.push(event.detail.__args__[0]);
        } else {// wxcomponent 组件或内置组件
          ret.push(event);
        }
      }
    } else {
      if (Array.isArray(arg) && arg[0] === 'o') {
        ret.push(getObjByArray(arg));
      } else if (typeof arg === 'string' && hasOwn(extraObj, arg)) {
        ret.push(extraObj[arg]);
      } else {
        ret.push(arg);
      }
    }
  });

  return ret;
}

var ONCE = '~';
var CUSTOM = '^';

function isMatchEventType(eventType, optType) {
  return eventType === optType ||

  optType === 'regionchange' && (

  eventType === 'begin' ||
  eventType === 'end');


}

function getContextVm(vm) {
  var $parent = vm.$parent;
  // 父组件是 scoped slots 或者其他自定义组件时继续查找
  while ($parent && $parent.$parent && ($parent.$options.generic || $parent.$parent.$options.generic || $parent.$scope._$vuePid)) {
    $parent = $parent.$parent;
  }
  return $parent && $parent.$parent;
}

function handleEvent(event) {var _this = this;
  event = wrapper$1(event);

  // [['tap',[['handle',[1,2,a]],['handle1',[1,2,a]]]]]
  var dataset = (event.currentTarget || event.target).dataset;
  if (!dataset) {
    return console.warn('事件信息不存在');
  }
  var eventOpts = dataset.eventOpts || dataset['event-opts']; // 支付宝 web-view 组件 dataset 非驼峰
  if (!eventOpts) {
    return console.warn('事件信息不存在');
  }

  // [['handle',[1,2,a]],['handle1',[1,2,a]]]
  var eventType = event.type;

  var ret = [];

  eventOpts.forEach(function (eventOpt) {
    var type = eventOpt[0];
    var eventsArray = eventOpt[1];

    var isCustom = type.charAt(0) === CUSTOM;
    type = isCustom ? type.slice(1) : type;
    var isOnce = type.charAt(0) === ONCE;
    type = isOnce ? type.slice(1) : type;

    if (eventsArray && isMatchEventType(eventType, type)) {
      eventsArray.forEach(function (eventArray) {
        var methodName = eventArray[0];
        if (methodName) {
          var handlerCtx = _this.$vm;
          if (handlerCtx.$options.generic) {// mp-weixin,mp-toutiao 抽象节点模拟 scoped slots
            handlerCtx = getContextVm(handlerCtx) || handlerCtx;
          }
          if (methodName === '$emit') {
            handlerCtx.$emit.apply(handlerCtx,
            processEventArgs(
            _this.$vm,
            event,
            eventArray[1],
            eventArray[2],
            isCustom,
            methodName));

            return;
          }
          var handler = handlerCtx[methodName];
          if (!isFn(handler)) {
            throw new Error(" _vm.".concat(methodName, " is not a function"));
          }
          if (isOnce) {
            if (handler.once) {
              return;
            }
            handler.once = true;
          }
          var params = processEventArgs(
          _this.$vm,
          event,
          eventArray[1],
          eventArray[2],
          isCustom,
          methodName);

          params = Array.isArray(params) ? params : [];
          // 参数尾部增加原始事件对象用于复杂表达式内获取额外数据
          if (/=\s*\S+\.eventParams\s*\|\|\s*\S+\[['"]event-params['"]\]/.test(handler.toString())) {
            // eslint-disable-next-line no-sparse-arrays
            params = params.concat([,,,,,,,,,, event]);
          }
          ret.push(handler.apply(handlerCtx, params));
        }
      });
    }
  });

  if (
  eventType === 'input' &&
  ret.length === 1 &&
  typeof ret[0] !== 'undefined')
  {
    return ret[0];
  }
}

var locale;

{
  locale = wx.getSystemInfoSync().language;
}

var i18n = (0, _uniI18n.initVueI18n)(
locale,
{});

var t = i18n.t;
var i18nMixin = i18n.mixin = {
  beforeCreate: function beforeCreate() {var _this2 = this;
    var unwatch = i18n.i18n.watchLocale(function () {
      _this2.$forceUpdate();
    });
    this.$once('hook:beforeDestroy', function () {
      unwatch();
    });
  },
  methods: {
    $$t: function $$t(key, values) {
      return t(key, values);
    } } };


var setLocale$1 = i18n.setLocale;
var getLocale$1 = i18n.getLocale;

function initAppLocale(Vue, appVm, locale) {
  var state = Vue.observable({
    locale: locale || i18n.getLocale() });

  var localeWatchers = [];
  appVm.$watchLocale = function (fn) {
    localeWatchers.push(fn);
  };
  Object.defineProperty(appVm, '$locale', {
    get: function get() {
      return state.locale;
    },
    set: function set(v) {
      state.locale = v;
      localeWatchers.forEach(function (watch) {return watch(v);});
    } });

}

var eventChannels = {};

var eventChannelStack = [];

function getEventChannel(id) {
  if (id) {
    var eventChannel = eventChannels[id];
    delete eventChannels[id];
    return eventChannel;
  }
  return eventChannelStack.shift();
}

var hooks = [
'onShow',
'onHide',
'onError',
'onPageNotFound',
'onThemeChange',
'onUnhandledRejection'];


function initEventChannel() {
  _vue.default.prototype.getOpenerEventChannel = function () {
    // 微信小程序使用自身getOpenerEventChannel
    {
      return this.$scope.getOpenerEventChannel();
    }
  };
  var callHook = _vue.default.prototype.__call_hook;
  _vue.default.prototype.__call_hook = function (hook, args) {
    if (hook === 'onLoad' && args && args.__id__) {
      this.__eventChannel__ = getEventChannel(args.__id__);
      delete args.__id__;
    }
    return callHook.call(this, hook, args);
  };
}

function initScopedSlotsParams() {
  var center = {};
  var parents = {};

  _vue.default.prototype.$hasScopedSlotsParams = function (vueId) {
    var has = center[vueId];
    if (!has) {
      parents[vueId] = this;
      this.$on('hook:destory', function () {
        delete parents[vueId];
      });
    }
    return has;
  };

  _vue.default.prototype.$getScopedSlotsParams = function (vueId, name, key) {
    var data = center[vueId];
    if (data) {
      var object = data[name] || {};
      return key ? object[key] : object;
    } else {
      parents[vueId] = this;
      this.$on('hook:destory', function () {
        delete parents[vueId];
      });
    }
  };

  _vue.default.prototype.$setScopedSlotsParams = function (name, value) {
    var vueIds = this.$options.propsData.vueId;
    if (vueIds) {
      var vueId = vueIds.split(',')[0];
      var object = center[vueId] = center[vueId] || {};
      object[name] = value;
      if (parents[vueId]) {
        parents[vueId].$forceUpdate();
      }
    }
  };

  _vue.default.mixin({
    destroyed: function destroyed() {
      var propsData = this.$options.propsData;
      var vueId = propsData && propsData.vueId;
      if (vueId) {
        delete center[vueId];
        delete parents[vueId];
      }
    } });

}

function parseBaseApp(vm, _ref3)


{var mocks = _ref3.mocks,initRefs = _ref3.initRefs;
  initEventChannel();
  {
    initScopedSlotsParams();
  }
  if (vm.$options.store) {
    _vue.default.prototype.$store = vm.$options.store;
  }
  uniIdMixin(_vue.default);

  _vue.default.prototype.mpHost = "mp-weixin";

  _vue.default.mixin({
    beforeCreate: function beforeCreate() {
      if (!this.$options.mpType) {
        return;
      }

      this.mpType = this.$options.mpType;

      this.$mp = _defineProperty({
        data: {} },
      this.mpType, this.$options.mpInstance);


      this.$scope = this.$options.mpInstance;

      delete this.$options.mpType;
      delete this.$options.mpInstance;
      if (this.mpType === 'page' && typeof getApp === 'function') {// hack vue-i18n
        var app = getApp();
        if (app.$vm && app.$vm.$i18n) {
          this._i18n = app.$vm.$i18n;
        }
      }
      if (this.mpType !== 'app') {
        initRefs(this);
        initMocks(this, mocks);
      }
    } });


  var appOptions = {
    onLaunch: function onLaunch(args) {
      if (this.$vm) {// 已经初始化过了，主要是为了百度，百度 onShow 在 onLaunch 之前
        return;
      }
      {
        if (wx.canIUse && !wx.canIUse('nextTick')) {// 事实 上2.2.3 即可，简单使用 2.3.0 的 nextTick 判断
          console.error('当前微信基础库版本过低，请将 微信开发者工具-详情-项目设置-调试基础库版本 更换为`2.3.0`以上');
        }
      }

      this.$vm = vm;

      this.$vm.$mp = {
        app: this };


      this.$vm.$scope = this;
      // vm 上也挂载 globalData
      this.$vm.globalData = this.globalData;

      this.$vm._isMounted = true;
      this.$vm.__call_hook('mounted', args);

      this.$vm.__call_hook('onLaunch', args);
    } };


  // 兼容旧版本 globalData
  appOptions.globalData = vm.$options.globalData || {};
  // 将 methods 中的方法挂在 getApp() 中
  var methods = vm.$options.methods;
  if (methods) {
    Object.keys(methods).forEach(function (name) {
      appOptions[name] = methods[name];
    });
  }

  initAppLocale(_vue.default, vm, wx.getSystemInfoSync().language || 'zh-Hans');

  initHooks(appOptions, hooks);

  return appOptions;
}

var mocks = ['__route__', '__wxExparserNodeId__', '__wxWebviewId__'];

function findVmByVueId(vm, vuePid) {
  var $children = vm.$children;
  // 优先查找直属(反向查找:https://github.com/dcloudio/uni-app/issues/1200)
  for (var i = $children.length - 1; i >= 0; i--) {
    var childVm = $children[i];
    if (childVm.$scope._$vueId === vuePid) {
      return childVm;
    }
  }
  // 反向递归查找
  var parentVm;
  for (var _i = $children.length - 1; _i >= 0; _i--) {
    parentVm = findVmByVueId($children[_i], vuePid);
    if (parentVm) {
      return parentVm;
    }
  }
}

function initBehavior(options) {
  return Behavior(options);
}

function isPage() {
  return !!this.route;
}

function initRelation(detail) {
  this.triggerEvent('__l', detail);
}

function selectAllComponents(mpInstance, selector, $refs) {
  var components = mpInstance.selectAllComponents(selector);
  components.forEach(function (component) {
    var ref = component.dataset.ref;
    $refs[ref] = component.$vm || component;
    {
      if (component.dataset.vueGeneric === 'scoped') {
        component.selectAllComponents('.scoped-ref').forEach(function (scopedComponent) {
          selectAllComponents(scopedComponent, selector, $refs);
        });
      }
    }
  });
}

function initRefs(vm) {
  var mpInstance = vm.$scope;
  Object.defineProperty(vm, '$refs', {
    get: function get() {
      var $refs = {};
      selectAllComponents(mpInstance, '.vue-ref', $refs);
      // TODO 暂不考虑 for 中的 scoped
      var forComponents = mpInstance.selectAllComponents('.vue-ref-in-for');
      forComponents.forEach(function (component) {
        var ref = component.dataset.ref;
        if (!$refs[ref]) {
          $refs[ref] = [];
        }
        $refs[ref].push(component.$vm || component);
      });
      return $refs;
    } });

}

function handleLink(event) {var _ref4 =



  event.detail || event.value,vuePid = _ref4.vuePid,vueOptions = _ref4.vueOptions; // detail 是微信,value 是百度(dipatch)

  var parentVm;

  if (vuePid) {
    parentVm = findVmByVueId(this.$vm, vuePid);
  }

  if (!parentVm) {
    parentVm = this.$vm;
  }

  vueOptions.parent = parentVm;
}

function parseApp(vm) {
  return parseBaseApp(vm, {
    mocks: mocks,
    initRefs: initRefs });

}

function createApp(vm) {
  App(parseApp(vm));
  return vm;
}

var encodeReserveRE = /[!'()*]/g;
var encodeReserveReplacer = function encodeReserveReplacer(c) {return '%' + c.charCodeAt(0).toString(16);};
var commaRE = /%2C/g;

// fixed encodeURIComponent which is more conformant to RFC3986:
// - escapes [!'()*]
// - preserve commas
var encode = function encode(str) {return encodeURIComponent(str).
  replace(encodeReserveRE, encodeReserveReplacer).
  replace(commaRE, ',');};

function stringifyQuery(obj) {var encodeStr = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : encode;
  var res = obj ? Object.keys(obj).map(function (key) {
    var val = obj[key];

    if (val === undefined) {
      return '';
    }

    if (val === null) {
      return encodeStr(key);
    }

    if (Array.isArray(val)) {
      var result = [];
      val.forEach(function (val2) {
        if (val2 === undefined) {
          return;
        }
        if (val2 === null) {
          result.push(encodeStr(key));
        } else {
          result.push(encodeStr(key) + '=' + encodeStr(val2));
        }
      });
      return result.join('&');
    }

    return encodeStr(key) + '=' + encodeStr(val);
  }).filter(function (x) {return x.length > 0;}).join('&') : null;
  return res ? "?".concat(res) : '';
}

function parseBaseComponent(vueComponentOptions)


{var _ref5 = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : {},isPage = _ref5.isPage,initRelation = _ref5.initRelation;var _initVueComponent =
  initVueComponent(_vue.default, vueComponentOptions),_initVueComponent2 = _slicedToArray(_initVueComponent, 2),VueComponent = _initVueComponent2[0],vueOptions = _initVueComponent2[1];

  var options = _objectSpread({
    multipleSlots: true,
    addGlobalClass: true },
  vueOptions.options || {});


  {
    // 微信 multipleSlots 部分情况有 bug，导致内容顺序错乱 如 u-list，提供覆盖选项
    if (vueOptions['mp-weixin'] && vueOptions['mp-weixin'].options) {
      Object.assign(options, vueOptions['mp-weixin'].options);
    }
  }

  var componentOptions = {
    options: options,
    data: initData(vueOptions, _vue.default.prototype),
    behaviors: initBehaviors(vueOptions, initBehavior),
    properties: initProperties(vueOptions.props, false, vueOptions.__file),
    lifetimes: {
      attached: function attached() {
        var properties = this.properties;

        var options = {
          mpType: isPage.call(this) ? 'page' : 'component',
          mpInstance: this,
          propsData: properties };


        initVueIds(properties.vueId, this);

        // 处理父子关系
        initRelation.call(this, {
          vuePid: this._$vuePid,
          vueOptions: options });


        // 初始化 vue 实例
        this.$vm = new VueComponent(options);

        // 处理$slots,$scopedSlots（暂不支持动态变化$slots）
        initSlots(this.$vm, properties.vueSlots);

        // 触发首次 setData
        this.$vm.$mount();
      },
      ready: function ready() {
        // 当组件 props 默认值为 true，初始化时传入 false 会导致 created,ready 触发, 但 attached 不触发
        // https://developers.weixin.qq.com/community/develop/doc/00066ae2844cc0f8eb883e2a557800
        if (this.$vm) {
          this.$vm._isMounted = true;
          this.$vm.__call_hook('mounted');
          this.$vm.__call_hook('onReady');
        }
      },
      detached: function detached() {
        this.$vm && this.$vm.$destroy();
      } },

    pageLifetimes: {
      show: function show(args) {
        this.$vm && this.$vm.__call_hook('onPageShow', args);
      },
      hide: function hide() {
        this.$vm && this.$vm.__call_hook('onPageHide');
      },
      resize: function resize(size) {
        this.$vm && this.$vm.__call_hook('onPageResize', size);
      } },

    methods: {
      __l: handleLink,
      __e: handleEvent } };


  // externalClasses
  if (vueOptions.externalClasses) {
    componentOptions.externalClasses = vueOptions.externalClasses;
  }

  if (Array.isArray(vueOptions.wxsCallMethods)) {
    vueOptions.wxsCallMethods.forEach(function (callMethod) {
      componentOptions.methods[callMethod] = function (args) {
        return this.$vm[callMethod](args);
      };
    });
  }

  if (isPage) {
    return componentOptions;
  }
  return [componentOptions, VueComponent];
}

function parseComponent(vueComponentOptions) {
  return parseBaseComponent(vueComponentOptions, {
    isPage: isPage,
    initRelation: initRelation });

}

var hooks$1 = [
'onShow',
'onHide',
'onUnload'];


hooks$1.push.apply(hooks$1, PAGE_EVENT_HOOKS);

function parseBasePage(vuePageOptions, _ref6)


{var isPage = _ref6.isPage,initRelation = _ref6.initRelation;
  var pageOptions = parseComponent(vuePageOptions);

  initHooks(pageOptions.methods, hooks$1, vuePageOptions);

  pageOptions.methods.onLoad = function (query) {
    this.options = query;
    var copyQuery = Object.assign({}, query);
    delete copyQuery.__id__;
    this.$page = {
      fullPath: '/' + (this.route || this.is) + stringifyQuery(copyQuery) };

    this.$vm.$mp.query = query; // 兼容 mpvue
    this.$vm.__call_hook('onLoad', query);
  };

  return pageOptions;
}

function parsePage(vuePageOptions) {
  return parseBasePage(vuePageOptions, {
    isPage: isPage,
    initRelation: initRelation });

}

function createPage(vuePageOptions) {
  {
    return Component(parsePage(vuePageOptions));
  }
}

function createComponent(vueOptions) {
  {
    return Component(parseComponent(vueOptions));
  }
}

function createSubpackageApp(vm) {
  var appOptions = parseApp(vm);
  var app = getApp({
    allowDefault: true });

  vm.$scope = app;
  var globalData = app.globalData;
  if (globalData) {
    Object.keys(appOptions.globalData).forEach(function (name) {
      if (!hasOwn(globalData, name)) {
        globalData[name] = appOptions.globalData[name];
      }
    });
  }
  Object.keys(appOptions).forEach(function (name) {
    if (!hasOwn(app, name)) {
      app[name] = appOptions[name];
    }
  });
  if (isFn(appOptions.onShow) && wx.onAppShow) {
    wx.onAppShow(function () {for (var _len5 = arguments.length, args = new Array(_len5), _key5 = 0; _key5 < _len5; _key5++) {args[_key5] = arguments[_key5];}
      vm.__call_hook('onShow', args);
    });
  }
  if (isFn(appOptions.onHide) && wx.onAppHide) {
    wx.onAppHide(function () {for (var _len6 = arguments.length, args = new Array(_len6), _key6 = 0; _key6 < _len6; _key6++) {args[_key6] = arguments[_key6];}
      vm.__call_hook('onHide', args);
    });
  }
  if (isFn(appOptions.onLaunch)) {
    var args = wx.getLaunchOptionsSync && wx.getLaunchOptionsSync();
    vm.__call_hook('onLaunch', args);
  }
  return vm;
}

function createPlugin(vm) {
  var appOptions = parseApp(vm);
  if (isFn(appOptions.onShow) && wx.onAppShow) {
    wx.onAppShow(function () {for (var _len7 = arguments.length, args = new Array(_len7), _key7 = 0; _key7 < _len7; _key7++) {args[_key7] = arguments[_key7];}
      appOptions.onShow.apply(vm, args);
    });
  }
  if (isFn(appOptions.onHide) && wx.onAppHide) {
    wx.onAppHide(function () {for (var _len8 = arguments.length, args = new Array(_len8), _key8 = 0; _key8 < _len8; _key8++) {args[_key8] = arguments[_key8];}
      appOptions.onHide.apply(vm, args);
    });
  }
  if (isFn(appOptions.onLaunch)) {
    var args = wx.getLaunchOptionsSync && wx.getLaunchOptionsSync();
    appOptions.onLaunch.call(vm, args);
  }
  return vm;
}

todos.forEach(function (todoApi) {
  protocols[todoApi] = false;
});

canIUses.forEach(function (canIUseApi) {
  var apiName = protocols[canIUseApi] && protocols[canIUseApi].name ? protocols[canIUseApi].name :
  canIUseApi;
  if (!wx.canIUse(apiName)) {
    protocols[canIUseApi] = false;
  }
});

var uni = {};

if (typeof Proxy !== 'undefined' && "mp-weixin" !== 'app-plus') {
  uni = new Proxy({}, {
    get: function get(target, name) {
      if (hasOwn(target, name)) {
        return target[name];
      }
      if (baseApi[name]) {
        return baseApi[name];
      }
      if (api[name]) {
        return promisify(name, api[name]);
      }
      {
        if (extraApi[name]) {
          return promisify(name, extraApi[name]);
        }
        if (todoApis[name]) {
          return promisify(name, todoApis[name]);
        }
      }
      if (eventApi[name]) {
        return eventApi[name];
      }
      if (!hasOwn(wx, name) && !hasOwn(protocols, name)) {
        return;
      }
      return promisify(name, wrapper(name, wx[name]));
    },
    set: function set(target, name, value) {
      target[name] = value;
      return true;
    } });

} else {
  Object.keys(baseApi).forEach(function (name) {
    uni[name] = baseApi[name];
  });

  {
    Object.keys(todoApis).forEach(function (name) {
      uni[name] = promisify(name, todoApis[name]);
    });
    Object.keys(extraApi).forEach(function (name) {
      uni[name] = promisify(name, todoApis[name]);
    });
  }

  Object.keys(eventApi).forEach(function (name) {
    uni[name] = eventApi[name];
  });

  Object.keys(api).forEach(function (name) {
    uni[name] = promisify(name, api[name]);
  });

  Object.keys(wx).forEach(function (name) {
    if (hasOwn(wx, name) || hasOwn(protocols, name)) {
      uni[name] = promisify(name, wrapper(name, wx[name]));
    }
  });
}

wx.createApp = createApp;
wx.createPage = createPage;
wx.createComponent = createComponent;
wx.createSubpackageApp = createSubpackageApp;
wx.createPlugin = createPlugin;

var uni$1 = uni;var _default =

uni$1;exports.default = _default;
/* WEBPACK VAR INJECTION */}.call(this, __webpack_require__(/*! ./../../../webpack/buildin/global.js */ 2)))

/***/ }),
/* 2 */
/*!***********************************!*\
  !*** (webpack)/buildin/global.js ***!
  \***********************************/
/*! no static exports found */
/***/ (function(module, exports) {

var g;

// This works in non-strict mode
g = (function() {
	return this;
})();

try {
	// This works if eval is allowed (see CSP)
	g = g || new Function("return this")();
} catch (e) {
	// This works if the window reference is available
	if (typeof window === "object") g = window;
}

// g can still be undefined, but nothing to do about it...
// We return undefined, instead of nothing here, so it's
// easier to handle this case. if(!global) { ...}

module.exports = g;


/***/ }),
/* 3 */
/*!******************************************************************************************!*\
  !*** ./node_modules/@dcloudio/vue-cli-plugin-uni/packages/mp-vue/dist/mp.runtime.esm.js ***!
  \******************************************************************************************/
/*! exports provided: default */
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";
__webpack_require__.r(__webpack_exports__);
/* WEBPACK VAR INJECTION */(function(global) {/*!
 * Vue.js v2.6.11
 * (c) 2014-2021 Evan You
 * Released under the MIT License.
 */
/*  */

var emptyObject = Object.freeze({});

// These helpers produce better VM code in JS engines due to their
// explicitness and function inlining.
function isUndef (v) {
  return v === undefined || v === null
}

function isDef (v) {
  return v !== undefined && v !== null
}

function isTrue (v) {
  return v === true
}

function isFalse (v) {
  return v === false
}

/**
 * Check if value is primitive.
 */
function isPrimitive (value) {
  return (
    typeof value === 'string' ||
    typeof value === 'number' ||
    // $flow-disable-line
    typeof value === 'symbol' ||
    typeof value === 'boolean'
  )
}

/**
 * Quick object check - this is primarily used to tell
 * Objects from primitive values when we know the value
 * is a JSON-compliant type.
 */
function isObject (obj) {
  return obj !== null && typeof obj === 'object'
}

/**
 * Get the raw type string of a value, e.g., [object Object].
 */
var _toString = Object.prototype.toString;

function toRawType (value) {
  return _toString.call(value).slice(8, -1)
}

/**
 * Strict object type check. Only returns true
 * for plain JavaScript objects.
 */
function isPlainObject (obj) {
  return _toString.call(obj) === '[object Object]'
}

function isRegExp (v) {
  return _toString.call(v) === '[object RegExp]'
}

/**
 * Check if val is a valid array index.
 */
function isValidArrayIndex (val) {
  var n = parseFloat(String(val));
  return n >= 0 && Math.floor(n) === n && isFinite(val)
}

function isPromise (val) {
  return (
    isDef(val) &&
    typeof val.then === 'function' &&
    typeof val.catch === 'function'
  )
}

/**
 * Convert a value to a string that is actually rendered.
 */
function toString (val) {
  return val == null
    ? ''
    : Array.isArray(val) || (isPlainObject(val) && val.toString === _toString)
      ? JSON.stringify(val, null, 2)
      : String(val)
}

/**
 * Convert an input value to a number for persistence.
 * If the conversion fails, return original string.
 */
function toNumber (val) {
  var n = parseFloat(val);
  return isNaN(n) ? val : n
}

/**
 * Make a map and return a function for checking if a key
 * is in that map.
 */
function makeMap (
  str,
  expectsLowerCase
) {
  var map = Object.create(null);
  var list = str.split(',');
  for (var i = 0; i < list.length; i++) {
    map[list[i]] = true;
  }
  return expectsLowerCase
    ? function (val) { return map[val.toLowerCase()]; }
    : function (val) { return map[val]; }
}

/**
 * Check if a tag is a built-in tag.
 */
var isBuiltInTag = makeMap('slot,component', true);

/**
 * Check if an attribute is a reserved attribute.
 */
var isReservedAttribute = makeMap('key,ref,slot,slot-scope,is');

/**
 * Remove an item from an array.
 */
function remove (arr, item) {
  if (arr.length) {
    var index = arr.indexOf(item);
    if (index > -1) {
      return arr.splice(index, 1)
    }
  }
}

/**
 * Check whether an object has the property.
 */
var hasOwnProperty = Object.prototype.hasOwnProperty;
function hasOwn (obj, key) {
  return hasOwnProperty.call(obj, key)
}

/**
 * Create a cached version of a pure function.
 */
function cached (fn) {
  var cache = Object.create(null);
  return (function cachedFn (str) {
    var hit = cache[str];
    return hit || (cache[str] = fn(str))
  })
}

/**
 * Camelize a hyphen-delimited string.
 */
var camelizeRE = /-(\w)/g;
var camelize = cached(function (str) {
  return str.replace(camelizeRE, function (_, c) { return c ? c.toUpperCase() : ''; })
});

/**
 * Capitalize a string.
 */
var capitalize = cached(function (str) {
  return str.charAt(0).toUpperCase() + str.slice(1)
});

/**
 * Hyphenate a camelCase string.
 */
var hyphenateRE = /\B([A-Z])/g;
var hyphenate = cached(function (str) {
  return str.replace(hyphenateRE, '-$1').toLowerCase()
});

/**
 * Simple bind polyfill for environments that do not support it,
 * e.g., PhantomJS 1.x. Technically, we don't need this anymore
 * since native bind is now performant enough in most browsers.
 * But removing it would mean breaking code that was able to run in
 * PhantomJS 1.x, so this must be kept for backward compatibility.
 */

/* istanbul ignore next */
function polyfillBind (fn, ctx) {
  function boundFn (a) {
    var l = arguments.length;
    return l
      ? l > 1
        ? fn.apply(ctx, arguments)
        : fn.call(ctx, a)
      : fn.call(ctx)
  }

  boundFn._length = fn.length;
  return boundFn
}

function nativeBind (fn, ctx) {
  return fn.bind(ctx)
}

var bind = Function.prototype.bind
  ? nativeBind
  : polyfillBind;

/**
 * Convert an Array-like object to a real Array.
 */
function toArray (list, start) {
  start = start || 0;
  var i = list.length - start;
  var ret = new Array(i);
  while (i--) {
    ret[i] = list[i + start];
  }
  return ret
}

/**
 * Mix properties into target object.
 */
function extend (to, _from) {
  for (var key in _from) {
    to[key] = _from[key];
  }
  return to
}

/**
 * Merge an Array of Objects into a single Object.
 */
function toObject (arr) {
  var res = {};
  for (var i = 0; i < arr.length; i++) {
    if (arr[i]) {
      extend(res, arr[i]);
    }
  }
  return res
}

/* eslint-disable no-unused-vars */

/**
 * Perform no operation.
 * Stubbing args to make Flow happy without leaving useless transpiled code
 * with ...rest (https://flow.org/blog/2017/05/07/Strict-Function-Call-Arity/).
 */
function noop (a, b, c) {}

/**
 * Always return false.
 */
var no = function (a, b, c) { return false; };

/* eslint-enable no-unused-vars */

/**
 * Return the same value.
 */
var identity = function (_) { return _; };

/**
 * Check if two values are loosely equal - that is,
 * if they are plain objects, do they have the same shape?
 */
function looseEqual (a, b) {
  if (a === b) { return true }
  var isObjectA = isObject(a);
  var isObjectB = isObject(b);
  if (isObjectA && isObjectB) {
    try {
      var isArrayA = Array.isArray(a);
      var isArrayB = Array.isArray(b);
      if (isArrayA && isArrayB) {
        return a.length === b.length && a.every(function (e, i) {
          return looseEqual(e, b[i])
        })
      } else if (a instanceof Date && b instanceof Date) {
        return a.getTime() === b.getTime()
      } else if (!isArrayA && !isArrayB) {
        var keysA = Object.keys(a);
        var keysB = Object.keys(b);
        return keysA.length === keysB.length && keysA.every(function (key) {
          return looseEqual(a[key], b[key])
        })
      } else {
        /* istanbul ignore next */
        return false
      }
    } catch (e) {
      /* istanbul ignore next */
      return false
    }
  } else if (!isObjectA && !isObjectB) {
    return String(a) === String(b)
  } else {
    return false
  }
}

/**
 * Return the first index at which a loosely equal value can be
 * found in the array (if value is a plain object, the array must
 * contain an object of the same shape), or -1 if it is not present.
 */
function looseIndexOf (arr, val) {
  for (var i = 0; i < arr.length; i++) {
    if (looseEqual(arr[i], val)) { return i }
  }
  return -1
}

/**
 * Ensure a function is called only once.
 */
function once (fn) {
  var called = false;
  return function () {
    if (!called) {
      called = true;
      fn.apply(this, arguments);
    }
  }
}

var ASSET_TYPES = [
  'component',
  'directive',
  'filter'
];

var LIFECYCLE_HOOKS = [
  'beforeCreate',
  'created',
  'beforeMount',
  'mounted',
  'beforeUpdate',
  'updated',
  'beforeDestroy',
  'destroyed',
  'activated',
  'deactivated',
  'errorCaptured',
  'serverPrefetch'
];

/*  */



var config = ({
  /**
   * Option merge strategies (used in core/util/options)
   */
  // $flow-disable-line
  optionMergeStrategies: Object.create(null),

  /**
   * Whether to suppress warnings.
   */
  silent: false,

  /**
   * Show production mode tip message on boot?
   */
  productionTip: "development" !== 'production',

  /**
   * Whether to enable devtools
   */
  devtools: "development" !== 'production',

  /**
   * Whether to record perf
   */
  performance: false,

  /**
   * Error handler for watcher errors
   */
  errorHandler: null,

  /**
   * Warn handler for watcher warns
   */
  warnHandler: null,

  /**
   * Ignore certain custom elements
   */
  ignoredElements: [],

  /**
   * Custom user key aliases for v-on
   */
  // $flow-disable-line
  keyCodes: Object.create(null),

  /**
   * Check if a tag is reserved so that it cannot be registered as a
   * component. This is platform-dependent and may be overwritten.
   */
  isReservedTag: no,

  /**
   * Check if an attribute is reserved so that it cannot be used as a component
   * prop. This is platform-dependent and may be overwritten.
   */
  isReservedAttr: no,

  /**
   * Check if a tag is an unknown element.
   * Platform-dependent.
   */
  isUnknownElement: no,

  /**
   * Get the namespace of an element
   */
  getTagNamespace: noop,

  /**
   * Parse the real tag name for the specific platform.
   */
  parsePlatformTagName: identity,

  /**
   * Check if an attribute must be bound using property, e.g. value
   * Platform-dependent.
   */
  mustUseProp: no,

  /**
   * Perform updates asynchronously. Intended to be used by Vue Test Utils
   * This will significantly reduce performance if set to false.
   */
  async: true,

  /**
   * Exposed for legacy reasons
   */
  _lifecycleHooks: LIFECYCLE_HOOKS
});

/*  */

/**
 * unicode letters used for parsing html tags, component names and property paths.
 * using https://www.w3.org/TR/html53/semantics-scripting.html#potentialcustomelementname
 * skipping \u10000-\uEFFFF due to it freezing up PhantomJS
 */
var unicodeRegExp = /a-zA-Z\u00B7\u00C0-\u00D6\u00D8-\u00F6\u00F8-\u037D\u037F-\u1FFF\u200C-\u200D\u203F-\u2040\u2070-\u218F\u2C00-\u2FEF\u3001-\uD7FF\uF900-\uFDCF\uFDF0-\uFFFD/;

/**
 * Check if a string starts with $ or _
 */
function isReserved (str) {
  var c = (str + '').charCodeAt(0);
  return c === 0x24 || c === 0x5F
}

/**
 * Define a property.
 */
function def (obj, key, val, enumerable) {
  Object.defineProperty(obj, key, {
    value: val,
    enumerable: !!enumerable,
    writable: true,
    configurable: true
  });
}

/**
 * Parse simple path.
 */
var bailRE = new RegExp(("[^" + (unicodeRegExp.source) + ".$_\\d]"));
function parsePath (path) {
  if (bailRE.test(path)) {
    return
  }
  var segments = path.split('.');
  return function (obj) {
    for (var i = 0; i < segments.length; i++) {
      if (!obj) { return }
      obj = obj[segments[i]];
    }
    return obj
  }
}

/*  */

// can we use __proto__?
var hasProto = '__proto__' in {};

// Browser environment sniffing
var inBrowser = typeof window !== 'undefined';
var inWeex = typeof WXEnvironment !== 'undefined' && !!WXEnvironment.platform;
var weexPlatform = inWeex && WXEnvironment.platform.toLowerCase();
var UA = inBrowser && window.navigator.userAgent.toLowerCase();
var isIE = UA && /msie|trident/.test(UA);
var isIE9 = UA && UA.indexOf('msie 9.0') > 0;
var isEdge = UA && UA.indexOf('edge/') > 0;
var isAndroid = (UA && UA.indexOf('android') > 0) || (weexPlatform === 'android');
var isIOS = (UA && /iphone|ipad|ipod|ios/.test(UA)) || (weexPlatform === 'ios');
var isChrome = UA && /chrome\/\d+/.test(UA) && !isEdge;
var isPhantomJS = UA && /phantomjs/.test(UA);
var isFF = UA && UA.match(/firefox\/(\d+)/);

// Firefox has a "watch" function on Object.prototype...
var nativeWatch = ({}).watch;
if (inBrowser) {
  try {
    var opts = {};
    Object.defineProperty(opts, 'passive', ({
      get: function get () {
      }
    })); // https://github.com/facebook/flow/issues/285
    window.addEventListener('test-passive', null, opts);
  } catch (e) {}
}

// this needs to be lazy-evaled because vue may be required before
// vue-server-renderer can set VUE_ENV
var _isServer;
var isServerRendering = function () {
  if (_isServer === undefined) {
    /* istanbul ignore if */
    if (!inBrowser && !inWeex && typeof global !== 'undefined') {
      // detect presence of vue-server-renderer and avoid
      // Webpack shimming the process
      _isServer = global['process'] && global['process'].env.VUE_ENV === 'server';
    } else {
      _isServer = false;
    }
  }
  return _isServer
};

// detect devtools
var devtools = inBrowser && window.__VUE_DEVTOOLS_GLOBAL_HOOK__;

/* istanbul ignore next */
function isNative (Ctor) {
  return typeof Ctor === 'function' && /native code/.test(Ctor.toString())
}

var hasSymbol =
  typeof Symbol !== 'undefined' && isNative(Symbol) &&
  typeof Reflect !== 'undefined' && isNative(Reflect.ownKeys);

var _Set;
/* istanbul ignore if */ // $flow-disable-line
if (typeof Set !== 'undefined' && isNative(Set)) {
  // use native Set when available.
  _Set = Set;
} else {
  // a non-standard Set polyfill that only works with primitive keys.
  _Set = /*@__PURE__*/(function () {
    function Set () {
      this.set = Object.create(null);
    }
    Set.prototype.has = function has (key) {
      return this.set[key] === true
    };
    Set.prototype.add = function add (key) {
      this.set[key] = true;
    };
    Set.prototype.clear = function clear () {
      this.set = Object.create(null);
    };

    return Set;
  }());
}

/*  */

var warn = noop;
var tip = noop;
var generateComponentTrace = (noop); // work around flow check
var formatComponentName = (noop);

if (true) {
  var hasConsole = typeof console !== 'undefined';
  var classifyRE = /(?:^|[-_])(\w)/g;
  var classify = function (str) { return str
    .replace(classifyRE, function (c) { return c.toUpperCase(); })
    .replace(/[-_]/g, ''); };

  warn = function (msg, vm) {
    var trace = vm ? generateComponentTrace(vm) : '';

    if (config.warnHandler) {
      config.warnHandler.call(null, msg, vm, trace);
    } else if (hasConsole && (!config.silent)) {
      console.error(("[Vue warn]: " + msg + trace));
    }
  };

  tip = function (msg, vm) {
    if (hasConsole && (!config.silent)) {
      console.warn("[Vue tip]: " + msg + (
        vm ? generateComponentTrace(vm) : ''
      ));
    }
  };

  formatComponentName = function (vm, includeFile) {
    if (vm.$root === vm) {
      if (vm.$options && vm.$options.__file) { // fixed by xxxxxx
        return ('') + vm.$options.__file
      }
      return '<Root>'
    }
    var options = typeof vm === 'function' && vm.cid != null
      ? vm.options
      : vm._isVue
        ? vm.$options || vm.constructor.options
        : vm;
    var name = options.name || options._componentTag;
    var file = options.__file;
    if (!name && file) {
      var match = file.match(/([^/\\]+)\.vue$/);
      name = match && match[1];
    }

    return (
      (name ? ("<" + (classify(name)) + ">") : "<Anonymous>") +
      (file && includeFile !== false ? (" at " + file) : '')
    )
  };

  var repeat = function (str, n) {
    var res = '';
    while (n) {
      if (n % 2 === 1) { res += str; }
      if (n > 1) { str += str; }
      n >>= 1;
    }
    return res
  };

  generateComponentTrace = function (vm) {
    if (vm._isVue && vm.$parent) {
      var tree = [];
      var currentRecursiveSequence = 0;
      while (vm && vm.$options.name !== 'PageBody') {
        if (tree.length > 0) {
          var last = tree[tree.length - 1];
          if (last.constructor === vm.constructor) {
            currentRecursiveSequence++;
            vm = vm.$parent;
            continue
          } else if (currentRecursiveSequence > 0) {
            tree[tree.length - 1] = [last, currentRecursiveSequence];
            currentRecursiveSequence = 0;
          }
        }
        !vm.$options.isReserved && tree.push(vm);
        vm = vm.$parent;
      }
      return '\n\nfound in\n\n' + tree
        .map(function (vm, i) { return ("" + (i === 0 ? '---> ' : repeat(' ', 5 + i * 2)) + (Array.isArray(vm)
            ? ((formatComponentName(vm[0])) + "... (" + (vm[1]) + " recursive calls)")
            : formatComponentName(vm))); })
        .join('\n')
    } else {
      return ("\n\n(found in " + (formatComponentName(vm)) + ")")
    }
  };
}

/*  */

var uid = 0;

/**
 * A dep is an observable that can have multiple
 * directives subscribing to it.
 */
var Dep = function Dep () {
  this.id = uid++;
  this.subs = [];
};

Dep.prototype.addSub = function addSub (sub) {
  this.subs.push(sub);
};

Dep.prototype.removeSub = function removeSub (sub) {
  remove(this.subs, sub);
};

Dep.prototype.depend = function depend () {
  if (Dep.SharedObject.target) {
    Dep.SharedObject.target.addDep(this);
  }
};

Dep.prototype.notify = function notify () {
  // stabilize the subscriber list first
  var subs = this.subs.slice();
  if ( true && !config.async) {
    // subs aren't sorted in scheduler if not running async
    // we need to sort them now to make sure they fire in correct
    // order
    subs.sort(function (a, b) { return a.id - b.id; });
  }
  for (var i = 0, l = subs.length; i < l; i++) {
    subs[i].update();
  }
};

// The current target watcher being evaluated.
// This is globally unique because only one watcher
// can be evaluated at a time.
// fixed by xxxxxx (nvue shared vuex)
/* eslint-disable no-undef */
Dep.SharedObject = {};
Dep.SharedObject.target = null;
Dep.SharedObject.targetStack = [];

function pushTarget (target) {
  Dep.SharedObject.targetStack.push(target);
  Dep.SharedObject.target = target;
  Dep.target = target;
}

function popTarget () {
  Dep.SharedObject.targetStack.pop();
  Dep.SharedObject.target = Dep.SharedObject.targetStack[Dep.SharedObject.targetStack.length - 1];
  Dep.target = Dep.SharedObject.target;
}

/*  */

var VNode = function VNode (
  tag,
  data,
  children,
  text,
  elm,
  context,
  componentOptions,
  asyncFactory
) {
  this.tag = tag;
  this.data = data;
  this.children = children;
  this.text = text;
  this.elm = elm;
  this.ns = undefined;
  this.context = context;
  this.fnContext = undefined;
  this.fnOptions = undefined;
  this.fnScopeId = undefined;
  this.key = data && data.key;
  this.componentOptions = componentOptions;
  this.componentInstance = undefined;
  this.parent = undefined;
  this.raw = false;
  this.isStatic = false;
  this.isRootInsert = true;
  this.isComment = false;
  this.isCloned = false;
  this.isOnce = false;
  this.asyncFactory = asyncFactory;
  this.asyncMeta = undefined;
  this.isAsyncPlaceholder = false;
};

var prototypeAccessors = { child: { configurable: true } };

// DEPRECATED: alias for componentInstance for backwards compat.
/* istanbul ignore next */
prototypeAccessors.child.get = function () {
  return this.componentInstance
};

Object.defineProperties( VNode.prototype, prototypeAccessors );

var createEmptyVNode = function (text) {
  if ( text === void 0 ) text = '';

  var node = new VNode();
  node.text = text;
  node.isComment = true;
  return node
};

function createTextVNode (val) {
  return new VNode(undefined, undefined, undefined, String(val))
}

// optimized shallow clone
// used for static nodes and slot nodes because they may be reused across
// multiple renders, cloning them avoids errors when DOM manipulations rely
// on their elm reference.
function cloneVNode (vnode) {
  var cloned = new VNode(
    vnode.tag,
    vnode.data,
    // #7975
    // clone children array to avoid mutating original in case of cloning
    // a child.
    vnode.children && vnode.children.slice(),
    vnode.text,
    vnode.elm,
    vnode.context,
    vnode.componentOptions,
    vnode.asyncFactory
  );
  cloned.ns = vnode.ns;
  cloned.isStatic = vnode.isStatic;
  cloned.key = vnode.key;
  cloned.isComment = vnode.isComment;
  cloned.fnContext = vnode.fnContext;
  cloned.fnOptions = vnode.fnOptions;
  cloned.fnScopeId = vnode.fnScopeId;
  cloned.asyncMeta = vnode.asyncMeta;
  cloned.isCloned = true;
  return cloned
}

/*
 * not type checking this file because flow doesn't play well with
 * dynamically accessing methods on Array prototype
 */

var arrayProto = Array.prototype;
var arrayMethods = Object.create(arrayProto);

var methodsToPatch = [
  'push',
  'pop',
  'shift',
  'unshift',
  'splice',
  'sort',
  'reverse'
];

/**
 * Intercept mutating methods and emit events
 */
methodsToPatch.forEach(function (method) {
  // cache original method
  var original = arrayProto[method];
  def(arrayMethods, method, function mutator () {
    var args = [], len = arguments.length;
    while ( len-- ) args[ len ] = arguments[ len ];

    var result = original.apply(this, args);
    var ob = this.__ob__;
    var inserted;
    switch (method) {
      case 'push':
      case 'unshift':
        inserted = args;
        break
      case 'splice':
        inserted = args.slice(2);
        break
    }
    if (inserted) { ob.observeArray(inserted); }
    // notify change
    ob.dep.notify();
    return result
  });
});

/*  */

var arrayKeys = Object.getOwnPropertyNames(arrayMethods);

/**
 * In some cases we may want to disable observation inside a component's
 * update computation.
 */
var shouldObserve = true;

function toggleObserving (value) {
  shouldObserve = value;
}

/**
 * Observer class that is attached to each observed
 * object. Once attached, the observer converts the target
 * object's property keys into getter/setters that
 * collect dependencies and dispatch updates.
 */
var Observer = function Observer (value) {
  this.value = value;
  this.dep = new Dep();
  this.vmCount = 0;
  def(value, '__ob__', this);
  if (Array.isArray(value)) {
    if (hasProto) {
      {// fixed by xxxxxx 微信小程序使用 plugins 之后，数组方法被直接挂载到了数组对象上，需要执行 copyAugment 逻辑
        if(value.push !== value.__proto__.push){
          copyAugment(value, arrayMethods, arrayKeys);
        } else {
          protoAugment(value, arrayMethods);
        }
      }
    } else {
      copyAugment(value, arrayMethods, arrayKeys);
    }
    this.observeArray(value);
  } else {
    this.walk(value);
  }
};

/**
 * Walk through all properties and convert them into
 * getter/setters. This method should only be called when
 * value type is Object.
 */
Observer.prototype.walk = function walk (obj) {
  var keys = Object.keys(obj);
  for (var i = 0; i < keys.length; i++) {
    defineReactive$$1(obj, keys[i]);
  }
};

/**
 * Observe a list of Array items.
 */
Observer.prototype.observeArray = function observeArray (items) {
  for (var i = 0, l = items.length; i < l; i++) {
    observe(items[i]);
  }
};

// helpers

/**
 * Augment a target Object or Array by intercepting
 * the prototype chain using __proto__
 */
function protoAugment (target, src) {
  /* eslint-disable no-proto */
  target.__proto__ = src;
  /* eslint-enable no-proto */
}

/**
 * Augment a target Object or Array by defining
 * hidden properties.
 */
/* istanbul ignore next */
function copyAugment (target, src, keys) {
  for (var i = 0, l = keys.length; i < l; i++) {
    var key = keys[i];
    def(target, key, src[key]);
  }
}

/**
 * Attempt to create an observer instance for a value,
 * returns the new observer if successfully observed,
 * or the existing observer if the value already has one.
 */
function observe (value, asRootData) {
  if (!isObject(value) || value instanceof VNode) {
    return
  }
  var ob;
  if (hasOwn(value, '__ob__') && value.__ob__ instanceof Observer) {
    ob = value.__ob__;
  } else if (
    shouldObserve &&
    !isServerRendering() &&
    (Array.isArray(value) || isPlainObject(value)) &&
    Object.isExtensible(value) &&
    !value._isVue
  ) {
    ob = new Observer(value);
  }
  if (asRootData && ob) {
    ob.vmCount++;
  }
  return ob
}

/**
 * Define a reactive property on an Object.
 */
function defineReactive$$1 (
  obj,
  key,
  val,
  customSetter,
  shallow
) {
  var dep = new Dep();

  var property = Object.getOwnPropertyDescriptor(obj, key);
  if (property && property.configurable === false) {
    return
  }

  // cater for pre-defined getter/setters
  var getter = property && property.get;
  var setter = property && property.set;
  if ((!getter || setter) && arguments.length === 2) {
    val = obj[key];
  }

  var childOb = !shallow && observe(val);
  Object.defineProperty(obj, key, {
    enumerable: true,
    configurable: true,
    get: function reactiveGetter () {
      var value = getter ? getter.call(obj) : val;
      if (Dep.SharedObject.target) { // fixed by xxxxxx
        dep.depend();
        if (childOb) {
          childOb.dep.depend();
          if (Array.isArray(value)) {
            dependArray(value);
          }
        }
      }
      return value
    },
    set: function reactiveSetter (newVal) {
      var value = getter ? getter.call(obj) : val;
      /* eslint-disable no-self-compare */
      if (newVal === value || (newVal !== newVal && value !== value)) {
        return
      }
      /* eslint-enable no-self-compare */
      if ( true && customSetter) {
        customSetter();
      }
      // #7981: for accessor properties without setter
      if (getter && !setter) { return }
      if (setter) {
        setter.call(obj, newVal);
      } else {
        val = newVal;
      }
      childOb = !shallow && observe(newVal);
      dep.notify();
    }
  });
}

/**
 * Set a property on an object. Adds the new property and
 * triggers change notification if the property doesn't
 * already exist.
 */
function set (target, key, val) {
  if ( true &&
    (isUndef(target) || isPrimitive(target))
  ) {
    warn(("Cannot set reactive property on undefined, null, or primitive value: " + ((target))));
  }
  if (Array.isArray(target) && isValidArrayIndex(key)) {
    target.length = Math.max(target.length, key);
    target.splice(key, 1, val);
    return val
  }
  if (key in target && !(key in Object.prototype)) {
    target[key] = val;
    return val
  }
  var ob = (target).__ob__;
  if (target._isVue || (ob && ob.vmCount)) {
     true && warn(
      'Avoid adding reactive properties to a Vue instance or its root $data ' +
      'at runtime - declare it upfront in the data option.'
    );
    return val
  }
  if (!ob) {
    target[key] = val;
    return val
  }
  defineReactive$$1(ob.value, key, val);
  ob.dep.notify();
  return val
}

/**
 * Delete a property and trigger change if necessary.
 */
function del (target, key) {
  if ( true &&
    (isUndef(target) || isPrimitive(target))
  ) {
    warn(("Cannot delete reactive property on undefined, null, or primitive value: " + ((target))));
  }
  if (Array.isArray(target) && isValidArrayIndex(key)) {
    target.splice(key, 1);
    return
  }
  var ob = (target).__ob__;
  if (target._isVue || (ob && ob.vmCount)) {
     true && warn(
      'Avoid deleting properties on a Vue instance or its root $data ' +
      '- just set it to null.'
    );
    return
  }
  if (!hasOwn(target, key)) {
    return
  }
  delete target[key];
  if (!ob) {
    return
  }
  ob.dep.notify();
}

/**
 * Collect dependencies on array elements when the array is touched, since
 * we cannot intercept array element access like property getters.
 */
function dependArray (value) {
  for (var e = (void 0), i = 0, l = value.length; i < l; i++) {
    e = value[i];
    e && e.__ob__ && e.__ob__.dep.depend();
    if (Array.isArray(e)) {
      dependArray(e);
    }
  }
}

/*  */

/**
 * Option overwriting strategies are functions that handle
 * how to merge a parent option value and a child option
 * value into the final value.
 */
var strats = config.optionMergeStrategies;

/**
 * Options with restrictions
 */
if (true) {
  strats.el = strats.propsData = function (parent, child, vm, key) {
    if (!vm) {
      warn(
        "option \"" + key + "\" can only be used during instance " +
        'creation with the `new` keyword.'
      );
    }
    return defaultStrat(parent, child)
  };
}

/**
 * Helper that recursively merges two data objects together.
 */
function mergeData (to, from) {
  if (!from) { return to }
  var key, toVal, fromVal;

  var keys = hasSymbol
    ? Reflect.ownKeys(from)
    : Object.keys(from);

  for (var i = 0; i < keys.length; i++) {
    key = keys[i];
    // in case the object is already observed...
    if (key === '__ob__') { continue }
    toVal = to[key];
    fromVal = from[key];
    if (!hasOwn(to, key)) {
      set(to, key, fromVal);
    } else if (
      toVal !== fromVal &&
      isPlainObject(toVal) &&
      isPlainObject(fromVal)
    ) {
      mergeData(toVal, fromVal);
    }
  }
  return to
}

/**
 * Data
 */
function mergeDataOrFn (
  parentVal,
  childVal,
  vm
) {
  if (!vm) {
    // in a Vue.extend merge, both should be functions
    if (!childVal) {
      return parentVal
    }
    if (!parentVal) {
      return childVal
    }
    // when parentVal & childVal are both present,
    // we need to return a function that returns the
    // merged result of both functions... no need to
    // check if parentVal is a function here because
    // it has to be a function to pass previous merges.
    return function mergedDataFn () {
      return mergeData(
        typeof childVal === 'function' ? childVal.call(this, this) : childVal,
        typeof parentVal === 'function' ? parentVal.call(this, this) : parentVal
      )
    }
  } else {
    return function mergedInstanceDataFn () {
      // instance merge
      var instanceData = typeof childVal === 'function'
        ? childVal.call(vm, vm)
        : childVal;
      var defaultData = typeof parentVal === 'function'
        ? parentVal.call(vm, vm)
        : parentVal;
      if (instanceData) {
        return mergeData(instanceData, defaultData)
      } else {
        return defaultData
      }
    }
  }
}

strats.data = function (
  parentVal,
  childVal,
  vm
) {
  if (!vm) {
    if (childVal && typeof childVal !== 'function') {
       true && warn(
        'The "data" option should be a function ' +
        'that returns a per-instance value in component ' +
        'definitions.',
        vm
      );

      return parentVal
    }
    return mergeDataOrFn(parentVal, childVal)
  }

  return mergeDataOrFn(parentVal, childVal, vm)
};

/**
 * Hooks and props are merged as arrays.
 */
function mergeHook (
  parentVal,
  childVal
) {
  var res = childVal
    ? parentVal
      ? parentVal.concat(childVal)
      : Array.isArray(childVal)
        ? childVal
        : [childVal]
    : parentVal;
  return res
    ? dedupeHooks(res)
    : res
}

function dedupeHooks (hooks) {
  var res = [];
  for (var i = 0; i < hooks.length; i++) {
    if (res.indexOf(hooks[i]) === -1) {
      res.push(hooks[i]);
    }
  }
  return res
}

LIFECYCLE_HOOKS.forEach(function (hook) {
  strats[hook] = mergeHook;
});

/**
 * Assets
 *
 * When a vm is present (instance creation), we need to do
 * a three-way merge between constructor options, instance
 * options and parent options.
 */
function mergeAssets (
  parentVal,
  childVal,
  vm,
  key
) {
  var res = Object.create(parentVal || null);
  if (childVal) {
     true && assertObjectType(key, childVal, vm);
    return extend(res, childVal)
  } else {
    return res
  }
}

ASSET_TYPES.forEach(function (type) {
  strats[type + 's'] = mergeAssets;
});

/**
 * Watchers.
 *
 * Watchers hashes should not overwrite one
 * another, so we merge them as arrays.
 */
strats.watch = function (
  parentVal,
  childVal,
  vm,
  key
) {
  // work around Firefox's Object.prototype.watch...
  if (parentVal === nativeWatch) { parentVal = undefined; }
  if (childVal === nativeWatch) { childVal = undefined; }
  /* istanbul ignore if */
  if (!childVal) { return Object.create(parentVal || null) }
  if (true) {
    assertObjectType(key, childVal, vm);
  }
  if (!parentVal) { return childVal }
  var ret = {};
  extend(ret, parentVal);
  for (var key$1 in childVal) {
    var parent = ret[key$1];
    var child = childVal[key$1];
    if (parent && !Array.isArray(parent)) {
      parent = [parent];
    }
    ret[key$1] = parent
      ? parent.concat(child)
      : Array.isArray(child) ? child : [child];
  }
  return ret
};

/**
 * Other object hashes.
 */
strats.props =
strats.methods =
strats.inject =
strats.computed = function (
  parentVal,
  childVal,
  vm,
  key
) {
  if (childVal && "development" !== 'production') {
    assertObjectType(key, childVal, vm);
  }
  if (!parentVal) { return childVal }
  var ret = Object.create(null);
  extend(ret, parentVal);
  if (childVal) { extend(ret, childVal); }
  return ret
};
strats.provide = mergeDataOrFn;

/**
 * Default strategy.
 */
var defaultStrat = function (parentVal, childVal) {
  return childVal === undefined
    ? parentVal
    : childVal
};

/**
 * Validate component names
 */
function checkComponents (options) {
  for (var key in options.components) {
    validateComponentName(key);
  }
}

function validateComponentName (name) {
  if (!new RegExp(("^[a-zA-Z][\\-\\.0-9_" + (unicodeRegExp.source) + "]*$")).test(name)) {
    warn(
      'Invalid component name: "' + name + '". Component names ' +
      'should conform to valid custom element name in html5 specification.'
    );
  }
  if (isBuiltInTag(name) || config.isReservedTag(name)) {
    warn(
      'Do not use built-in or reserved HTML elements as component ' +
      'id: ' + name
    );
  }
}

/**
 * Ensure all props option syntax are normalized into the
 * Object-based format.
 */
function normalizeProps (options, vm) {
  var props = options.props;
  if (!props) { return }
  var res = {};
  var i, val, name;
  if (Array.isArray(props)) {
    i = props.length;
    while (i--) {
      val = props[i];
      if (typeof val === 'string') {
        name = camelize(val);
        res[name] = { type: null };
      } else if (true) {
        warn('props must be strings when using array syntax.');
      }
    }
  } else if (isPlainObject(props)) {
    for (var key in props) {
      val = props[key];
      name = camelize(key);
      res[name] = isPlainObject(val)
        ? val
        : { type: val };
    }
  } else if (true) {
    warn(
      "Invalid value for option \"props\": expected an Array or an Object, " +
      "but got " + (toRawType(props)) + ".",
      vm
    );
  }
  options.props = res;
}

/**
 * Normalize all injections into Object-based format
 */
function normalizeInject (options, vm) {
  var inject = options.inject;
  if (!inject) { return }
  var normalized = options.inject = {};
  if (Array.isArray(inject)) {
    for (var i = 0; i < inject.length; i++) {
      normalized[inject[i]] = { from: inject[i] };
    }
  } else if (isPlainObject(inject)) {
    for (var key in inject) {
      var val = inject[key];
      normalized[key] = isPlainObject(val)
        ? extend({ from: key }, val)
        : { from: val };
    }
  } else if (true) {
    warn(
      "Invalid value for option \"inject\": expected an Array or an Object, " +
      "but got " + (toRawType(inject)) + ".",
      vm
    );
  }
}

/**
 * Normalize raw function directives into object format.
 */
function normalizeDirectives (options) {
  var dirs = options.directives;
  if (dirs) {
    for (var key in dirs) {
      var def$$1 = dirs[key];
      if (typeof def$$1 === 'function') {
        dirs[key] = { bind: def$$1, update: def$$1 };
      }
    }
  }
}

function assertObjectType (name, value, vm) {
  if (!isPlainObject(value)) {
    warn(
      "Invalid value for option \"" + name + "\": expected an Object, " +
      "but got " + (toRawType(value)) + ".",
      vm
    );
  }
}

/**
 * Merge two option objects into a new one.
 * Core utility used in both instantiation and inheritance.
 */
function mergeOptions (
  parent,
  child,
  vm
) {
  if (true) {
    checkComponents(child);
  }

  if (typeof child === 'function') {
    child = child.options;
  }

  normalizeProps(child, vm);
  normalizeInject(child, vm);
  normalizeDirectives(child);

  // Apply extends and mixins on the child options,
  // but only if it is a raw options object that isn't
  // the result of another mergeOptions call.
  // Only merged options has the _base property.
  if (!child._base) {
    if (child.extends) {
      parent = mergeOptions(parent, child.extends, vm);
    }
    if (child.mixins) {
      for (var i = 0, l = child.mixins.length; i < l; i++) {
        parent = mergeOptions(parent, child.mixins[i], vm);
      }
    }
  }

  var options = {};
  var key;
  for (key in parent) {
    mergeField(key);
  }
  for (key in child) {
    if (!hasOwn(parent, key)) {
      mergeField(key);
    }
  }
  function mergeField (key) {
    var strat = strats[key] || defaultStrat;
    options[key] = strat(parent[key], child[key], vm, key);
  }
  return options
}

/**
 * Resolve an asset.
 * This function is used because child instances need access
 * to assets defined in its ancestor chain.
 */
function resolveAsset (
  options,
  type,
  id,
  warnMissing
) {
  /* istanbul ignore if */
  if (typeof id !== 'string') {
    return
  }
  var assets = options[type];
  // check local registration variations first
  if (hasOwn(assets, id)) { return assets[id] }
  var camelizedId = camelize(id);
  if (hasOwn(assets, camelizedId)) { return assets[camelizedId] }
  var PascalCaseId = capitalize(camelizedId);
  if (hasOwn(assets, PascalCaseId)) { return assets[PascalCaseId] }
  // fallback to prototype chain
  var res = assets[id] || assets[camelizedId] || assets[PascalCaseId];
  if ( true && warnMissing && !res) {
    warn(
      'Failed to resolve ' + type.slice(0, -1) + ': ' + id,
      options
    );
  }
  return res
}

/*  */



function validateProp (
  key,
  propOptions,
  propsData,
  vm
) {
  var prop = propOptions[key];
  var absent = !hasOwn(propsData, key);
  var value = propsData[key];
  // boolean casting
  var booleanIndex = getTypeIndex(Boolean, prop.type);
  if (booleanIndex > -1) {
    if (absent && !hasOwn(prop, 'default')) {
      value = false;
    } else if (value === '' || value === hyphenate(key)) {
      // only cast empty string / same name to boolean if
      // boolean has higher priority
      var stringIndex = getTypeIndex(String, prop.type);
      if (stringIndex < 0 || booleanIndex < stringIndex) {
        value = true;
      }
    }
  }
  // check default value
  if (value === undefined) {
    value = getPropDefaultValue(vm, prop, key);
    // since the default value is a fresh copy,
    // make sure to observe it.
    var prevShouldObserve = shouldObserve;
    toggleObserving(true);
    observe(value);
    toggleObserving(prevShouldObserve);
  }
  if (
    true
  ) {
    assertProp(prop, key, value, vm, absent);
  }
  return value
}

/**
 * Get the default value of a prop.
 */
function getPropDefaultValue (vm, prop, key) {
  // no default, return undefined
  if (!hasOwn(prop, 'default')) {
    return undefined
  }
  var def = prop.default;
  // warn against non-factory defaults for Object & Array
  if ( true && isObject(def)) {
    warn(
      'Invalid default value for prop "' + key + '": ' +
      'Props with type Object/Array must use a factory function ' +
      'to return the default value.',
      vm
    );
  }
  // the raw prop value was also undefined from previous render,
  // return previous default value to avoid unnecessary watcher trigger
  if (vm && vm.$options.propsData &&
    vm.$options.propsData[key] === undefined &&
    vm._props[key] !== undefined
  ) {
    return vm._props[key]
  }
  // call factory function for non-Function types
  // a value is Function if its prototype is function even across different execution context
  return typeof def === 'function' && getType(prop.type) !== 'Function'
    ? def.call(vm)
    : def
}

/**
 * Assert whether a prop is valid.
 */
function assertProp (
  prop,
  name,
  value,
  vm,
  absent
) {
  if (prop.required && absent) {
    warn(
      'Missing required prop: "' + name + '"',
      vm
    );
    return
  }
  if (value == null && !prop.required) {
    return
  }
  var type = prop.type;
  var valid = !type || type === true;
  var expectedTypes = [];
  if (type) {
    if (!Array.isArray(type)) {
      type = [type];
    }
    for (var i = 0; i < type.length && !valid; i++) {
      var assertedType = assertType(value, type[i]);
      expectedTypes.push(assertedType.expectedType || '');
      valid = assertedType.valid;
    }
  }

  if (!valid) {
    warn(
      getInvalidTypeMessage(name, value, expectedTypes),
      vm
    );
    return
  }
  var validator = prop.validator;
  if (validator) {
    if (!validator(value)) {
      warn(
        'Invalid prop: custom validator check failed for prop "' + name + '".',
        vm
      );
    }
  }
}

var simpleCheckRE = /^(String|Number|Boolean|Function|Symbol)$/;

function assertType (value, type) {
  var valid;
  var expectedType = getType(type);
  if (simpleCheckRE.test(expectedType)) {
    var t = typeof value;
    valid = t === expectedType.toLowerCase();
    // for primitive wrapper objects
    if (!valid && t === 'object') {
      valid = value instanceof type;
    }
  } else if (expectedType === 'Object') {
    valid = isPlainObject(value);
  } else if (expectedType === 'Array') {
    valid = Array.isArray(value);
  } else {
    valid = value instanceof type;
  }
  return {
    valid: valid,
    expectedType: expectedType
  }
}

/**
 * Use function string name to check built-in types,
 * because a simple equality check will fail when running
 * across different vms / iframes.
 */
function getType (fn) {
  var match = fn && fn.toString().match(/^\s*function (\w+)/);
  return match ? match[1] : ''
}

function isSameType (a, b) {
  return getType(a) === getType(b)
}

function getTypeIndex (type, expectedTypes) {
  if (!Array.isArray(expectedTypes)) {
    return isSameType(expectedTypes, type) ? 0 : -1
  }
  for (var i = 0, len = expectedTypes.length; i < len; i++) {
    if (isSameType(expectedTypes[i], type)) {
      return i
    }
  }
  return -1
}

function getInvalidTypeMessage (name, value, expectedTypes) {
  var message = "Invalid prop: type check failed for prop \"" + name + "\"." +
    " Expected " + (expectedTypes.map(capitalize).join(', '));
  var expectedType = expectedTypes[0];
  var receivedType = toRawType(value);
  var expectedValue = styleValue(value, expectedType);
  var receivedValue = styleValue(value, receivedType);
  // check if we need to specify expected value
  if (expectedTypes.length === 1 &&
      isExplicable(expectedType) &&
      !isBoolean(expectedType, receivedType)) {
    message += " with value " + expectedValue;
  }
  message += ", got " + receivedType + " ";
  // check if we need to specify received value
  if (isExplicable(receivedType)) {
    message += "with value " + receivedValue + ".";
  }
  return message
}

function styleValue (value, type) {
  if (type === 'String') {
    return ("\"" + value + "\"")
  } else if (type === 'Number') {
    return ("" + (Number(value)))
  } else {
    return ("" + value)
  }
}

function isExplicable (value) {
  var explicitTypes = ['string', 'number', 'boolean'];
  return explicitTypes.some(function (elem) { return value.toLowerCase() === elem; })
}

function isBoolean () {
  var args = [], len = arguments.length;
  while ( len-- ) args[ len ] = arguments[ len ];

  return args.some(function (elem) { return elem.toLowerCase() === 'boolean'; })
}

/*  */

function handleError (err, vm, info) {
  // Deactivate deps tracking while processing error handler to avoid possible infinite rendering.
  // See: https://github.com/vuejs/vuex/issues/1505
  pushTarget();
  try {
    if (vm) {
      var cur = vm;
      while ((cur = cur.$parent)) {
        var hooks = cur.$options.errorCaptured;
        if (hooks) {
          for (var i = 0; i < hooks.length; i++) {
            try {
              var capture = hooks[i].call(cur, err, vm, info) === false;
              if (capture) { return }
            } catch (e) {
              globalHandleError(e, cur, 'errorCaptured hook');
            }
          }
        }
      }
    }
    globalHandleError(err, vm, info);
  } finally {
    popTarget();
  }
}

function invokeWithErrorHandling (
  handler,
  context,
  args,
  vm,
  info
) {
  var res;
  try {
    res = args ? handler.apply(context, args) : handler.call(context);
    if (res && !res._isVue && isPromise(res) && !res._handled) {
      res.catch(function (e) { return handleError(e, vm, info + " (Promise/async)"); });
      // issue #9511
      // avoid catch triggering multiple times when nested calls
      res._handled = true;
    }
  } catch (e) {
    handleError(e, vm, info);
  }
  return res
}

function globalHandleError (err, vm, info) {
  if (config.errorHandler) {
    try {
      return config.errorHandler.call(null, err, vm, info)
    } catch (e) {
      // if the user intentionally throws the original error in the handler,
      // do not log it twice
      if (e !== err) {
        logError(e, null, 'config.errorHandler');
      }
    }
  }
  logError(err, vm, info);
}

function logError (err, vm, info) {
  if (true) {
    warn(("Error in " + info + ": \"" + (err.toString()) + "\""), vm);
  }
  /* istanbul ignore else */
  if ((inBrowser || inWeex) && typeof console !== 'undefined') {
    console.error(err);
  } else {
    throw err
  }
}

/*  */

var callbacks = [];
var pending = false;

function flushCallbacks () {
  pending = false;
  var copies = callbacks.slice(0);
  callbacks.length = 0;
  for (var i = 0; i < copies.length; i++) {
    copies[i]();
  }
}

// Here we have async deferring wrappers using microtasks.
// In 2.5 we used (macro) tasks (in combination with microtasks).
// However, it has subtle problems when state is changed right before repaint
// (e.g. #6813, out-in transitions).
// Also, using (macro) tasks in event handler would cause some weird behaviors
// that cannot be circumvented (e.g. #7109, #7153, #7546, #7834, #8109).
// So we now use microtasks everywhere, again.
// A major drawback of this tradeoff is that there are some scenarios
// where microtasks have too high a priority and fire in between supposedly
// sequential events (e.g. #4521, #6690, which have workarounds)
// or even between bubbling of the same event (#6566).
var timerFunc;

// The nextTick behavior leverages the microtask queue, which can be accessed
// via either native Promise.then or MutationObserver.
// MutationObserver has wider support, however it is seriously bugged in
// UIWebView in iOS >= 9.3.3 when triggered in touch event handlers. It
// completely stops working after triggering a few times... so, if native
// Promise is available, we will use it:
/* istanbul ignore next, $flow-disable-line */
if (typeof Promise !== 'undefined' && isNative(Promise)) {
  var p = Promise.resolve();
  timerFunc = function () {
    p.then(flushCallbacks);
    // In problematic UIWebViews, Promise.then doesn't completely break, but
    // it can get stuck in a weird state where callbacks are pushed into the
    // microtask queue but the queue isn't being flushed, until the browser
    // needs to do some other work, e.g. handle a timer. Therefore we can
    // "force" the microtask queue to be flushed by adding an empty timer.
    if (isIOS) { setTimeout(noop); }
  };
} else if (!isIE && typeof MutationObserver !== 'undefined' && (
  isNative(MutationObserver) ||
  // PhantomJS and iOS 7.x
  MutationObserver.toString() === '[object MutationObserverConstructor]'
)) {
  // Use MutationObserver where native Promise is not available,
  // e.g. PhantomJS, iOS7, Android 4.4
  // (#6466 MutationObserver is unreliable in IE11)
  var counter = 1;
  var observer = new MutationObserver(flushCallbacks);
  var textNode = document.createTextNode(String(counter));
  observer.observe(textNode, {
    characterData: true
  });
  timerFunc = function () {
    counter = (counter + 1) % 2;
    textNode.data = String(counter);
  };
} else if (typeof setImmediate !== 'undefined' && isNative(setImmediate)) {
  // Fallback to setImmediate.
  // Technically it leverages the (macro) task queue,
  // but it is still a better choice than setTimeout.
  timerFunc = function () {
    setImmediate(flushCallbacks);
  };
} else {
  // Fallback to setTimeout.
  timerFunc = function () {
    setTimeout(flushCallbacks, 0);
  };
}

function nextTick (cb, ctx) {
  var _resolve;
  callbacks.push(function () {
    if (cb) {
      try {
        cb.call(ctx);
      } catch (e) {
        handleError(e, ctx, 'nextTick');
      }
    } else if (_resolve) {
      _resolve(ctx);
    }
  });
  if (!pending) {
    pending = true;
    timerFunc();
  }
  // $flow-disable-line
  if (!cb && typeof Promise !== 'undefined') {
    return new Promise(function (resolve) {
      _resolve = resolve;
    })
  }
}

/*  */

/* not type checking this file because flow doesn't play well with Proxy */

var initProxy;

if (true) {
  var allowedGlobals = makeMap(
    'Infinity,undefined,NaN,isFinite,isNaN,' +
    'parseFloat,parseInt,decodeURI,decodeURIComponent,encodeURI,encodeURIComponent,' +
    'Math,Number,Date,Array,Object,Boolean,String,RegExp,Map,Set,JSON,Intl,' +
    'require' // for Webpack/Browserify
  );

  var warnNonPresent = function (target, key) {
    warn(
      "Property or method \"" + key + "\" is not defined on the instance but " +
      'referenced during render. Make sure that this property is reactive, ' +
      'either in the data option, or for class-based components, by ' +
      'initializing the property. ' +
      'See: https://vuejs.org/v2/guide/reactivity.html#Declaring-Reactive-Properties.',
      target
    );
  };

  var warnReservedPrefix = function (target, key) {
    warn(
      "Property \"" + key + "\" must be accessed with \"$data." + key + "\" because " +
      'properties starting with "$" or "_" are not proxied in the Vue instance to ' +
      'prevent conflicts with Vue internals. ' +
      'See: https://vuejs.org/v2/api/#data',
      target
    );
  };

  var hasProxy =
    typeof Proxy !== 'undefined' && isNative(Proxy);

  if (hasProxy) {
    var isBuiltInModifier = makeMap('stop,prevent,self,ctrl,shift,alt,meta,exact');
    config.keyCodes = new Proxy(config.keyCodes, {
      set: function set (target, key, value) {
        if (isBuiltInModifier(key)) {
          warn(("Avoid overwriting built-in modifier in config.keyCodes: ." + key));
          return false
        } else {
          target[key] = value;
          return true
        }
      }
    });
  }

  var hasHandler = {
    has: function has (target, key) {
      var has = key in target;
      var isAllowed = allowedGlobals(key) ||
        (typeof key === 'string' && key.charAt(0) === '_' && !(key in target.$data));
      if (!has && !isAllowed) {
        if (key in target.$data) { warnReservedPrefix(target, key); }
        else { warnNonPresent(target, key); }
      }
      return has || !isAllowed
    }
  };

  var getHandler = {
    get: function get (target, key) {
      if (typeof key === 'string' && !(key in target)) {
        if (key in target.$data) { warnReservedPrefix(target, key); }
        else { warnNonPresent(target, key); }
      }
      return target[key]
    }
  };

  initProxy = function initProxy (vm) {
    if (hasProxy) {
      // determine which proxy handler to use
      var options = vm.$options;
      var handlers = options.render && options.render._withStripped
        ? getHandler
        : hasHandler;
      vm._renderProxy = new Proxy(vm, handlers);
    } else {
      vm._renderProxy = vm;
    }
  };
}

/*  */

var seenObjects = new _Set();

/**
 * Recursively traverse an object to evoke all converted
 * getters, so that every nested property inside the object
 * is collected as a "deep" dependency.
 */
function traverse (val) {
  _traverse(val, seenObjects);
  seenObjects.clear();
}

function _traverse (val, seen) {
  var i, keys;
  var isA = Array.isArray(val);
  if ((!isA && !isObject(val)) || Object.isFrozen(val) || val instanceof VNode) {
    return
  }
  if (val.__ob__) {
    var depId = val.__ob__.dep.id;
    if (seen.has(depId)) {
      return
    }
    seen.add(depId);
  }
  if (isA) {
    i = val.length;
    while (i--) { _traverse(val[i], seen); }
  } else {
    keys = Object.keys(val);
    i = keys.length;
    while (i--) { _traverse(val[keys[i]], seen); }
  }
}

var mark;
var measure;

if (true) {
  var perf = inBrowser && window.performance;
  /* istanbul ignore if */
  if (
    perf &&
    perf.mark &&
    perf.measure &&
    perf.clearMarks &&
    perf.clearMeasures
  ) {
    mark = function (tag) { return perf.mark(tag); };
    measure = function (name, startTag, endTag) {
      perf.measure(name, startTag, endTag);
      perf.clearMarks(startTag);
      perf.clearMarks(endTag);
      // perf.clearMeasures(name)
    };
  }
}

/*  */

var normalizeEvent = cached(function (name) {
  var passive = name.charAt(0) === '&';
  name = passive ? name.slice(1) : name;
  var once$$1 = name.charAt(0) === '~'; // Prefixed last, checked first
  name = once$$1 ? name.slice(1) : name;
  var capture = name.charAt(0) === '!';
  name = capture ? name.slice(1) : name;
  return {
    name: name,
    once: once$$1,
    capture: capture,
    passive: passive
  }
});

function createFnInvoker (fns, vm) {
  function invoker () {
    var arguments$1 = arguments;

    var fns = invoker.fns;
    if (Array.isArray(fns)) {
      var cloned = fns.slice();
      for (var i = 0; i < cloned.length; i++) {
        invokeWithErrorHandling(cloned[i], null, arguments$1, vm, "v-on handler");
      }
    } else {
      // return handler return value for single handlers
      return invokeWithErrorHandling(fns, null, arguments, vm, "v-on handler")
    }
  }
  invoker.fns = fns;
  return invoker
}

function updateListeners (
  on,
  oldOn,
  add,
  remove$$1,
  createOnceHandler,
  vm
) {
  var name, def$$1, cur, old, event;
  for (name in on) {
    def$$1 = cur = on[name];
    old = oldOn[name];
    event = normalizeEvent(name);
    if (isUndef(cur)) {
       true && warn(
        "Invalid handler for event \"" + (event.name) + "\": got " + String(cur),
        vm
      );
    } else if (isUndef(old)) {
      if (isUndef(cur.fns)) {
        cur = on[name] = createFnInvoker(cur, vm);
      }
      if (isTrue(event.once)) {
        cur = on[name] = createOnceHandler(event.name, cur, event.capture);
      }
      add(event.name, cur, event.capture, event.passive, event.params);
    } else if (cur !== old) {
      old.fns = cur;
      on[name] = old;
    }
  }
  for (name in oldOn) {
    if (isUndef(on[name])) {
      event = normalizeEvent(name);
      remove$$1(event.name, oldOn[name], event.capture);
    }
  }
}

/*  */

/*  */

// fixed by xxxxxx (mp properties)
function extractPropertiesFromVNodeData(data, Ctor, res, context) {
  var propOptions = Ctor.options.mpOptions && Ctor.options.mpOptions.properties;
  if (isUndef(propOptions)) {
    return res
  }
  var externalClasses = Ctor.options.mpOptions.externalClasses || [];
  var attrs = data.attrs;
  var props = data.props;
  if (isDef(attrs) || isDef(props)) {
    for (var key in propOptions) {
      var altKey = hyphenate(key);
      var result = checkProp(res, props, key, altKey, true) ||
          checkProp(res, attrs, key, altKey, false);
      // externalClass
      if (
        result &&
        res[key] &&
        externalClasses.indexOf(altKey) !== -1 &&
        context[camelize(res[key])]
      ) {
        // 赋值 externalClass 真正的值(模板里 externalClass 的值可能是字符串)
        res[key] = context[camelize(res[key])];
      }
    }
  }
  return res
}

function extractPropsFromVNodeData (
  data,
  Ctor,
  tag,
  context// fixed by xxxxxx
) {
  // we are only extracting raw values here.
  // validation and default values are handled in the child
  // component itself.
  var propOptions = Ctor.options.props;
  if (isUndef(propOptions)) {
    // fixed by xxxxxx
    return extractPropertiesFromVNodeData(data, Ctor, {}, context)
  }
  var res = {};
  var attrs = data.attrs;
  var props = data.props;
  if (isDef(attrs) || isDef(props)) {
    for (var key in propOptions) {
      var altKey = hyphenate(key);
      if (true) {
        var keyInLowerCase = key.toLowerCase();
        if (
          key !== keyInLowerCase &&
          attrs && hasOwn(attrs, keyInLowerCase)
        ) {
          tip(
            "Prop \"" + keyInLowerCase + "\" is passed to component " +
            (formatComponentName(tag || Ctor)) + ", but the declared prop name is" +
            " \"" + key + "\". " +
            "Note that HTML attributes are case-insensitive and camelCased " +
            "props need to use their kebab-case equivalents when using in-DOM " +
            "templates. You should probably use \"" + altKey + "\" instead of \"" + key + "\"."
          );
        }
      }
      checkProp(res, props, key, altKey, true) ||
      checkProp(res, attrs, key, altKey, false);
    }
  }
  // fixed by xxxxxx
  return extractPropertiesFromVNodeData(data, Ctor, res, context)
}

function checkProp (
  res,
  hash,
  key,
  altKey,
  preserve
) {
  if (isDef(hash)) {
    if (hasOwn(hash, key)) {
      res[key] = hash[key];
      if (!preserve) {
        delete hash[key];
      }
      return true
    } else if (hasOwn(hash, altKey)) {
      res[key] = hash[altKey];
      if (!preserve) {
        delete hash[altKey];
      }
      return true
    }
  }
  return false
}

/*  */

// The template compiler attempts to minimize the need for normalization by
// statically analyzing the template at compile time.
//
// For plain HTML markup, normalization can be completely skipped because the
// generated render function is guaranteed to return Array<VNode>. There are
// two cases where extra normalization is needed:

// 1. When the children contains components - because a functional component
// may return an Array instead of a single root. In this case, just a simple
// normalization is needed - if any child is an Array, we flatten the whole
// thing with Array.prototype.concat. It is guaranteed to be only 1-level deep
// because functional components already normalize their own children.
function simpleNormalizeChildren (children) {
  for (var i = 0; i < children.length; i++) {
    if (Array.isArray(children[i])) {
      return Array.prototype.concat.apply([], children)
    }
  }
  return children
}

// 2. When the children contains constructs that always generated nested Arrays,
// e.g. <template>, <slot>, v-for, or when the children is provided by user
// with hand-written render functions / JSX. In such cases a full normalization
// is needed to cater to all possible types of children values.
function normalizeChildren (children) {
  return isPrimitive(children)
    ? [createTextVNode(children)]
    : Array.isArray(children)
      ? normalizeArrayChildren(children)
      : undefined
}

function isTextNode (node) {
  return isDef(node) && isDef(node.text) && isFalse(node.isComment)
}

function normalizeArrayChildren (children, nestedIndex) {
  var res = [];
  var i, c, lastIndex, last;
  for (i = 0; i < children.length; i++) {
    c = children[i];
    if (isUndef(c) || typeof c === 'boolean') { continue }
    lastIndex = res.length - 1;
    last = res[lastIndex];
    //  nested
    if (Array.isArray(c)) {
      if (c.length > 0) {
        c = normalizeArrayChildren(c, ((nestedIndex || '') + "_" + i));
        // merge adjacent text nodes
        if (isTextNode(c[0]) && isTextNode(last)) {
          res[lastIndex] = createTextVNode(last.text + (c[0]).text);
          c.shift();
        }
        res.push.apply(res, c);
      }
    } else if (isPrimitive(c)) {
      if (isTextNode(last)) {
        // merge adjacent text nodes
        // this is necessary for SSR hydration because text nodes are
        // essentially merged when rendered to HTML strings
        res[lastIndex] = createTextVNode(last.text + c);
      } else if (c !== '') {
        // convert primitive to vnode
        res.push(createTextVNode(c));
      }
    } else {
      if (isTextNode(c) && isTextNode(last)) {
        // merge adjacent text nodes
        res[lastIndex] = createTextVNode(last.text + c.text);
      } else {
        // default key for nested array children (likely generated by v-for)
        if (isTrue(children._isVList) &&
          isDef(c.tag) &&
          isUndef(c.key) &&
          isDef(nestedIndex)) {
          c.key = "__vlist" + nestedIndex + "_" + i + "__";
        }
        res.push(c);
      }
    }
  }
  return res
}

/*  */

function initProvide (vm) {
  var provide = vm.$options.provide;
  if (provide) {
    vm._provided = typeof provide === 'function'
      ? provide.call(vm)
      : provide;
  }
}

function initInjections (vm) {
  var result = resolveInject(vm.$options.inject, vm);
  if (result) {
    toggleObserving(false);
    Object.keys(result).forEach(function (key) {
      /* istanbul ignore else */
      if (true) {
        defineReactive$$1(vm, key, result[key], function () {
          warn(
            "Avoid mutating an injected value directly since the changes will be " +
            "overwritten whenever the provided component re-renders. " +
            "injection being mutated: \"" + key + "\"",
            vm
          );
        });
      } else {}
    });
    toggleObserving(true);
  }
}

function resolveInject (inject, vm) {
  if (inject) {
    // inject is :any because flow is not smart enough to figure out cached
    var result = Object.create(null);
    var keys = hasSymbol
      ? Reflect.ownKeys(inject)
      : Object.keys(inject);

    for (var i = 0; i < keys.length; i++) {
      var key = keys[i];
      // #6574 in case the inject object is observed...
      if (key === '__ob__') { continue }
      var provideKey = inject[key].from;
      var source = vm;
      while (source) {
        if (source._provided && hasOwn(source._provided, provideKey)) {
          result[key] = source._provided[provideKey];
          break
        }
        source = source.$parent;
      }
      if (!source) {
        if ('default' in inject[key]) {
          var provideDefault = inject[key].default;
          result[key] = typeof provideDefault === 'function'
            ? provideDefault.call(vm)
            : provideDefault;
        } else if (true) {
          warn(("Injection \"" + key + "\" not found"), vm);
        }
      }
    }
    return result
  }
}

/*  */



/**
 * Runtime helper for resolving raw children VNodes into a slot object.
 */
function resolveSlots (
  children,
  context
) {
  if (!children || !children.length) {
    return {}
  }
  var slots = {};
  for (var i = 0, l = children.length; i < l; i++) {
    var child = children[i];
    var data = child.data;
    // remove slot attribute if the node is resolved as a Vue slot node
    if (data && data.attrs && data.attrs.slot) {
      delete data.attrs.slot;
    }
    // named slots should only be respected if the vnode was rendered in the
    // same context.
    if ((child.context === context || child.fnContext === context) &&
      data && data.slot != null
    ) {
      var name = data.slot;
      var slot = (slots[name] || (slots[name] = []));
      if (child.tag === 'template') {
        slot.push.apply(slot, child.children || []);
      } else {
        slot.push(child);
      }
    } else {
      // fixed by xxxxxx 临时 hack 掉 uni-app 中的异步 name slot page
      if(child.asyncMeta && child.asyncMeta.data && child.asyncMeta.data.slot === 'page'){
        (slots['page'] || (slots['page'] = [])).push(child);
      }else{
        (slots.default || (slots.default = [])).push(child);
      }
    }
  }
  // ignore slots that contains only whitespace
  for (var name$1 in slots) {
    if (slots[name$1].every(isWhitespace)) {
      delete slots[name$1];
    }
  }
  return slots
}

function isWhitespace (node) {
  return (node.isComment && !node.asyncFactory) || node.text === ' '
}

/*  */

function normalizeScopedSlots (
  slots,
  normalSlots,
  prevSlots
) {
  var res;
  var hasNormalSlots = Object.keys(normalSlots).length > 0;
  var isStable = slots ? !!slots.$stable : !hasNormalSlots;
  var key = slots && slots.$key;
  if (!slots) {
    res = {};
  } else if (slots._normalized) {
    // fast path 1: child component re-render only, parent did not change
    return slots._normalized
  } else if (
    isStable &&
    prevSlots &&
    prevSlots !== emptyObject &&
    key === prevSlots.$key &&
    !hasNormalSlots &&
    !prevSlots.$hasNormal
  ) {
    // fast path 2: stable scoped slots w/ no normal slots to proxy,
    // only need to normalize once
    return prevSlots
  } else {
    res = {};
    for (var key$1 in slots) {
      if (slots[key$1] && key$1[0] !== '$') {
        res[key$1] = normalizeScopedSlot(normalSlots, key$1, slots[key$1]);
      }
    }
  }
  // expose normal slots on scopedSlots
  for (var key$2 in normalSlots) {
    if (!(key$2 in res)) {
      res[key$2] = proxyNormalSlot(normalSlots, key$2);
    }
  }
  // avoriaz seems to mock a non-extensible $scopedSlots object
  // and when that is passed down this would cause an error
  if (slots && Object.isExtensible(slots)) {
    (slots)._normalized = res;
  }
  def(res, '$stable', isStable);
  def(res, '$key', key);
  def(res, '$hasNormal', hasNormalSlots);
  return res
}

function normalizeScopedSlot(normalSlots, key, fn) {
  var normalized = function () {
    var res = arguments.length ? fn.apply(null, arguments) : fn({});
    res = res && typeof res === 'object' && !Array.isArray(res)
      ? [res] // single vnode
      : normalizeChildren(res);
    return res && (
      res.length === 0 ||
      (res.length === 1 && res[0].isComment) // #9658
    ) ? undefined
      : res
  };
  // this is a slot using the new v-slot syntax without scope. although it is
  // compiled as a scoped slot, render fn users would expect it to be present
  // on this.$slots because the usage is semantically a normal slot.
  if (fn.proxy) {
    Object.defineProperty(normalSlots, key, {
      get: normalized,
      enumerable: true,
      configurable: true
    });
  }
  return normalized
}

function proxyNormalSlot(slots, key) {
  return function () { return slots[key]; }
}

/*  */

/**
 * Runtime helper for rendering v-for lists.
 */
function renderList (
  val,
  render
) {
  var ret, i, l, keys, key;
  if (Array.isArray(val) || typeof val === 'string') {
    ret = new Array(val.length);
    for (i = 0, l = val.length; i < l; i++) {
      ret[i] = render(val[i], i, i, i); // fixed by xxxxxx
    }
  } else if (typeof val === 'number') {
    ret = new Array(val);
    for (i = 0; i < val; i++) {
      ret[i] = render(i + 1, i, i, i); // fixed by xxxxxx
    }
  } else if (isObject(val)) {
    if (hasSymbol && val[Symbol.iterator]) {
      ret = [];
      var iterator = val[Symbol.iterator]();
      var result = iterator.next();
      while (!result.done) {
        ret.push(render(result.value, ret.length, i, i++)); // fixed by xxxxxx
        result = iterator.next();
      }
    } else {
      keys = Object.keys(val);
      ret = new Array(keys.length);
      for (i = 0, l = keys.length; i < l; i++) {
        key = keys[i];
        ret[i] = render(val[key], key, i, i); // fixed by xxxxxx
      }
    }
  }
  if (!isDef(ret)) {
    ret = [];
  }
  (ret)._isVList = true;
  return ret
}

/*  */

/**
 * Runtime helper for rendering <slot>
 */
function renderSlot (
  name,
  fallback,
  props,
  bindObject
) {
  var scopedSlotFn = this.$scopedSlots[name];
  var nodes;
  if (scopedSlotFn) { // scoped slot
    props = props || {};
    if (bindObject) {
      if ( true && !isObject(bindObject)) {
        warn(
          'slot v-bind without argument expects an Object',
          this
        );
      }
      props = extend(extend({}, bindObject), props);
    }
    // fixed by xxxxxx app-plus scopedSlot
    nodes = scopedSlotFn(props, this, props._i) || fallback;
  } else {
    nodes = this.$slots[name] || fallback;
  }

  var target = props && props.slot;
  if (target) {
    return this.$createElement('template', { slot: target }, nodes)
  } else {
    return nodes
  }
}

/*  */

/**
 * Runtime helper for resolving filters
 */
function resolveFilter (id) {
  return resolveAsset(this.$options, 'filters', id, true) || identity
}

/*  */

function isKeyNotMatch (expect, actual) {
  if (Array.isArray(expect)) {
    return expect.indexOf(actual) === -1
  } else {
    return expect !== actual
  }
}

/**
 * Runtime helper for checking keyCodes from config.
 * exposed as Vue.prototype._k
 * passing in eventKeyName as last argument separately for backwards compat
 */
function checkKeyCodes (
  eventKeyCode,
  key,
  builtInKeyCode,
  eventKeyName,
  builtInKeyName
) {
  var mappedKeyCode = config.keyCodes[key] || builtInKeyCode;
  if (builtInKeyName && eventKeyName && !config.keyCodes[key]) {
    return isKeyNotMatch(builtInKeyName, eventKeyName)
  } else if (mappedKeyCode) {
    return isKeyNotMatch(mappedKeyCode, eventKeyCode)
  } else if (eventKeyName) {
    return hyphenate(eventKeyName) !== key
  }
}

/*  */

/**
 * Runtime helper for merging v-bind="object" into a VNode's data.
 */
function bindObjectProps (
  data,
  tag,
  value,
  asProp,
  isSync
) {
  if (value) {
    if (!isObject(value)) {
       true && warn(
        'v-bind without argument expects an Object or Array value',
        this
      );
    } else {
      if (Array.isArray(value)) {
        value = toObject(value);
      }
      var hash;
      var loop = function ( key ) {
        if (
          key === 'class' ||
          key === 'style' ||
          isReservedAttribute(key)
        ) {
          hash = data;
        } else {
          var type = data.attrs && data.attrs.type;
          hash = asProp || config.mustUseProp(tag, type, key)
            ? data.domProps || (data.domProps = {})
            : data.attrs || (data.attrs = {});
        }
        var camelizedKey = camelize(key);
        var hyphenatedKey = hyphenate(key);
        if (!(camelizedKey in hash) && !(hyphenatedKey in hash)) {
          hash[key] = value[key];

          if (isSync) {
            var on = data.on || (data.on = {});
            on[("update:" + key)] = function ($event) {
              value[key] = $event;
            };
          }
        }
      };

      for (var key in value) loop( key );
    }
  }
  return data
}

/*  */

/**
 * Runtime helper for rendering static trees.
 */
function renderStatic (
  index,
  isInFor
) {
  var cached = this._staticTrees || (this._staticTrees = []);
  var tree = cached[index];
  // if has already-rendered static tree and not inside v-for,
  // we can reuse the same tree.
  if (tree && !isInFor) {
    return tree
  }
  // otherwise, render a fresh tree.
  tree = cached[index] = this.$options.staticRenderFns[index].call(
    this._renderProxy,
    null,
    this // for render fns generated for functional component templates
  );
  markStatic(tree, ("__static__" + index), false);
  return tree
}

/**
 * Runtime helper for v-once.
 * Effectively it means marking the node as static with a unique key.
 */
function markOnce (
  tree,
  index,
  key
) {
  markStatic(tree, ("__once__" + index + (key ? ("_" + key) : "")), true);
  return tree
}

function markStatic (
  tree,
  key,
  isOnce
) {
  if (Array.isArray(tree)) {
    for (var i = 0; i < tree.length; i++) {
      if (tree[i] && typeof tree[i] !== 'string') {
        markStaticNode(tree[i], (key + "_" + i), isOnce);
      }
    }
  } else {
    markStaticNode(tree, key, isOnce);
  }
}

function markStaticNode (node, key, isOnce) {
  node.isStatic = true;
  node.key = key;
  node.isOnce = isOnce;
}

/*  */

function bindObjectListeners (data, value) {
  if (value) {
    if (!isPlainObject(value)) {
       true && warn(
        'v-on without argument expects an Object value',
        this
      );
    } else {
      var on = data.on = data.on ? extend({}, data.on) : {};
      for (var key in value) {
        var existing = on[key];
        var ours = value[key];
        on[key] = existing ? [].concat(existing, ours) : ours;
      }
    }
  }
  return data
}

/*  */

function resolveScopedSlots (
  fns, // see flow/vnode
  res,
  // the following are added in 2.6
  hasDynamicKeys,
  contentHashKey
) {
  res = res || { $stable: !hasDynamicKeys };
  for (var i = 0; i < fns.length; i++) {
    var slot = fns[i];
    if (Array.isArray(slot)) {
      resolveScopedSlots(slot, res, hasDynamicKeys);
    } else if (slot) {
      // marker for reverse proxying v-slot without scope on this.$slots
      if (slot.proxy) {
        slot.fn.proxy = true;
      }
      res[slot.key] = slot.fn;
    }
  }
  if (contentHashKey) {
    (res).$key = contentHashKey;
  }
  return res
}

/*  */

function bindDynamicKeys (baseObj, values) {
  for (var i = 0; i < values.length; i += 2) {
    var key = values[i];
    if (typeof key === 'string' && key) {
      baseObj[values[i]] = values[i + 1];
    } else if ( true && key !== '' && key !== null) {
      // null is a special value for explicitly removing a binding
      warn(
        ("Invalid value for dynamic directive argument (expected string or null): " + key),
        this
      );
    }
  }
  return baseObj
}

// helper to dynamically append modifier runtime markers to event names.
// ensure only append when value is already string, otherwise it will be cast
// to string and cause the type check to miss.
function prependModifier (value, symbol) {
  return typeof value === 'string' ? symbol + value : value
}

/*  */

function installRenderHelpers (target) {
  target._o = markOnce;
  target._n = toNumber;
  target._s = toString;
  target._l = renderList;
  target._t = renderSlot;
  target._q = looseEqual;
  target._i = looseIndexOf;
  target._m = renderStatic;
  target._f = resolveFilter;
  target._k = checkKeyCodes;
  target._b = bindObjectProps;
  target._v = createTextVNode;
  target._e = createEmptyVNode;
  target._u = resolveScopedSlots;
  target._g = bindObjectListeners;
  target._d = bindDynamicKeys;
  target._p = prependModifier;
}

/*  */

function FunctionalRenderContext (
  data,
  props,
  children,
  parent,
  Ctor
) {
  var this$1 = this;

  var options = Ctor.options;
  // ensure the createElement function in functional components
  // gets a unique context - this is necessary for correct named slot check
  var contextVm;
  if (hasOwn(parent, '_uid')) {
    contextVm = Object.create(parent);
    // $flow-disable-line
    contextVm._original = parent;
  } else {
    // the context vm passed in is a functional context as well.
    // in this case we want to make sure we are able to get a hold to the
    // real context instance.
    contextVm = parent;
    // $flow-disable-line
    parent = parent._original;
  }
  var isCompiled = isTrue(options._compiled);
  var needNormalization = !isCompiled;

  this.data = data;
  this.props = props;
  this.children = children;
  this.parent = parent;
  this.listeners = data.on || emptyObject;
  this.injections = resolveInject(options.inject, parent);
  this.slots = function () {
    if (!this$1.$slots) {
      normalizeScopedSlots(
        data.scopedSlots,
        this$1.$slots = resolveSlots(children, parent)
      );
    }
    return this$1.$slots
  };

  Object.defineProperty(this, 'scopedSlots', ({
    enumerable: true,
    get: function get () {
      return normalizeScopedSlots(data.scopedSlots, this.slots())
    }
  }));

  // support for compiled functional template
  if (isCompiled) {
    // exposing $options for renderStatic()
    this.$options = options;
    // pre-resolve slots for renderSlot()
    this.$slots = this.slots();
    this.$scopedSlots = normalizeScopedSlots(data.scopedSlots, this.$slots);
  }

  if (options._scopeId) {
    this._c = function (a, b, c, d) {
      var vnode = createElement(contextVm, a, b, c, d, needNormalization);
      if (vnode && !Array.isArray(vnode)) {
        vnode.fnScopeId = options._scopeId;
        vnode.fnContext = parent;
      }
      return vnode
    };
  } else {
    this._c = function (a, b, c, d) { return createElement(contextVm, a, b, c, d, needNormalization); };
  }
}

installRenderHelpers(FunctionalRenderContext.prototype);

function createFunctionalComponent (
  Ctor,
  propsData,
  data,
  contextVm,
  children
) {
  var options = Ctor.options;
  var props = {};
  var propOptions = options.props;
  if (isDef(propOptions)) {
    for (var key in propOptions) {
      props[key] = validateProp(key, propOptions, propsData || emptyObject);
    }
  } else {
    if (isDef(data.attrs)) { mergeProps(props, data.attrs); }
    if (isDef(data.props)) { mergeProps(props, data.props); }
  }

  var renderContext = new FunctionalRenderContext(
    data,
    props,
    children,
    contextVm,
    Ctor
  );

  var vnode = options.render.call(null, renderContext._c, renderContext);

  if (vnode instanceof VNode) {
    return cloneAndMarkFunctionalResult(vnode, data, renderContext.parent, options, renderContext)
  } else if (Array.isArray(vnode)) {
    var vnodes = normalizeChildren(vnode) || [];
    var res = new Array(vnodes.length);
    for (var i = 0; i < vnodes.length; i++) {
      res[i] = cloneAndMarkFunctionalResult(vnodes[i], data, renderContext.parent, options, renderContext);
    }
    return res
  }
}

function cloneAndMarkFunctionalResult (vnode, data, contextVm, options, renderContext) {
  // #7817 clone node before setting fnContext, otherwise if the node is reused
  // (e.g. it was from a cached normal slot) the fnContext causes named slots
  // that should not be matched to match.
  var clone = cloneVNode(vnode);
  clone.fnContext = contextVm;
  clone.fnOptions = options;
  if (true) {
    (clone.devtoolsMeta = clone.devtoolsMeta || {}).renderContext = renderContext;
  }
  if (data.slot) {
    (clone.data || (clone.data = {})).slot = data.slot;
  }
  return clone
}

function mergeProps (to, from) {
  for (var key in from) {
    to[camelize(key)] = from[key];
  }
}

/*  */

/*  */

/*  */

/*  */

// inline hooks to be invoked on component VNodes during patch
var componentVNodeHooks = {
  init: function init (vnode, hydrating) {
    if (
      vnode.componentInstance &&
      !vnode.componentInstance._isDestroyed &&
      vnode.data.keepAlive
    ) {
      // kept-alive components, treat as a patch
      var mountedNode = vnode; // work around flow
      componentVNodeHooks.prepatch(mountedNode, mountedNode);
    } else {
      var child = vnode.componentInstance = createComponentInstanceForVnode(
        vnode,
        activeInstance
      );
      child.$mount(hydrating ? vnode.elm : undefined, hydrating);
    }
  },

  prepatch: function prepatch (oldVnode, vnode) {
    var options = vnode.componentOptions;
    var child = vnode.componentInstance = oldVnode.componentInstance;
    updateChildComponent(
      child,
      options.propsData, // updated props
      options.listeners, // updated listeners
      vnode, // new parent vnode
      options.children // new children
    );
  },

  insert: function insert (vnode) {
    var context = vnode.context;
    var componentInstance = vnode.componentInstance;
    if (!componentInstance._isMounted) {
      callHook(componentInstance, 'onServiceCreated');
      callHook(componentInstance, 'onServiceAttached');
      componentInstance._isMounted = true;
      callHook(componentInstance, 'mounted');
    }
    if (vnode.data.keepAlive) {
      if (context._isMounted) {
        // vue-router#1212
        // During updates, a kept-alive component's child components may
        // change, so directly walking the tree here may call activated hooks
        // on incorrect children. Instead we push them into a queue which will
        // be processed after the whole patch process ended.
        queueActivatedComponent(componentInstance);
      } else {
        activateChildComponent(componentInstance, true /* direct */);
      }
    }
  },

  destroy: function destroy (vnode) {
    var componentInstance = vnode.componentInstance;
    if (!componentInstance._isDestroyed) {
      if (!vnode.data.keepAlive) {
        componentInstance.$destroy();
      } else {
        deactivateChildComponent(componentInstance, true /* direct */);
      }
    }
  }
};

var hooksToMerge = Object.keys(componentVNodeHooks);

function createComponent (
  Ctor,
  data,
  context,
  children,
  tag
) {
  if (isUndef(Ctor)) {
    return
  }

  var baseCtor = context.$options._base;

  // plain options object: turn it into a constructor
  if (isObject(Ctor)) {
    Ctor = baseCtor.extend(Ctor);
  }

  // if at this stage it's not a constructor or an async component factory,
  // reject.
  if (typeof Ctor !== 'function') {
    if (true) {
      warn(("Invalid Component definition: " + (String(Ctor))), context);
    }
    return
  }

  // async component
  var asyncFactory;
  if (isUndef(Ctor.cid)) {
    asyncFactory = Ctor;
    Ctor = resolveAsyncComponent(asyncFactory, baseCtor);
    if (Ctor === undefined) {
      // return a placeholder node for async component, which is rendered
      // as a comment node but preserves all the raw information for the node.
      // the information will be used for async server-rendering and hydration.
      return createAsyncPlaceholder(
        asyncFactory,
        data,
        context,
        children,
        tag
      )
    }
  }

  data = data || {};

  // resolve constructor options in case global mixins are applied after
  // component constructor creation
  resolveConstructorOptions(Ctor);

  // transform component v-model data into props & events
  if (isDef(data.model)) {
    transformModel(Ctor.options, data);
  }

  // extract props
  var propsData = extractPropsFromVNodeData(data, Ctor, tag, context); // fixed by xxxxxx

  // functional component
  if (isTrue(Ctor.options.functional)) {
    return createFunctionalComponent(Ctor, propsData, data, context, children)
  }

  // extract listeners, since these needs to be treated as
  // child component listeners instead of DOM listeners
  var listeners = data.on;
  // replace with listeners with .native modifier
  // so it gets processed during parent component patch.
  data.on = data.nativeOn;

  if (isTrue(Ctor.options.abstract)) {
    // abstract components do not keep anything
    // other than props & listeners & slot

    // work around flow
    var slot = data.slot;
    data = {};
    if (slot) {
      data.slot = slot;
    }
  }

  // install component management hooks onto the placeholder node
  installComponentHooks(data);

  // return a placeholder vnode
  var name = Ctor.options.name || tag;
  var vnode = new VNode(
    ("vue-component-" + (Ctor.cid) + (name ? ("-" + name) : '')),
    data, undefined, undefined, undefined, context,
    { Ctor: Ctor, propsData: propsData, listeners: listeners, tag: tag, children: children },
    asyncFactory
  );

  return vnode
}

function createComponentInstanceForVnode (
  vnode, // we know it's MountedComponentVNode but flow doesn't
  parent // activeInstance in lifecycle state
) {
  var options = {
    _isComponent: true,
    _parentVnode: vnode,
    parent: parent
  };
  // check inline-template render functions
  var inlineTemplate = vnode.data.inlineTemplate;
  if (isDef(inlineTemplate)) {
    options.render = inlineTemplate.render;
    options.staticRenderFns = inlineTemplate.staticRenderFns;
  }
  return new vnode.componentOptions.Ctor(options)
}

function installComponentHooks (data) {
  var hooks = data.hook || (data.hook = {});
  for (var i = 0; i < hooksToMerge.length; i++) {
    var key = hooksToMerge[i];
    var existing = hooks[key];
    var toMerge = componentVNodeHooks[key];
    if (existing !== toMerge && !(existing && existing._merged)) {
      hooks[key] = existing ? mergeHook$1(toMerge, existing) : toMerge;
    }
  }
}

function mergeHook$1 (f1, f2) {
  var merged = function (a, b) {
    // flow complains about extra args which is why we use any
    f1(a, b);
    f2(a, b);
  };
  merged._merged = true;
  return merged
}

// transform component v-model info (value and callback) into
// prop and event handler respectively.
function transformModel (options, data) {
  var prop = (options.model && options.model.prop) || 'value';
  var event = (options.model && options.model.event) || 'input'
  ;(data.attrs || (data.attrs = {}))[prop] = data.model.value;
  var on = data.on || (data.on = {});
  var existing = on[event];
  var callback = data.model.callback;
  if (isDef(existing)) {
    if (
      Array.isArray(existing)
        ? existing.indexOf(callback) === -1
        : existing !== callback
    ) {
      on[event] = [callback].concat(existing);
    }
  } else {
    on[event] = callback;
  }
}

/*  */

var SIMPLE_NORMALIZE = 1;
var ALWAYS_NORMALIZE = 2;

// wrapper function for providing a more flexible interface
// without getting yelled at by flow
function createElement (
  context,
  tag,
  data,
  children,
  normalizationType,
  alwaysNormalize
) {
  if (Array.isArray(data) || isPrimitive(data)) {
    normalizationType = children;
    children = data;
    data = undefined;
  }
  if (isTrue(alwaysNormalize)) {
    normalizationType = ALWAYS_NORMALIZE;
  }
  return _createElement(context, tag, data, children, normalizationType)
}

function _createElement (
  context,
  tag,
  data,
  children,
  normalizationType
) {
  if (isDef(data) && isDef((data).__ob__)) {
     true && warn(
      "Avoid using observed data object as vnode data: " + (JSON.stringify(data)) + "\n" +
      'Always create fresh vnode data objects in each render!',
      context
    );
    return createEmptyVNode()
  }
  // object syntax in v-bind
  if (isDef(data) && isDef(data.is)) {
    tag = data.is;
  }
  if (!tag) {
    // in case of component :is set to falsy value
    return createEmptyVNode()
  }
  // warn against non-primitive key
  if ( true &&
    isDef(data) && isDef(data.key) && !isPrimitive(data.key)
  ) {
    {
      warn(
        'Avoid using non-primitive value as key, ' +
        'use string/number value instead.',
        context
      );
    }
  }
  // support single function children as default scoped slot
  if (Array.isArray(children) &&
    typeof children[0] === 'function'
  ) {
    data = data || {};
    data.scopedSlots = { default: children[0] };
    children.length = 0;
  }
  if (normalizationType === ALWAYS_NORMALIZE) {
    children = normalizeChildren(children);
  } else if (normalizationType === SIMPLE_NORMALIZE) {
    children = simpleNormalizeChildren(children);
  }
  var vnode, ns;
  if (typeof tag === 'string') {
    var Ctor;
    ns = (context.$vnode && context.$vnode.ns) || config.getTagNamespace(tag);
    if (config.isReservedTag(tag)) {
      // platform built-in elements
      if ( true && isDef(data) && isDef(data.nativeOn)) {
        warn(
          ("The .native modifier for v-on is only valid on components but it was used on <" + tag + ">."),
          context
        );
      }
      vnode = new VNode(
        config.parsePlatformTagName(tag), data, children,
        undefined, undefined, context
      );
    } else if ((!data || !data.pre) && isDef(Ctor = resolveAsset(context.$options, 'components', tag))) {
      // component
      vnode = createComponent(Ctor, data, context, children, tag);
    } else {
      // unknown or unlisted namespaced elements
      // check at runtime because it may get assigned a namespace when its
      // parent normalizes children
      vnode = new VNode(
        tag, data, children,
        undefined, undefined, context
      );
    }
  } else {
    // direct component options / constructor
    vnode = createComponent(tag, data, context, children);
  }
  if (Array.isArray(vnode)) {
    return vnode
  } else if (isDef(vnode)) {
    if (isDef(ns)) { applyNS(vnode, ns); }
    if (isDef(data)) { registerDeepBindings(data); }
    return vnode
  } else {
    return createEmptyVNode()
  }
}

function applyNS (vnode, ns, force) {
  vnode.ns = ns;
  if (vnode.tag === 'foreignObject') {
    // use default namespace inside foreignObject
    ns = undefined;
    force = true;
  }
  if (isDef(vnode.children)) {
    for (var i = 0, l = vnode.children.length; i < l; i++) {
      var child = vnode.children[i];
      if (isDef(child.tag) && (
        isUndef(child.ns) || (isTrue(force) && child.tag !== 'svg'))) {
        applyNS(child, ns, force);
      }
    }
  }
}

// ref #5318
// necessary to ensure parent re-render when deep bindings like :style and
// :class are used on slot nodes
function registerDeepBindings (data) {
  if (isObject(data.style)) {
    traverse(data.style);
  }
  if (isObject(data.class)) {
    traverse(data.class);
  }
}

/*  */

function initRender (vm) {
  vm._vnode = null; // the root of the child tree
  vm._staticTrees = null; // v-once cached trees
  var options = vm.$options;
  var parentVnode = vm.$vnode = options._parentVnode; // the placeholder node in parent tree
  var renderContext = parentVnode && parentVnode.context;
  vm.$slots = resolveSlots(options._renderChildren, renderContext);
  vm.$scopedSlots = emptyObject;
  // bind the createElement fn to this instance
  // so that we get proper render context inside it.
  // args order: tag, data, children, normalizationType, alwaysNormalize
  // internal version is used by render functions compiled from templates
  vm._c = function (a, b, c, d) { return createElement(vm, a, b, c, d, false); };
  // normalization is always applied for the public version, used in
  // user-written render functions.
  vm.$createElement = function (a, b, c, d) { return createElement(vm, a, b, c, d, true); };

  // $attrs & $listeners are exposed for easier HOC creation.
  // they need to be reactive so that HOCs using them are always updated
  var parentData = parentVnode && parentVnode.data;

  /* istanbul ignore else */
  if (true) {
    defineReactive$$1(vm, '$attrs', parentData && parentData.attrs || emptyObject, function () {
      !isUpdatingChildComponent && warn("$attrs is readonly.", vm);
    }, true);
    defineReactive$$1(vm, '$listeners', options._parentListeners || emptyObject, function () {
      !isUpdatingChildComponent && warn("$listeners is readonly.", vm);
    }, true);
  } else {}
}

var currentRenderingInstance = null;

function renderMixin (Vue) {
  // install runtime convenience helpers
  installRenderHelpers(Vue.prototype);

  Vue.prototype.$nextTick = function (fn) {
    return nextTick(fn, this)
  };

  Vue.prototype._render = function () {
    var vm = this;
    var ref = vm.$options;
    var render = ref.render;
    var _parentVnode = ref._parentVnode;

    if (_parentVnode) {
      vm.$scopedSlots = normalizeScopedSlots(
        _parentVnode.data.scopedSlots,
        vm.$slots,
        vm.$scopedSlots
      );
    }

    // set parent vnode. this allows render functions to have access
    // to the data on the placeholder node.
    vm.$vnode = _parentVnode;
    // render self
    var vnode;
    try {
      // There's no need to maintain a stack because all render fns are called
      // separately from one another. Nested component's render fns are called
      // when parent component is patched.
      currentRenderingInstance = vm;
      vnode = render.call(vm._renderProxy, vm.$createElement);
    } catch (e) {
      handleError(e, vm, "render");
      // return error render result,
      // or previous vnode to prevent render error causing blank component
      /* istanbul ignore else */
      if ( true && vm.$options.renderError) {
        try {
          vnode = vm.$options.renderError.call(vm._renderProxy, vm.$createElement, e);
        } catch (e) {
          handleError(e, vm, "renderError");
          vnode = vm._vnode;
        }
      } else {
        vnode = vm._vnode;
      }
    } finally {
      currentRenderingInstance = null;
    }
    // if the returned array contains only a single node, allow it
    if (Array.isArray(vnode) && vnode.length === 1) {
      vnode = vnode[0];
    }
    // return empty vnode in case the render function errored out
    if (!(vnode instanceof VNode)) {
      if ( true && Array.isArray(vnode)) {
        warn(
          'Multiple root nodes returned from render function. Render function ' +
          'should return a single root node.',
          vm
        );
      }
      vnode = createEmptyVNode();
    }
    // set parent
    vnode.parent = _parentVnode;
    return vnode
  };
}

/*  */

function ensureCtor (comp, base) {
  if (
    comp.__esModule ||
    (hasSymbol && comp[Symbol.toStringTag] === 'Module')
  ) {
    comp = comp.default;
  }
  return isObject(comp)
    ? base.extend(comp)
    : comp
}

function createAsyncPlaceholder (
  factory,
  data,
  context,
  children,
  tag
) {
  var node = createEmptyVNode();
  node.asyncFactory = factory;
  node.asyncMeta = { data: data, context: context, children: children, tag: tag };
  return node
}

function resolveAsyncComponent (
  factory,
  baseCtor
) {
  if (isTrue(factory.error) && isDef(factory.errorComp)) {
    return factory.errorComp
  }

  if (isDef(factory.resolved)) {
    return factory.resolved
  }

  var owner = currentRenderingInstance;
  if (owner && isDef(factory.owners) && factory.owners.indexOf(owner) === -1) {
    // already pending
    factory.owners.push(owner);
  }

  if (isTrue(factory.loading) && isDef(factory.loadingComp)) {
    return factory.loadingComp
  }

  if (owner && !isDef(factory.owners)) {
    var owners = factory.owners = [owner];
    var sync = true;
    var timerLoading = null;
    var timerTimeout = null

    ;(owner).$on('hook:destroyed', function () { return remove(owners, owner); });

    var forceRender = function (renderCompleted) {
      for (var i = 0, l = owners.length; i < l; i++) {
        (owners[i]).$forceUpdate();
      }

      if (renderCompleted) {
        owners.length = 0;
        if (timerLoading !== null) {
          clearTimeout(timerLoading);
          timerLoading = null;
        }
        if (timerTimeout !== null) {
          clearTimeout(timerTimeout);
          timerTimeout = null;
        }
      }
    };

    var resolve = once(function (res) {
      // cache resolved
      factory.resolved = ensureCtor(res, baseCtor);
      // invoke callbacks only if this is not a synchronous resolve
      // (async resolves are shimmed as synchronous during SSR)
      if (!sync) {
        forceRender(true);
      } else {
        owners.length = 0;
      }
    });

    var reject = once(function (reason) {
       true && warn(
        "Failed to resolve async component: " + (String(factory)) +
        (reason ? ("\nReason: " + reason) : '')
      );
      if (isDef(factory.errorComp)) {
        factory.error = true;
        forceRender(true);
      }
    });

    var res = factory(resolve, reject);

    if (isObject(res)) {
      if (isPromise(res)) {
        // () => Promise
        if (isUndef(factory.resolved)) {
          res.then(resolve, reject);
        }
      } else if (isPromise(res.component)) {
        res.component.then(resolve, reject);

        if (isDef(res.error)) {
          factory.errorComp = ensureCtor(res.error, baseCtor);
        }

        if (isDef(res.loading)) {
          factory.loadingComp = ensureCtor(res.loading, baseCtor);
          if (res.delay === 0) {
            factory.loading = true;
          } else {
            timerLoading = setTimeout(function () {
              timerLoading = null;
              if (isUndef(factory.resolved) && isUndef(factory.error)) {
                factory.loading = true;
                forceRender(false);
              }
            }, res.delay || 200);
          }
        }

        if (isDef(res.timeout)) {
          timerTimeout = setTimeout(function () {
            timerTimeout = null;
            if (isUndef(factory.resolved)) {
              reject(
                 true
                  ? ("timeout (" + (res.timeout) + "ms)")
                  : undefined
              );
            }
          }, res.timeout);
        }
      }
    }

    sync = false;
    // return in case resolved synchronously
    return factory.loading
      ? factory.loadingComp
      : factory.resolved
  }
}

/*  */

function isAsyncPlaceholder (node) {
  return node.isComment && node.asyncFactory
}

/*  */

function getFirstComponentChild (children) {
  if (Array.isArray(children)) {
    for (var i = 0; i < children.length; i++) {
      var c = children[i];
      if (isDef(c) && (isDef(c.componentOptions) || isAsyncPlaceholder(c))) {
        return c
      }
    }
  }
}

/*  */

/*  */

function initEvents (vm) {
  vm._events = Object.create(null);
  vm._hasHookEvent = false;
  // init parent attached events
  var listeners = vm.$options._parentListeners;
  if (listeners) {
    updateComponentListeners(vm, listeners);
  }
}

var target;

function add (event, fn) {
  target.$on(event, fn);
}

function remove$1 (event, fn) {
  target.$off(event, fn);
}

function createOnceHandler (event, fn) {
  var _target = target;
  return function onceHandler () {
    var res = fn.apply(null, arguments);
    if (res !== null) {
      _target.$off(event, onceHandler);
    }
  }
}

function updateComponentListeners (
  vm,
  listeners,
  oldListeners
) {
  target = vm;
  updateListeners(listeners, oldListeners || {}, add, remove$1, createOnceHandler, vm);
  target = undefined;
}

function eventsMixin (Vue) {
  var hookRE = /^hook:/;
  Vue.prototype.$on = function (event, fn) {
    var vm = this;
    if (Array.isArray(event)) {
      for (var i = 0, l = event.length; i < l; i++) {
        vm.$on(event[i], fn);
      }
    } else {
      (vm._events[event] || (vm._events[event] = [])).push(fn);
      // optimize hook:event cost by using a boolean flag marked at registration
      // instead of a hash lookup
      if (hookRE.test(event)) {
        vm._hasHookEvent = true;
      }
    }
    return vm
  };

  Vue.prototype.$once = function (event, fn) {
    var vm = this;
    function on () {
      vm.$off(event, on);
      fn.apply(vm, arguments);
    }
    on.fn = fn;
    vm.$on(event, on);
    return vm
  };

  Vue.prototype.$off = function (event, fn) {
    var vm = this;
    // all
    if (!arguments.length) {
      vm._events = Object.create(null);
      return vm
    }
    // array of events
    if (Array.isArray(event)) {
      for (var i$1 = 0, l = event.length; i$1 < l; i$1++) {
        vm.$off(event[i$1], fn);
      }
      return vm
    }
    // specific event
    var cbs = vm._events[event];
    if (!cbs) {
      return vm
    }
    if (!fn) {
      vm._events[event] = null;
      return vm
    }
    // specific handler
    var cb;
    var i = cbs.length;
    while (i--) {
      cb = cbs[i];
      if (cb === fn || cb.fn === fn) {
        cbs.splice(i, 1);
        break
      }
    }
    return vm
  };

  Vue.prototype.$emit = function (event) {
    var vm = this;
    if (true) {
      var lowerCaseEvent = event.toLowerCase();
      if (lowerCaseEvent !== event && vm._events[lowerCaseEvent]) {
        tip(
          "Event \"" + lowerCaseEvent + "\" is emitted in component " +
          (formatComponentName(vm)) + " but the handler is registered for \"" + event + "\". " +
          "Note that HTML attributes are case-insensitive and you cannot use " +
          "v-on to listen to camelCase events when using in-DOM templates. " +
          "You should probably use \"" + (hyphenate(event)) + "\" instead of \"" + event + "\"."
        );
      }
    }
    var cbs = vm._events[event];
    if (cbs) {
      cbs = cbs.length > 1 ? toArray(cbs) : cbs;
      var args = toArray(arguments, 1);
      var info = "event handler for \"" + event + "\"";
      for (var i = 0, l = cbs.length; i < l; i++) {
        invokeWithErrorHandling(cbs[i], vm, args, vm, info);
      }
    }
    return vm
  };
}

/*  */

var activeInstance = null;
var isUpdatingChildComponent = false;

function setActiveInstance(vm) {
  var prevActiveInstance = activeInstance;
  activeInstance = vm;
  return function () {
    activeInstance = prevActiveInstance;
  }
}

function initLifecycle (vm) {
  var options = vm.$options;

  // locate first non-abstract parent
  var parent = options.parent;
  if (parent && !options.abstract) {
    while (parent.$options.abstract && parent.$parent) {
      parent = parent.$parent;
    }
    parent.$children.push(vm);
  }

  vm.$parent = parent;
  vm.$root = parent ? parent.$root : vm;

  vm.$children = [];
  vm.$refs = {};

  vm._watcher = null;
  vm._inactive = null;
  vm._directInactive = false;
  vm._isMounted = false;
  vm._isDestroyed = false;
  vm._isBeingDestroyed = false;
}

function lifecycleMixin (Vue) {
  Vue.prototype._update = function (vnode, hydrating) {
    var vm = this;
    var prevEl = vm.$el;
    var prevVnode = vm._vnode;
    var restoreActiveInstance = setActiveInstance(vm);
    vm._vnode = vnode;
    // Vue.prototype.__patch__ is injected in entry points
    // based on the rendering backend used.
    if (!prevVnode) {
      // initial render
      vm.$el = vm.__patch__(vm.$el, vnode, hydrating, false /* removeOnly */);
    } else {
      // updates
      vm.$el = vm.__patch__(prevVnode, vnode);
    }
    restoreActiveInstance();
    // update __vue__ reference
    if (prevEl) {
      prevEl.__vue__ = null;
    }
    if (vm.$el) {
      vm.$el.__vue__ = vm;
    }
    // if parent is an HOC, update its $el as well
    if (vm.$vnode && vm.$parent && vm.$vnode === vm.$parent._vnode) {
      vm.$parent.$el = vm.$el;
    }
    // updated hook is called by the scheduler to ensure that children are
    // updated in a parent's updated hook.
  };

  Vue.prototype.$forceUpdate = function () {
    var vm = this;
    if (vm._watcher) {
      vm._watcher.update();
    }
  };

  Vue.prototype.$destroy = function () {
    var vm = this;
    if (vm._isBeingDestroyed) {
      return
    }
    callHook(vm, 'beforeDestroy');
    vm._isBeingDestroyed = true;
    // remove self from parent
    var parent = vm.$parent;
    if (parent && !parent._isBeingDestroyed && !vm.$options.abstract) {
      remove(parent.$children, vm);
    }
    // teardown watchers
    if (vm._watcher) {
      vm._watcher.teardown();
    }
    var i = vm._watchers.length;
    while (i--) {
      vm._watchers[i].teardown();
    }
    // remove reference from data ob
    // frozen object may not have observer.
    if (vm._data.__ob__) {
      vm._data.__ob__.vmCount--;
    }
    // call the last hook...
    vm._isDestroyed = true;
    // invoke destroy hooks on current rendered tree
    vm.__patch__(vm._vnode, null);
    // fire destroyed hook
    callHook(vm, 'destroyed');
    // turn off all instance listeners.
    vm.$off();
    // remove __vue__ reference
    if (vm.$el) {
      vm.$el.__vue__ = null;
    }
    // release circular reference (#6759)
    if (vm.$vnode) {
      vm.$vnode.parent = null;
    }
  };
}

function updateChildComponent (
  vm,
  propsData,
  listeners,
  parentVnode,
  renderChildren
) {
  if (true) {
    isUpdatingChildComponent = true;
  }

  // determine whether component has slot children
  // we need to do this before overwriting $options._renderChildren.

  // check if there are dynamic scopedSlots (hand-written or compiled but with
  // dynamic slot names). Static scoped slots compiled from template has the
  // "$stable" marker.
  var newScopedSlots = parentVnode.data.scopedSlots;
  var oldScopedSlots = vm.$scopedSlots;
  var hasDynamicScopedSlot = !!(
    (newScopedSlots && !newScopedSlots.$stable) ||
    (oldScopedSlots !== emptyObject && !oldScopedSlots.$stable) ||
    (newScopedSlots && vm.$scopedSlots.$key !== newScopedSlots.$key)
  );

  // Any static slot children from the parent may have changed during parent's
  // update. Dynamic scoped slots may also have changed. In such cases, a forced
  // update is necessary to ensure correctness.
  var needsForceUpdate = !!(
    renderChildren ||               // has new static slots
    vm.$options._renderChildren ||  // has old static slots
    hasDynamicScopedSlot
  );

  vm.$options._parentVnode = parentVnode;
  vm.$vnode = parentVnode; // update vm's placeholder node without re-render

  if (vm._vnode) { // update child tree's parent
    vm._vnode.parent = parentVnode;
  }
  vm.$options._renderChildren = renderChildren;

  // update $attrs and $listeners hash
  // these are also reactive so they may trigger child update if the child
  // used them during render
  vm.$attrs = parentVnode.data.attrs || emptyObject;
  vm.$listeners = listeners || emptyObject;

  // update props
  if (propsData && vm.$options.props) {
    toggleObserving(false);
    var props = vm._props;
    var propKeys = vm.$options._propKeys || [];
    for (var i = 0; i < propKeys.length; i++) {
      var key = propKeys[i];
      var propOptions = vm.$options.props; // wtf flow?
      props[key] = validateProp(key, propOptions, propsData, vm);
    }
    toggleObserving(true);
    // keep a copy of raw propsData
    vm.$options.propsData = propsData;
  }
  
  // fixed by xxxxxx update properties(mp runtime)
  vm._$updateProperties && vm._$updateProperties(vm);
  
  // update listeners
  listeners = listeners || emptyObject;
  var oldListeners = vm.$options._parentListeners;
  vm.$options._parentListeners = listeners;
  updateComponentListeners(vm, listeners, oldListeners);

  // resolve slots + force update if has children
  if (needsForceUpdate) {
    vm.$slots = resolveSlots(renderChildren, parentVnode.context);
    vm.$forceUpdate();
  }

  if (true) {
    isUpdatingChildComponent = false;
  }
}

function isInInactiveTree (vm) {
  while (vm && (vm = vm.$parent)) {
    if (vm._inactive) { return true }
  }
  return false
}

function activateChildComponent (vm, direct) {
  if (direct) {
    vm._directInactive = false;
    if (isInInactiveTree(vm)) {
      return
    }
  } else if (vm._directInactive) {
    return
  }
  if (vm._inactive || vm._inactive === null) {
    vm._inactive = false;
    for (var i = 0; i < vm.$children.length; i++) {
      activateChildComponent(vm.$children[i]);
    }
    callHook(vm, 'activated');
  }
}

function deactivateChildComponent (vm, direct) {
  if (direct) {
    vm._directInactive = true;
    if (isInInactiveTree(vm)) {
      return
    }
  }
  if (!vm._inactive) {
    vm._inactive = true;
    for (var i = 0; i < vm.$children.length; i++) {
      deactivateChildComponent(vm.$children[i]);
    }
    callHook(vm, 'deactivated');
  }
}

function callHook (vm, hook) {
  // #7573 disable dep collection when invoking lifecycle hooks
  pushTarget();
  var handlers = vm.$options[hook];
  var info = hook + " hook";
  if (handlers) {
    for (var i = 0, j = handlers.length; i < j; i++) {
      invokeWithErrorHandling(handlers[i], vm, null, vm, info);
    }
  }
  if (vm._hasHookEvent) {
    vm.$emit('hook:' + hook);
  }
  popTarget();
}

/*  */

var MAX_UPDATE_COUNT = 100;

var queue = [];
var activatedChildren = [];
var has = {};
var circular = {};
var waiting = false;
var flushing = false;
var index = 0;

/**
 * Reset the scheduler's state.
 */
function resetSchedulerState () {
  index = queue.length = activatedChildren.length = 0;
  has = {};
  if (true) {
    circular = {};
  }
  waiting = flushing = false;
}

// Async edge case #6566 requires saving the timestamp when event listeners are
// attached. However, calling performance.now() has a perf overhead especially
// if the page has thousands of event listeners. Instead, we take a timestamp
// every time the scheduler flushes and use that for all event listeners
// attached during that flush.
var currentFlushTimestamp = 0;

// Async edge case fix requires storing an event listener's attach timestamp.
var getNow = Date.now;

// Determine what event timestamp the browser is using. Annoyingly, the
// timestamp can either be hi-res (relative to page load) or low-res
// (relative to UNIX epoch), so in order to compare time we have to use the
// same timestamp type when saving the flush timestamp.
// All IE versions use low-res event timestamps, and have problematic clock
// implementations (#9632)
if (inBrowser && !isIE) {
  var performance = window.performance;
  if (
    performance &&
    typeof performance.now === 'function' &&
    getNow() > document.createEvent('Event').timeStamp
  ) {
    // if the event timestamp, although evaluated AFTER the Date.now(), is
    // smaller than it, it means the event is using a hi-res timestamp,
    // and we need to use the hi-res version for event listener timestamps as
    // well.
    getNow = function () { return performance.now(); };
  }
}

/**
 * Flush both queues and run the watchers.
 */
function flushSchedulerQueue () {
  currentFlushTimestamp = getNow();
  flushing = true;
  var watcher, id;

  // Sort queue before flush.
  // This ensures that:
  // 1. Components are updated from parent to child. (because parent is always
  //    created before the child)
  // 2. A component's user watchers are run before its render watcher (because
  //    user watchers are created before the render watcher)
  // 3. If a component is destroyed during a parent component's watcher run,
  //    its watchers can be skipped.
  queue.sort(function (a, b) { return a.id - b.id; });

  // do not cache length because more watchers might be pushed
  // as we run existing watchers
  for (index = 0; index < queue.length; index++) {
    watcher = queue[index];
    if (watcher.before) {
      watcher.before();
    }
    id = watcher.id;
    has[id] = null;
    watcher.run();
    // in dev build, check and stop circular updates.
    if ( true && has[id] != null) {
      circular[id] = (circular[id] || 0) + 1;
      if (circular[id] > MAX_UPDATE_COUNT) {
        warn(
          'You may have an infinite update loop ' + (
            watcher.user
              ? ("in watcher with expression \"" + (watcher.expression) + "\"")
              : "in a component render function."
          ),
          watcher.vm
        );
        break
      }
    }
  }

  // keep copies of post queues before resetting state
  var activatedQueue = activatedChildren.slice();
  var updatedQueue = queue.slice();

  resetSchedulerState();

  // call component updated and activated hooks
  callActivatedHooks(activatedQueue);
  callUpdatedHooks(updatedQueue);

  // devtool hook
  /* istanbul ignore if */
  if (devtools && config.devtools) {
    devtools.emit('flush');
  }
}

function callUpdatedHooks (queue) {
  var i = queue.length;
  while (i--) {
    var watcher = queue[i];
    var vm = watcher.vm;
    if (vm._watcher === watcher && vm._isMounted && !vm._isDestroyed) {
      callHook(vm, 'updated');
    }
  }
}

/**
 * Queue a kept-alive component that was activated during patch.
 * The queue will be processed after the entire tree has been patched.
 */
function queueActivatedComponent (vm) {
  // setting _inactive to false here so that a render function can
  // rely on checking whether it's in an inactive tree (e.g. router-view)
  vm._inactive = false;
  activatedChildren.push(vm);
}

function callActivatedHooks (queue) {
  for (var i = 0; i < queue.length; i++) {
    queue[i]._inactive = true;
    activateChildComponent(queue[i], true /* true */);
  }
}

/**
 * Push a watcher into the watcher queue.
 * Jobs with duplicate IDs will be skipped unless it's
 * pushed when the queue is being flushed.
 */
function queueWatcher (watcher) {
  var id = watcher.id;
  if (has[id] == null) {
    has[id] = true;
    if (!flushing) {
      queue.push(watcher);
    } else {
      // if already flushing, splice the watcher based on its id
      // if already past its id, it will be run next immediately.
      var i = queue.length - 1;
      while (i > index && queue[i].id > watcher.id) {
        i--;
      }
      queue.splice(i + 1, 0, watcher);
    }
    // queue the flush
    if (!waiting) {
      waiting = true;

      if ( true && !config.async) {
        flushSchedulerQueue();
        return
      }
      nextTick(flushSchedulerQueue);
    }
  }
}

/*  */



var uid$2 = 0;

/**
 * A watcher parses an expression, collects dependencies,
 * and fires callback when the expression value changes.
 * This is used for both the $watch() api and directives.
 */
var Watcher = function Watcher (
  vm,
  expOrFn,
  cb,
  options,
  isRenderWatcher
) {
  this.vm = vm;
  if (isRenderWatcher) {
    vm._watcher = this;
  }
  vm._watchers.push(this);
  // options
  if (options) {
    this.deep = !!options.deep;
    this.user = !!options.user;
    this.lazy = !!options.lazy;
    this.sync = !!options.sync;
    this.before = options.before;
  } else {
    this.deep = this.user = this.lazy = this.sync = false;
  }
  this.cb = cb;
  this.id = ++uid$2; // uid for batching
  this.active = true;
  this.dirty = this.lazy; // for lazy watchers
  this.deps = [];
  this.newDeps = [];
  this.depIds = new _Set();
  this.newDepIds = new _Set();
  this.expression =  true
    ? expOrFn.toString()
    : undefined;
  // parse expression for getter
  if (typeof expOrFn === 'function') {
    this.getter = expOrFn;
  } else {
    this.getter = parsePath(expOrFn);
    if (!this.getter) {
      this.getter = noop;
       true && warn(
        "Failed watching path: \"" + expOrFn + "\" " +
        'Watcher only accepts simple dot-delimited paths. ' +
        'For full control, use a function instead.',
        vm
      );
    }
  }
  this.value = this.lazy
    ? undefined
    : this.get();
};

/**
 * Evaluate the getter, and re-collect dependencies.
 */
Watcher.prototype.get = function get () {
  pushTarget(this);
  var value;
  var vm = this.vm;
  try {
    value = this.getter.call(vm, vm);
  } catch (e) {
    if (this.user) {
      handleError(e, vm, ("getter for watcher \"" + (this.expression) + "\""));
    } else {
      throw e
    }
  } finally {
    // "touch" every property so they are all tracked as
    // dependencies for deep watching
    if (this.deep) {
      traverse(value);
    }
    popTarget();
    this.cleanupDeps();
  }
  return value
};

/**
 * Add a dependency to this directive.
 */
Watcher.prototype.addDep = function addDep (dep) {
  var id = dep.id;
  if (!this.newDepIds.has(id)) {
    this.newDepIds.add(id);
    this.newDeps.push(dep);
    if (!this.depIds.has(id)) {
      dep.addSub(this);
    }
  }
};

/**
 * Clean up for dependency collection.
 */
Watcher.prototype.cleanupDeps = function cleanupDeps () {
  var i = this.deps.length;
  while (i--) {
    var dep = this.deps[i];
    if (!this.newDepIds.has(dep.id)) {
      dep.removeSub(this);
    }
  }
  var tmp = this.depIds;
  this.depIds = this.newDepIds;
  this.newDepIds = tmp;
  this.newDepIds.clear();
  tmp = this.deps;
  this.deps = this.newDeps;
  this.newDeps = tmp;
  this.newDeps.length = 0;
};

/**
 * Subscriber interface.
 * Will be called when a dependency changes.
 */
Watcher.prototype.update = function update () {
  /* istanbul ignore else */
  if (this.lazy) {
    this.dirty = true;
  } else if (this.sync) {
    this.run();
  } else {
    queueWatcher(this);
  }
};

/**
 * Scheduler job interface.
 * Will be called by the scheduler.
 */
Watcher.prototype.run = function run () {
  if (this.active) {
    var value = this.get();
    if (
      value !== this.value ||
      // Deep watchers and watchers on Object/Arrays should fire even
      // when the value is the same, because the value may
      // have mutated.
      isObject(value) ||
      this.deep
    ) {
      // set new value
      var oldValue = this.value;
      this.value = value;
      if (this.user) {
        try {
          this.cb.call(this.vm, value, oldValue);
        } catch (e) {
          handleError(e, this.vm, ("callback for watcher \"" + (this.expression) + "\""));
        }
      } else {
        this.cb.call(this.vm, value, oldValue);
      }
    }
  }
};

/**
 * Evaluate the value of the watcher.
 * This only gets called for lazy watchers.
 */
Watcher.prototype.evaluate = function evaluate () {
  this.value = this.get();
  this.dirty = false;
};

/**
 * Depend on all deps collected by this watcher.
 */
Watcher.prototype.depend = function depend () {
  var i = this.deps.length;
  while (i--) {
    this.deps[i].depend();
  }
};

/**
 * Remove self from all dependencies' subscriber list.
 */
Watcher.prototype.teardown = function teardown () {
  if (this.active) {
    // remove self from vm's watcher list
    // this is a somewhat expensive operation so we skip it
    // if the vm is being destroyed.
    if (!this.vm._isBeingDestroyed) {
      remove(this.vm._watchers, this);
    }
    var i = this.deps.length;
    while (i--) {
      this.deps[i].removeSub(this);
    }
    this.active = false;
  }
};

/*  */

var sharedPropertyDefinition = {
  enumerable: true,
  configurable: true,
  get: noop,
  set: noop
};

function proxy (target, sourceKey, key) {
  sharedPropertyDefinition.get = function proxyGetter () {
    return this[sourceKey][key]
  };
  sharedPropertyDefinition.set = function proxySetter (val) {
    this[sourceKey][key] = val;
  };
  Object.defineProperty(target, key, sharedPropertyDefinition);
}

function initState (vm) {
  vm._watchers = [];
  var opts = vm.$options;
  if (opts.props) { initProps(vm, opts.props); }
  if (opts.methods) { initMethods(vm, opts.methods); }
  if (opts.data) {
    initData(vm);
  } else {
    observe(vm._data = {}, true /* asRootData */);
  }
  if (opts.computed) { initComputed(vm, opts.computed); }
  if (opts.watch && opts.watch !== nativeWatch) {
    initWatch(vm, opts.watch);
  }
}

function initProps (vm, propsOptions) {
  var propsData = vm.$options.propsData || {};
  var props = vm._props = {};
  // cache prop keys so that future props updates can iterate using Array
  // instead of dynamic object key enumeration.
  var keys = vm.$options._propKeys = [];
  var isRoot = !vm.$parent;
  // root instance props should be converted
  if (!isRoot) {
    toggleObserving(false);
  }
  var loop = function ( key ) {
    keys.push(key);
    var value = validateProp(key, propsOptions, propsData, vm);
    /* istanbul ignore else */
    if (true) {
      var hyphenatedKey = hyphenate(key);
      if (isReservedAttribute(hyphenatedKey) ||
          config.isReservedAttr(hyphenatedKey)) {
        warn(
          ("\"" + hyphenatedKey + "\" is a reserved attribute and cannot be used as component prop."),
          vm
        );
      }
      defineReactive$$1(props, key, value, function () {
        if (!isRoot && !isUpdatingChildComponent) {
          {
            if(vm.mpHost === 'mp-baidu' || vm.mpHost === 'mp-kuaishou'){//百度、快手 observer 在 setData callback 之后触发，直接忽略该 warn
                return
            }
            //fixed by xxxxxx __next_tick_pending,uni://form-field 时不告警
            if(
                key === 'value' && 
                Array.isArray(vm.$options.behaviors) &&
                vm.$options.behaviors.indexOf('uni://form-field') !== -1
              ){
              return
            }
            if(vm._getFormData){
              return
            }
            var $parent = vm.$parent;
            while($parent){
              if($parent.__next_tick_pending){
                return  
              }
              $parent = $parent.$parent;
            }
          }
          warn(
            "Avoid mutating a prop directly since the value will be " +
            "overwritten whenever the parent component re-renders. " +
            "Instead, use a data or computed property based on the prop's " +
            "value. Prop being mutated: \"" + key + "\"",
            vm
          );
        }
      });
    } else {}
    // static props are already proxied on the component's prototype
    // during Vue.extend(). We only need to proxy props defined at
    // instantiation here.
    if (!(key in vm)) {
      proxy(vm, "_props", key);
    }
  };

  for (var key in propsOptions) loop( key );
  toggleObserving(true);
}

function initData (vm) {
  var data = vm.$options.data;
  data = vm._data = typeof data === 'function'
    ? getData(data, vm)
    : data || {};
  if (!isPlainObject(data)) {
    data = {};
     true && warn(
      'data functions should return an object:\n' +
      'https://vuejs.org/v2/guide/components.html#data-Must-Be-a-Function',
      vm
    );
  }
  // proxy data on instance
  var keys = Object.keys(data);
  var props = vm.$options.props;
  var methods = vm.$options.methods;
  var i = keys.length;
  while (i--) {
    var key = keys[i];
    if (true) {
      if (methods && hasOwn(methods, key)) {
        warn(
          ("Method \"" + key + "\" has already been defined as a data property."),
          vm
        );
      }
    }
    if (props && hasOwn(props, key)) {
       true && warn(
        "The data property \"" + key + "\" is already declared as a prop. " +
        "Use prop default value instead.",
        vm
      );
    } else if (!isReserved(key)) {
      proxy(vm, "_data", key);
    }
  }
  // observe data
  observe(data, true /* asRootData */);
}

function getData (data, vm) {
  // #7573 disable dep collection when invoking data getters
  pushTarget();
  try {
    return data.call(vm, vm)
  } catch (e) {
    handleError(e, vm, "data()");
    return {}
  } finally {
    popTarget();
  }
}

var computedWatcherOptions = { lazy: true };

function initComputed (vm, computed) {
  // $flow-disable-line
  var watchers = vm._computedWatchers = Object.create(null);
  // computed properties are just getters during SSR
  var isSSR = isServerRendering();

  for (var key in computed) {
    var userDef = computed[key];
    var getter = typeof userDef === 'function' ? userDef : userDef.get;
    if ( true && getter == null) {
      warn(
        ("Getter is missing for computed property \"" + key + "\"."),
        vm
      );
    }

    if (!isSSR) {
      // create internal watcher for the computed property.
      watchers[key] = new Watcher(
        vm,
        getter || noop,
        noop,
        computedWatcherOptions
      );
    }

    // component-defined computed properties are already defined on the
    // component prototype. We only need to define computed properties defined
    // at instantiation here.
    if (!(key in vm)) {
      defineComputed(vm, key, userDef);
    } else if (true) {
      if (key in vm.$data) {
        warn(("The computed property \"" + key + "\" is already defined in data."), vm);
      } else if (vm.$options.props && key in vm.$options.props) {
        warn(("The computed property \"" + key + "\" is already defined as a prop."), vm);
      }
    }
  }
}

function defineComputed (
  target,
  key,
  userDef
) {
  var shouldCache = !isServerRendering();
  if (typeof userDef === 'function') {
    sharedPropertyDefinition.get = shouldCache
      ? createComputedGetter(key)
      : createGetterInvoker(userDef);
    sharedPropertyDefinition.set = noop;
  } else {
    sharedPropertyDefinition.get = userDef.get
      ? shouldCache && userDef.cache !== false
        ? createComputedGetter(key)
        : createGetterInvoker(userDef.get)
      : noop;
    sharedPropertyDefinition.set = userDef.set || noop;
  }
  if ( true &&
      sharedPropertyDefinition.set === noop) {
    sharedPropertyDefinition.set = function () {
      warn(
        ("Computed property \"" + key + "\" was assigned to but it has no setter."),
        this
      );
    };
  }
  Object.defineProperty(target, key, sharedPropertyDefinition);
}

function createComputedGetter (key) {
  return function computedGetter () {
    var watcher = this._computedWatchers && this._computedWatchers[key];
    if (watcher) {
      if (watcher.dirty) {
        watcher.evaluate();
      }
      if (Dep.SharedObject.target) {// fixed by xxxxxx
        watcher.depend();
      }
      return watcher.value
    }
  }
}

function createGetterInvoker(fn) {
  return function computedGetter () {
    return fn.call(this, this)
  }
}

function initMethods (vm, methods) {
  var props = vm.$options.props;
  for (var key in methods) {
    if (true) {
      if (typeof methods[key] !== 'function') {
        warn(
          "Method \"" + key + "\" has type \"" + (typeof methods[key]) + "\" in the component definition. " +
          "Did you reference the function correctly?",
          vm
        );
      }
      if (props && hasOwn(props, key)) {
        warn(
          ("Method \"" + key + "\" has already been defined as a prop."),
          vm
        );
      }
      if ((key in vm) && isReserved(key)) {
        warn(
          "Method \"" + key + "\" conflicts with an existing Vue instance method. " +
          "Avoid defining component methods that start with _ or $."
        );
      }
    }
    vm[key] = typeof methods[key] !== 'function' ? noop : bind(methods[key], vm);
  }
}

function initWatch (vm, watch) {
  for (var key in watch) {
    var handler = watch[key];
    if (Array.isArray(handler)) {
      for (var i = 0; i < handler.length; i++) {
        createWatcher(vm, key, handler[i]);
      }
    } else {
      createWatcher(vm, key, handler);
    }
  }
}

function createWatcher (
  vm,
  expOrFn,
  handler,
  options
) {
  if (isPlainObject(handler)) {
    options = handler;
    handler = handler.handler;
  }
  if (typeof handler === 'string') {
    handler = vm[handler];
  }
  return vm.$watch(expOrFn, handler, options)
}

function stateMixin (Vue) {
  // flow somehow has problems with directly declared definition object
  // when using Object.defineProperty, so we have to procedurally build up
  // the object here.
  var dataDef = {};
  dataDef.get = function () { return this._data };
  var propsDef = {};
  propsDef.get = function () { return this._props };
  if (true) {
    dataDef.set = function () {
      warn(
        'Avoid replacing instance root $data. ' +
        'Use nested data properties instead.',
        this
      );
    };
    propsDef.set = function () {
      warn("$props is readonly.", this);
    };
  }
  Object.defineProperty(Vue.prototype, '$data', dataDef);
  Object.defineProperty(Vue.prototype, '$props', propsDef);

  Vue.prototype.$set = set;
  Vue.prototype.$delete = del;

  Vue.prototype.$watch = function (
    expOrFn,
    cb,
    options
  ) {
    var vm = this;
    if (isPlainObject(cb)) {
      return createWatcher(vm, expOrFn, cb, options)
    }
    options = options || {};
    options.user = true;
    var watcher = new Watcher(vm, expOrFn, cb, options);
    if (options.immediate) {
      try {
        cb.call(vm, watcher.value);
      } catch (error) {
        handleError(error, vm, ("callback for immediate watcher \"" + (watcher.expression) + "\""));
      }
    }
    return function unwatchFn () {
      watcher.teardown();
    }
  };
}

/*  */

var uid$3 = 0;

function initMixin (Vue) {
  Vue.prototype._init = function (options) {
    var vm = this;
    // a uid
    vm._uid = uid$3++;

    var startTag, endTag;
    /* istanbul ignore if */
    if ( true && config.performance && mark) {
      startTag = "vue-perf-start:" + (vm._uid);
      endTag = "vue-perf-end:" + (vm._uid);
      mark(startTag);
    }

    // a flag to avoid this being observed
    vm._isVue = true;
    // merge options
    if (options && options._isComponent) {
      // optimize internal component instantiation
      // since dynamic options merging is pretty slow, and none of the
      // internal component options needs special treatment.
      initInternalComponent(vm, options);
    } else {
      vm.$options = mergeOptions(
        resolveConstructorOptions(vm.constructor),
        options || {},
        vm
      );
    }
    /* istanbul ignore else */
    if (true) {
      initProxy(vm);
    } else {}
    // expose real self
    vm._self = vm;
    initLifecycle(vm);
    initEvents(vm);
    initRender(vm);
    callHook(vm, 'beforeCreate');
    !vm._$fallback && initInjections(vm); // resolve injections before data/props  
    initState(vm);
    !vm._$fallback && initProvide(vm); // resolve provide after data/props
    !vm._$fallback && callHook(vm, 'created');      

    /* istanbul ignore if */
    if ( true && config.performance && mark) {
      vm._name = formatComponentName(vm, false);
      mark(endTag);
      measure(("vue " + (vm._name) + " init"), startTag, endTag);
    }

    if (vm.$options.el) {
      vm.$mount(vm.$options.el);
    }
  };
}

function initInternalComponent (vm, options) {
  var opts = vm.$options = Object.create(vm.constructor.options);
  // doing this because it's faster than dynamic enumeration.
  var parentVnode = options._parentVnode;
  opts.parent = options.parent;
  opts._parentVnode = parentVnode;

  var vnodeComponentOptions = parentVnode.componentOptions;
  opts.propsData = vnodeComponentOptions.propsData;
  opts._parentListeners = vnodeComponentOptions.listeners;
  opts._renderChildren = vnodeComponentOptions.children;
  opts._componentTag = vnodeComponentOptions.tag;

  if (options.render) {
    opts.render = options.render;
    opts.staticRenderFns = options.staticRenderFns;
  }
}

function resolveConstructorOptions (Ctor) {
  var options = Ctor.options;
  if (Ctor.super) {
    var superOptions = resolveConstructorOptions(Ctor.super);
    var cachedSuperOptions = Ctor.superOptions;
    if (superOptions !== cachedSuperOptions) {
      // super option changed,
      // need to resolve new options.
      Ctor.superOptions = superOptions;
      // check if there are any late-modified/attached options (#4976)
      var modifiedOptions = resolveModifiedOptions(Ctor);
      // update base extend options
      if (modifiedOptions) {
        extend(Ctor.extendOptions, modifiedOptions);
      }
      options = Ctor.options = mergeOptions(superOptions, Ctor.extendOptions);
      if (options.name) {
        options.components[options.name] = Ctor;
      }
    }
  }
  return options
}

function resolveModifiedOptions (Ctor) {
  var modified;
  var latest = Ctor.options;
  var sealed = Ctor.sealedOptions;
  for (var key in latest) {
    if (latest[key] !== sealed[key]) {
      if (!modified) { modified = {}; }
      modified[key] = latest[key];
    }
  }
  return modified
}

function Vue (options) {
  if ( true &&
    !(this instanceof Vue)
  ) {
    warn('Vue is a constructor and should be called with the `new` keyword');
  }
  this._init(options);
}

initMixin(Vue);
stateMixin(Vue);
eventsMixin(Vue);
lifecycleMixin(Vue);
renderMixin(Vue);

/*  */

function initUse (Vue) {
  Vue.use = function (plugin) {
    var installedPlugins = (this._installedPlugins || (this._installedPlugins = []));
    if (installedPlugins.indexOf(plugin) > -1) {
      return this
    }

    // additional parameters
    var args = toArray(arguments, 1);
    args.unshift(this);
    if (typeof plugin.install === 'function') {
      plugin.install.apply(plugin, args);
    } else if (typeof plugin === 'function') {
      plugin.apply(null, args);
    }
    installedPlugins.push(plugin);
    return this
  };
}

/*  */

function initMixin$1 (Vue) {
  Vue.mixin = function (mixin) {
    this.options = mergeOptions(this.options, mixin);
    return this
  };
}

/*  */

function initExtend (Vue) {
  /**
   * Each instance constructor, including Vue, has a unique
   * cid. This enables us to create wrapped "child
   * constructors" for prototypal inheritance and cache them.
   */
  Vue.cid = 0;
  var cid = 1;

  /**
   * Class inheritance
   */
  Vue.extend = function (extendOptions) {
    extendOptions = extendOptions || {};
    var Super = this;
    var SuperId = Super.cid;
    var cachedCtors = extendOptions._Ctor || (extendOptions._Ctor = {});
    if (cachedCtors[SuperId]) {
      return cachedCtors[SuperId]
    }

    var name = extendOptions.name || Super.options.name;
    if ( true && name) {
      validateComponentName(name);
    }

    var Sub = function VueComponent (options) {
      this._init(options);
    };
    Sub.prototype = Object.create(Super.prototype);
    Sub.prototype.constructor = Sub;
    Sub.cid = cid++;
    Sub.options = mergeOptions(
      Super.options,
      extendOptions
    );
    Sub['super'] = Super;

    // For props and computed properties, we define the proxy getters on
    // the Vue instances at extension time, on the extended prototype. This
    // avoids Object.defineProperty calls for each instance created.
    if (Sub.options.props) {
      initProps$1(Sub);
    }
    if (Sub.options.computed) {
      initComputed$1(Sub);
    }

    // allow further extension/mixin/plugin usage
    Sub.extend = Super.extend;
    Sub.mixin = Super.mixin;
    Sub.use = Super.use;

    // create asset registers, so extended classes
    // can have their private assets too.
    ASSET_TYPES.forEach(function (type) {
      Sub[type] = Super[type];
    });
    // enable recursive self-lookup
    if (name) {
      Sub.options.components[name] = Sub;
    }

    // keep a reference to the super options at extension time.
    // later at instantiation we can check if Super's options have
    // been updated.
    Sub.superOptions = Super.options;
    Sub.extendOptions = extendOptions;
    Sub.sealedOptions = extend({}, Sub.options);

    // cache constructor
    cachedCtors[SuperId] = Sub;
    return Sub
  };
}

function initProps$1 (Comp) {
  var props = Comp.options.props;
  for (var key in props) {
    proxy(Comp.prototype, "_props", key);
  }
}

function initComputed$1 (Comp) {
  var computed = Comp.options.computed;
  for (var key in computed) {
    defineComputed(Comp.prototype, key, computed[key]);
  }
}

/*  */

function initAssetRegisters (Vue) {
  /**
   * Create asset registration methods.
   */
  ASSET_TYPES.forEach(function (type) {
    Vue[type] = function (
      id,
      definition
    ) {
      if (!definition) {
        return this.options[type + 's'][id]
      } else {
        /* istanbul ignore if */
        if ( true && type === 'component') {
          validateComponentName(id);
        }
        if (type === 'component' && isPlainObject(definition)) {
          definition.name = definition.name || id;
          definition = this.options._base.extend(definition);
        }
        if (type === 'directive' && typeof definition === 'function') {
          definition = { bind: definition, update: definition };
        }
        this.options[type + 's'][id] = definition;
        return definition
      }
    };
  });
}

/*  */



function getComponentName (opts) {
  return opts && (opts.Ctor.options.name || opts.tag)
}

function matches (pattern, name) {
  if (Array.isArray(pattern)) {
    return pattern.indexOf(name) > -1
  } else if (typeof pattern === 'string') {
    return pattern.split(',').indexOf(name) > -1
  } else if (isRegExp(pattern)) {
    return pattern.test(name)
  }
  /* istanbul ignore next */
  return false
}

function pruneCache (keepAliveInstance, filter) {
  var cache = keepAliveInstance.cache;
  var keys = keepAliveInstance.keys;
  var _vnode = keepAliveInstance._vnode;
  for (var key in cache) {
    var cachedNode = cache[key];
    if (cachedNode) {
      var name = getComponentName(cachedNode.componentOptions);
      if (name && !filter(name)) {
        pruneCacheEntry(cache, key, keys, _vnode);
      }
    }
  }
}

function pruneCacheEntry (
  cache,
  key,
  keys,
  current
) {
  var cached$$1 = cache[key];
  if (cached$$1 && (!current || cached$$1.tag !== current.tag)) {
    cached$$1.componentInstance.$destroy();
  }
  cache[key] = null;
  remove(keys, key);
}

var patternTypes = [String, RegExp, Array];

var KeepAlive = {
  name: 'keep-alive',
  abstract: true,

  props: {
    include: patternTypes,
    exclude: patternTypes,
    max: [String, Number]
  },

  created: function created () {
    this.cache = Object.create(null);
    this.keys = [];
  },

  destroyed: function destroyed () {
    for (var key in this.cache) {
      pruneCacheEntry(this.cache, key, this.keys);
    }
  },

  mounted: function mounted () {
    var this$1 = this;

    this.$watch('include', function (val) {
      pruneCache(this$1, function (name) { return matches(val, name); });
    });
    this.$watch('exclude', function (val) {
      pruneCache(this$1, function (name) { return !matches(val, name); });
    });
  },

  render: function render () {
    var slot = this.$slots.default;
    var vnode = getFirstComponentChild(slot);
    var componentOptions = vnode && vnode.componentOptions;
    if (componentOptions) {
      // check pattern
      var name = getComponentName(componentOptions);
      var ref = this;
      var include = ref.include;
      var exclude = ref.exclude;
      if (
        // not included
        (include && (!name || !matches(include, name))) ||
        // excluded
        (exclude && name && matches(exclude, name))
      ) {
        return vnode
      }

      var ref$1 = this;
      var cache = ref$1.cache;
      var keys = ref$1.keys;
      var key = vnode.key == null
        // same constructor may get registered as different local components
        // so cid alone is not enough (#3269)
        ? componentOptions.Ctor.cid + (componentOptions.tag ? ("::" + (componentOptions.tag)) : '')
        : vnode.key;
      if (cache[key]) {
        vnode.componentInstance = cache[key].componentInstance;
        // make current key freshest
        remove(keys, key);
        keys.push(key);
      } else {
        cache[key] = vnode;
        keys.push(key);
        // prune oldest entry
        if (this.max && keys.length > parseInt(this.max)) {
          pruneCacheEntry(cache, keys[0], keys, this._vnode);
        }
      }

      vnode.data.keepAlive = true;
    }
    return vnode || (slot && slot[0])
  }
};

var builtInComponents = {
  KeepAlive: KeepAlive
};

/*  */

function initGlobalAPI (Vue) {
  // config
  var configDef = {};
  configDef.get = function () { return config; };
  if (true) {
    configDef.set = function () {
      warn(
        'Do not replace the Vue.config object, set individual fields instead.'
      );
    };
  }
  Object.defineProperty(Vue, 'config', configDef);

  // exposed util methods.
  // NOTE: these are not considered part of the public API - avoid relying on
  // them unless you are aware of the risk.
  Vue.util = {
    warn: warn,
    extend: extend,
    mergeOptions: mergeOptions,
    defineReactive: defineReactive$$1
  };

  Vue.set = set;
  Vue.delete = del;
  Vue.nextTick = nextTick;

  // 2.6 explicit observable API
  Vue.observable = function (obj) {
    observe(obj);
    return obj
  };

  Vue.options = Object.create(null);
  ASSET_TYPES.forEach(function (type) {
    Vue.options[type + 's'] = Object.create(null);
  });

  // this is used to identify the "base" constructor to extend all plain-object
  // components with in Weex's multi-instance scenarios.
  Vue.options._base = Vue;

  extend(Vue.options.components, builtInComponents);

  initUse(Vue);
  initMixin$1(Vue);
  initExtend(Vue);
  initAssetRegisters(Vue);
}

initGlobalAPI(Vue);

Object.defineProperty(Vue.prototype, '$isServer', {
  get: isServerRendering
});

Object.defineProperty(Vue.prototype, '$ssrContext', {
  get: function get () {
    /* istanbul ignore next */
    return this.$vnode && this.$vnode.ssrContext
  }
});

// expose FunctionalRenderContext for ssr runtime helper installation
Object.defineProperty(Vue, 'FunctionalRenderContext', {
  value: FunctionalRenderContext
});

Vue.version = '2.6.11';

/**
 * https://raw.githubusercontent.com/Tencent/westore/master/packages/westore/utils/diff.js
 */
var ARRAYTYPE = '[object Array]';
var OBJECTTYPE = '[object Object]';
// const FUNCTIONTYPE = '[object Function]'

function diff(current, pre) {
    var result = {};
    syncKeys(current, pre);
    _diff(current, pre, '', result);
    return result
}

function syncKeys(current, pre) {
    if (current === pre) { return }
    var rootCurrentType = type(current);
    var rootPreType = type(pre);
    if (rootCurrentType == OBJECTTYPE && rootPreType == OBJECTTYPE) {
        if(Object.keys(current).length >= Object.keys(pre).length){
            for (var key in pre) {
                var currentValue = current[key];
                if (currentValue === undefined) {
                    current[key] = null;
                } else {
                    syncKeys(currentValue, pre[key]);
                }
            }
        }
    } else if (rootCurrentType == ARRAYTYPE && rootPreType == ARRAYTYPE) {
        if (current.length >= pre.length) {
            pre.forEach(function (item, index) {
                syncKeys(current[index], item);
            });
        }
    }
}

function _diff(current, pre, path, result) {
    if (current === pre) { return }
    var rootCurrentType = type(current);
    var rootPreType = type(pre);
    if (rootCurrentType == OBJECTTYPE) {
        if (rootPreType != OBJECTTYPE || Object.keys(current).length < Object.keys(pre).length) {
            setResult(result, path, current);
        } else {
            var loop = function ( key ) {
                var currentValue = current[key];
                var preValue = pre[key];
                var currentType = type(currentValue);
                var preType = type(preValue);
                if (currentType != ARRAYTYPE && currentType != OBJECTTYPE) {
                    // NOTE 此处将 != 修改为 !==。涉及地方太多恐怕测试不到，如果出现数据对比问题，将其修改回来。
                    if (currentValue !== pre[key]) {
                        setResult(result, (path == '' ? '' : path + ".") + key, currentValue);
                    }
                } else if (currentType == ARRAYTYPE) {
                    if (preType != ARRAYTYPE) {
                        setResult(result, (path == '' ? '' : path + ".") + key, currentValue);
                    } else {
                        if (currentValue.length < preValue.length) {
                            setResult(result, (path == '' ? '' : path + ".") + key, currentValue);
                        } else {
                            currentValue.forEach(function (item, index) {
                                _diff(item, preValue[index], (path == '' ? '' : path + ".") + key + '[' + index + ']', result);
                            });
                        }
                    }
                } else if (currentType == OBJECTTYPE) {
                    if (preType != OBJECTTYPE || Object.keys(currentValue).length < Object.keys(preValue).length) {
                        setResult(result, (path == '' ? '' : path + ".") + key, currentValue);
                    } else {
                        for (var subKey in currentValue) {
                            _diff(currentValue[subKey], preValue[subKey], (path == '' ? '' : path + ".") + key + '.' + subKey, result);
                        }
                    }
                }
            };

            for (var key in current) loop( key );
        }
    } else if (rootCurrentType == ARRAYTYPE) {
        if (rootPreType != ARRAYTYPE) {
            setResult(result, path, current);
        } else {
            if (current.length < pre.length) {
                setResult(result, path, current);
            } else {
                current.forEach(function (item, index) {
                    _diff(item, pre[index], path + '[' + index + ']', result);
                });
            }
        }
    } else {
        setResult(result, path, current);
    }
}

function setResult(result, k, v) {
    // if (type(v) != FUNCTIONTYPE) {
        result[k] = v;
    // }
}

function type(obj) {
    return Object.prototype.toString.call(obj)
}

/*  */

function flushCallbacks$1(vm) {
    if (vm.__next_tick_callbacks && vm.__next_tick_callbacks.length) {
        if (Object({"NODE_ENV":"development","VUE_APP_NAME":"shop","VUE_APP_PLATFORM":"mp-weixin","BASE_URL":"/"}).VUE_APP_DEBUG) {
            var mpInstance = vm.$scope;
            console.log('[' + (+new Date) + '][' + (mpInstance.is || mpInstance.route) + '][' + vm._uid +
                ']:flushCallbacks[' + vm.__next_tick_callbacks.length + ']');
        }
        var copies = vm.__next_tick_callbacks.slice(0);
        vm.__next_tick_callbacks.length = 0;
        for (var i = 0; i < copies.length; i++) {
            copies[i]();
        }
    }
}

function hasRenderWatcher(vm) {
    return queue.find(function (watcher) { return vm._watcher === watcher; })
}

function nextTick$1(vm, cb) {
    //1.nextTick 之前 已 setData 且 setData 还未回调完成
    //2.nextTick 之前存在 render watcher
    if (!vm.__next_tick_pending && !hasRenderWatcher(vm)) {
        if(Object({"NODE_ENV":"development","VUE_APP_NAME":"shop","VUE_APP_PLATFORM":"mp-weixin","BASE_URL":"/"}).VUE_APP_DEBUG){
            var mpInstance = vm.$scope;
            console.log('[' + (+new Date) + '][' + (mpInstance.is || mpInstance.route) + '][' + vm._uid +
                ']:nextVueTick');
        }
        return nextTick(cb, vm)
    }else{
        if(Object({"NODE_ENV":"development","VUE_APP_NAME":"shop","VUE_APP_PLATFORM":"mp-weixin","BASE_URL":"/"}).VUE_APP_DEBUG){
            var mpInstance$1 = vm.$scope;
            console.log('[' + (+new Date) + '][' + (mpInstance$1.is || mpInstance$1.route) + '][' + vm._uid +
                ']:nextMPTick');
        }
    }
    var _resolve;
    if (!vm.__next_tick_callbacks) {
        vm.__next_tick_callbacks = [];
    }
    vm.__next_tick_callbacks.push(function () {
        if (cb) {
            try {
                cb.call(vm);
            } catch (e) {
                handleError(e, vm, 'nextTick');
            }
        } else if (_resolve) {
            _resolve(vm);
        }
    });
    // $flow-disable-line
    if (!cb && typeof Promise !== 'undefined') {
        return new Promise(function (resolve) {
            _resolve = resolve;
        })
    }
}

/*  */

function cloneWithData(vm) {
  // 确保当前 vm 所有数据被同步
  var ret = Object.create(null);
  var dataKeys = [].concat(
    Object.keys(vm._data || {}),
    Object.keys(vm._computedWatchers || {}));

  dataKeys.reduce(function(ret, key) {
    ret[key] = vm[key];
    return ret
  }, ret);

  // vue-composition-api
  var compositionApiState = vm.__composition_api_state__ || vm.__secret_vfa_state__;
  var rawBindings = compositionApiState && compositionApiState.rawBindings;
  if (rawBindings) {
    Object.keys(rawBindings).forEach(function (key) {
      ret[key] = vm[key];
    });
  }

  //TODO 需要把无用数据处理掉，比如 list=>l0 则 list 需要移除，否则多传输一份数据
  Object.assign(ret, vm.$mp.data || {});
  if (
    Array.isArray(vm.$options.behaviors) &&
    vm.$options.behaviors.indexOf('uni://form-field') !== -1
  ) { //form-field
    ret['name'] = vm.name;
    ret['value'] = vm.value;
  }

  return JSON.parse(JSON.stringify(ret))
}

var patch = function(oldVnode, vnode) {
  var this$1 = this;

  if (vnode === null) { //destroy
    return
  }
  if (this.mpType === 'page' || this.mpType === 'component') {
    var mpInstance = this.$scope;
    var data = Object.create(null);
    try {
      data = cloneWithData(this);
    } catch (err) {
      console.error(err);
    }
    data.__webviewId__ = mpInstance.data.__webviewId__;
    var mpData = Object.create(null);
    Object.keys(data).forEach(function (key) { //仅同步 data 中有的数据
      mpData[key] = mpInstance.data[key];
    });
    var diffData = this.$shouldDiffData === false ? data : diff(data, mpData);
    if (Object.keys(diffData).length) {
      if (Object({"NODE_ENV":"development","VUE_APP_NAME":"shop","VUE_APP_PLATFORM":"mp-weixin","BASE_URL":"/"}).VUE_APP_DEBUG) {
        console.log('[' + (+new Date) + '][' + (mpInstance.is || mpInstance.route) + '][' + this._uid +
          ']差量更新',
          JSON.stringify(diffData));
      }
      this.__next_tick_pending = true;
      mpInstance.setData(diffData, function () {
        this$1.__next_tick_pending = false;
        flushCallbacks$1(this$1);
      });
    } else {
      flushCallbacks$1(this);
    }
  }
};

/*  */

function createEmptyRender() {

}

function mountComponent$1(
  vm,
  el,
  hydrating
) {
  if (!vm.mpType) {//main.js 中的 new Vue
    return vm
  }
  if (vm.mpType === 'app') {
    vm.$options.render = createEmptyRender;
  }
  if (!vm.$options.render) {
    vm.$options.render = createEmptyRender;
    if (true) {
      /* istanbul ignore if */
      if ((vm.$options.template && vm.$options.template.charAt(0) !== '#') ||
        vm.$options.el || el) {
        warn(
          'You are using the runtime-only build of Vue where the template ' +
          'compiler is not available. Either pre-compile the templates into ' +
          'render functions, or use the compiler-included build.',
          vm
        );
      } else {
        warn(
          'Failed to mount component: template or render function not defined.',
          vm
        );
      }
    }
  }
  
  !vm._$fallback && callHook(vm, 'beforeMount');

  var updateComponent = function () {
    vm._update(vm._render(), hydrating);
  };

  // we set this to vm._watcher inside the watcher's constructor
  // since the watcher's initial patch may call $forceUpdate (e.g. inside child
  // component's mounted hook), which relies on vm._watcher being already defined
  new Watcher(vm, updateComponent, noop, {
    before: function before() {
      if (vm._isMounted && !vm._isDestroyed) {
        callHook(vm, 'beforeUpdate');
      }
    }
  }, true /* isRenderWatcher */);
  hydrating = false;
  return vm
}

/*  */

function renderClass (
  staticClass,
  dynamicClass
) {
  if (isDef(staticClass) || isDef(dynamicClass)) {
    return concat(staticClass, stringifyClass(dynamicClass))
  }
  /* istanbul ignore next */
  return ''
}

function concat (a, b) {
  return a ? b ? (a + ' ' + b) : a : (b || '')
}

function stringifyClass (value) {
  if (Array.isArray(value)) {
    return stringifyArray(value)
  }
  if (isObject(value)) {
    return stringifyObject(value)
  }
  if (typeof value === 'string') {
    return value
  }
  /* istanbul ignore next */
  return ''
}

function stringifyArray (value) {
  var res = '';
  var stringified;
  for (var i = 0, l = value.length; i < l; i++) {
    if (isDef(stringified = stringifyClass(value[i])) && stringified !== '') {
      if (res) { res += ' '; }
      res += stringified;
    }
  }
  return res
}

function stringifyObject (value) {
  var res = '';
  for (var key in value) {
    if (value[key]) {
      if (res) { res += ' '; }
      res += key;
    }
  }
  return res
}

/*  */

var parseStyleText = cached(function (cssText) {
  var res = {};
  var listDelimiter = /;(?![^(]*\))/g;
  var propertyDelimiter = /:(.+)/;
  cssText.split(listDelimiter).forEach(function (item) {
    if (item) {
      var tmp = item.split(propertyDelimiter);
      tmp.length > 1 && (res[tmp[0].trim()] = tmp[1].trim());
    }
  });
  return res
});

// normalize possible array / string values into Object
function normalizeStyleBinding (bindingStyle) {
  if (Array.isArray(bindingStyle)) {
    return toObject(bindingStyle)
  }
  if (typeof bindingStyle === 'string') {
    return parseStyleText(bindingStyle)
  }
  return bindingStyle
}

/*  */

var MP_METHODS = ['createSelectorQuery', 'createIntersectionObserver', 'selectAllComponents', 'selectComponent'];

function getTarget(obj, path) {
  var parts = path.split('.');
  var key = parts[0];
  if (key.indexOf('__$n') === 0) { //number index
    key = parseInt(key.replace('__$n', ''));
  }
  if (parts.length === 1) {
    return obj[key]
  }
  return getTarget(obj[key], parts.slice(1).join('.'))
}

function internalMixin(Vue) {

  Vue.config.errorHandler = function(err, vm, info) {
    Vue.util.warn(("Error in " + info + ": \"" + (err.toString()) + "\""), vm);
    console.error(err);
    /* eslint-disable no-undef */
    var app = typeof getApp === 'function' && getApp();
    if (app && app.onError) {
      app.onError(err);
    }
  };

  var oldEmit = Vue.prototype.$emit;

  Vue.prototype.$emit = function(event) {
    if (this.$scope && event) {
      this.$scope['triggerEvent'](event, {
        __args__: toArray(arguments, 1)
      });
    }
    return oldEmit.apply(this, arguments)
  };

  Vue.prototype.$nextTick = function(fn) {
    return nextTick$1(this, fn)
  };

  MP_METHODS.forEach(function (method) {
    Vue.prototype[method] = function(args) {
      if (this.$scope && this.$scope[method]) {
        return this.$scope[method](args)
      }
      // mp-alipay
      if (typeof my === 'undefined') {
        return
      }
      if (method === 'createSelectorQuery') {
        /* eslint-disable no-undef */
        return my.createSelectorQuery(args)
      } else if (method === 'createIntersectionObserver') {
        /* eslint-disable no-undef */
        return my.createIntersectionObserver(args)
      }
      // TODO mp-alipay 暂不支持 selectAllComponents,selectComponent
    };
  });

  Vue.prototype.__init_provide = initProvide;

  Vue.prototype.__init_injections = initInjections;

  Vue.prototype.__call_hook = function(hook, args) {
    var vm = this;
    // #7573 disable dep collection when invoking lifecycle hooks
    pushTarget();
    var handlers = vm.$options[hook];
    var info = hook + " hook";
    var ret;
    if (handlers) {
      for (var i = 0, j = handlers.length; i < j; i++) {
        ret = invokeWithErrorHandling(handlers[i], vm, args ? [args] : null, vm, info);
      }
    }
    if (vm._hasHookEvent) {
      vm.$emit('hook:' + hook, args);
    }
    popTarget();
    return ret
  };

  Vue.prototype.__set_model = function(target, key, value, modifiers) {
    if (Array.isArray(modifiers)) {
      if (modifiers.indexOf('trim') !== -1) {
        value = value.trim();
      }
      if (modifiers.indexOf('number') !== -1) {
        value = this._n(value);
      }
    }
    if (!target) {
      target = this;
    }
    target[key] = value;
  };

  Vue.prototype.__set_sync = function(target, key, value) {
    if (!target) {
      target = this;
    }
    target[key] = value;
  };

  Vue.prototype.__get_orig = function(item) {
    if (isPlainObject(item)) {
      return item['$orig'] || item
    }
    return item
  };

  Vue.prototype.__get_value = function(dataPath, target) {
    return getTarget(target || this, dataPath)
  };


  Vue.prototype.__get_class = function(dynamicClass, staticClass) {
    return renderClass(staticClass, dynamicClass)
  };

  Vue.prototype.__get_style = function(dynamicStyle, staticStyle) {
    if (!dynamicStyle && !staticStyle) {
      return ''
    }
    var dynamicStyleObj = normalizeStyleBinding(dynamicStyle);
    var styleObj = staticStyle ? extend(staticStyle, dynamicStyleObj) : dynamicStyleObj;
    return Object.keys(styleObj).map(function (name) { return ((hyphenate(name)) + ":" + (styleObj[name])); }).join(';')
  };

  Vue.prototype.__map = function(val, iteratee) {
    //TODO 暂不考虑 string
    var ret, i, l, keys, key;
    if (Array.isArray(val)) {
      ret = new Array(val.length);
      for (i = 0, l = val.length; i < l; i++) {
        ret[i] = iteratee(val[i], i);
      }
      return ret
    } else if (isObject(val)) {
      keys = Object.keys(val);
      ret = Object.create(null);
      for (i = 0, l = keys.length; i < l; i++) {
        key = keys[i];
        ret[key] = iteratee(val[key], key, i);
      }
      return ret
    } else if (typeof val === 'number') {
      ret = new Array(val);
      for (i = 0, l = val; i < l; i++) {
        // 第一个参数暂时仍和小程序一致
        ret[i] = iteratee(i, i);
      }
      return ret
    }
    return []
  };

}

/*  */

var LIFECYCLE_HOOKS$1 = [
    //App
    'onLaunch',
    'onShow',
    'onHide',
    'onUniNViewMessage',
    'onPageNotFound',
    'onThemeChange',
    'onError',
    'onUnhandledRejection',
    //Page
    'onInit',
    'onLoad',
    // 'onShow',
    'onReady',
    // 'onHide',
    'onUnload',
    'onPullDownRefresh',
    'onReachBottom',
    'onTabItemTap',
    'onAddToFavorites',
    'onShareTimeline',
    'onShareAppMessage',
    'onResize',
    'onPageScroll',
    'onNavigationBarButtonTap',
    'onBackPress',
    'onNavigationBarSearchInputChanged',
    'onNavigationBarSearchInputConfirmed',
    'onNavigationBarSearchInputClicked',
    //Component
    // 'onReady', // 兼容旧版本，应该移除该事件
    'onPageShow',
    'onPageHide',
    'onPageResize'
];
function lifecycleMixin$1(Vue) {

    //fixed vue-class-component
    var oldExtend = Vue.extend;
    Vue.extend = function(extendOptions) {
        extendOptions = extendOptions || {};

        var methods = extendOptions.methods;
        if (methods) {
            Object.keys(methods).forEach(function (methodName) {
                if (LIFECYCLE_HOOKS$1.indexOf(methodName)!==-1) {
                    extendOptions[methodName] = methods[methodName];
                    delete methods[methodName];
                }
            });
        }

        return oldExtend.call(this, extendOptions)
    };

    var strategies = Vue.config.optionMergeStrategies;
    var mergeHook = strategies.created;
    LIFECYCLE_HOOKS$1.forEach(function (hook) {
        strategies[hook] = mergeHook;
    });

    Vue.prototype.__lifecycle_hooks__ = LIFECYCLE_HOOKS$1;
}

/*  */

// install platform patch function
Vue.prototype.__patch__ = patch;

// public mount method
Vue.prototype.$mount = function(
    el ,
    hydrating 
) {
    return mountComponent$1(this, el, hydrating)
};

lifecycleMixin$1(Vue);
internalMixin(Vue);

/*  */

/* harmony default export */ __webpack_exports__["default"] = (Vue);

/* WEBPACK VAR INJECTION */}.call(this, __webpack_require__(/*! ./../../../../../webpack/buildin/global.js */ 2)))

/***/ }),
/* 4 */
/*!*************************************************************!*\
  !*** ./node_modules/@dcloudio/uni-i18n/dist/uni-i18n.es.js ***!
  \*************************************************************/
/*! no static exports found */
/***/ (function(module, exports, __webpack_require__) {

"use strict";
/* WEBPACK VAR INJECTION */(function(uni, global) {Object.defineProperty(exports, "__esModule", { value: true });exports.compileI18nJsonStr = compileI18nJsonStr;exports.hasI18nJson = hasI18nJson;exports.initVueI18n = initVueI18n;exports.isI18nStr = isI18nStr;exports.normalizeLocale = normalizeLocale;exports.parseI18nJson = parseI18nJson;exports.resolveLocale = resolveLocale;exports.isString = exports.LOCALE_ZH_HANT = exports.LOCALE_ZH_HANS = exports.LOCALE_FR = exports.LOCALE_ES = exports.LOCALE_EN = exports.I18n = exports.Formatter = void 0;function _slicedToArray(arr, i) {return _arrayWithHoles(arr) || _iterableToArrayLimit(arr, i) || _unsupportedIterableToArray(arr, i) || _nonIterableRest();}function _nonIterableRest() {throw new TypeError("Invalid attempt to destructure non-iterable instance.\nIn order to be iterable, non-array objects must have a [Symbol.iterator]() method.");}function _unsupportedIterableToArray(o, minLen) {if (!o) return;if (typeof o === "string") return _arrayLikeToArray(o, minLen);var n = Object.prototype.toString.call(o).slice(8, -1);if (n === "Object" && o.constructor) n = o.constructor.name;if (n === "Map" || n === "Set") return Array.from(o);if (n === "Arguments" || /^(?:Ui|I)nt(?:8|16|32)(?:Clamped)?Array$/.test(n)) return _arrayLikeToArray(o, minLen);}function _arrayLikeToArray(arr, len) {if (len == null || len > arr.length) len = arr.length;for (var i = 0, arr2 = new Array(len); i < len; i++) {arr2[i] = arr[i];}return arr2;}function _iterableToArrayLimit(arr, i) {if (typeof Symbol === "undefined" || !(Symbol.iterator in Object(arr))) return;var _arr = [];var _n = true;var _d = false;var _e = undefined;try {for (var _i = arr[Symbol.iterator](), _s; !(_n = (_s = _i.next()).done); _n = true) {_arr.push(_s.value);if (i && _arr.length === i) break;}} catch (err) {_d = true;_e = err;} finally {try {if (!_n && _i["return"] != null) _i["return"]();} finally {if (_d) throw _e;}}return _arr;}function _arrayWithHoles(arr) {if (Array.isArray(arr)) return arr;}function _classCallCheck(instance, Constructor) {if (!(instance instanceof Constructor)) {throw new TypeError("Cannot call a class as a function");}}function _defineProperties(target, props) {for (var i = 0; i < props.length; i++) {var descriptor = props[i];descriptor.enumerable = descriptor.enumerable || false;descriptor.configurable = true;if ("value" in descriptor) descriptor.writable = true;Object.defineProperty(target, descriptor.key, descriptor);}}function _createClass(Constructor, protoProps, staticProps) {if (protoProps) _defineProperties(Constructor.prototype, protoProps);if (staticProps) _defineProperties(Constructor, staticProps);return Constructor;}var isArray = Array.isArray;
var isObject = function isObject(val) {return val !== null && typeof val === 'object';};
var defaultDelimiters = ['{', '}'];var
BaseFormatter = /*#__PURE__*/function () {
  function BaseFormatter() {_classCallCheck(this, BaseFormatter);
    this._caches = Object.create(null);
  }_createClass(BaseFormatter, [{ key: "interpolate", value: function interpolate(
    message, values) {var delimiters = arguments.length > 2 && arguments[2] !== undefined ? arguments[2] : defaultDelimiters;
      if (!values) {
        return [message];
      }
      var tokens = this._caches[message];
      if (!tokens) {
        tokens = parse(message, delimiters);
        this._caches[message] = tokens;
      }
      return compile(tokens, values);
    } }]);return BaseFormatter;}();exports.Formatter = BaseFormatter;

var RE_TOKEN_LIST_VALUE = /^(?:\d)+/;
var RE_TOKEN_NAMED_VALUE = /^(?:\w)+/;
function parse(format, _ref) {var _ref2 = _slicedToArray(_ref, 2),startDelimiter = _ref2[0],endDelimiter = _ref2[1];
  var tokens = [];
  var position = 0;
  var text = '';
  while (position < format.length) {
    var char = format[position++];
    if (char === startDelimiter) {
      if (text) {
        tokens.push({ type: 'text', value: text });
      }
      text = '';
      var sub = '';
      char = format[position++];
      while (char !== undefined && char !== endDelimiter) {
        sub += char;
        char = format[position++];
      }
      var isClosed = char === endDelimiter;
      var type = RE_TOKEN_LIST_VALUE.test(sub) ?
      'list' :
      isClosed && RE_TOKEN_NAMED_VALUE.test(sub) ?
      'named' :
      'unknown';
      tokens.push({ value: sub, type: type });
    }
    //  else if (char === '%') {
    //   // when found rails i18n syntax, skip text capture
    //   if (format[position] !== '{') {
    //     text += char
    //   }
    // }
    else {
        text += char;
      }
  }
  text && tokens.push({ type: 'text', value: text });
  return tokens;
}
function compile(tokens, values) {
  var compiled = [];
  var index = 0;
  var mode = isArray(values) ?
  'list' :
  isObject(values) ?
  'named' :
  'unknown';
  if (mode === 'unknown') {
    return compiled;
  }
  while (index < tokens.length) {
    var token = tokens[index];
    switch (token.type) {
      case 'text':
        compiled.push(token.value);
        break;
      case 'list':
        compiled.push(values[parseInt(token.value, 10)]);
        break;
      case 'named':
        if (mode === 'named') {
          compiled.push(values[token.value]);
        } else
        {
          if (true) {
            console.warn("Type of token '".concat(token.type, "' and format of value '").concat(mode, "' don't match!"));
          }
        }
        break;
      case 'unknown':
        if (true) {
          console.warn("Detect 'unknown' type of token!");
        }
        break;}

    index++;
  }
  return compiled;
}

var LOCALE_ZH_HANS = 'zh-Hans';exports.LOCALE_ZH_HANS = LOCALE_ZH_HANS;
var LOCALE_ZH_HANT = 'zh-Hant';exports.LOCALE_ZH_HANT = LOCALE_ZH_HANT;
var LOCALE_EN = 'en';exports.LOCALE_EN = LOCALE_EN;
var LOCALE_FR = 'fr';exports.LOCALE_FR = LOCALE_FR;
var LOCALE_ES = 'es';exports.LOCALE_ES = LOCALE_ES;
var hasOwnProperty = Object.prototype.hasOwnProperty;
var hasOwn = function hasOwn(val, key) {return hasOwnProperty.call(val, key);};
var defaultFormatter = new BaseFormatter();
function include(str, parts) {
  return !!parts.find(function (part) {return str.indexOf(part) !== -1;});
}
function startsWith(str, parts) {
  return parts.find(function (part) {return str.indexOf(part) === 0;});
}
function normalizeLocale(locale, messages) {
  if (!locale) {
    return;
  }
  locale = locale.trim().replace(/_/g, '-');
  if (messages && messages[locale]) {
    return locale;
  }
  locale = locale.toLowerCase();
  if (locale.indexOf('zh') === 0) {
    if (locale.indexOf('-hans') > -1) {
      return LOCALE_ZH_HANS;
    }
    if (locale.indexOf('-hant') > -1) {
      return LOCALE_ZH_HANT;
    }
    if (include(locale, ['-tw', '-hk', '-mo', '-cht'])) {
      return LOCALE_ZH_HANT;
    }
    return LOCALE_ZH_HANS;
  }
  var lang = startsWith(locale, [LOCALE_EN, LOCALE_FR, LOCALE_ES]);
  if (lang) {
    return lang;
  }
}var
I18n = /*#__PURE__*/function () {
  function I18n(_ref3) {var locale = _ref3.locale,fallbackLocale = _ref3.fallbackLocale,messages = _ref3.messages,watcher = _ref3.watcher,formater = _ref3.formater;_classCallCheck(this, I18n);
    this.locale = LOCALE_EN;
    this.fallbackLocale = LOCALE_EN;
    this.message = {};
    this.messages = {};
    this.watchers = [];
    if (fallbackLocale) {
      this.fallbackLocale = fallbackLocale;
    }
    this.formater = formater || defaultFormatter;
    this.messages = messages || {};
    this.setLocale(locale || LOCALE_EN);
    if (watcher) {
      this.watchLocale(watcher);
    }
  }_createClass(I18n, [{ key: "setLocale", value: function setLocale(
    locale) {var _this = this;
      var oldLocale = this.locale;
      this.locale = normalizeLocale(locale, this.messages) || this.fallbackLocale;
      if (!this.messages[this.locale]) {
        // 可能初始化时不存在
        this.messages[this.locale] = {};
      }
      this.message = this.messages[this.locale];
      // 仅发生变化时，通知
      if (oldLocale !== this.locale) {
        this.watchers.forEach(function (watcher) {
          watcher(_this.locale, oldLocale);
        });
      }
    } }, { key: "getLocale", value: function getLocale()
    {
      return this.locale;
    } }, { key: "watchLocale", value: function watchLocale(
    fn) {var _this2 = this;
      var index = this.watchers.push(fn) - 1;
      return function () {
        _this2.watchers.splice(index, 1);
      };
    } }, { key: "add", value: function add(
    locale, message) {var override = arguments.length > 2 && arguments[2] !== undefined ? arguments[2] : true;
      var curMessages = this.messages[locale];
      if (curMessages) {
        if (override) {
          Object.assign(curMessages, message);
        } else
        {
          Object.keys(message).forEach(function (key) {
            if (!hasOwn(curMessages, key)) {
              curMessages[key] = message[key];
            }
          });
        }
      } else
      {
        this.messages[locale] = message;
      }
    } }, { key: "f", value: function f(
    message, values, delimiters) {
      return this.formater.interpolate(message, values, delimiters).join('');
    } }, { key: "t", value: function t(
    key, locale, values) {
      var message = this.message;
      if (typeof locale === 'string') {
        locale = normalizeLocale(locale, this.messages);
        locale && (message = this.messages[locale]);
      } else
      {
        values = locale;
      }
      if (!hasOwn(message, key)) {
        console.warn("Cannot translate the value of keypath ".concat(key, ". Use the value of keypath as default."));
        return key;
      }
      return this.formater.interpolate(message[key], values).join('');
    } }]);return I18n;}();exports.I18n = I18n;


function watchAppLocale(appVm, i18n) {
  // 需要保证 watch 的触发在组件渲染之前
  if (appVm.$watchLocale) {
    // vue2
    appVm.$watchLocale(function (newLocale) {
      i18n.setLocale(newLocale);
    });
  } else
  {
    appVm.$watch(function () {return appVm.$locale;}, function (newLocale) {
      i18n.setLocale(newLocale);
    });
  }
}
function getDefaultLocale() {
  if (typeof uni !== 'undefined' && uni.getLocale) {
    return uni.getLocale();
  }
  // 小程序平台，uni 和 uni-i18n 互相引用，导致访问不到 uni，故在 global 上挂了 getLocale
  if (typeof global !== 'undefined' && global.getLocale) {
    return global.getLocale();
  }
  return LOCALE_EN;
}
function initVueI18n(locale) {var messages = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : {};var fallbackLocale = arguments.length > 2 ? arguments[2] : undefined;var watcher = arguments.length > 3 ? arguments[3] : undefined;
  // 兼容旧版本入参
  if (typeof locale !== 'string') {var _ref4 =
    [
    messages,
    locale];locale = _ref4[0];messages = _ref4[1];

  }
  if (typeof locale !== 'string') {
    // 因为小程序平台，uni-i18n 和 uni 互相引用，导致此时访问 uni 时，为 undefined
    locale = getDefaultLocale();
  }
  if (typeof fallbackLocale !== 'string') {
    fallbackLocale =
    typeof __uniConfig !== 'undefined' && __uniConfig.fallbackLocale ||
    LOCALE_EN;
  }
  var i18n = new I18n({
    locale: locale,
    fallbackLocale: fallbackLocale,
    messages: messages,
    watcher: watcher });

  var _t = function t(key, values) {
    if (typeof getApp !== 'function') {
      // app view
      /* eslint-disable no-func-assign */
      _t = function t(key, values) {
        return i18n.t(key, values);
      };
    } else
    {
      var isWatchedAppLocale = false;
      _t = function t(key, values) {
        var appVm = getApp().$vm;
        // 可能$vm还不存在，比如在支付宝小程序中，组件定义较早，在props的default里使用了t()函数（如uni-goods-nav），此时app还未初始化
        // options: {
        // 	type: Array,
        // 	default () {
        // 		return [{
        // 			icon: 'shop',
        // 			text: t("uni-goods-nav.options.shop"),
        // 		}, {
        // 			icon: 'cart',
        // 			text: t("uni-goods-nav.options.cart")
        // 		}]
        // 	}
        // },
        if (appVm) {
          // 触发响应式
          appVm.$locale;
          if (!isWatchedAppLocale) {
            isWatchedAppLocale = true;
            watchAppLocale(appVm, i18n);
          }
        }
        return i18n.t(key, values);
      };
    }
    return _t(key, values);
  };
  return {
    i18n: i18n,
    f: function f(message, values, delimiters) {
      return i18n.f(message, values, delimiters);
    },
    t: function t(key, values) {
      return _t(key, values);
    },
    add: function add(locale, message) {var override = arguments.length > 2 && arguments[2] !== undefined ? arguments[2] : true;
      return i18n.add(locale, message, override);
    },
    watch: function watch(fn) {
      return i18n.watchLocale(fn);
    },
    getLocale: function getLocale() {
      return i18n.getLocale();
    },
    setLocale: function setLocale(newLocale) {
      return i18n.setLocale(newLocale);
    } };

}

var isString = function isString(val) {return typeof val === 'string';};exports.isString = isString;
var formater;
function hasI18nJson(jsonObj, delimiters) {
  if (!formater) {
    formater = new BaseFormatter();
  }
  return walkJsonObj(jsonObj, function (jsonObj, key) {
    var value = jsonObj[key];
    if (isString(value)) {
      if (isI18nStr(value, delimiters)) {
        return true;
      }
    } else
    {
      return hasI18nJson(value, delimiters);
    }
  });
}
function parseI18nJson(jsonObj, values, delimiters) {
  if (!formater) {
    formater = new BaseFormatter();
  }
  walkJsonObj(jsonObj, function (jsonObj, key) {
    var value = jsonObj[key];
    if (isString(value)) {
      if (isI18nStr(value, delimiters)) {
        jsonObj[key] = compileStr(value, values, delimiters);
      }
    } else
    {
      parseI18nJson(value, values, delimiters);
    }
  });
  return jsonObj;
}
function compileI18nJsonStr(jsonStr, _ref5) {var locale = _ref5.locale,locales = _ref5.locales,delimiters = _ref5.delimiters;
  if (!isI18nStr(jsonStr, delimiters)) {
    return jsonStr;
  }
  if (!formater) {
    formater = new BaseFormatter();
  }
  var localeValues = [];
  Object.keys(locales).forEach(function (name) {
    if (name !== locale) {
      localeValues.push({
        locale: name,
        values: locales[name] });

    }
  });
  localeValues.unshift({ locale: locale, values: locales[locale] });
  try {
    return JSON.stringify(compileJsonObj(JSON.parse(jsonStr), localeValues, delimiters), null, 2);
  }
  catch (e) {}
  return jsonStr;
}
function isI18nStr(value, delimiters) {
  return value.indexOf(delimiters[0]) > -1;
}
function compileStr(value, values, delimiters) {
  return formater.interpolate(value, values, delimiters).join('');
}
function compileValue(jsonObj, key, localeValues, delimiters) {
  var value = jsonObj[key];
  if (isString(value)) {
    // 存在国际化
    if (isI18nStr(value, delimiters)) {
      jsonObj[key] = compileStr(value, localeValues[0].values, delimiters);
      if (localeValues.length > 1) {
        // 格式化国际化语言
        var valueLocales = jsonObj[key + 'Locales'] = {};
        localeValues.forEach(function (localValue) {
          valueLocales[localValue.locale] = compileStr(value, localValue.values, delimiters);
        });
      }
    }
  } else
  {
    compileJsonObj(value, localeValues, delimiters);
  }
}
function compileJsonObj(jsonObj, localeValues, delimiters) {
  walkJsonObj(jsonObj, function (jsonObj, key) {
    compileValue(jsonObj, key, localeValues, delimiters);
  });
  return jsonObj;
}
function walkJsonObj(jsonObj, walk) {
  if (isArray(jsonObj)) {
    for (var i = 0; i < jsonObj.length; i++) {
      if (walk(jsonObj, i)) {
        return true;
      }
    }
  } else
  if (isObject(jsonObj)) {
    for (var key in jsonObj) {
      if (walk(jsonObj, key)) {
        return true;
      }
    }
  }
  return false;
}

function resolveLocale(locales) {
  return function (locale) {
    if (!locale) {
      return locale;
    }
    locale = normalizeLocale(locale) || locale;
    return resolveLocaleChain(locale).find(function (locale) {return locales.indexOf(locale) > -1;});
  };
}
function resolveLocaleChain(locale) {
  var chain = [];
  var tokens = locale.split('-');
  while (tokens.length) {
    chain.push(tokens.join('-'));
    tokens.pop();
  }
  return chain;
}
/* WEBPACK VAR INJECTION */}.call(this, __webpack_require__(/*! ./node_modules/@dcloudio/uni-mp-weixin/dist/index.js */ 1)["default"], __webpack_require__(/*! ./../../../webpack/buildin/global.js */ 2)))

/***/ }),
/* 5 */
/*!**********************************************************!*\
  !*** ./node_modules/@babel/runtime/regenerator/index.js ***!
  \**********************************************************/
/*! no static exports found */
/***/ (function(module, exports, __webpack_require__) {

module.exports = __webpack_require__(/*! regenerator-runtime */ 6);

/***/ }),
/* 6 */
/*!************************************************************!*\
  !*** ./node_modules/regenerator-runtime/runtime-module.js ***!
  \************************************************************/
/*! no static exports found */
/***/ (function(module, exports, __webpack_require__) {

/**
 * Copyright (c) 2014-present, Facebook, Inc.
 *
 * This source code is licensed under the MIT license found in the
 * LICENSE file in the root directory of this source tree.
 */

// This method of obtaining a reference to the global object needs to be
// kept identical to the way it is obtained in runtime.js
var g = (function() {
  return this || (typeof self === "object" && self);
})() || Function("return this")();

// Use `getOwnPropertyNames` because not all browsers support calling
// `hasOwnProperty` on the global `self` object in a worker. See #183.
var hadRuntime = g.regeneratorRuntime &&
  Object.getOwnPropertyNames(g).indexOf("regeneratorRuntime") >= 0;

// Save the old regeneratorRuntime in case it needs to be restored later.
var oldRuntime = hadRuntime && g.regeneratorRuntime;

// Force reevalutation of runtime.js.
g.regeneratorRuntime = undefined;

module.exports = __webpack_require__(/*! ./runtime */ 7);

if (hadRuntime) {
  // Restore the original runtime.
  g.regeneratorRuntime = oldRuntime;
} else {
  // Remove the global property added by runtime.js.
  try {
    delete g.regeneratorRuntime;
  } catch(e) {
    g.regeneratorRuntime = undefined;
  }
}


/***/ }),
/* 7 */
/*!*****************************************************!*\
  !*** ./node_modules/regenerator-runtime/runtime.js ***!
  \*****************************************************/
/*! no static exports found */
/***/ (function(module, exports) {

/**
 * Copyright (c) 2014-present, Facebook, Inc.
 *
 * This source code is licensed under the MIT license found in the
 * LICENSE file in the root directory of this source tree.
 */

!(function(global) {
  "use strict";

  var Op = Object.prototype;
  var hasOwn = Op.hasOwnProperty;
  var undefined; // More compressible than void 0.
  var $Symbol = typeof Symbol === "function" ? Symbol : {};
  var iteratorSymbol = $Symbol.iterator || "@@iterator";
  var asyncIteratorSymbol = $Symbol.asyncIterator || "@@asyncIterator";
  var toStringTagSymbol = $Symbol.toStringTag || "@@toStringTag";

  var inModule = typeof module === "object";
  var runtime = global.regeneratorRuntime;
  if (runtime) {
    if (inModule) {
      // If regeneratorRuntime is defined globally and we're in a module,
      // make the exports object identical to regeneratorRuntime.
      module.exports = runtime;
    }
    // Don't bother evaluating the rest of this file if the runtime was
    // already defined globally.
    return;
  }

  // Define the runtime globally (as expected by generated code) as either
  // module.exports (if we're in a module) or a new, empty object.
  runtime = global.regeneratorRuntime = inModule ? module.exports : {};

  function wrap(innerFn, outerFn, self, tryLocsList) {
    // If outerFn provided and outerFn.prototype is a Generator, then outerFn.prototype instanceof Generator.
    var protoGenerator = outerFn && outerFn.prototype instanceof Generator ? outerFn : Generator;
    var generator = Object.create(protoGenerator.prototype);
    var context = new Context(tryLocsList || []);

    // The ._invoke method unifies the implementations of the .next,
    // .throw, and .return methods.
    generator._invoke = makeInvokeMethod(innerFn, self, context);

    return generator;
  }
  runtime.wrap = wrap;

  // Try/catch helper to minimize deoptimizations. Returns a completion
  // record like context.tryEntries[i].completion. This interface could
  // have been (and was previously) designed to take a closure to be
  // invoked without arguments, but in all the cases we care about we
  // already have an existing method we want to call, so there's no need
  // to create a new function object. We can even get away with assuming
  // the method takes exactly one argument, since that happens to be true
  // in every case, so we don't have to touch the arguments object. The
  // only additional allocation required is the completion record, which
  // has a stable shape and so hopefully should be cheap to allocate.
  function tryCatch(fn, obj, arg) {
    try {
      return { type: "normal", arg: fn.call(obj, arg) };
    } catch (err) {
      return { type: "throw", arg: err };
    }
  }

  var GenStateSuspendedStart = "suspendedStart";
  var GenStateSuspendedYield = "suspendedYield";
  var GenStateExecuting = "executing";
  var GenStateCompleted = "completed";

  // Returning this object from the innerFn has the same effect as
  // breaking out of the dispatch switch statement.
  var ContinueSentinel = {};

  // Dummy constructor functions that we use as the .constructor and
  // .constructor.prototype properties for functions that return Generator
  // objects. For full spec compliance, you may wish to configure your
  // minifier not to mangle the names of these two functions.
  function Generator() {}
  function GeneratorFunction() {}
  function GeneratorFunctionPrototype() {}

  // This is a polyfill for %IteratorPrototype% for environments that
  // don't natively support it.
  var IteratorPrototype = {};
  IteratorPrototype[iteratorSymbol] = function () {
    return this;
  };

  var getProto = Object.getPrototypeOf;
  var NativeIteratorPrototype = getProto && getProto(getProto(values([])));
  if (NativeIteratorPrototype &&
      NativeIteratorPrototype !== Op &&
      hasOwn.call(NativeIteratorPrototype, iteratorSymbol)) {
    // This environment has a native %IteratorPrototype%; use it instead
    // of the polyfill.
    IteratorPrototype = NativeIteratorPrototype;
  }

  var Gp = GeneratorFunctionPrototype.prototype =
    Generator.prototype = Object.create(IteratorPrototype);
  GeneratorFunction.prototype = Gp.constructor = GeneratorFunctionPrototype;
  GeneratorFunctionPrototype.constructor = GeneratorFunction;
  GeneratorFunctionPrototype[toStringTagSymbol] =
    GeneratorFunction.displayName = "GeneratorFunction";

  // Helper for defining the .next, .throw, and .return methods of the
  // Iterator interface in terms of a single ._invoke method.
  function defineIteratorMethods(prototype) {
    ["next", "throw", "return"].forEach(function(method) {
      prototype[method] = function(arg) {
        return this._invoke(method, arg);
      };
    });
  }

  runtime.isGeneratorFunction = function(genFun) {
    var ctor = typeof genFun === "function" && genFun.constructor;
    return ctor
      ? ctor === GeneratorFunction ||
        // For the native GeneratorFunction constructor, the best we can
        // do is to check its .name property.
        (ctor.displayName || ctor.name) === "GeneratorFunction"
      : false;
  };

  runtime.mark = function(genFun) {
    if (Object.setPrototypeOf) {
      Object.setPrototypeOf(genFun, GeneratorFunctionPrototype);
    } else {
      genFun.__proto__ = GeneratorFunctionPrototype;
      if (!(toStringTagSymbol in genFun)) {
        genFun[toStringTagSymbol] = "GeneratorFunction";
      }
    }
    genFun.prototype = Object.create(Gp);
    return genFun;
  };

  // Within the body of any async function, `await x` is transformed to
  // `yield regeneratorRuntime.awrap(x)`, so that the runtime can test
  // `hasOwn.call(value, "__await")` to determine if the yielded value is
  // meant to be awaited.
  runtime.awrap = function(arg) {
    return { __await: arg };
  };

  function AsyncIterator(generator) {
    function invoke(method, arg, resolve, reject) {
      var record = tryCatch(generator[method], generator, arg);
      if (record.type === "throw") {
        reject(record.arg);
      } else {
        var result = record.arg;
        var value = result.value;
        if (value &&
            typeof value === "object" &&
            hasOwn.call(value, "__await")) {
          return Promise.resolve(value.__await).then(function(value) {
            invoke("next", value, resolve, reject);
          }, function(err) {
            invoke("throw", err, resolve, reject);
          });
        }

        return Promise.resolve(value).then(function(unwrapped) {
          // When a yielded Promise is resolved, its final value becomes
          // the .value of the Promise<{value,done}> result for the
          // current iteration.
          result.value = unwrapped;
          resolve(result);
        }, function(error) {
          // If a rejected Promise was yielded, throw the rejection back
          // into the async generator function so it can be handled there.
          return invoke("throw", error, resolve, reject);
        });
      }
    }

    var previousPromise;

    function enqueue(method, arg) {
      function callInvokeWithMethodAndArg() {
        return new Promise(function(resolve, reject) {
          invoke(method, arg, resolve, reject);
        });
      }

      return previousPromise =
        // If enqueue has been called before, then we want to wait until
        // all previous Promises have been resolved before calling invoke,
        // so that results are always delivered in the correct order. If
        // enqueue has not been called before, then it is important to
        // call invoke immediately, without waiting on a callback to fire,
        // so that the async generator function has the opportunity to do
        // any necessary setup in a predictable way. This predictability
        // is why the Promise constructor synchronously invokes its
        // executor callback, and why async functions synchronously
        // execute code before the first await. Since we implement simple
        // async functions in terms of async generators, it is especially
        // important to get this right, even though it requires care.
        previousPromise ? previousPromise.then(
          callInvokeWithMethodAndArg,
          // Avoid propagating failures to Promises returned by later
          // invocations of the iterator.
          callInvokeWithMethodAndArg
        ) : callInvokeWithMethodAndArg();
    }

    // Define the unified helper method that is used to implement .next,
    // .throw, and .return (see defineIteratorMethods).
    this._invoke = enqueue;
  }

  defineIteratorMethods(AsyncIterator.prototype);
  AsyncIterator.prototype[asyncIteratorSymbol] = function () {
    return this;
  };
  runtime.AsyncIterator = AsyncIterator;

  // Note that simple async functions are implemented on top of
  // AsyncIterator objects; they just return a Promise for the value of
  // the final result produced by the iterator.
  runtime.async = function(innerFn, outerFn, self, tryLocsList) {
    var iter = new AsyncIterator(
      wrap(innerFn, outerFn, self, tryLocsList)
    );

    return runtime.isGeneratorFunction(outerFn)
      ? iter // If outerFn is a generator, return the full iterator.
      : iter.next().then(function(result) {
          return result.done ? result.value : iter.next();
        });
  };

  function makeInvokeMethod(innerFn, self, context) {
    var state = GenStateSuspendedStart;

    return function invoke(method, arg) {
      if (state === GenStateExecuting) {
        throw new Error("Generator is already running");
      }

      if (state === GenStateCompleted) {
        if (method === "throw") {
          throw arg;
        }

        // Be forgiving, per 25.3.3.3.3 of the spec:
        // https://people.mozilla.org/~jorendorff/es6-draft.html#sec-generatorresume
        return doneResult();
      }

      context.method = method;
      context.arg = arg;

      while (true) {
        var delegate = context.delegate;
        if (delegate) {
          var delegateResult = maybeInvokeDelegate(delegate, context);
          if (delegateResult) {
            if (delegateResult === ContinueSentinel) continue;
            return delegateResult;
          }
        }

        if (context.method === "next") {
          // Setting context._sent for legacy support of Babel's
          // function.sent implementation.
          context.sent = context._sent = context.arg;

        } else if (context.method === "throw") {
          if (state === GenStateSuspendedStart) {
            state = GenStateCompleted;
            throw context.arg;
          }

          context.dispatchException(context.arg);

        } else if (context.method === "return") {
          context.abrupt("return", context.arg);
        }

        state = GenStateExecuting;

        var record = tryCatch(innerFn, self, context);
        if (record.type === "normal") {
          // If an exception is thrown from innerFn, we leave state ===
          // GenStateExecuting and loop back for another invocation.
          state = context.done
            ? GenStateCompleted
            : GenStateSuspendedYield;

          if (record.arg === ContinueSentinel) {
            continue;
          }

          return {
            value: record.arg,
            done: context.done
          };

        } else if (record.type === "throw") {
          state = GenStateCompleted;
          // Dispatch the exception by looping back around to the
          // context.dispatchException(context.arg) call above.
          context.method = "throw";
          context.arg = record.arg;
        }
      }
    };
  }

  // Call delegate.iterator[context.method](context.arg) and handle the
  // result, either by returning a { value, done } result from the
  // delegate iterator, or by modifying context.method and context.arg,
  // setting context.delegate to null, and returning the ContinueSentinel.
  function maybeInvokeDelegate(delegate, context) {
    var method = delegate.iterator[context.method];
    if (method === undefined) {
      // A .throw or .return when the delegate iterator has no .throw
      // method always terminates the yield* loop.
      context.delegate = null;

      if (context.method === "throw") {
        if (delegate.iterator.return) {
          // If the delegate iterator has a return method, give it a
          // chance to clean up.
          context.method = "return";
          context.arg = undefined;
          maybeInvokeDelegate(delegate, context);

          if (context.method === "throw") {
            // If maybeInvokeDelegate(context) changed context.method from
            // "return" to "throw", let that override the TypeError below.
            return ContinueSentinel;
          }
        }

        context.method = "throw";
        context.arg = new TypeError(
          "The iterator does not provide a 'throw' method");
      }

      return ContinueSentinel;
    }

    var record = tryCatch(method, delegate.iterator, context.arg);

    if (record.type === "throw") {
      context.method = "throw";
      context.arg = record.arg;
      context.delegate = null;
      return ContinueSentinel;
    }

    var info = record.arg;

    if (! info) {
      context.method = "throw";
      context.arg = new TypeError("iterator result is not an object");
      context.delegate = null;
      return ContinueSentinel;
    }

    if (info.done) {
      // Assign the result of the finished delegate to the temporary
      // variable specified by delegate.resultName (see delegateYield).
      context[delegate.resultName] = info.value;

      // Resume execution at the desired location (see delegateYield).
      context.next = delegate.nextLoc;

      // If context.method was "throw" but the delegate handled the
      // exception, let the outer generator proceed normally. If
      // context.method was "next", forget context.arg since it has been
      // "consumed" by the delegate iterator. If context.method was
      // "return", allow the original .return call to continue in the
      // outer generator.
      if (context.method !== "return") {
        context.method = "next";
        context.arg = undefined;
      }

    } else {
      // Re-yield the result returned by the delegate method.
      return info;
    }

    // The delegate iterator is finished, so forget it and continue with
    // the outer generator.
    context.delegate = null;
    return ContinueSentinel;
  }

  // Define Generator.prototype.{next,throw,return} in terms of the
  // unified ._invoke helper method.
  defineIteratorMethods(Gp);

  Gp[toStringTagSymbol] = "Generator";

  // A Generator should always return itself as the iterator object when the
  // @@iterator function is called on it. Some browsers' implementations of the
  // iterator prototype chain incorrectly implement this, causing the Generator
  // object to not be returned from this call. This ensures that doesn't happen.
  // See https://github.com/facebook/regenerator/issues/274 for more details.
  Gp[iteratorSymbol] = function() {
    return this;
  };

  Gp.toString = function() {
    return "[object Generator]";
  };

  function pushTryEntry(locs) {
    var entry = { tryLoc: locs[0] };

    if (1 in locs) {
      entry.catchLoc = locs[1];
    }

    if (2 in locs) {
      entry.finallyLoc = locs[2];
      entry.afterLoc = locs[3];
    }

    this.tryEntries.push(entry);
  }

  function resetTryEntry(entry) {
    var record = entry.completion || {};
    record.type = "normal";
    delete record.arg;
    entry.completion = record;
  }

  function Context(tryLocsList) {
    // The root entry object (effectively a try statement without a catch
    // or a finally block) gives us a place to store values thrown from
    // locations where there is no enclosing try statement.
    this.tryEntries = [{ tryLoc: "root" }];
    tryLocsList.forEach(pushTryEntry, this);
    this.reset(true);
  }

  runtime.keys = function(object) {
    var keys = [];
    for (var key in object) {
      keys.push(key);
    }
    keys.reverse();

    // Rather than returning an object with a next method, we keep
    // things simple and return the next function itself.
    return function next() {
      while (keys.length) {
        var key = keys.pop();
        if (key in object) {
          next.value = key;
          next.done = false;
          return next;
        }
      }

      // To avoid creating an additional object, we just hang the .value
      // and .done properties off the next function object itself. This
      // also ensures that the minifier will not anonymize the function.
      next.done = true;
      return next;
    };
  };

  function values(iterable) {
    if (iterable) {
      var iteratorMethod = iterable[iteratorSymbol];
      if (iteratorMethod) {
        return iteratorMethod.call(iterable);
      }

      if (typeof iterable.next === "function") {
        return iterable;
      }

      if (!isNaN(iterable.length)) {
        var i = -1, next = function next() {
          while (++i < iterable.length) {
            if (hasOwn.call(iterable, i)) {
              next.value = iterable[i];
              next.done = false;
              return next;
            }
          }

          next.value = undefined;
          next.done = true;

          return next;
        };

        return next.next = next;
      }
    }

    // Return an iterator with no values.
    return { next: doneResult };
  }
  runtime.values = values;

  function doneResult() {
    return { value: undefined, done: true };
  }

  Context.prototype = {
    constructor: Context,

    reset: function(skipTempReset) {
      this.prev = 0;
      this.next = 0;
      // Resetting context._sent for legacy support of Babel's
      // function.sent implementation.
      this.sent = this._sent = undefined;
      this.done = false;
      this.delegate = null;

      this.method = "next";
      this.arg = undefined;

      this.tryEntries.forEach(resetTryEntry);

      if (!skipTempReset) {
        for (var name in this) {
          // Not sure about the optimal order of these conditions:
          if (name.charAt(0) === "t" &&
              hasOwn.call(this, name) &&
              !isNaN(+name.slice(1))) {
            this[name] = undefined;
          }
        }
      }
    },

    stop: function() {
      this.done = true;

      var rootEntry = this.tryEntries[0];
      var rootRecord = rootEntry.completion;
      if (rootRecord.type === "throw") {
        throw rootRecord.arg;
      }

      return this.rval;
    },

    dispatchException: function(exception) {
      if (this.done) {
        throw exception;
      }

      var context = this;
      function handle(loc, caught) {
        record.type = "throw";
        record.arg = exception;
        context.next = loc;

        if (caught) {
          // If the dispatched exception was caught by a catch block,
          // then let that catch block handle the exception normally.
          context.method = "next";
          context.arg = undefined;
        }

        return !! caught;
      }

      for (var i = this.tryEntries.length - 1; i >= 0; --i) {
        var entry = this.tryEntries[i];
        var record = entry.completion;

        if (entry.tryLoc === "root") {
          // Exception thrown outside of any try block that could handle
          // it, so set the completion value of the entire function to
          // throw the exception.
          return handle("end");
        }

        if (entry.tryLoc <= this.prev) {
          var hasCatch = hasOwn.call(entry, "catchLoc");
          var hasFinally = hasOwn.call(entry, "finallyLoc");

          if (hasCatch && hasFinally) {
            if (this.prev < entry.catchLoc) {
              return handle(entry.catchLoc, true);
            } else if (this.prev < entry.finallyLoc) {
              return handle(entry.finallyLoc);
            }

          } else if (hasCatch) {
            if (this.prev < entry.catchLoc) {
              return handle(entry.catchLoc, true);
            }

          } else if (hasFinally) {
            if (this.prev < entry.finallyLoc) {
              return handle(entry.finallyLoc);
            }

          } else {
            throw new Error("try statement without catch or finally");
          }
        }
      }
    },

    abrupt: function(type, arg) {
      for (var i = this.tryEntries.length - 1; i >= 0; --i) {
        var entry = this.tryEntries[i];
        if (entry.tryLoc <= this.prev &&
            hasOwn.call(entry, "finallyLoc") &&
            this.prev < entry.finallyLoc) {
          var finallyEntry = entry;
          break;
        }
      }

      if (finallyEntry &&
          (type === "break" ||
           type === "continue") &&
          finallyEntry.tryLoc <= arg &&
          arg <= finallyEntry.finallyLoc) {
        // Ignore the finally entry if control is not jumping to a
        // location outside the try/catch block.
        finallyEntry = null;
      }

      var record = finallyEntry ? finallyEntry.completion : {};
      record.type = type;
      record.arg = arg;

      if (finallyEntry) {
        this.method = "next";
        this.next = finallyEntry.finallyLoc;
        return ContinueSentinel;
      }

      return this.complete(record);
    },

    complete: function(record, afterLoc) {
      if (record.type === "throw") {
        throw record.arg;
      }

      if (record.type === "break" ||
          record.type === "continue") {
        this.next = record.arg;
      } else if (record.type === "return") {
        this.rval = this.arg = record.arg;
        this.method = "return";
        this.next = "end";
      } else if (record.type === "normal" && afterLoc) {
        this.next = afterLoc;
      }

      return ContinueSentinel;
    },

    finish: function(finallyLoc) {
      for (var i = this.tryEntries.length - 1; i >= 0; --i) {
        var entry = this.tryEntries[i];
        if (entry.finallyLoc === finallyLoc) {
          this.complete(entry.completion, entry.afterLoc);
          resetTryEntry(entry);
          return ContinueSentinel;
        }
      }
    },

    "catch": function(tryLoc) {
      for (var i = this.tryEntries.length - 1; i >= 0; --i) {
        var entry = this.tryEntries[i];
        if (entry.tryLoc === tryLoc) {
          var record = entry.completion;
          if (record.type === "throw") {
            var thrown = record.arg;
            resetTryEntry(entry);
          }
          return thrown;
        }
      }

      // The context.catch method must only be called with a location
      // argument that corresponds to a known catch block.
      throw new Error("illegal catch attempt");
    },

    delegateYield: function(iterable, resultName, nextLoc) {
      this.delegate = {
        iterator: values(iterable),
        resultName: resultName,
        nextLoc: nextLoc
      };

      if (this.method === "next") {
        // Deliberately forget the last sent value so that we don't
        // accidentally pass it on to the delegate.
        this.arg = undefined;
      }

      return ContinueSentinel;
    }
  };
})(
  // In sloppy mode, unbound `this` refers to the global object, fallback to
  // Function constructor if we're in global strict mode. That is sadly a form
  // of indirect eval which violates Content Security Policy.
  (function() {
    return this || (typeof self === "object" && self);
  })() || Function("return this")()
);


/***/ }),
/* 8 */
/*!************************************************!*\
  !*** /Users/xingmangkeji/vue/yimei/pages.json ***!
  \************************************************/
/*! no static exports found */
/***/ (function(module, exports) {



/***/ }),
/* 9 */,
/* 10 */,
/* 11 */,
/* 12 */,
/* 13 */,
/* 14 */
/*!**********************************************************************************************************!*\
  !*** ./node_modules/@dcloudio/vue-cli-plugin-uni/packages/vue-loader/lib/runtime/componentNormalizer.js ***!
  \**********************************************************************************************************/
/*! exports provided: default */
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";
__webpack_require__.r(__webpack_exports__);
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "default", function() { return normalizeComponent; });
/* globals __VUE_SSR_CONTEXT__ */

// IMPORTANT: Do NOT use ES2015 features in this file (except for modules).
// This module is a runtime utility for cleaner component module output and will
// be included in the final webpack user bundle.

function normalizeComponent (
  scriptExports,
  render,
  staticRenderFns,
  functionalTemplate,
  injectStyles,
  scopeId,
  moduleIdentifier, /* server only */
  shadowMode, /* vue-cli only */
  components, // fixed by xxxxxx auto components
  renderjs // fixed by xxxxxx renderjs
) {
  // Vue.extend constructor export interop
  var options = typeof scriptExports === 'function'
    ? scriptExports.options
    : scriptExports

  // fixed by xxxxxx auto components
  if (components) {
    if (!options.components) {
      options.components = {}
    }
    var hasOwn = Object.prototype.hasOwnProperty
    for (var name in components) {
      if (hasOwn.call(components, name) && !hasOwn.call(options.components, name)) {
        options.components[name] = components[name]
      }
    }
  }
  // fixed by xxxxxx renderjs
  if (renderjs) {
    (renderjs.beforeCreate || (renderjs.beforeCreate = [])).unshift(function() {
      this[renderjs.__module] = this
    });
    (options.mixins || (options.mixins = [])).push(renderjs)
  }

  // render functions
  if (render) {
    options.render = render
    options.staticRenderFns = staticRenderFns
    options._compiled = true
  }

  // functional template
  if (functionalTemplate) {
    options.functional = true
  }

  // scopedId
  if (scopeId) {
    options._scopeId = 'data-v-' + scopeId
  }

  var hook
  if (moduleIdentifier) { // server build
    hook = function (context) {
      // 2.3 injection
      context =
        context || // cached call
        (this.$vnode && this.$vnode.ssrContext) || // stateful
        (this.parent && this.parent.$vnode && this.parent.$vnode.ssrContext) // functional
      // 2.2 with runInNewContext: true
      if (!context && typeof __VUE_SSR_CONTEXT__ !== 'undefined') {
        context = __VUE_SSR_CONTEXT__
      }
      // inject component styles
      if (injectStyles) {
        injectStyles.call(this, context)
      }
      // register component module identifier for async chunk inferrence
      if (context && context._registeredComponents) {
        context._registeredComponents.add(moduleIdentifier)
      }
    }
    // used by ssr in case component is cached and beforeCreate
    // never gets called
    options._ssrRegister = hook
  } else if (injectStyles) {
    hook = shadowMode
      ? function () { injectStyles.call(this, this.$root.$options.shadowRoot) }
      : injectStyles
  }

  if (hook) {
    if (options.functional) {
      // for template-only hot-reload because in that case the render fn doesn't
      // go through the normalizer
      options._injectStyles = hook
      // register for functioal component in vue file
      var originalRender = options.render
      options.render = function renderWithStyleInjection (h, context) {
        hook.call(context)
        return originalRender(h, context)
      }
    } else {
      // inject component registration as beforeCreate hook
      var existing = options.beforeCreate
      options.beforeCreate = existing
        ? [].concat(existing, hook)
        : [hook]
    }
  }

  return {
    exports: scriptExports,
    options: options
  }
}


/***/ }),
/* 15 */
/*!********************************************************************!*\
  !*** /Users/xingmangkeji/vue/yimei/node_modules/uview-ui/index.js ***!
  \********************************************************************/
/*! no static exports found */
/***/ (function(module, exports, __webpack_require__) {

"use strict";
/* WEBPACK VAR INJECTION */(function(uni) {Object.defineProperty(exports, "__esModule", { value: true });exports.default = void 0;
var _mixin = _interopRequireDefault(__webpack_require__(/*! ./libs/mixin/mixin.js */ 16));



var _request = _interopRequireDefault(__webpack_require__(/*! ./libs/request */ 17));




















var _queryParams = _interopRequireDefault(__webpack_require__(/*! ./libs/function/queryParams.js */ 21));

var _route = _interopRequireDefault(__webpack_require__(/*! ./libs/function/route.js */ 22));

var _timeFormat = _interopRequireDefault(__webpack_require__(/*! ./libs/function/timeFormat.js */ 23));

var _timeFrom = _interopRequireDefault(__webpack_require__(/*! ./libs/function/timeFrom.js */ 24));

var _colorGradient = _interopRequireDefault(__webpack_require__(/*! ./libs/function/colorGradient.js */ 25));

var _guid = _interopRequireDefault(__webpack_require__(/*! ./libs/function/guid.js */ 26));

var _color = _interopRequireDefault(__webpack_require__(/*! ./libs/function/color.js */ 27));

var _type2icon = _interopRequireDefault(__webpack_require__(/*! ./libs/function/type2icon.js */ 28));

var _randomArray = _interopRequireDefault(__webpack_require__(/*! ./libs/function/randomArray.js */ 29));

var _deepClone = _interopRequireDefault(__webpack_require__(/*! ./libs/function/deepClone.js */ 19));

var _deepMerge = _interopRequireDefault(__webpack_require__(/*! ./libs/function/deepMerge.js */ 18));

var _addUnit = _interopRequireDefault(__webpack_require__(/*! ./libs/function/addUnit.js */ 30));


var _test = _interopRequireDefault(__webpack_require__(/*! ./libs/function/test.js */ 20));

var _random = _interopRequireDefault(__webpack_require__(/*! ./libs/function/random.js */ 31));

var _trim = _interopRequireDefault(__webpack_require__(/*! ./libs/function/trim.js */ 32));

var _toast = _interopRequireDefault(__webpack_require__(/*! ./libs/function/toast.js */ 33));

var _getParent = _interopRequireDefault(__webpack_require__(/*! ./libs/function/getParent.js */ 34));

var _$parent = _interopRequireDefault(__webpack_require__(/*! ./libs/function/$parent.js */ 35));



var _sys = __webpack_require__(/*! ./libs/function/sys.js */ 36);

var _debounce = _interopRequireDefault(__webpack_require__(/*! ./libs/function/debounce.js */ 37));

var _throttle = _interopRequireDefault(__webpack_require__(/*! ./libs/function/throttle.js */ 38));



var _config = _interopRequireDefault(__webpack_require__(/*! ./libs/config/config.js */ 39));

var _zIndex = _interopRequireDefault(__webpack_require__(/*! ./libs/config/zIndex.js */ 40));function _interopRequireDefault(obj) {return obj && obj.__esModule ? obj : { default: obj };} // 引入全局mixin
// 引入关于是否mixin集成小程序分享的配置
// import wxshare from './libs/mixin/mpShare.js'
// 全局挂载引入http相关请求拦截插件
function wranning(str) {// 开发环境进行信息输出,主要是一些报错信息
  // 这个环境的来由是在程序编写时候,点击hx编辑器运行调试代码的时候,详见:
  // 	https://uniapp.dcloud.io/frame?id=%e5%bc%80%e5%8f%91%e7%8e%af%e5%a2%83%e5%92%8c%e7%94%9f%e4%ba%a7%e7%8e%af%e5%a2%83
  if (true) {console.warn(str);}} // 尝试判断在根目录的/store中是否有$u.mixin.js，此文件uView默认为需要挂在到全局的vuex的state变量
// HX2.6.11版本,放到try中,控制台依然会警告,暂时不用此方式，
// let vuexStore = {};
// try {
// 	vuexStore = require("@/store/$u.mixin.js");
// } catch (e) {
// 	//TODO handle the exception
// }
// post类型对象参数转为get类型url参数
var $u = { queryParams: _queryParams.default, route: _route.default, timeFormat: _timeFormat.default, date: _timeFormat.default, // 另名date
  timeFrom: _timeFrom.default, colorGradient: _colorGradient.default.colorGradient, colorToRgba: _colorGradient.default.colorToRgba, guid: _guid.default, color: _color.default, sys: _sys.sys, os: _sys.os, type2icon: _type2icon.default, randomArray: _randomArray.default, wranning: wranning, get: _request.default.get,
  post: _request.default.post,
  put: _request.default.put,
  'delete': _request.default.delete,
  hexToRgb: _colorGradient.default.hexToRgb,
  rgbToHex: _colorGradient.default.rgbToHex,
  test: _test.default,
  random: _random.default,
  deepClone: _deepClone.default,
  deepMerge: _deepMerge.default,
  getParent: _getParent.default,
  $parent: _$parent.default,
  addUnit: _addUnit.default,
  trim: _trim.default,
  type: ['primary', 'success', 'error', 'warning', 'info'],
  http: _request.default,
  toast: _toast.default,
  config: _config.default, // uView配置信息相关，比如版本号
  zIndex: _zIndex.default,
  debounce: _debounce.default,
  throttle: _throttle.default };


// $u挂载到uni对象上
uni.$u = $u;

var install = function install(Vue) {
  Vue.mixin(_mixin.default);
  if (Vue.prototype.openShare) {
    Vue.mixin(mpShare);
  }
  // Vue.mixin(vuexStore);
  // 时间格式化，同时两个名称，date和timeFormat
  Vue.filter('timeFormat', function (timestamp, format) {
    return (0, _timeFormat.default)(timestamp, format);
  });
  Vue.filter('date', function (timestamp, format) {
    return (0, _timeFormat.default)(timestamp, format);
  });
  // 将多久以前的方法，注入到全局过滤器
  Vue.filter('timeFrom', function (timestamp, format) {
    return (0, _timeFrom.default)(timestamp, format);
  });
  Vue.prototype.$u = $u;
};var _default =

{
  install: install };exports.default = _default;
/* WEBPACK VAR INJECTION */}.call(this, __webpack_require__(/*! ./node_modules/@dcloudio/uni-mp-weixin/dist/index.js */ 1)["default"]))

/***/ }),
/* 16 */
/*!*******************************************************************************!*\
  !*** /Users/xingmangkeji/vue/yimei/node_modules/uview-ui/libs/mixin/mixin.js ***!
  \*******************************************************************************/
/*! no static exports found */
/***/ (function(module, exports, __webpack_require__) {

/* WEBPACK VAR INJECTION */(function(uni) {module.exports = {
  data: function data() {
    return {};
  },
  onLoad: function onLoad() {
    // getRect挂载到$u上，因为这方法需要使用in(this)，所以无法把它独立成一个单独的文件导出
    this.$u.getRect = this.$uGetRect;
  },
  methods: {
    // 查询节点信息
    // 目前此方法在支付宝小程序中无法获取组件跟接点的尺寸，为支付宝的bug(2020-07-21)
    // 解决办法为在组件根部再套一个没有任何作用的view元素
    $uGetRect: function $uGetRect(selector, all) {var _this = this;
      return new Promise(function (resolve) {
        uni.createSelectorQuery().
        in(_this)[all ? 'selectAll' : 'select'](selector).
        boundingClientRect(function (rect) {
          if (all && Array.isArray(rect) && rect.length) {
            resolve(rect);
          }
          if (!all && rect) {
            resolve(rect);
          }
        }).
        exec();
      });
    },
    getParentData: function getParentData() {var _this2 = this;var parentName = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : '';
      // 避免在created中去定义parent变量
      if (!this.parent) this.parent = false;
      // 这里的本质原理是，通过获取父组件实例(也即u-radio-group的this)
      // 将父组件this中对应的参数，赋值给本组件(u-radio的this)的parentData对象中对应的属性
      // 之所以需要这么做，是因为所有端中，头条小程序不支持通过this.parent.xxx去监听父组件参数的变化
      this.parent = this.$u.$parent.call(this, parentName);
      if (this.parent) {
        // 历遍parentData中的属性，将parent中的同名属性赋值给parentData
        Object.keys(this.parentData).map(function (key) {
          _this2.parentData[key] = _this2.parent[key];
        });
      }
    },
    // 阻止事件冒泡
    preventEvent: function preventEvent(e) {
      e && e.stopPropagation && e.stopPropagation();
    } },

  onReachBottom: function onReachBottom() {
    uni.$emit('uOnReachBottom');
  },
  beforeDestroy: function beforeDestroy() {var _this3 = this;
    // 判断当前页面是否存在parent和chldren，一般在checkbox和checkbox-group父子联动的场景会有此情况
    // 组件销毁时，移除子组件在父组件children数组中的实例，释放资源，避免数据混乱
    if (this.parent && uni.$u.test.array(this.parent.children)) {
      // 组件销毁时，移除父组件中的children数组中对应的实例
      var childrenList = this.parent.children;
      childrenList.map(function (child, index) {
        // 如果相等，则移除
        if (child === _this3) {
          childrenList.splice(index, 1);
        }
      });
    }
  } };
/* WEBPACK VAR INJECTION */}.call(this, __webpack_require__(/*! ./node_modules/@dcloudio/uni-mp-weixin/dist/index.js */ 1)["default"]))

/***/ }),
/* 17 */
/*!*********************************************************************************!*\
  !*** /Users/xingmangkeji/vue/yimei/node_modules/uview-ui/libs/request/index.js ***!
  \*********************************************************************************/
/*! no static exports found */
/***/ (function(module, exports, __webpack_require__) {

"use strict";
/* WEBPACK VAR INJECTION */(function(uni) {Object.defineProperty(exports, "__esModule", { value: true });exports.default = void 0;var _deepMerge = _interopRequireDefault(__webpack_require__(/*! ../function/deepMerge */ 18));
var _test = _interopRequireDefault(__webpack_require__(/*! ../function/test */ 20));function _interopRequireDefault(obj) {return obj && obj.__esModule ? obj : { default: obj };}function _classCallCheck(instance, Constructor) {if (!(instance instanceof Constructor)) {throw new TypeError("Cannot call a class as a function");}}function _defineProperties(target, props) {for (var i = 0; i < props.length; i++) {var descriptor = props[i];descriptor.enumerable = descriptor.enumerable || false;descriptor.configurable = true;if ("value" in descriptor) descriptor.writable = true;Object.defineProperty(target, descriptor.key, descriptor);}}function _createClass(Constructor, protoProps, staticProps) {if (protoProps) _defineProperties(Constructor.prototype, protoProps);if (staticProps) _defineProperties(Constructor, staticProps);return Constructor;}var
Request = /*#__PURE__*/function () {_createClass(Request, [{ key: "setConfig",
    // 设置全局默认配置
    value: function setConfig(customConfig) {
      // 深度合并对象，否则会造成对象深层属性丢失
      this.config = (0, _deepMerge.default)(this.config, customConfig);
    }

    // 主要请求部分
  }, { key: "request", value: function request() {var _this = this;var options = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : {};
      // 检查请求拦截
      if (this.interceptor.request && typeof this.interceptor.request === 'function') {
        var tmpConfig = {};
        var interceptorRequest = this.interceptor.request(options);
        if (interceptorRequest === false) {
          // 返回一个处于pending状态中的Promise，来取消原promise，避免进入then()回调
          return new Promise(function () {});
        }
        this.options = interceptorRequest;
      }
      options.dataType = options.dataType || this.config.dataType;
      options.responseType = options.responseType || this.config.responseType;
      options.url = options.url || '';
      options.params = options.params || {};
      options.header = Object.assign({}, this.config.header, options.header);
      options.method = options.method || this.config.method;

      return new Promise(function (resolve, reject) {
        options.complete = function (response) {
          // 请求返回后，隐藏loading(如果请求返回快的话，可能会没有loading)
          uni.hideLoading();
          // 清除定时器，如果请求回来了，就无需loading
          clearTimeout(_this.config.timer);
          _this.config.timer = null;
          // 判断用户对拦截返回数据的要求，如果originalData为true，返回所有的数据(response)到拦截器，否则只返回response.data
          if (_this.config.originalData) {
            // 判断是否存在拦截器
            if (_this.interceptor.response && typeof _this.interceptor.response === 'function') {
              var resInterceptors = _this.interceptor.response(response);
              // 如果拦截器不返回false，就将拦截器返回的内容给this.$u.post的then回调
              if (resInterceptors !== false) {
                resolve(resInterceptors);
              } else {
                // 如果拦截器返回false，意味着拦截器定义者认为返回有问题，直接接入catch回调
                reject(response);
              }
            } else {
              // 如果要求返回原始数据，就算没有拦截器，也返回最原始的数据
              resolve(response);
            }
          } else {
            if (response.statusCode == 200) {
              if (_this.interceptor.response && typeof _this.interceptor.response === 'function') {
                var _resInterceptors = _this.interceptor.response(response.data);
                if (_resInterceptors !== false) {
                  resolve(_resInterceptors);
                } else {
                  reject(response.data);
                }
              } else {
                // 如果不是返回原始数据(originalData=false)，且没有拦截器的情况下，返回纯数据给then回调
                resolve(response.data);
              }
            } else {
              // 不返回原始数据的情况下，服务器状态码不为200，modal弹框提示
              // if(response.errMsg) {
              // 	uni.showModal({
              // 		title: response.errMsg
              // 	});
              // }
              reject(response);
            }
          }
        };

        // 判断用户传递的URL是否/开头,如果不是,加上/，这里使用了uView的test.js验证库的url()方法
        options.url = _test.default.url(options.url) ? options.url : _this.config.baseUrl + (options.url.indexOf('/') == 0 ?
        options.url : '/' + options.url);

        // 是否显示loading
        // 加一个是否已有timer定时器的判断，否则有两个同时请求的时候，后者会清除前者的定时器id
        // 而没有清除前者的定时器，导致前者超时，一直显示loading
        if (_this.config.showLoading && !_this.config.timer) {
          _this.config.timer = setTimeout(function () {
            uni.showLoading({
              title: _this.config.loadingText,
              mask: _this.config.loadingMask });

            _this.config.timer = null;
          }, _this.config.loadingTime);
        }
        uni.request(options);
      });
      // .catch(res => {
      // 	// 如果返回reject()，不让其进入this.$u.post().then().catch()后面的catct()
      // 	// 因为很多人都会忘了写后面的catch()，导致报错捕获不到catch
      // 	return new Promise(()=>{});
      // })
    } }]);

  function Request() {var _this2 = this;_classCallCheck(this, Request);
    this.config = {
      baseUrl: '', // 请求的根域名
      // 默认的请求头
      header: {},
      method: 'POST',
      // 设置为json，返回后uni.request会对数据进行一次JSON.parse
      dataType: 'json',
      // 此参数无需处理，因为5+和支付宝小程序不支持，默认为text即可
      responseType: 'text',
      showLoading: true, // 是否显示请求中的loading
      loadingText: '请求中...',
      loadingTime: 800, // 在此时间内，请求还没回来的话，就显示加载中动画，单位ms
      timer: null, // 定时器
      originalData: false, // 是否在拦截器中返回服务端的原始数据，见文档说明
      loadingMask: true // 展示loading的时候，是否给一个透明的蒙层，防止触摸穿透
    };

    // 拦截器
    this.interceptor = {
      // 请求前的拦截
      request: null,
      // 请求后的拦截
      response: null };


    // get请求
    this.get = function (url) {var data = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : {};var header = arguments.length > 2 && arguments[2] !== undefined ? arguments[2] : {};
      return _this2.request({
        method: 'GET',
        url: url,
        header: header,
        data: data });

    };

    // post请求
    this.post = function (url) {var data = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : {};var header = arguments.length > 2 && arguments[2] !== undefined ? arguments[2] : {};
      return _this2.request({
        url: url,
        method: 'POST',
        header: header,
        data: data });

    };

    // put请求，不支持支付宝小程序(HX2.6.15)
    this.put = function (url) {var data = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : {};var header = arguments.length > 2 && arguments[2] !== undefined ? arguments[2] : {};
      return _this2.request({
        url: url,
        method: 'PUT',
        header: header,
        data: data });

    };

    // delete请求，不支持支付宝和头条小程序(HX2.6.15)
    this.delete = function (url) {var data = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : {};var header = arguments.length > 2 && arguments[2] !== undefined ? arguments[2] : {};
      return _this2.request({
        url: url,
        method: 'DELETE',
        header: header,
        data: data });

    };
  }return Request;}();var _default =

new Request();exports.default = _default;
/* WEBPACK VAR INJECTION */}.call(this, __webpack_require__(/*! ./node_modules/@dcloudio/uni-mp-weixin/dist/index.js */ 1)["default"]))

/***/ }),
/* 18 */
/*!**************************************************************************************!*\
  !*** /Users/xingmangkeji/vue/yimei/node_modules/uview-ui/libs/function/deepMerge.js ***!
  \**************************************************************************************/
/*! no static exports found */
/***/ (function(module, exports, __webpack_require__) {

"use strict";
Object.defineProperty(exports, "__esModule", { value: true });exports.default = void 0;var _deepClone = _interopRequireDefault(__webpack_require__(/*! ./deepClone */ 19));function _interopRequireDefault(obj) {return obj && obj.__esModule ? obj : { default: obj };}

// JS对象深度合并
function deepMerge() {var target = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : {};var source = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : {};
  target = (0, _deepClone.default)(target);
  if (typeof target !== 'object' || typeof source !== 'object') return false;
  for (var prop in source) {
    if (!source.hasOwnProperty(prop)) continue;
    if (prop in target) {
      if (typeof target[prop] !== 'object') {
        target[prop] = source[prop];
      } else {
        if (typeof source[prop] !== 'object') {
          target[prop] = source[prop];
        } else {
          if (target[prop].concat && source[prop].concat) {
            target[prop] = target[prop].concat(source[prop]);
          } else {
            target[prop] = deepMerge(target[prop], source[prop]);
          }
        }
      }
    } else {
      target[prop] = source[prop];
    }
  }
  return target;
}var _default =

deepMerge;exports.default = _default;

/***/ }),
/* 19 */
/*!**************************************************************************************!*\
  !*** /Users/xingmangkeji/vue/yimei/node_modules/uview-ui/libs/function/deepClone.js ***!
  \**************************************************************************************/
/*! no static exports found */
/***/ (function(module, exports, __webpack_require__) {

"use strict";
Object.defineProperty(exports, "__esModule", { value: true });exports.default = void 0; // 判断arr是否为一个数组，返回一个bool值
function isArray(arr) {
  return Object.prototype.toString.call(arr) === '[object Array]';
}

// 深度克隆
function deepClone(obj) {
  // 对常见的“非”值，直接返回原来值
  if ([null, undefined, NaN, false].includes(obj)) return obj;
  if (typeof obj !== "object" && typeof obj !== 'function') {
    //原始类型直接返回
    return obj;
  }
  var o = isArray(obj) ? [] : {};
  for (var i in obj) {
    if (obj.hasOwnProperty(i)) {
      o[i] = typeof obj[i] === "object" ? deepClone(obj[i]) : obj[i];
    }
  }
  return o;
}var _default =

deepClone;exports.default = _default;

/***/ }),
/* 20 */
/*!*********************************************************************************!*\
  !*** /Users/xingmangkeji/vue/yimei/node_modules/uview-ui/libs/function/test.js ***!
  \*********************************************************************************/
/*! no static exports found */
/***/ (function(module, exports, __webpack_require__) {

"use strict";
Object.defineProperty(exports, "__esModule", { value: true });exports.default = void 0; /**
                                                                                                      * 验证电子邮箱格式
                                                                                                      */
function email(value) {
  return /^\w+((-\w+)|(\.\w+))*\@[A-Za-z0-9]+((\.|-)[A-Za-z0-9]+)*\.[A-Za-z0-9]+$/.test(value);
}

/**
   * 验证手机格式
   */
function mobile(value) {
  return /^1[3-9]\d{9}$/.test(value);
}

/**
   * 验证URL格式
   */
function url(value) {
  return /http(s)?:\/\/([\w-]+\.)+[\w-]+(\/[\w-.\/?%&=]*)?/.test(value);
}

/**
   * 验证日期格式
   */
function date(value) {
  return !/Invalid|NaN/.test(new Date(value).toString());
}

/**
   * 验证ISO类型的日期格式
   */
function dateISO(value) {
  return /^\d{4}[\/\-](0?[1-9]|1[012])[\/\-](0?[1-9]|[12][0-9]|3[01])$/.test(value);
}

/**
   * 验证十进制数字
   */
function number(value) {
  return /^(?:-?\d+|-?\d{1,3}(?:,\d{3})+)?(?:\.\d+)?$/.test(value);
}

/**
   * 验证整数
   */
function digits(value) {
  return /^\d+$/.test(value);
}

/**
   * 验证身份证号码
   */
function idCard(value) {
  return /^[1-9]\d{5}[1-9]\d{3}((0\d)|(1[0-2]))(([0|1|2]\d)|3[0-1])\d{3}([0-9]|X)$/.test(
  value);
}

/**
   * 是否车牌号
   */
function carNo(value) {
  // 新能源车牌
  var xreg = /^[京津沪渝冀豫云辽黑湘皖鲁新苏浙赣鄂桂甘晋蒙陕吉闽贵粤青藏川宁琼使领A-Z]{1}[A-Z]{1}(([0-9]{5}[DF]$)|([DF][A-HJ-NP-Z0-9][0-9]{4}$))/;
  // 旧车牌
  var creg = /^[京津沪渝冀豫云辽黑湘皖鲁新苏浙赣鄂桂甘晋蒙陕吉闽贵粤青藏川宁琼使领A-Z]{1}[A-Z]{1}[A-HJ-NP-Z0-9]{4}[A-HJ-NP-Z0-9挂学警港澳]{1}$/;
  if (value.length === 7) {
    return creg.test(value);
  } else if (value.length === 8) {
    return xreg.test(value);
  } else {
    return false;
  }
}

/**
   * 金额,只允许2位小数
   */
function amount(value) {
  //金额，只允许保留两位小数
  return /^[1-9]\d*(,\d{3})*(\.\d{1,2})?$|^0\.\d{1,2}$/.test(value);
}

/**
   * 中文
   */
function chinese(value) {
  var reg = /^[\u4e00-\u9fa5]+$/gi;
  return reg.test(value);
}

/**
   * 只能输入字母
   */
function letter(value) {
  return /^[a-zA-Z]*$/.test(value);
}

/**
   * 只能是字母或者数字
   */
function enOrNum(value) {
  //英文或者数字
  var reg = /^[0-9a-zA-Z]*$/g;
  return reg.test(value);
}

/**
   * 验证是否包含某个值
   */
function contains(value, param) {
  return value.indexOf(param) >= 0;
}

/**
   * 验证一个值范围[min, max]
   */
function range(value, param) {
  return value >= param[0] && value <= param[1];
}

/**
   * 验证一个长度范围[min, max]
   */
function rangeLength(value, param) {
  return value.length >= param[0] && value.length <= param[1];
}

/**
   * 是否固定电话
   */
function landline(value) {
  var reg = /^\d{3,4}-\d{7,8}(-\d{3,4})?$/;
  return reg.test(value);
}

/**
   * 判断是否为空
   */
function empty(value) {
  switch (typeof value) {
    case 'undefined':
      return true;
    case 'string':
      if (value.replace(/(^[ \t\n\r]*)|([ \t\n\r]*$)/g, '').length == 0) return true;
      break;
    case 'boolean':
      if (!value) return true;
      break;
    case 'number':
      if (0 === value || isNaN(value)) return true;
      break;
    case 'object':
      if (null === value || value.length === 0) return true;
      for (var i in value) {
        return false;
      }
      return true;}

  return false;
}

/**
   * 是否json字符串
   */
function jsonString(value) {
  if (typeof value == 'string') {
    try {
      var obj = JSON.parse(value);
      if (typeof obj == 'object' && obj) {
        return true;
      } else {
        return false;
      }
    } catch (e) {
      return false;
    }
  }
  return false;
}


/**
   * 是否数组
   */
function array(value) {
  if (typeof Array.isArray === "function") {
    return Array.isArray(value);
  } else {
    return Object.prototype.toString.call(value) === "[object Array]";
  }
}

/**
   * 是否对象
   */
function object(value) {
  return Object.prototype.toString.call(value) === '[object Object]';
}

/**
   * 是否短信验证码
   */
function code(value) {var len = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : 6;
  return new RegExp("^\\d{".concat(len, "}$")).test(value);
}var _default =


{
  email: email,
  mobile: mobile,
  url: url,
  date: date,
  dateISO: dateISO,
  number: number,
  digits: digits,
  idCard: idCard,
  carNo: carNo,
  amount: amount,
  chinese: chinese,
  letter: letter,
  enOrNum: enOrNum,
  contains: contains,
  range: range,
  rangeLength: rangeLength,
  empty: empty,
  isEmpty: empty,
  jsonString: jsonString,
  landline: landline,
  object: object,
  array: array,
  code: code };exports.default = _default;

/***/ }),
/* 21 */
/*!****************************************************************************************!*\
  !*** /Users/xingmangkeji/vue/yimei/node_modules/uview-ui/libs/function/queryParams.js ***!
  \****************************************************************************************/
/*! no static exports found */
/***/ (function(module, exports, __webpack_require__) {

"use strict";
Object.defineProperty(exports, "__esModule", { value: true });exports.default = void 0; /**
                                                                                                      * 对象转url参数
                                                                                                      * @param {*} data,对象
                                                                                                      * @param {*} isPrefix,是否自动加上"?"
                                                                                                      */
function queryParams() {var data = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : {};var isPrefix = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : true;var arrayFormat = arguments.length > 2 && arguments[2] !== undefined ? arguments[2] : 'brackets';
  var prefix = isPrefix ? '?' : '';
  var _result = [];
  if (['indices', 'brackets', 'repeat', 'comma'].indexOf(arrayFormat) == -1) arrayFormat = 'brackets';var _loop = function _loop(
  key) {
    var value = data[key];
    // 去掉为空的参数
    if (['', undefined, null].indexOf(value) >= 0) {
      return "continue";
    }
    // 如果值为数组，另行处理
    if (value.constructor === Array) {
      // e.g. {ids: [1, 2, 3]}
      switch (arrayFormat) {
        case 'indices':
          // 结果: ids[0]=1&ids[1]=2&ids[2]=3
          for (var i = 0; i < value.length; i++) {
            _result.push(key + '[' + i + ']=' + value[i]);
          }
          break;
        case 'brackets':
          // 结果: ids[]=1&ids[]=2&ids[]=3
          value.forEach(function (_value) {
            _result.push(key + '[]=' + _value);
          });
          break;
        case 'repeat':
          // 结果: ids=1&ids=2&ids=3
          value.forEach(function (_value) {
            _result.push(key + '=' + _value);
          });
          break;
        case 'comma':
          // 结果: ids=1,2,3
          var commaStr = "";
          value.forEach(function (_value) {
            commaStr += (commaStr ? "," : "") + _value;
          });
          _result.push(key + '=' + commaStr);
          break;
        default:
          value.forEach(function (_value) {
            _result.push(key + '[]=' + _value);
          });}

    } else {
      _result.push(key + '=' + value);
    }};for (var key in data) {var _ret = _loop(key);if (_ret === "continue") continue;
  }
  return _result.length ? prefix + _result.join('&') : '';
}var _default =

queryParams;exports.default = _default;

/***/ }),
/* 22 */
/*!**********************************************************************************!*\
  !*** /Users/xingmangkeji/vue/yimei/node_modules/uview-ui/libs/function/route.js ***!
  \**********************************************************************************/
/*! no static exports found */
/***/ (function(module, exports, __webpack_require__) {

"use strict";
/* WEBPACK VAR INJECTION */(function(uni) {Object.defineProperty(exports, "__esModule", { value: true });exports.default = void 0;var _regenerator = _interopRequireDefault(__webpack_require__(/*! ./node_modules/@babel/runtime/regenerator */ 5));function _interopRequireDefault(obj) {return obj && obj.__esModule ? obj : { default: obj };}function asyncGeneratorStep(gen, resolve, reject, _next, _throw, key, arg) {try {var info = gen[key](arg);var value = info.value;} catch (error) {reject(error);return;}if (info.done) {resolve(value);} else {Promise.resolve(value).then(_next, _throw);}}function _asyncToGenerator(fn) {return function () {var self = this,args = arguments;return new Promise(function (resolve, reject) {var gen = fn.apply(self, args);function _next(value) {asyncGeneratorStep(gen, resolve, reject, _next, _throw, "next", value);}function _throw(err) {asyncGeneratorStep(gen, resolve, reject, _next, _throw, "throw", err);}_next(undefined);});};}function _classCallCheck(instance, Constructor) {if (!(instance instanceof Constructor)) {throw new TypeError("Cannot call a class as a function");}}function _defineProperties(target, props) {for (var i = 0; i < props.length; i++) {var descriptor = props[i];descriptor.enumerable = descriptor.enumerable || false;descriptor.configurable = true;if ("value" in descriptor) descriptor.writable = true;Object.defineProperty(target, descriptor.key, descriptor);}}function _createClass(Constructor, protoProps, staticProps) {if (protoProps) _defineProperties(Constructor.prototype, protoProps);if (staticProps) _defineProperties(Constructor, staticProps);return Constructor;} /**
                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                  * 路由跳转方法，该方法相对于直接使用uni.xxx的好处是使用更加简单快捷
并且带有路由拦截功能
var

Router = /*#__PURE__*/function () {
  function Router() {_classCallCheck(this, Router);
    // 原始属性定义
    this.config = {
      type: 'navigateTo',
      url: '',
      delta: 1, // navigateBack页面后退时,回退的层数
      params: {}, // 传递的参数
      animationType: 'pop-in', // 窗口动画,只在APP有效
      animationDuration: 300, // 窗口动画持续时间,单位毫秒,只在APP有效
      intercept: false // 是否需要拦截
    };
    // 因为route方法是需要对外赋值给另外的对象使用，同时route内部有使用this，会导致route失去上下文
    // 这里在构造函数中进行this绑定
    this.route = this.route.bind(this);
  }

  // 判断url前面是否有"/"，如果没有则加上，否则无法跳转
  _createClass(Router, [{ key: "addRootPath", value: function addRootPath(url) {
      return url[0] === '/' ? url : "/".concat(url);
    }

    // 整合路由参数
  }, { key: "mixinParam", value: function mixinParam(url, params) {
      url = url && this.addRootPath(url);

      // 使用正则匹配，主要依据是判断是否有"/","?","="等，如“/page/index/index?name=mary"
      // 如果有url中有get参数，转换后无需带上"?"
      var query = '';
      if (/.*\/.*\?.*=.*/.test(url)) {
        // object对象转为get类型的参数
        query = uni.$u.queryParams(params, false);
        // 因为已有get参数,所以后面拼接的参数需要带上"&"隔开
        return url += "&" + query;
      } else {
        // 直接拼接参数，因为此处url中没有后面的query参数，也就没有"?/&"之类的符号
        query = uni.$u.queryParams(params);
        return url += query;
      }
    }

    // 对外的方法名称
  }, { key: "route", value: function () {var _route = _asyncToGenerator( /*#__PURE__*/_regenerator.default.mark(function _callee() {var options,params,mergeConfig,isNext,_args = arguments;return _regenerator.default.wrap(function _callee$(_context) {while (1) {switch (_context.prev = _context.next) {case 0:options = _args.length > 0 && _args[0] !== undefined ? _args[0] : {};params = _args.length > 1 && _args[1] !== undefined ? _args[1] : {};
                // 合并用户的配置和内部的默认配置
                mergeConfig = {};

                if (typeof options === 'string') {
                  // 如果options为字符串，则为route(url, params)的形式
                  mergeConfig.url = this.mixinParam(options, params);
                  mergeConfig.type = 'navigateTo';
                } else {
                  mergeConfig = uni.$u.deepClone(options, this.config);
                  // 否则正常使用mergeConfig中的url和params进行拼接
                  mergeConfig.url = this.mixinParam(options.url, options.params);
                }

                if (params.intercept) {
                  this.config.intercept = params.intercept;
                }
                // params参数也带给拦截器
                mergeConfig.params = params;
                // 合并内外部参数
                mergeConfig = uni.$u.deepMerge(this.config, mergeConfig);
                // 判断用户是否定义了拦截器
                if (!(typeof uni.$u.routeIntercept === 'function')) {_context.next = 14;break;}_context.next = 10;return (

                  new Promise(function (resolve, reject) {
                    uni.$u.routeIntercept(mergeConfig, resolve);
                  }));case 10:isNext = _context.sent;
                // 如果isNext为true，则执行路由跳转
                isNext && this.openPage(mergeConfig);_context.next = 15;break;case 14:

                this.openPage(mergeConfig);case 15:case "end":return _context.stop();}}}, _callee, this);}));function route() {return _route.apply(this, arguments);}return route;}()



    // 执行路由跳转
  }, { key: "openPage", value: function openPage(config) {
      // 解构参数
      var
      url =




      config.url,type = config.type,delta = config.delta,animationType = config.animationType,animationDuration = config.animationDuration;
      if (config.type == 'navigateTo' || config.type == 'to') {
        uni.navigateTo({
          url: url,
          animationType: animationType,
          animationDuration: animationDuration });

      }
      if (config.type == 'redirectTo' || config.type == 'redirect') {
        uni.redirectTo({
          url: url });

      }
      if (config.type == 'switchTab' || config.type == 'tab') {
        uni.switchTab({
          url: url });

      }
      if (config.type == 'reLaunch' || config.type == 'launch') {
        uni.reLaunch({
          url: url });

      }
      if (config.type == 'navigateBack' || config.type == 'back') {
        uni.navigateBack({
          delta: delta });

      }
    } }]);return Router;}();var _default =


new Router().route;exports.default = _default;
/* WEBPACK VAR INJECTION */}.call(this, __webpack_require__(/*! ./node_modules/@dcloudio/uni-mp-weixin/dist/index.js */ 1)["default"]))

/***/ }),
/* 23 */
/*!***************************************************************************************!*\
  !*** /Users/xingmangkeji/vue/yimei/node_modules/uview-ui/libs/function/timeFormat.js ***!
  \***************************************************************************************/
/*! no static exports found */
/***/ (function(module, exports, __webpack_require__) {

"use strict";
Object.defineProperty(exports, "__esModule", { value: true });exports.default = void 0; // padStart 的 polyfill，因为某些机型或情况，还无法支持es7的padStart，比如电脑版的微信小程序
// 所以这里做一个兼容polyfill的兼容处理
if (!String.prototype.padStart) {
  // 为了方便表示这里 fillString 用了ES6 的默认参数，不影响理解
  String.prototype.padStart = function (maxLength) {var fillString = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : ' ';
    if (Object.prototype.toString.call(fillString) !== "[object String]") throw new TypeError(
    'fillString must be String');
    var str = this;
    // 返回 String(str) 这里是为了使返回的值是字符串字面量，在控制台中更符合直觉
    if (str.length >= maxLength) return String(str);

    var fillLength = maxLength - str.length,
    times = Math.ceil(fillLength / fillString.length);
    while (times >>= 1) {
      fillString += fillString;
      if (times === 1) {
        fillString += fillString;
      }
    }
    return fillString.slice(0, fillLength) + str;
  };
}

// 其他更多是格式化有如下:
// yyyy:mm:dd|yyyy:mm|yyyy年mm月dd日|yyyy年mm月dd日 hh时MM分等,可自定义组合
function timeFormat() {var dateTime = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : null;var fmt = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : 'yyyy-mm-dd';
  // 如果为null,则格式化当前时间
  if (!dateTime) dateTime = Number(new Date());
  // 如果dateTime长度为10或者13，则为秒和毫秒的时间戳，如果超过13位，则为其他的时间格式
  if (dateTime.toString().length == 10) dateTime *= 1000;
  var date = new Date(dateTime);
  var ret;
  var opt = {
    "y+": date.getFullYear().toString(), // 年
    "m+": (date.getMonth() + 1).toString(), // 月
    "d+": date.getDate().toString(), // 日
    "h+": date.getHours().toString(), // 时
    "M+": date.getMinutes().toString(), // 分
    "s+": date.getSeconds().toString() // 秒
    // 有其他格式化字符需求可以继续添加，必须转化成字符串
  };
  for (var k in opt) {
    ret = new RegExp("(" + k + ")").exec(fmt);
    if (ret) {
      fmt = fmt.replace(ret[1], ret[1].length == 1 ? opt[k] : opt[k].padStart(ret[1].length, "0"));
    };
  };
  return fmt;
}var _default =

timeFormat;exports.default = _default;

/***/ }),
/* 24 */
/*!*************************************************************************************!*\
  !*** /Users/xingmangkeji/vue/yimei/node_modules/uview-ui/libs/function/timeFrom.js ***!
  \*************************************************************************************/
/*! no static exports found */
/***/ (function(module, exports, __webpack_require__) {

"use strict";
Object.defineProperty(exports, "__esModule", { value: true });exports.default = void 0;var _timeFormat = _interopRequireDefault(__webpack_require__(/*! ../../libs/function/timeFormat.js */ 23));function _interopRequireDefault(obj) {return obj && obj.__esModule ? obj : { default: obj };}

/**
                                                                                                                                                                                                                                                                                          * 时间戳转为多久之前
                                                                                                                                                                                                                                                                                          * @param String timestamp 时间戳
                                                                                                                                                                                                                                                                                          * @param String | Boolean format 如果为时间格式字符串，超出一定时间范围，返回固定的时间格式；
                                                                                                                                                                                                                                                                                          * 如果为布尔值false，无论什么时间，都返回多久以前的格式
                                                                                                                                                                                                                                                                                          */
function timeFrom() {var dateTime = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : null;var format = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : 'yyyy-mm-dd';
  // 如果为null,则格式化当前时间
  if (!dateTime) dateTime = Number(new Date());
  // 如果dateTime长度为10或者13，则为秒和毫秒的时间戳，如果超过13位，则为其他的时间格式
  if (dateTime.toString().length == 10) dateTime *= 1000;
  var timestamp = +new Date(Number(dateTime));

  var timer = (Number(new Date()) - timestamp) / 1000;
  // 如果小于5分钟,则返回"刚刚",其他以此类推
  var tips = '';
  switch (true) {
    case timer < 300:
      tips = '刚刚';
      break;
    case timer >= 300 && timer < 3600:
      tips = parseInt(timer / 60) + '分钟前';
      break;
    case timer >= 3600 && timer < 86400:
      tips = parseInt(timer / 3600) + '小时前';
      break;
    case timer >= 86400 && timer < 2592000:
      tips = parseInt(timer / 86400) + '天前';
      break;
    default:
      // 如果format为false，则无论什么时间戳，都显示xx之前
      if (format === false) {
        if (timer >= 2592000 && timer < 365 * 86400) {
          tips = parseInt(timer / (86400 * 30)) + '个月前';
        } else {
          tips = parseInt(timer / (86400 * 365)) + '年前';
        }
      } else {
        tips = (0, _timeFormat.default)(timestamp, format);
      }}

  return tips;
}var _default =

timeFrom;exports.default = _default;

/***/ }),
/* 25 */
/*!******************************************************************************************!*\
  !*** /Users/xingmangkeji/vue/yimei/node_modules/uview-ui/libs/function/colorGradient.js ***!
  \******************************************************************************************/
/*! no static exports found */
/***/ (function(module, exports, __webpack_require__) {

"use strict";
Object.defineProperty(exports, "__esModule", { value: true });exports.default = void 0; /**
                                                                                                      * 求两个颜色之间的渐变值
                                                                                                      * @param {string} startColor 开始的颜色
                                                                                                      * @param {string} endColor 结束的颜色
                                                                                                      * @param {number} step 颜色等分的份额
                                                                                                      * */
function colorGradient() {var startColor = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : 'rgb(0, 0, 0)';var endColor = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : 'rgb(255, 255, 255)';var step = arguments.length > 2 && arguments[2] !== undefined ? arguments[2] : 10;
  var startRGB = hexToRgb(startColor, false); //转换为rgb数组模式
  var startR = startRGB[0];
  var startG = startRGB[1];
  var startB = startRGB[2];

  var endRGB = hexToRgb(endColor, false);
  var endR = endRGB[0];
  var endG = endRGB[1];
  var endB = endRGB[2];

  var sR = (endR - startR) / step; //总差值
  var sG = (endG - startG) / step;
  var sB = (endB - startB) / step;
  var colorArr = [];
  for (var i = 0; i < step; i++) {
    //计算每一步的hex值 
    var hex = rgbToHex('rgb(' + Math.round(sR * i + startR) + ',' + Math.round(sG * i + startG) + ',' + Math.round(sB *
    i + startB) + ')');
    colorArr.push(hex);
  }
  return colorArr;
}

// 将hex表示方式转换为rgb表示方式(这里返回rgb数组模式)
function hexToRgb(sColor) {var str = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : true;
  var reg = /^#([0-9a-fA-f]{3}|[0-9a-fA-f]{6})$/;
  sColor = sColor.toLowerCase();
  if (sColor && reg.test(sColor)) {
    if (sColor.length === 4) {
      var sColorNew = "#";
      for (var i = 1; i < 4; i += 1) {
        sColorNew += sColor.slice(i, i + 1).concat(sColor.slice(i, i + 1));
      }
      sColor = sColorNew;
    }
    //处理六位的颜色值
    var sColorChange = [];
    for (var _i = 1; _i < 7; _i += 2) {
      sColorChange.push(parseInt("0x" + sColor.slice(_i, _i + 2)));
    }
    if (!str) {
      return sColorChange;
    } else {
      return "rgb(".concat(sColorChange[0], ",").concat(sColorChange[1], ",").concat(sColorChange[2], ")");
    }
  } else if (/^(rgb|RGB)/.test(sColor)) {
    var arr = sColor.replace(/(?:\(|\)|rgb|RGB)*/g, "").split(",");
    return arr.map(function (val) {return Number(val);});
  } else {
    return sColor;
  }
};

// 将rgb表示方式转换为hex表示方式
function rgbToHex(rgb) {
  var _this = rgb;
  var reg = /^#([0-9a-fA-f]{3}|[0-9a-fA-f]{6})$/;
  if (/^(rgb|RGB)/.test(_this)) {
    var aColor = _this.replace(/(?:\(|\)|rgb|RGB)*/g, "").split(",");
    var strHex = "#";
    for (var i = 0; i < aColor.length; i++) {
      var hex = Number(aColor[i]).toString(16);
      hex = String(hex).length == 1 ? 0 + '' + hex : hex; // 保证每个rgb的值为2位
      if (hex === "0") {
        hex += hex;
      }
      strHex += hex;
    }
    if (strHex.length !== 7) {
      strHex = _this;
    }
    return strHex;
  } else if (reg.test(_this)) {
    var aNum = _this.replace(/#/, "").split("");
    if (aNum.length === 6) {
      return _this;
    } else if (aNum.length === 3) {
      var numHex = "#";
      for (var _i2 = 0; _i2 < aNum.length; _i2 += 1) {
        numHex += aNum[_i2] + aNum[_i2];
      }
      return numHex;
    }
  } else {
    return _this;
  }
}


/**
  * JS颜色十六进制转换为rgb或rgba,返回的格式为 rgba（255，255，255，0.5）字符串
  * sHex为传入的十六进制的色值
  * alpha为rgba的透明度
  */
function colorToRgba(color) {var alpha = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : 0.3;
  color = rgbToHex(color);
  // 十六进制颜色值的正则表达式
  var reg = /^#([0-9a-fA-f]{3}|[0-9a-fA-f]{6})$/;
  /* 16进制颜色转为RGB格式 */
  var sColor = color.toLowerCase();
  if (sColor && reg.test(sColor)) {
    if (sColor.length === 4) {
      var sColorNew = '#';
      for (var i = 1; i < 4; i += 1) {
        sColorNew += sColor.slice(i, i + 1).concat(sColor.slice(i, i + 1));
      }
      sColor = sColorNew;
    }
    // 处理六位的颜色值
    var sColorChange = [];
    for (var _i3 = 1; _i3 < 7; _i3 += 2) {
      sColorChange.push(parseInt('0x' + sColor.slice(_i3, _i3 + 2)));
    }
    // return sColorChange.join(',')
    return 'rgba(' + sColorChange.join(',') + ',' + alpha + ')';
  } else
  {
    return sColor;
  }
}var _default =

{
  colorGradient: colorGradient,
  hexToRgb: hexToRgb,
  rgbToHex: rgbToHex,
  colorToRgba: colorToRgba };exports.default = _default;

/***/ }),
/* 26 */
/*!*********************************************************************************!*\
  !*** /Users/xingmangkeji/vue/yimei/node_modules/uview-ui/libs/function/guid.js ***!
  \*********************************************************************************/
/*! no static exports found */
/***/ (function(module, exports, __webpack_require__) {

"use strict";
Object.defineProperty(exports, "__esModule", { value: true });exports.default = void 0; /**
                                                                                                      * 本算法来源于简书开源代码，详见：https://www.jianshu.com/p/fdbf293d0a85
                                                                                                      * 全局唯一标识符（uuid，Globally Unique Identifier）,也称作 uuid(Universally Unique IDentifier) 
                                                                                                      * 一般用于多个组件之间,给它一个唯一的标识符,或者v-for循环的时候,如果使用数组的index可能会导致更新列表出现问题
                                                                                                      * 最可能的情况是左滑删除item或者对某条信息流"不喜欢"并去掉它的时候,会导致组件内的数据可能出现错乱
                                                                                                      * v-for的时候,推荐使用后端返回的id而不是循环的index
                                                                                                      * @param {Number} len uuid的长度
                                                                                                      * @param {Boolean} firstU 将返回的首字母置为"u"
                                                                                                      * @param {Nubmer} radix 生成uuid的基数(意味着返回的字符串都是这个基数),2-二进制,8-八进制,10-十进制,16-十六进制
                                                                                                      */
function guid() {var len = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : 32;var firstU = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : true;var radix = arguments.length > 2 && arguments[2] !== undefined ? arguments[2] : null;
  var chars = '0123456789ABCDEFGHIJKLMNOPQRSTUVWXYZabcdefghijklmnopqrstuvwxyz'.split('');
  var uuid = [];
  radix = radix || chars.length;

  if (len) {
    // 如果指定uuid长度,只是取随机的字符,0|x为位运算,能去掉x的小数位,返回整数位
    for (var i = 0; i < len; i++) {uuid[i] = chars[0 | Math.random() * radix];}
  } else {
    var r;
    // rfc4122标准要求返回的uuid中,某些位为固定的字符
    uuid[8] = uuid[13] = uuid[18] = uuid[23] = '-';
    uuid[14] = '4';

    for (var _i = 0; _i < 36; _i++) {
      if (!uuid[_i]) {
        r = 0 | Math.random() * 16;
        uuid[_i] = chars[_i == 19 ? r & 0x3 | 0x8 : r];
      }
    }
  }
  // 移除第一个字符,并用u替代,因为第一个字符为数值时,该guuid不能用作id或者class
  if (firstU) {
    uuid.shift();
    return 'u' + uuid.join('');
  } else {
    return uuid.join('');
  }
}var _default =

guid;exports.default = _default;

/***/ }),
/* 27 */
/*!**********************************************************************************!*\
  !*** /Users/xingmangkeji/vue/yimei/node_modules/uview-ui/libs/function/color.js ***!
  \**********************************************************************************/
/*! no static exports found */
/***/ (function(module, exports, __webpack_require__) {

"use strict";
Object.defineProperty(exports, "__esModule", { value: true });exports.default = void 0; // 为了让用户能够自定义主题，会逐步弃用此文件，各颜色通过css提供
// 为了给某些特殊场景使用和向后兼容，无需删除此文件(2020-06-20)
var color = {
  primary: "#2979ff",
  primaryDark: "#2b85e4",
  primaryDisabled: "#a0cfff",
  primaryLight: "#ecf5ff",
  bgColor: "#f3f4f6",

  info: "#909399",
  infoDark: "#82848a",
  infoDisabled: "#c8c9cc",
  infoLight: "#f4f4f5",

  warning: "#ff9900",
  warningDark: "#f29100",
  warningDisabled: "#fcbd71",
  warningLight: "#fdf6ec",

  error: "#fa3534",
  errorDark: "#dd6161",
  errorDisabled: "#fab6b6",
  errorLight: "#fef0f0",

  success: "#19be6b",
  successDark: "#18b566",
  successDisabled: "#71d5a1",
  successLight: "#dbf1e1",

  mainColor: "#303133",
  contentColor: "#606266",
  tipsColor: "#909399",
  lightColor: "#c0c4cc",
  borderColor: "#e4e7ed" };var _default =


color;exports.default = _default;

/***/ }),
/* 28 */
/*!**************************************************************************************!*\
  !*** /Users/xingmangkeji/vue/yimei/node_modules/uview-ui/libs/function/type2icon.js ***!
  \**************************************************************************************/
/*! no static exports found */
/***/ (function(module, exports, __webpack_require__) {

"use strict";
Object.defineProperty(exports, "__esModule", { value: true });exports.default = void 0; /**
                                                                                                      * 根据主题type值,获取对应的图标
                                                                                                      * @param String type 主题名称,primary|info|error|warning|success
                                                                                                      * @param String fill 是否使用fill填充实体的图标  
                                                                                                      */
function type2icon() {var type = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : 'success';var fill = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : false;
  // 如果非预置值,默认为success
  if (['primary', 'info', 'error', 'warning', 'success'].indexOf(type) == -1) type = 'success';
  var iconName = '';
  // 目前(2019-12-12),info和primary使用同一个图标
  switch (type) {
    case 'primary':
      iconName = 'info-circle';
      break;
    case 'info':
      iconName = 'info-circle';
      break;
    case 'error':
      iconName = 'close-circle';
      break;
    case 'warning':
      iconName = 'error-circle';
      break;
    case 'success':
      iconName = 'checkmark-circle';
      break;
    default:
      iconName = 'checkmark-circle';}

  // 是否是实体类型,加上-fill,在icon组件库中,实体的类名是后面加-fill的
  if (fill) iconName += '-fill';
  return iconName;
}var _default =

type2icon;exports.default = _default;

/***/ }),
/* 29 */
/*!****************************************************************************************!*\
  !*** /Users/xingmangkeji/vue/yimei/node_modules/uview-ui/libs/function/randomArray.js ***!
  \****************************************************************************************/
/*! no static exports found */
/***/ (function(module, exports, __webpack_require__) {

"use strict";
Object.defineProperty(exports, "__esModule", { value: true });exports.default = void 0; // 打乱数组
function randomArray() {var array = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : [];
  // 原理是sort排序,Math.random()产生0<= x < 1之间的数,会导致x-0.05大于或者小于0
  return array.sort(function () {return Math.random() - 0.5;});
}var _default =

randomArray;exports.default = _default;

/***/ }),
/* 30 */
/*!************************************************************************************!*\
  !*** /Users/xingmangkeji/vue/yimei/node_modules/uview-ui/libs/function/addUnit.js ***!
  \************************************************************************************/
/*! no static exports found */
/***/ (function(module, exports, __webpack_require__) {

"use strict";
Object.defineProperty(exports, "__esModule", { value: true });exports.default = addUnit;var _test = _interopRequireDefault(__webpack_require__(/*! ./test.js */ 20));function _interopRequireDefault(obj) {return obj && obj.__esModule ? obj : { default: obj };}

// 添加单位，如果有rpx，%，px等单位结尾或者值为auto，直接返回，否则加上rpx单位结尾
function addUnit() {var value = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : 'auto';var unit = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : 'rpx';
  value = String(value);
  // 用uView内置验证规则中的number判断是否为数值
  return _test.default.number(value) ? "".concat(value).concat(unit) : value;
}

/***/ }),
/* 31 */
/*!***********************************************************************************!*\
  !*** /Users/xingmangkeji/vue/yimei/node_modules/uview-ui/libs/function/random.js ***!
  \***********************************************************************************/
/*! no static exports found */
/***/ (function(module, exports, __webpack_require__) {

"use strict";
Object.defineProperty(exports, "__esModule", { value: true });exports.default = void 0;function random(min, max) {
  if (min >= 0 && max > 0 && max >= min) {
    var gab = max - min + 1;
    return Math.floor(Math.random() * gab + min);
  } else {
    return 0;
  }
}var _default =

random;exports.default = _default;

/***/ }),
/* 32 */
/*!*********************************************************************************!*\
  !*** /Users/xingmangkeji/vue/yimei/node_modules/uview-ui/libs/function/trim.js ***!
  \*********************************************************************************/
/*! no static exports found */
/***/ (function(module, exports, __webpack_require__) {

"use strict";
Object.defineProperty(exports, "__esModule", { value: true });exports.default = void 0;function trim(str) {var pos = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : 'both';
  if (pos == 'both') {
    return str.replace(/^\s+|\s+$/g, "");
  } else if (pos == "left") {
    return str.replace(/^\s*/, '');
  } else if (pos == 'right') {
    return str.replace(/(\s*$)/g, "");
  } else if (pos == 'all') {
    return str.replace(/\s+/g, "");
  } else {
    return str;
  }
}var _default =

trim;exports.default = _default;

/***/ }),
/* 33 */
/*!**********************************************************************************!*\
  !*** /Users/xingmangkeji/vue/yimei/node_modules/uview-ui/libs/function/toast.js ***!
  \**********************************************************************************/
/*! no static exports found */
/***/ (function(module, exports, __webpack_require__) {

"use strict";
/* WEBPACK VAR INJECTION */(function(uni) {Object.defineProperty(exports, "__esModule", { value: true });exports.default = void 0;function toast(title) {var duration = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : 1500;
  uni.showToast({
    title: title,
    icon: 'none',
    duration: duration });

}var _default =

toast;exports.default = _default;
/* WEBPACK VAR INJECTION */}.call(this, __webpack_require__(/*! ./node_modules/@dcloudio/uni-mp-weixin/dist/index.js */ 1)["default"]))

/***/ }),
/* 34 */
/*!**************************************************************************************!*\
  !*** /Users/xingmangkeji/vue/yimei/node_modules/uview-ui/libs/function/getParent.js ***!
  \**************************************************************************************/
/*! no static exports found */
/***/ (function(module, exports, __webpack_require__) {

"use strict";
Object.defineProperty(exports, "__esModule", { value: true });exports.default = getParent; // 获取父组件的参数，因为支付宝小程序不支持provide/inject的写法
// this.$parent在非H5中，可以准确获取到父组件，但是在H5中，需要多次this.$parent.$parent.xxx
function getParent(name, keys) {
  var parent = this.$parent;
  // 通过while历遍，这里主要是为了H5需要多层解析的问题
  while (parent) {
    // 父组件
    if (parent.$options.name !== name) {
      // 如果组件的name不相等，继续上一级寻找
      parent = parent.$parent;
    } else {var _ret = function () {
        var data = {};
        // 判断keys是否数组，如果传过来的是一个数组，那么直接使用数组元素值当做键值去父组件寻找
        if (Array.isArray(keys)) {
          keys.map(function (val) {
            data[val] = parent[val] ? parent[val] : '';
          });
        } else {
          // 历遍传过来的对象参数
          for (var i in keys) {
            // 如果子组件有此值则用，无此值则用父组件的值
            // 判断是否空数组，如果是，则用父组件的值，否则用子组件的值
            if (Array.isArray(keys[i])) {
              if (keys[i].length) {
                data[i] = keys[i];
              } else {
                data[i] = parent[i];
              }
            } else if (keys[i].constructor === Object) {
              // 判断是否对象，如果是对象，且有属性，那么使用子组件的值，否则使用父组件的值
              if (Object.keys(keys[i]).length) {
                data[i] = keys[i];
              } else {
                data[i] = parent[i];
              }
            } else {
              // 只要子组件有传值，即使是false值，也是“传值”了，也需要覆盖父组件的同名参数
              data[i] = keys[i] || keys[i] === false ? keys[i] : parent[i];
            }
          }
        }
        return { v: data };}();if (typeof _ret === "object") return _ret.v;
    }
  }

  return {};
}

/***/ }),
/* 35 */
/*!************************************************************************************!*\
  !*** /Users/xingmangkeji/vue/yimei/node_modules/uview-ui/libs/function/$parent.js ***!
  \************************************************************************************/
/*! no static exports found */
/***/ (function(module, exports, __webpack_require__) {

"use strict";
Object.defineProperty(exports, "__esModule", { value: true });exports.default = $parent; // 获取父组件的参数，因为支付宝小程序不支持provide/inject的写法
// this.$parent在非H5中，可以准确获取到父组件，但是在H5中，需要多次this.$parent.$parent.xxx
// 这里默认值等于undefined有它的含义，因为最顶层元素(组件)的$parent就是undefined，意味着不传name
// 值(默认为undefined)，就是查找最顶层的$parent
function $parent() {var name = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : undefined;
  var parent = this.$parent;
  // 通过while历遍，这里主要是为了H5需要多层解析的问题
  while (parent) {
    // 父组件
    if (parent.$options && parent.$options.name !== name) {
      // 如果组件的name不相等，继续上一级寻找
      parent = parent.$parent;
    } else {
      return parent;
    }
  }
  return false;
}

/***/ }),
/* 36 */
/*!********************************************************************************!*\
  !*** /Users/xingmangkeji/vue/yimei/node_modules/uview-ui/libs/function/sys.js ***!
  \********************************************************************************/
/*! no static exports found */
/***/ (function(module, exports, __webpack_require__) {

"use strict";
/* WEBPACK VAR INJECTION */(function(uni) {Object.defineProperty(exports, "__esModule", { value: true });exports.os = os;exports.sys = sys;function os() {
  return uni.getSystemInfoSync().platform;
};

function sys() {
  return uni.getSystemInfoSync();
}
/* WEBPACK VAR INJECTION */}.call(this, __webpack_require__(/*! ./node_modules/@dcloudio/uni-mp-weixin/dist/index.js */ 1)["default"]))

/***/ }),
/* 37 */
/*!*************************************************************************************!*\
  !*** /Users/xingmangkeji/vue/yimei/node_modules/uview-ui/libs/function/debounce.js ***!
  \*************************************************************************************/
/*! no static exports found */
/***/ (function(module, exports, __webpack_require__) {

"use strict";
Object.defineProperty(exports, "__esModule", { value: true });exports.default = void 0;var timeout = null;

/**
                                                                                                                         * 防抖原理：一定时间内，只有最后一次操作，再过wait毫秒后才执行函数
                                                                                                                         * 
                                                                                                                         * @param {Function} func 要执行的回调函数 
                                                                                                                         * @param {Number} wait 延时的时间
                                                                                                                         * @param {Boolean} immediate 是否立即执行 
                                                                                                                         * @return null
                                                                                                                         */
function debounce(func) {var wait = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : 500;var immediate = arguments.length > 2 && arguments[2] !== undefined ? arguments[2] : false;
  // 清除定时器
  if (timeout !== null) clearTimeout(timeout);
  // 立即执行，此类情况一般用不到
  if (immediate) {
    var callNow = !timeout;
    timeout = setTimeout(function () {
      timeout = null;
    }, wait);
    if (callNow) typeof func === 'function' && func();
  } else {
    // 设置定时器，当最后一次操作后，timeout不会再被清除，所以在延时wait毫秒后执行func回调方法
    timeout = setTimeout(function () {
      typeof func === 'function' && func();
    }, wait);
  }
}var _default =

debounce;exports.default = _default;

/***/ }),
/* 38 */
/*!*************************************************************************************!*\
  !*** /Users/xingmangkeji/vue/yimei/node_modules/uview-ui/libs/function/throttle.js ***!
  \*************************************************************************************/
/*! no static exports found */
/***/ (function(module, exports, __webpack_require__) {

"use strict";
Object.defineProperty(exports, "__esModule", { value: true });exports.default = void 0;var timer, flag;
/**
                                                                                                                      * 节流原理：在一定时间内，只能触发一次
                                                                                                                      * 
                                                                                                                      * @param {Function} func 要执行的回调函数 
                                                                                                                      * @param {Number} wait 延时的时间
                                                                                                                      * @param {Boolean} immediate 是否立即执行
                                                                                                                      * @return null
                                                                                                                      */
function throttle(func) {var wait = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : 500;var immediate = arguments.length > 2 && arguments[2] !== undefined ? arguments[2] : true;
  if (immediate) {
    if (!flag) {
      flag = true;
      // 如果是立即执行，则在wait毫秒内开始时执行
      typeof func === 'function' && func();
      timer = setTimeout(function () {
        flag = false;
      }, wait);
    }
  } else {
    if (!flag) {
      flag = true;
      // 如果是非立即执行，则在wait毫秒内的结束处执行
      timer = setTimeout(function () {
        flag = false;
        typeof func === 'function' && func();
      }, wait);
    }

  }
};var _default =
throttle;exports.default = _default;

/***/ }),
/* 39 */
/*!*********************************************************************************!*\
  !*** /Users/xingmangkeji/vue/yimei/node_modules/uview-ui/libs/config/config.js ***!
  \*********************************************************************************/
/*! no static exports found */
/***/ (function(module, exports, __webpack_require__) {

"use strict";
Object.defineProperty(exports, "__esModule", { value: true });exports.default = void 0; // 此版本发布于2020-12-17
var version = '1.8.3';var _default =

{
  v: version,
  version: version,
  // 主题名称
  type: [
  'primary',
  'success',
  'info',
  'error',
  'warning'] };exports.default = _default;

/***/ }),
/* 40 */
/*!*********************************************************************************!*\
  !*** /Users/xingmangkeji/vue/yimei/node_modules/uview-ui/libs/config/zIndex.js ***!
  \*********************************************************************************/
/*! no static exports found */
/***/ (function(module, exports, __webpack_require__) {

"use strict";
Object.defineProperty(exports, "__esModule", { value: true });exports.default = void 0; // uniapp在H5中各API的z-index值如下：
/**
 * actionsheet: 999
 * modal: 999
 * navigate: 998
 * tabbar: 998
 * toast: 999
 */var _default =

{
  toast: 10090,
  noNetwork: 10080,
  // popup包含popup，actionsheet，keyboard，picker的值
  popup: 10075,
  mask: 10070,
  navbar: 980,
  topTips: 975,
  sticky: 970,
  indexListSticky: 965 };exports.default = _default;

/***/ }),
/* 41 */
/*!**************************************************!*\
  !*** /Users/xingmangkeji/vue/yimei/api/index.js ***!
  \**************************************************/
/*! no static exports found */
/***/ (function(module, exports, __webpack_require__) {

"use strict";
/* WEBPACK VAR INJECTION */(function(uni) {Object.defineProperty(exports, "__esModule", { value: true });exports.default = void 0;var _regenerator = _interopRequireDefault(__webpack_require__(/*! ./node_modules/@babel/runtime/regenerator */ 5));var _axios = _interopRequireDefault(__webpack_require__(/*! axios */ 42));
var _vue = _interopRequireDefault(__webpack_require__(/*! vue */ 3));
var _url = _interopRequireDefault(__webpack_require__(/*! ./url.js */ 71));function _interopRequireDefault(obj) {return obj && obj.__esModule ? obj : { default: obj };}function asyncGeneratorStep(gen, resolve, reject, _next, _throw, key, arg) {try {var info = gen[key](arg);var value = info.value;} catch (error) {reject(error);return;}if (info.done) {resolve(value);} else {Promise.resolve(value).then(_next, _throw);}}function _asyncToGenerator(fn) {return function () {var self = this,args = arguments;return new Promise(function (resolve, reject) {var gen = fn.apply(self, args);function _next(value) {asyncGeneratorStep(gen, resolve, reject, _next, _throw, "next", value);}function _throw(err) {asyncGeneratorStep(gen, resolve, reject, _next, _throw, "throw", err);}_next(undefined);});};}function ownKeys(object, enumerableOnly) {var keys = Object.keys(object);if (Object.getOwnPropertySymbols) {var symbols = Object.getOwnPropertySymbols(object);if (enumerableOnly) symbols = symbols.filter(function (sym) {return Object.getOwnPropertyDescriptor(object, sym).enumerable;});keys.push.apply(keys, symbols);}return keys;}function _objectSpread(target) {for (var i = 1; i < arguments.length; i++) {var source = arguments[i] != null ? arguments[i] : {};if (i % 2) {ownKeys(Object(source), true).forEach(function (key) {_defineProperty(target, key, source[key]);});} else if (Object.getOwnPropertyDescriptors) {Object.defineProperties(target, Object.getOwnPropertyDescriptors(source));} else {ownKeys(Object(source)).forEach(function (key) {Object.defineProperty(target, key, Object.getOwnPropertyDescriptor(source, key));});}}return target;}function _defineProperty(obj, key, value) {if (key in obj) {Object.defineProperty(obj, key, { value: value, enumerable: true, configurable: true, writable: true });} else {obj[key] = value;}return obj;}
var vue = new _vue.default();
var myPost = _axios.default.create({
  baseURL: _url.default.baseUrl,
  method: 'post'
  // timeout: 1000,
});
var myUploadImg = _axios.default.create({
  baseURL: _url.default.baseUrl,
  method: 'post'
  // timeout: 1000,
});
var myGet = _axios.default.create({
  baseURL: _url.default.baseUrl,
  method: 'get'
  // timeout: 1000,
});
var myDelete = _axios.default.create({
  baseURL: _url.default.baseUrl,
  method: 'delete'
  // timeout: 1000,
});
var myPut = _axios.default.create({
  baseURL: _url.default.baseUrl,
  method: 'put'
  // timeout: 1000,
});
var dzpMyPost = _axios.default.create({
  baseURL: _url.default.dzpBaseUrl,
  method: 'post'
  // timeout: 1000,
});
var dzpMyGet = _axios.default.create({
  baseURL: _url.default.dzpBaseUrl,
  method: 'get'
  // timeout: 1000,
});
var dzpMyDelete = _axios.default.create({
  baseURL: _url.default.dzpBaseUrl,
  method: 'delete'
  // timeout: 1000,
});
var dzpMyPut = _axios.default.create({
  baseURL: _url.default.dzpBaseUrl,
  method: 'put'
  // timeout: 1000,
});
_axios.default.defaults.adapter = function (config) {//自己定义个适配器，用来适配uniapp的语法
  return new Promise(function (resolve, reject) {
    var settle = __webpack_require__(/*! axios/lib/core/settle */ 57);
    var buildURL = __webpack_require__(/*! axios/lib/helpers/buildURL */ 47);
    uni.request({
      method: config.method.toUpperCase(),
      url: config.baseURL + buildURL(config.url, config.params, config.paramsSerializer),
      header: config.headers,
      data: config.data,
      dataType: config.dataType,
      responseType: config.responseType,
      sslVerify: config.sslVerify,
      complete: function complete(response) {
        response = {
          data: response.data,
          status: response.statusCode,
          errMsg: response.errMsg,
          header: response.header,
          config: config };


        settle(resolve, reject, response);
      } });

  });
};
myPut.interceptors.request.use(function (config) {
  if (uni.getStorageSync('token')) {
    config.headers = {
      'Accept': 'application/json',
      'Authorization': "Bearer ".concat(uni.getStorageSync('token'))
      // 'token':  uni.getStorageSync('token'),
      // 'Access-Control-Allow-Origin': '*',
      // "access-control-allow-credentials": "true"
    };
    // config.headers.token = uni.getStorageSync('token');
  }
  console.log(config);
  return config;
}, function (error) {
  console.log(error);
  return Promise.reject();
});
myDelete.interceptors.request.use(function (config) {
  if (uni.getStorageSync('token')) {
    config.headers = {
      'Accept': 'application/json',
      'Authorization': "Bearer ".concat(uni.getStorageSync('token'))
      // 'token':  uni.getStorageSync('token'),
      // 'Access-Control-Allow-Origin': '*',
      // "access-control-allow-credentials": "true"
    };
    // config.headers.token = uni.getStorageSync('token');
  }
  console.log(config);
  return config;
}, function (error) {
  console.log(error);
  return Promise.reject();
});
myPost.interceptors.request.use(function (config) {
  if (uni.getStorageSync('token')) {
    config.headers = {
      'Accept': 'application/json',
      'Authorization': "Bearer ".concat(uni.getStorageSync('token'))
      // 'token':  uni.getStorageSync('token'),
      // 'Access-Control-Allow-Origin': '*',
      // "access-control-allow-credentials": "true"
    };
    // config.headers.token = uni.getStorageSync('token');
  }
  console.log(config);
  return config;
}, function (error) {
  console.log(error);
  return Promise.reject();
});
myUploadImg.interceptors.request.use(function (config) {
  if (uni.getStorageSync('token')) {
    config.headers = {
      "Content-Type": "multipart/form-data;charse=UTF-8",
      'Authorization': "Bearer ".concat(uni.getStorageSync('token')) };

    // config.headers.token = uni.getStorageSync('token');
  }
  console.log(config);
  return config;
}, function (error) {
  console.log(error);
  return Promise.reject();
});
myDelete.interceptors.response.use(function (response) {
  // console.log(response)
  if (response.status === 200) {
    if (response.data.code == 401) {
      uni.navigateTo({
        url: '/pages/login/index' });

    } else {
      return response.data;
    }
  }
  // if (response.status === 200 && response.data.code == '200') {
  //     vue.$message({
  //         message: response.data.msg,
  //         type: "success",
  //     });
  //     return response.data;
  // }
  else {
      vue.$message.error(response.data.info);
      Promise.reject();
    }
}, function (error) {
  //错误跳转
  console.log(error);
  if (error.response.status === 500) {
    console.log(vue);
    if (error.response.data.info != '参数错误') {
      vue.$message.error(error.response.data.info);
    }
  } else if (error.response.status === 401) {
    sessionStorage.setItem("isLogin", false);
    console.log(sessionStorage.getItem("isLogin"));
    // router.push({ path: "/" })
    // router.go(0)
    return Promise.reject();
  } else if (error.response.status === 404) {
    vue.$alert('页面不存在', '404错误', {
      confirmButtonText: '确定' });

    return Promise.reject();
  } else if (error.response.status === 402) {
    vue.$alert('请求次数限制', '402错误', {
      confirmButtonText: '确定' });

    return Promise.reject();
  } else {
    if (error.response.data.info != '参数错误') {
      vue.$message.error(error.response.data.info);
    }
  }
});
myUploadImg.interceptors.response.use(function (response) {
  // console.log(response)
  if (response.status === 200) {
    if (response.data.code == 401) {
      uni.navigateTo({
        url: '/pages/login/index' });

    } else {
      return response.data;
    }
  }
  // if (response.status === 200 && response.data.code == '200') {
  //     vue.$message({
  //         message: response.data.msg,
  //         type: "success",
  //     });
  //     return response.data;
  // }
  else {
      vue.$message.error(response.data.info);
      Promise.reject();
    }
}, function (error) {
  //错误跳转
  console.log(error);
  if (error.response.status === 500) {
    console.log(vue);
    if (error.response.data.info != '参数错误') {
      vue.$message.error(error.response.data.info);
    }
  } else if (error.response.status === 401) {
    sessionStorage.setItem("isLogin", false);
    console.log(sessionStorage.getItem("isLogin"));
    // router.push({ path: "/" })
    // router.go(0)
    return Promise.reject();
  } else if (error.response.status === 404) {
    vue.$alert('页面不存在', '404错误', {
      confirmButtonText: '确定' });

    return Promise.reject();
  } else if (error.response.status === 402) {
    vue.$alert('请求次数限制', '402错误', {
      confirmButtonText: '确定' });

    return Promise.reject();
  } else {
    if (error.response.data.info != '参数错误') {
      vue.$message.error(error.response.data.info);
    }
  }
});
myGet.interceptors.request.use(function (config) {
  if (uni.getStorageSync('token')) {
    config.headers = {
      'Accept': 'application/json',
      // 'token': sessionStorage.token,
      'Authorization': "Bearer ".concat(uni.getStorageSync('token')),
      'Access-Control-Allow-Origin': '*',
      "access-control-allow-credentials": "true" };

    config.headers.token = uni.getStorageSync('token');
  }
  return config;
}, function (error) {
  console.log(error);
  return Promise.reject();
});
myPut.interceptors.response.use(function (response) {
  // console.log(response)
  if (response.status === 200) {
    if (response.data.code == 401) {
      uni.navigateTo({
        url: '/pages/login/index' });

    } else {
      return response.data;
    }
  }
  // if (response.status === 200 && response.data.code == '200') {
  //     vue.$message({
  //         message: response.data.msg,
  //         type: "success",
  //     });
  //     return response.data;
  // }
  else {
      vue.$message.error(response.data.info);
      Promise.reject();
    }
}, function (error) {
  //错误跳转
  console.log(error);
  if (error.response.status === 500) {
    console.log(vue);
    if (error.response.data.info != '参数错误') {
      vue.$message.error(error.response.data.info);
    }
  } else if (error.response.status === 401) {
    sessionStorage.setItem("isLogin", false);
    console.log(sessionStorage.getItem("isLogin"));
    // router.push({ path: "/" })
    // router.go(0)
    return Promise.reject();
  } else if (error.response.status === 404) {
    vue.$alert('页面不存在', '404错误', {
      confirmButtonText: '确定' });

    return Promise.reject();
  } else if (error.response.status === 402) {
    vue.$alert('请求次数限制', '402错误', {
      confirmButtonText: '确定' });

    return Promise.reject();
  } else {
    if (error.response.data.info != '参数错误') {
      vue.$message.error(error.response.data.info);
    }
  }
});
myPost.interceptors.response.use(function (response) {
  // console.log(response)
  if (response.status === 200) {
    if (response.data.code == 401) {
      uni.navigateTo({
        url: '/pages/login/index' });

    } else {
      return response.data;
    }
  }
  // if (response.status === 200 && response.data.code == '200') {
  //     vue.$message({
  //         message: response.data.msg,
  //         type: "success",
  //     });
  //     return response.data;
  // }
  else {
      vue.$message.error(response.data.info);
      Promise.reject();
    }
}, function (error) {
  //错误跳转
  console.log(error);
  if (error.response.status === 500) {
    console.log(vue);
    if (error.response.data.info != '参数错误') {
      vue.$message.error(error.response.data.info);
    }
  } else if (error.response.status === 401) {
    sessionStorage.setItem("isLogin", false);
    console.log(sessionStorage.getItem("isLogin"));
    // router.push({ path: "/" })
    // router.go(0)
    return Promise.reject();
  } else if (error.response.status === 404) {
    vue.$alert('页面不存在', '404错误', {
      confirmButtonText: '确定' });

    return Promise.reject();
  } else if (error.response.status === 402) {
    vue.$alert('请求次数限制', '402错误', {
      confirmButtonText: '确定' });

    return Promise.reject();
  } else {
    if (error.response.data.info != '参数错误') {
      vue.$message.error(error.response.data.info);
    }
  }
});
myGet.interceptors.response.use(function (response) {
  if (response.status === 200) {
    if (response.data.code == 401) {
      uni.navigateTo({
        url: '/pages/login/index' });

    } else {
      return response.data;
    }
  }
  // if (response.status === 200 && response.data.code == '200') {
  //     vue.$message({
  //         message: response.data.msg,
  //         type: "success",
  //     });
  //     return response.data;
  // }
  else {
      vue.$message.error(response.data.info);
      Promise.reject();
    }
}, function (error) {
  //错误跳转
  console.log(error);
  if (error.response.status === 500) {
    if (error.response.data.info != '参数错误') {
      vue.$message.error(error.response.data.info);
    }
  } else if (error.response.status === 401) {
    sessionStorage.setItem("isLogin", false);
    console.log(sessionStorage.getItem("isLogin"));
    // router.push({ path: "/" })
    // router.go(0)
    return Promise.reject();
  } else if (error.response.status === 404) {
    vue.$alert('页面不存在', '404错误', {
      confirmButtonText: '确定' });

    return Promise.reject();
  } else if (error.response.status === 402) {
    vue.$alert('请求次数限制', '402错误', {
      confirmButtonText: '确定' });

    return Promise.reject();
  } else {
    if (error.response.data.info != '参数错误') {
      vue.$message.error(error.response.data.info);
    }
  }
});



dzpMyPut.interceptors.request.use(function (config) {
  if (uni.getStorageSync('token')) {
    config.headers = {
      'Accept': 'application/json',
      'Authorization': "Bearer ".concat(uni.getStorageSync('token'))
      // 'token':  uni.getStorageSync('token'),
      // 'Access-Control-Allow-Origin': '*',
      // "access-control-allow-credentials": "true"
    };
    // config.headers.token = uni.getStorageSync('token');
  }
  console.log(config);
  return config;
}, function (error) {
  console.log(error);
  return Promise.reject();
});
dzpMyPost.interceptors.request.use(function (config) {
  if (uni.getStorageSync('token')) {
    config.headers = {
      'Accept': 'application/json',
      'Authorization': "Bearer ".concat(uni.getStorageSync('token'))
      // 'token':  uni.getStorageSync('token'),
      // 'Access-Control-Allow-Origin': '*',
      // "access-control-allow-credentials": "true"
    };
    // config.headers.token = uni.getStorageSync('token');
  }
  console.log(config);
  return config;
}, function (error) {
  console.log(error);
  return Promise.reject();
});
dzpMyGet.interceptors.request.use(function (config) {
  if (uni.getStorageSync('token')) {
    config.headers = {
      'Accept': 'application/json',
      // 'token': sessionStorage.token,
      'Authorization': "Bearer ".concat(uni.getStorageSync('token')),
      'Access-Control-Allow-Origin': '*',
      "access-control-allow-credentials": "true" };

    config.headers.token = uni.getStorageSync('token');
  }
  return config;
}, function (error) {
  console.log(error);
  return Promise.reject();
});
dzpMyPut.interceptors.response.use(function (response) {
  // console.log(response)
  if (response.status === 200) {
    if (response.data.code == 401) {
      uni.navigateTo({
        url: '/pages/login/index' });

    } else {
      return response.data;
    }
  }
  // if (response.status === 200 && response.data.code == '200') {
  //     vue.$message({
  //         message: response.data.msg,
  //         type: "success",
  //     });
  //     return response.data;
  // }
  else {
      vue.$message.error(response.data.info);
      Promise.reject();
    }
}, function (error) {
  //错误跳转
  console.log(error);
  if (error.response.status === 500) {
    console.log(vue);
    if (error.response.data.info != '参数错误') {
      vue.$message.error(error.response.data.info);
    }
  } else if (error.response.status === 401) {
    sessionStorage.setItem("isLogin", false);
    console.log(sessionStorage.getItem("isLogin"));
    // router.push({ path: "/" })
    // router.go(0)
    return Promise.reject();
  } else if (error.response.status === 404) {
    vue.$alert('页面不存在', '404错误', {
      confirmButtonText: '确定' });

    return Promise.reject();
  } else if (error.response.status === 402) {
    vue.$alert('请求次数限制', '402错误', {
      confirmButtonText: '确定' });

    return Promise.reject();
  } else {
    if (error.response.data.info != '参数错误') {
      vue.$message.error(error.response.data.info);
    }
  }
});
dzpMyPost.interceptors.response.use(function (response) {
  // console.log(response)
  if (response.status === 200) {
    if (response.data.code == 401) {
      uni.navigateTo({
        url: '/pages/login/index' });

    } else {
      return response.data;
    }
  }
  // if (response.status === 200 && response.data.code == '200') {
  //     vue.$message({
  //         message: response.data.msg,
  //         type: "success",
  //     });
  //     return response.data;
  // }
  else {
      vue.$message.error(response.data.info);
      Promise.reject();
    }
}, function (error) {
  //错误跳转
  console.log(error);
  if (error.response.status === 500) {
    console.log(vue);
    if (error.response.data.info != '参数错误') {
      vue.$message.error(error.response.data.info);
    }
  } else if (error.response.status === 401) {
    sessionStorage.setItem("isLogin", false);
    console.log(sessionStorage.getItem("isLogin"));
    // router.push({ path: "/" })
    // router.go(0)
    return Promise.reject();
  } else if (error.response.status === 404) {
    vue.$alert('页面不存在', '404错误', {
      confirmButtonText: '确定' });

    return Promise.reject();
  } else if (error.response.status === 402) {
    vue.$alert('请求次数限制', '402错误', {
      confirmButtonText: '确定' });

    return Promise.reject();
  } else {
    if (error.response.data.info != '参数错误') {
      vue.$message.error(error.response.data.info);
    }
  }
});
dzpMyGet.interceptors.response.use(function (response) {
  if (response.status === 200) {
    if (response.data.code == 401) {
      uni.navigateTo({
        url: '/pages/login/index' });

    } else {
      return response.data;
    }
  }
  // if (response.status === 200 && response.data.code == '200') {
  //     vue.$message({
  //         message: response.data.msg,
  //         type: "success",
  //     });
  //     return response.data;
  // }
  else {
      vue.$message.error(response.data.info);
      Promise.reject();
    }
}, function (error) {
  //错误跳转
  console.log(error);
  if (error.response.status === 500) {
    if (error.response.data.info != '参数错误') {
      vue.$message.error(error.response.data.info);
    }
  } else if (error.response.status === 401) {
    sessionStorage.setItem("isLogin", false);
    console.log(sessionStorage.getItem("isLogin"));
    // router.push({ path: "/" })
    // router.go(0)
    return Promise.reject();
  } else if (error.response.status === 404) {
    vue.$alert('页面不存在', '404错误', {
      confirmButtonText: '确定' });

    return Promise.reject();
  } else if (error.response.status === 402) {
    vue.$alert('请求次数限制', '402错误', {
      confirmButtonText: '确定' });

    return Promise.reject();
  } else {
    if (error.response.data.info != '参数错误') {
      vue.$message.error(error.response.data.info);
    }
  }
});var _default =

{
  loginWechat: function loginWechat(obj) {
    return myPost({
      url: _url.default.loginWechat,
      data: _objectSpread({},
      obj) });


  },
  upload_pic: function upload_pic(file, type) {
    return new Promise( /*#__PURE__*/function () {var _ref = _asyncToGenerator( /*#__PURE__*/_regenerator.default.mark(function _callee(resolve, reject) {return _regenerator.default.wrap(function _callee$(_context) {while (1) {switch (_context.prev = _context.next) {case 0:
                uni.uploadFile({
                  url: "".concat(_url.default.baseUrl).concat(_url.default.upload_pic),
                  filePath: file.path,
                  header: {
                    "Content-Type": "multipart/form-data;charse=UTF-8",
                    'Authorization': "Bearer ".concat(uni.getStorageSync('token')) },

                  name: 'image',
                  formData: {
                    token: uni.getStorageSync('token'),
                    type: type },

                  success: function success(res) {
                    if (JSON.parse(res.data).code == 401) {
                      uni.navigateTo({
                        url: '/pages/login/index' });

                    }
                    return resolve(JSON.parse(res.data));
                  } });case 1:case "end":return _context.stop();}}}, _callee);}));return function (_x, _x2) {return _ref.apply(this, arguments);};}());


  } };exports.default = _default;
/* WEBPACK VAR INJECTION */}.call(this, __webpack_require__(/*! ./node_modules/@dcloudio/uni-mp-weixin/dist/index.js */ 1)["default"]))

/***/ }),
/* 42 */
/*!*****************************************************************!*\
  !*** /Users/xingmangkeji/vue/yimei/node_modules/axios/index.js ***!
  \*****************************************************************/
/*! no static exports found */
/***/ (function(module, exports, __webpack_require__) {

module.exports = __webpack_require__(/*! ./lib/axios */ 43);

/***/ }),
/* 43 */
/*!*********************************************************************!*\
  !*** /Users/xingmangkeji/vue/yimei/node_modules/axios/lib/axios.js ***!
  \*********************************************************************/
/*! no static exports found */
/***/ (function(module, exports, __webpack_require__) {

"use strict";


var utils = __webpack_require__(/*! ./utils */ 44);
var bind = __webpack_require__(/*! ./helpers/bind */ 45);
var Axios = __webpack_require__(/*! ./core/Axios */ 46);
var mergeConfig = __webpack_require__(/*! ./core/mergeConfig */ 66);
var defaults = __webpack_require__(/*! ./defaults */ 52);

/**
                                       * Create an instance of Axios
                                       *
                                       * @param {Object} defaultConfig The default config for the instance
                                       * @return {Axios} A new instance of Axios
                                       */
function createInstance(defaultConfig) {
  var context = new Axios(defaultConfig);
  var instance = bind(Axios.prototype.request, context);

  // Copy axios.prototype to instance
  utils.extend(instance, Axios.prototype, context);

  // Copy context to instance
  utils.extend(instance, context);

  return instance;
}

// Create the default instance to be exported
var axios = createInstance(defaults);

// Expose Axios class to allow class inheritance
axios.Axios = Axios;

// Factory for creating new instances
axios.create = function create(instanceConfig) {
  return createInstance(mergeConfig(axios.defaults, instanceConfig));
};

// Expose Cancel & CancelToken
axios.Cancel = __webpack_require__(/*! ./cancel/Cancel */ 67);
axios.CancelToken = __webpack_require__(/*! ./cancel/CancelToken */ 68);
axios.isCancel = __webpack_require__(/*! ./cancel/isCancel */ 51);

// Expose all/spread
axios.all = function all(promises) {
  return Promise.all(promises);
};
axios.spread = __webpack_require__(/*! ./helpers/spread */ 69);

// Expose isAxiosError
axios.isAxiosError = __webpack_require__(/*! ./helpers/isAxiosError */ 70);

module.exports = axios;

// Allow use of default import syntax in TypeScript
module.exports.default = axios;

/***/ }),
/* 44 */
/*!*********************************************************************!*\
  !*** /Users/xingmangkeji/vue/yimei/node_modules/axios/lib/utils.js ***!
  \*********************************************************************/
/*! no static exports found */
/***/ (function(module, exports, __webpack_require__) {

"use strict";


var bind = __webpack_require__(/*! ./helpers/bind */ 45);

/*global toString:true*/

// utils is a library of generic helper functions non-specific to axios

var toString = Object.prototype.toString;

/**
                                           * Determine if a value is an Array
                                           *
                                           * @param {Object} val The value to test
                                           * @returns {boolean} True if value is an Array, otherwise false
                                           */
function isArray(val) {
  return toString.call(val) === '[object Array]';
}

/**
   * Determine if a value is undefined
   *
   * @param {Object} val The value to test
   * @returns {boolean} True if the value is undefined, otherwise false
   */
function isUndefined(val) {
  return typeof val === 'undefined';
}

/**
   * Determine if a value is a Buffer
   *
   * @param {Object} val The value to test
   * @returns {boolean} True if value is a Buffer, otherwise false
   */
function isBuffer(val) {
  return val !== null && !isUndefined(val) && val.constructor !== null && !isUndefined(val.constructor) &&
  typeof val.constructor.isBuffer === 'function' && val.constructor.isBuffer(val);
}

/**
   * Determine if a value is an ArrayBuffer
   *
   * @param {Object} val The value to test
   * @returns {boolean} True if value is an ArrayBuffer, otherwise false
   */
function isArrayBuffer(val) {
  return toString.call(val) === '[object ArrayBuffer]';
}

/**
   * Determine if a value is a FormData
   *
   * @param {Object} val The value to test
   * @returns {boolean} True if value is an FormData, otherwise false
   */
function isFormData(val) {
  return typeof FormData !== 'undefined' && val instanceof FormData;
}

/**
   * Determine if a value is a view on an ArrayBuffer
   *
   * @param {Object} val The value to test
   * @returns {boolean} True if value is a view on an ArrayBuffer, otherwise false
   */
function isArrayBufferView(val) {
  var result;
  if (typeof ArrayBuffer !== 'undefined' && ArrayBuffer.isView) {
    result = ArrayBuffer.isView(val);
  } else {
    result = val && val.buffer && val.buffer instanceof ArrayBuffer;
  }
  return result;
}

/**
   * Determine if a value is a String
   *
   * @param {Object} val The value to test
   * @returns {boolean} True if value is a String, otherwise false
   */
function isString(val) {
  return typeof val === 'string';
}

/**
   * Determine if a value is a Number
   *
   * @param {Object} val The value to test
   * @returns {boolean} True if value is a Number, otherwise false
   */
function isNumber(val) {
  return typeof val === 'number';
}

/**
   * Determine if a value is an Object
   *
   * @param {Object} val The value to test
   * @returns {boolean} True if value is an Object, otherwise false
   */
function isObject(val) {
  return val !== null && typeof val === 'object';
}

/**
   * Determine if a value is a plain Object
   *
   * @param {Object} val The value to test
   * @return {boolean} True if value is a plain Object, otherwise false
   */
function isPlainObject(val) {
  if (toString.call(val) !== '[object Object]') {
    return false;
  }

  var prototype = Object.getPrototypeOf(val);
  return prototype === null || prototype === Object.prototype;
}

/**
   * Determine if a value is a Date
   *
   * @param {Object} val The value to test
   * @returns {boolean} True if value is a Date, otherwise false
   */
function isDate(val) {
  return toString.call(val) === '[object Date]';
}

/**
   * Determine if a value is a File
   *
   * @param {Object} val The value to test
   * @returns {boolean} True if value is a File, otherwise false
   */
function isFile(val) {
  return toString.call(val) === '[object File]';
}

/**
   * Determine if a value is a Blob
   *
   * @param {Object} val The value to test
   * @returns {boolean} True if value is a Blob, otherwise false
   */
function isBlob(val) {
  return toString.call(val) === '[object Blob]';
}

/**
   * Determine if a value is a Function
   *
   * @param {Object} val The value to test
   * @returns {boolean} True if value is a Function, otherwise false
   */
function isFunction(val) {
  return toString.call(val) === '[object Function]';
}

/**
   * Determine if a value is a Stream
   *
   * @param {Object} val The value to test
   * @returns {boolean} True if value is a Stream, otherwise false
   */
function isStream(val) {
  return isObject(val) && isFunction(val.pipe);
}

/**
   * Determine if a value is a URLSearchParams object
   *
   * @param {Object} val The value to test
   * @returns {boolean} True if value is a URLSearchParams object, otherwise false
   */
function isURLSearchParams(val) {
  return typeof URLSearchParams !== 'undefined' && val instanceof URLSearchParams;
}

/**
   * Trim excess whitespace off the beginning and end of a string
   *
   * @param {String} str The String to trim
   * @returns {String} The String freed of excess whitespace
   */
function trim(str) {
  return str.replace(/^\s*/, '').replace(/\s*$/, '');
}

/**
   * Determine if we're running in a standard browser environment
   *
   * This allows axios to run in a web worker, and react-native.
   * Both environments support XMLHttpRequest, but not fully standard globals.
   *
   * web workers:
   *  typeof window -> undefined
   *  typeof document -> undefined
   *
   * react-native:
   *  navigator.product -> 'ReactNative'
   * nativescript
   *  navigator.product -> 'NativeScript' or 'NS'
   */
function isStandardBrowserEnv() {
  if (typeof navigator !== 'undefined' && (navigator.product === 'ReactNative' ||
  navigator.product === 'NativeScript' ||
  navigator.product === 'NS')) {
    return false;
  }
  return (
    typeof window !== 'undefined' &&
    typeof document !== 'undefined');

}

/**
   * Iterate over an Array or an Object invoking a function for each item.
   *
   * If `obj` is an Array callback will be called passing
   * the value, index, and complete array for each item.
   *
   * If 'obj' is an Object callback will be called passing
   * the value, key, and complete object for each property.
   *
   * @param {Object|Array} obj The object to iterate
   * @param {Function} fn The callback to invoke for each item
   */
function forEach(obj, fn) {
  // Don't bother if no value provided
  if (obj === null || typeof obj === 'undefined') {
    return;
  }

  // Force an array if not already something iterable
  if (typeof obj !== 'object') {
    /*eslint no-param-reassign:0*/
    obj = [obj];
  }

  if (isArray(obj)) {
    // Iterate over array values
    for (var i = 0, l = obj.length; i < l; i++) {
      fn.call(null, obj[i], i, obj);
    }
  } else {
    // Iterate over object keys
    for (var key in obj) {
      if (Object.prototype.hasOwnProperty.call(obj, key)) {
        fn.call(null, obj[key], key, obj);
      }
    }
  }
}

/**
   * Accepts varargs expecting each argument to be an object, then
   * immutably merges the properties of each object and returns result.
   *
   * When multiple objects contain the same key the later object in
   * the arguments list will take precedence.
   *
   * Example:
   *
   * ```js
   * var result = merge({foo: 123}, {foo: 456});
   * console.log(result.foo); // outputs 456
   * ```
   *
   * @param {Object} obj1 Object to merge
   * @returns {Object} Result of all merge properties
   */
function merge() /* obj1, obj2, obj3, ... */{
  var result = {};
  function assignValue(val, key) {
    if (isPlainObject(result[key]) && isPlainObject(val)) {
      result[key] = merge(result[key], val);
    } else if (isPlainObject(val)) {
      result[key] = merge({}, val);
    } else if (isArray(val)) {
      result[key] = val.slice();
    } else {
      result[key] = val;
    }
  }

  for (var i = 0, l = arguments.length; i < l; i++) {
    forEach(arguments[i], assignValue);
  }
  return result;
}

/**
   * Extends object a by mutably adding to it the properties of object b.
   *
   * @param {Object} a The object to be extended
   * @param {Object} b The object to copy properties from
   * @param {Object} thisArg The object to bind function to
   * @return {Object} The resulting value of object a
   */
function extend(a, b, thisArg) {
  forEach(b, function assignValue(val, key) {
    if (thisArg && typeof val === 'function') {
      a[key] = bind(val, thisArg);
    } else {
      a[key] = val;
    }
  });
  return a;
}

/**
   * Remove byte order marker. This catches EF BB BF (the UTF-8 BOM)
   *
   * @param {string} content with BOM
   * @return {string} content value without BOM
   */
function stripBOM(content) {
  if (content.charCodeAt(0) === 0xFEFF) {
    content = content.slice(1);
  }
  return content;
}

module.exports = {
  isArray: isArray,
  isArrayBuffer: isArrayBuffer,
  isBuffer: isBuffer,
  isFormData: isFormData,
  isArrayBufferView: isArrayBufferView,
  isString: isString,
  isNumber: isNumber,
  isObject: isObject,
  isPlainObject: isPlainObject,
  isUndefined: isUndefined,
  isDate: isDate,
  isFile: isFile,
  isBlob: isBlob,
  isFunction: isFunction,
  isStream: isStream,
  isURLSearchParams: isURLSearchParams,
  isStandardBrowserEnv: isStandardBrowserEnv,
  forEach: forEach,
  merge: merge,
  extend: extend,
  trim: trim,
  stripBOM: stripBOM };

/***/ }),
/* 45 */
/*!****************************************************************************!*\
  !*** /Users/xingmangkeji/vue/yimei/node_modules/axios/lib/helpers/bind.js ***!
  \****************************************************************************/
/*! no static exports found */
/***/ (function(module, exports, __webpack_require__) {

"use strict";


module.exports = function bind(fn, thisArg) {
  return function wrap() {
    var args = new Array(arguments.length);
    for (var i = 0; i < args.length; i++) {
      args[i] = arguments[i];
    }
    return fn.apply(thisArg, args);
  };
};

/***/ }),
/* 46 */
/*!**************************************************************************!*\
  !*** /Users/xingmangkeji/vue/yimei/node_modules/axios/lib/core/Axios.js ***!
  \**************************************************************************/
/*! no static exports found */
/***/ (function(module, exports, __webpack_require__) {

"use strict";


var utils = __webpack_require__(/*! ./../utils */ 44);
var buildURL = __webpack_require__(/*! ../helpers/buildURL */ 47);
var InterceptorManager = __webpack_require__(/*! ./InterceptorManager */ 48);
var dispatchRequest = __webpack_require__(/*! ./dispatchRequest */ 49);
var mergeConfig = __webpack_require__(/*! ./mergeConfig */ 66);

/**
                                             * Create a new instance of Axios
                                             *
                                             * @param {Object} instanceConfig The default config for the instance
                                             */
function Axios(instanceConfig) {
  this.defaults = instanceConfig;
  this.interceptors = {
    request: new InterceptorManager(),
    response: new InterceptorManager() };

}

/**
   * Dispatch a request
   *
   * @param {Object} config The config specific for this request (merged with this.defaults)
   */
Axios.prototype.request = function request(config) {
  /*eslint no-param-reassign:0*/
  // Allow for axios('example/url'[, config]) a la fetch API
  if (typeof config === 'string') {
    config = arguments[1] || {};
    config.url = arguments[0];
  } else {
    config = config || {};
  }

  config = mergeConfig(this.defaults, config);

  // Set config.method
  if (config.method) {
    config.method = config.method.toLowerCase();
  } else if (this.defaults.method) {
    config.method = this.defaults.method.toLowerCase();
  } else {
    config.method = 'get';
  }

  // Hook up interceptors middleware
  var chain = [dispatchRequest, undefined];
  var promise = Promise.resolve(config);

  this.interceptors.request.forEach(function unshiftRequestInterceptors(interceptor) {
    chain.unshift(interceptor.fulfilled, interceptor.rejected);
  });

  this.interceptors.response.forEach(function pushResponseInterceptors(interceptor) {
    chain.push(interceptor.fulfilled, interceptor.rejected);
  });

  while (chain.length) {
    promise = promise.then(chain.shift(), chain.shift());
  }

  return promise;
};

Axios.prototype.getUri = function getUri(config) {
  config = mergeConfig(this.defaults, config);
  return buildURL(config.url, config.params, config.paramsSerializer).replace(/^\?/, '');
};

// Provide aliases for supported request methods
utils.forEach(['delete', 'get', 'head', 'options'], function forEachMethodNoData(method) {
  /*eslint func-names:0*/
  Axios.prototype[method] = function (url, config) {
    return this.request(mergeConfig(config || {}, {
      method: method,
      url: url,
      data: (config || {}).data }));

  };
});

utils.forEach(['post', 'put', 'patch'], function forEachMethodWithData(method) {
  /*eslint func-names:0*/
  Axios.prototype[method] = function (url, data, config) {
    return this.request(mergeConfig(config || {}, {
      method: method,
      url: url,
      data: data }));

  };
});

module.exports = Axios;

/***/ }),
/* 47 */
/*!********************************************************************************!*\
  !*** /Users/xingmangkeji/vue/yimei/node_modules/axios/lib/helpers/buildURL.js ***!
  \********************************************************************************/
/*! no static exports found */
/***/ (function(module, exports, __webpack_require__) {

"use strict";


var utils = __webpack_require__(/*! ./../utils */ 44);

function encode(val) {
  return encodeURIComponent(val).
  replace(/%3A/gi, ':').
  replace(/%24/g, '$').
  replace(/%2C/gi, ',').
  replace(/%20/g, '+').
  replace(/%5B/gi, '[').
  replace(/%5D/gi, ']');
}

/**
   * Build a URL by appending params to the end
   *
   * @param {string} url The base of the url (e.g., http://www.google.com)
   * @param {object} [params] The params to be appended
   * @returns {string} The formatted url
   */
module.exports = function buildURL(url, params, paramsSerializer) {
  /*eslint no-param-reassign:0*/
  if (!params) {
    return url;
  }

  var serializedParams;
  if (paramsSerializer) {
    serializedParams = paramsSerializer(params);
  } else if (utils.isURLSearchParams(params)) {
    serializedParams = params.toString();
  } else {
    var parts = [];

    utils.forEach(params, function serialize(val, key) {
      if (val === null || typeof val === 'undefined') {
        return;
      }

      if (utils.isArray(val)) {
        key = key + '[]';
      } else {
        val = [val];
      }

      utils.forEach(val, function parseValue(v) {
        if (utils.isDate(v)) {
          v = v.toISOString();
        } else if (utils.isObject(v)) {
          v = JSON.stringify(v);
        }
        parts.push(encode(key) + '=' + encode(v));
      });
    });

    serializedParams = parts.join('&');
  }

  if (serializedParams) {
    var hashmarkIndex = url.indexOf('#');
    if (hashmarkIndex !== -1) {
      url = url.slice(0, hashmarkIndex);
    }

    url += (url.indexOf('?') === -1 ? '?' : '&') + serializedParams;
  }

  return url;
};

/***/ }),
/* 48 */
/*!***************************************************************************************!*\
  !*** /Users/xingmangkeji/vue/yimei/node_modules/axios/lib/core/InterceptorManager.js ***!
  \***************************************************************************************/
/*! no static exports found */
/***/ (function(module, exports, __webpack_require__) {

"use strict";


var utils = __webpack_require__(/*! ./../utils */ 44);

function InterceptorManager() {
  this.handlers = [];
}

/**
   * Add a new interceptor to the stack
   *
   * @param {Function} fulfilled The function to handle `then` for a `Promise`
   * @param {Function} rejected The function to handle `reject` for a `Promise`
   *
   * @return {Number} An ID used to remove interceptor later
   */
InterceptorManager.prototype.use = function use(fulfilled, rejected) {
  this.handlers.push({
    fulfilled: fulfilled,
    rejected: rejected });

  return this.handlers.length - 1;
};

/**
    * Remove an interceptor from the stack
    *
    * @param {Number} id The ID that was returned by `use`
    */
InterceptorManager.prototype.eject = function eject(id) {
  if (this.handlers[id]) {
    this.handlers[id] = null;
  }
};

/**
    * Iterate over all the registered interceptors
    *
    * This method is particularly useful for skipping over any
    * interceptors that may have become `null` calling `eject`.
    *
    * @param {Function} fn The function to call for each interceptor
    */
InterceptorManager.prototype.forEach = function forEach(fn) {
  utils.forEach(this.handlers, function forEachHandler(h) {
    if (h !== null) {
      fn(h);
    }
  });
};

module.exports = InterceptorManager;

/***/ }),
/* 49 */
/*!************************************************************************************!*\
  !*** /Users/xingmangkeji/vue/yimei/node_modules/axios/lib/core/dispatchRequest.js ***!
  \************************************************************************************/
/*! no static exports found */
/***/ (function(module, exports, __webpack_require__) {

"use strict";


var utils = __webpack_require__(/*! ./../utils */ 44);
var transformData = __webpack_require__(/*! ./transformData */ 50);
var isCancel = __webpack_require__(/*! ../cancel/isCancel */ 51);
var defaults = __webpack_require__(/*! ../defaults */ 52);

/**
                                        * Throws a `Cancel` if cancellation has been requested.
                                        */
function throwIfCancellationRequested(config) {
  if (config.cancelToken) {
    config.cancelToken.throwIfRequested();
  }
}

/**
   * Dispatch a request to the server using the configured adapter.
   *
   * @param {object} config The config that is to be used for the request
   * @returns {Promise} The Promise to be fulfilled
   */
module.exports = function dispatchRequest(config) {
  throwIfCancellationRequested(config);

  // Ensure headers exist
  config.headers = config.headers || {};

  // Transform request data
  config.data = transformData(
  config.data,
  config.headers,
  config.transformRequest);


  // Flatten headers
  config.headers = utils.merge(
  config.headers.common || {},
  config.headers[config.method] || {},
  config.headers);


  utils.forEach(
  ['delete', 'get', 'head', 'post', 'put', 'patch', 'common'],
  function cleanHeaderConfig(method) {
    delete config.headers[method];
  });


  var adapter = config.adapter || defaults.adapter;

  return adapter(config).then(function onAdapterResolution(response) {
    throwIfCancellationRequested(config);

    // Transform response data
    response.data = transformData(
    response.data,
    response.headers,
    config.transformResponse);


    return response;
  }, function onAdapterRejection(reason) {
    if (!isCancel(reason)) {
      throwIfCancellationRequested(config);

      // Transform response data
      if (reason && reason.response) {
        reason.response.data = transformData(
        reason.response.data,
        reason.response.headers,
        config.transformResponse);

      }
    }

    return Promise.reject(reason);
  });
};

/***/ }),
/* 50 */
/*!**********************************************************************************!*\
  !*** /Users/xingmangkeji/vue/yimei/node_modules/axios/lib/core/transformData.js ***!
  \**********************************************************************************/
/*! no static exports found */
/***/ (function(module, exports, __webpack_require__) {

"use strict";


var utils = __webpack_require__(/*! ./../utils */ 44);

/**
                                    * Transform the data for a request or a response
                                    *
                                    * @param {Object|String} data The data to be transformed
                                    * @param {Array} headers The headers for the request or response
                                    * @param {Array|Function} fns A single function or Array of functions
                                    * @returns {*} The resulting transformed data
                                    */
module.exports = function transformData(data, headers, fns) {
  /*eslint no-param-reassign:0*/
  utils.forEach(fns, function transform(fn) {
    data = fn(data, headers);
  });

  return data;
};

/***/ }),
/* 51 */
/*!*******************************************************************************!*\
  !*** /Users/xingmangkeji/vue/yimei/node_modules/axios/lib/cancel/isCancel.js ***!
  \*******************************************************************************/
/*! no static exports found */
/***/ (function(module, exports, __webpack_require__) {

"use strict";


module.exports = function isCancel(value) {
  return !!(value && value.__CANCEL__);
};

/***/ }),
/* 52 */
/*!************************************************************************!*\
  !*** /Users/xingmangkeji/vue/yimei/node_modules/axios/lib/defaults.js ***!
  \************************************************************************/
/*! no static exports found */
/***/ (function(module, exports, __webpack_require__) {

"use strict";
/* WEBPACK VAR INJECTION */(function(process) {

var utils = __webpack_require__(/*! ./utils */ 44);
var normalizeHeaderName = __webpack_require__(/*! ./helpers/normalizeHeaderName */ 55);

var DEFAULT_CONTENT_TYPE = {
  'Content-Type': 'application/x-www-form-urlencoded' };


function setContentTypeIfUnset(headers, value) {
  if (!utils.isUndefined(headers) && utils.isUndefined(headers['Content-Type'])) {
    headers['Content-Type'] = value;
  }
}

function getDefaultAdapter() {
  var adapter;
  if (typeof XMLHttpRequest !== 'undefined') {
    // For browsers use XHR adapter
    adapter = __webpack_require__(/*! ./adapters/xhr */ 56);
  } else if (typeof process !== 'undefined' && Object.prototype.toString.call(process) === '[object process]') {
    // For node use HTTP adapter
    adapter = __webpack_require__(/*! ./adapters/http */ 56);
  }
  return adapter;
}

var defaults = {
  adapter: getDefaultAdapter(),

  transformRequest: [function transformRequest(data, headers) {
    normalizeHeaderName(headers, 'Accept');
    normalizeHeaderName(headers, 'Content-Type');
    if (utils.isFormData(data) ||
    utils.isArrayBuffer(data) ||
    utils.isBuffer(data) ||
    utils.isStream(data) ||
    utils.isFile(data) ||
    utils.isBlob(data))
    {
      return data;
    }
    if (utils.isArrayBufferView(data)) {
      return data.buffer;
    }
    if (utils.isURLSearchParams(data)) {
      setContentTypeIfUnset(headers, 'application/x-www-form-urlencoded;charset=utf-8');
      return data.toString();
    }
    if (utils.isObject(data)) {
      setContentTypeIfUnset(headers, 'application/json;charset=utf-8');
      return JSON.stringify(data);
    }
    return data;
  }],

  transformResponse: [function transformResponse(data) {
    /*eslint no-param-reassign:0*/
    if (typeof data === 'string') {
      try {
        data = JSON.parse(data);
      } catch (e) {/* Ignore */}
    }
    return data;
  }],

  /**
       * A timeout in milliseconds to abort a request. If set to 0 (default) a
       * timeout is not created.
       */
  timeout: 0,

  xsrfCookieName: 'XSRF-TOKEN',
  xsrfHeaderName: 'X-XSRF-TOKEN',

  maxContentLength: -1,
  maxBodyLength: -1,

  validateStatus: function validateStatus(status) {
    return status >= 200 && status < 300;
  } };


defaults.headers = {
  common: {
    'Accept': 'application/json, text/plain, */*' } };



utils.forEach(['delete', 'get', 'head'], function forEachMethodNoData(method) {
  defaults.headers[method] = {};
});

utils.forEach(['post', 'put', 'patch'], function forEachMethodWithData(method) {
  defaults.headers[method] = utils.merge(DEFAULT_CONTENT_TYPE);
});

module.exports = defaults;
/* WEBPACK VAR INJECTION */}.call(this, __webpack_require__(/*! ./../../../../../../../Applications/HBuilderX.app/Contents/HBuilderX/plugins/uniapp-cli/node_modules/node-libs-browser/mock/process.js */ 53)))

/***/ }),
/* 53 */
/*!********************************************************!*\
  !*** ./node_modules/node-libs-browser/mock/process.js ***!
  \********************************************************/
/*! no static exports found */
/***/ (function(module, exports, __webpack_require__) {

exports.nextTick = function nextTick(fn) {
    var args = Array.prototype.slice.call(arguments);
    args.shift();
    setTimeout(function () {
        fn.apply(null, args);
    }, 0);
};

exports.platform = exports.arch = 
exports.execPath = exports.title = 'browser';
exports.pid = 1;
exports.browser = true;
exports.env = {};
exports.argv = [];

exports.binding = function (name) {
	throw new Error('No such module. (Possibly not yet loaded)')
};

(function () {
    var cwd = '/';
    var path;
    exports.cwd = function () { return cwd };
    exports.chdir = function (dir) {
        if (!path) path = __webpack_require__(/*! path */ 54);
        cwd = path.resolve(dir, cwd);
    };
})();

exports.exit = exports.kill = 
exports.umask = exports.dlopen = 
exports.uptime = exports.memoryUsage = 
exports.uvCounters = function() {};
exports.features = {};


/***/ }),
/* 54 */
/*!***********************************************!*\
  !*** ./node_modules/path-browserify/index.js ***!
  \***********************************************/
/*! no static exports found */
/***/ (function(module, exports, __webpack_require__) {

/* WEBPACK VAR INJECTION */(function(process) {// .dirname, .basename, and .extname methods are extracted from Node.js v8.11.1,
// backported and transplited with Babel, with backwards-compat fixes

// Copyright Joyent, Inc. and other Node contributors.
//
// Permission is hereby granted, free of charge, to any person obtaining a
// copy of this software and associated documentation files (the
// "Software"), to deal in the Software without restriction, including
// without limitation the rights to use, copy, modify, merge, publish,
// distribute, sublicense, and/or sell copies of the Software, and to permit
// persons to whom the Software is furnished to do so, subject to the
// following conditions:
//
// The above copyright notice and this permission notice shall be included
// in all copies or substantial portions of the Software.
//
// THE SOFTWARE IS PROVIDED "AS IS", WITHOUT WARRANTY OF ANY KIND, EXPRESS
// OR IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF
// MERCHANTABILITY, FITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN
// NO EVENT SHALL THE AUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM,
// DAMAGES OR OTHER LIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR
// OTHERWISE, ARISING FROM, OUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE
// USE OR OTHER DEALINGS IN THE SOFTWARE.

// resolves . and .. elements in a path array with directory names there
// must be no slashes, empty elements, or device names (c:\) in the array
// (so also no leading and trailing slashes - it does not distinguish
// relative and absolute paths)
function normalizeArray(parts, allowAboveRoot) {
  // if the path tries to go above the root, `up` ends up > 0
  var up = 0;
  for (var i = parts.length - 1; i >= 0; i--) {
    var last = parts[i];
    if (last === '.') {
      parts.splice(i, 1);
    } else if (last === '..') {
      parts.splice(i, 1);
      up++;
    } else if (up) {
      parts.splice(i, 1);
      up--;
    }
  }

  // if the path is allowed to go above the root, restore leading ..s
  if (allowAboveRoot) {
    for (; up--; up) {
      parts.unshift('..');
    }
  }

  return parts;
}

// path.resolve([from ...], to)
// posix version
exports.resolve = function() {
  var resolvedPath = '',
      resolvedAbsolute = false;

  for (var i = arguments.length - 1; i >= -1 && !resolvedAbsolute; i--) {
    var path = (i >= 0) ? arguments[i] : process.cwd();

    // Skip empty and invalid entries
    if (typeof path !== 'string') {
      throw new TypeError('Arguments to path.resolve must be strings');
    } else if (!path) {
      continue;
    }

    resolvedPath = path + '/' + resolvedPath;
    resolvedAbsolute = path.charAt(0) === '/';
  }

  // At this point the path should be resolved to a full absolute path, but
  // handle relative paths to be safe (might happen when process.cwd() fails)

  // Normalize the path
  resolvedPath = normalizeArray(filter(resolvedPath.split('/'), function(p) {
    return !!p;
  }), !resolvedAbsolute).join('/');

  return ((resolvedAbsolute ? '/' : '') + resolvedPath) || '.';
};

// path.normalize(path)
// posix version
exports.normalize = function(path) {
  var isAbsolute = exports.isAbsolute(path),
      trailingSlash = substr(path, -1) === '/';

  // Normalize the path
  path = normalizeArray(filter(path.split('/'), function(p) {
    return !!p;
  }), !isAbsolute).join('/');

  if (!path && !isAbsolute) {
    path = '.';
  }
  if (path && trailingSlash) {
    path += '/';
  }

  return (isAbsolute ? '/' : '') + path;
};

// posix version
exports.isAbsolute = function(path) {
  return path.charAt(0) === '/';
};

// posix version
exports.join = function() {
  var paths = Array.prototype.slice.call(arguments, 0);
  return exports.normalize(filter(paths, function(p, index) {
    if (typeof p !== 'string') {
      throw new TypeError('Arguments to path.join must be strings');
    }
    return p;
  }).join('/'));
};


// path.relative(from, to)
// posix version
exports.relative = function(from, to) {
  from = exports.resolve(from).substr(1);
  to = exports.resolve(to).substr(1);

  function trim(arr) {
    var start = 0;
    for (; start < arr.length; start++) {
      if (arr[start] !== '') break;
    }

    var end = arr.length - 1;
    for (; end >= 0; end--) {
      if (arr[end] !== '') break;
    }

    if (start > end) return [];
    return arr.slice(start, end - start + 1);
  }

  var fromParts = trim(from.split('/'));
  var toParts = trim(to.split('/'));

  var length = Math.min(fromParts.length, toParts.length);
  var samePartsLength = length;
  for (var i = 0; i < length; i++) {
    if (fromParts[i] !== toParts[i]) {
      samePartsLength = i;
      break;
    }
  }

  var outputParts = [];
  for (var i = samePartsLength; i < fromParts.length; i++) {
    outputParts.push('..');
  }

  outputParts = outputParts.concat(toParts.slice(samePartsLength));

  return outputParts.join('/');
};

exports.sep = '/';
exports.delimiter = ':';

exports.dirname = function (path) {
  if (typeof path !== 'string') path = path + '';
  if (path.length === 0) return '.';
  var code = path.charCodeAt(0);
  var hasRoot = code === 47 /*/*/;
  var end = -1;
  var matchedSlash = true;
  for (var i = path.length - 1; i >= 1; --i) {
    code = path.charCodeAt(i);
    if (code === 47 /*/*/) {
        if (!matchedSlash) {
          end = i;
          break;
        }
      } else {
      // We saw the first non-path separator
      matchedSlash = false;
    }
  }

  if (end === -1) return hasRoot ? '/' : '.';
  if (hasRoot && end === 1) {
    // return '//';
    // Backwards-compat fix:
    return '/';
  }
  return path.slice(0, end);
};

function basename(path) {
  if (typeof path !== 'string') path = path + '';

  var start = 0;
  var end = -1;
  var matchedSlash = true;
  var i;

  for (i = path.length - 1; i >= 0; --i) {
    if (path.charCodeAt(i) === 47 /*/*/) {
        // If we reached a path separator that was not part of a set of path
        // separators at the end of the string, stop now
        if (!matchedSlash) {
          start = i + 1;
          break;
        }
      } else if (end === -1) {
      // We saw the first non-path separator, mark this as the end of our
      // path component
      matchedSlash = false;
      end = i + 1;
    }
  }

  if (end === -1) return '';
  return path.slice(start, end);
}

// Uses a mixed approach for backwards-compatibility, as ext behavior changed
// in new Node.js versions, so only basename() above is backported here
exports.basename = function (path, ext) {
  var f = basename(path);
  if (ext && f.substr(-1 * ext.length) === ext) {
    f = f.substr(0, f.length - ext.length);
  }
  return f;
};

exports.extname = function (path) {
  if (typeof path !== 'string') path = path + '';
  var startDot = -1;
  var startPart = 0;
  var end = -1;
  var matchedSlash = true;
  // Track the state of characters (if any) we see before our first dot and
  // after any path separator we find
  var preDotState = 0;
  for (var i = path.length - 1; i >= 0; --i) {
    var code = path.charCodeAt(i);
    if (code === 47 /*/*/) {
        // If we reached a path separator that was not part of a set of path
        // separators at the end of the string, stop now
        if (!matchedSlash) {
          startPart = i + 1;
          break;
        }
        continue;
      }
    if (end === -1) {
      // We saw the first non-path separator, mark this as the end of our
      // extension
      matchedSlash = false;
      end = i + 1;
    }
    if (code === 46 /*.*/) {
        // If this is our first dot, mark it as the start of our extension
        if (startDot === -1)
          startDot = i;
        else if (preDotState !== 1)
          preDotState = 1;
    } else if (startDot !== -1) {
      // We saw a non-dot and non-path separator before our dot, so we should
      // have a good chance at having a non-empty extension
      preDotState = -1;
    }
  }

  if (startDot === -1 || end === -1 ||
      // We saw a non-dot character immediately before the dot
      preDotState === 0 ||
      // The (right-most) trimmed path component is exactly '..'
      preDotState === 1 && startDot === end - 1 && startDot === startPart + 1) {
    return '';
  }
  return path.slice(startDot, end);
};

function filter (xs, f) {
    if (xs.filter) return xs.filter(f);
    var res = [];
    for (var i = 0; i < xs.length; i++) {
        if (f(xs[i], i, xs)) res.push(xs[i]);
    }
    return res;
}

// String.prototype.substr - negative index don't work in IE8
var substr = 'ab'.substr(-1) === 'b'
    ? function (str, start, len) { return str.substr(start, len) }
    : function (str, start, len) {
        if (start < 0) start = str.length + start;
        return str.substr(start, len);
    }
;

/* WEBPACK VAR INJECTION */}.call(this, __webpack_require__(/*! ./../node-libs-browser/mock/process.js */ 53)))

/***/ }),
/* 55 */
/*!*******************************************************************************************!*\
  !*** /Users/xingmangkeji/vue/yimei/node_modules/axios/lib/helpers/normalizeHeaderName.js ***!
  \*******************************************************************************************/
/*! no static exports found */
/***/ (function(module, exports, __webpack_require__) {

"use strict";


var utils = __webpack_require__(/*! ../utils */ 44);

module.exports = function normalizeHeaderName(headers, normalizedName) {
  utils.forEach(headers, function processHeader(value, name) {
    if (name !== normalizedName && name.toUpperCase() === normalizedName.toUpperCase()) {
      headers[normalizedName] = value;
      delete headers[name];
    }
  });
};

/***/ }),
/* 56 */
/*!****************************************************************************!*\
  !*** /Users/xingmangkeji/vue/yimei/node_modules/axios/lib/adapters/xhr.js ***!
  \****************************************************************************/
/*! no static exports found */
/***/ (function(module, exports, __webpack_require__) {

"use strict";


var utils = __webpack_require__(/*! ./../utils */ 44);
var settle = __webpack_require__(/*! ./../core/settle */ 57);
var cookies = __webpack_require__(/*! ./../helpers/cookies */ 60);
var buildURL = __webpack_require__(/*! ./../helpers/buildURL */ 47);
var buildFullPath = __webpack_require__(/*! ../core/buildFullPath */ 61);
var parseHeaders = __webpack_require__(/*! ./../helpers/parseHeaders */ 64);
var isURLSameOrigin = __webpack_require__(/*! ./../helpers/isURLSameOrigin */ 65);
var createError = __webpack_require__(/*! ../core/createError */ 58);

module.exports = function xhrAdapter(config) {
  return new Promise(function dispatchXhrRequest(resolve, reject) {
    var requestData = config.data;
    var requestHeaders = config.headers;

    if (utils.isFormData(requestData)) {
      delete requestHeaders['Content-Type']; // Let the browser set it
    }

    var request = new XMLHttpRequest();

    // HTTP basic authentication
    if (config.auth) {
      var username = config.auth.username || '';
      var password = config.auth.password ? unescape(encodeURIComponent(config.auth.password)) : '';
      requestHeaders.Authorization = 'Basic ' + btoa(username + ':' + password);
    }

    var fullPath = buildFullPath(config.baseURL, config.url);
    request.open(config.method.toUpperCase(), buildURL(fullPath, config.params, config.paramsSerializer), true);

    // Set the request timeout in MS
    request.timeout = config.timeout;

    // Listen for ready state
    request.onreadystatechange = function handleLoad() {
      if (!request || request.readyState !== 4) {
        return;
      }

      // The request errored out and we didn't get a response, this will be
      // handled by onerror instead
      // With one exception: request that using file: protocol, most browsers
      // will return status as 0 even though it's a successful request
      if (request.status === 0 && !(request.responseURL && request.responseURL.indexOf('file:') === 0)) {
        return;
      }

      // Prepare the response
      var responseHeaders = 'getAllResponseHeaders' in request ? parseHeaders(request.getAllResponseHeaders()) : null;
      var responseData = !config.responseType || config.responseType === 'text' ? request.responseText : request.response;
      var response = {
        data: responseData,
        status: request.status,
        statusText: request.statusText,
        headers: responseHeaders,
        config: config,
        request: request };


      settle(resolve, reject, response);

      // Clean up request
      request = null;
    };

    // Handle browser request cancellation (as opposed to a manual cancellation)
    request.onabort = function handleAbort() {
      if (!request) {
        return;
      }

      reject(createError('Request aborted', config, 'ECONNABORTED', request));

      // Clean up request
      request = null;
    };

    // Handle low level network errors
    request.onerror = function handleError() {
      // Real errors are hidden from us by the browser
      // onerror should only fire if it's a network error
      reject(createError('Network Error', config, null, request));

      // Clean up request
      request = null;
    };

    // Handle timeout
    request.ontimeout = function handleTimeout() {
      var timeoutErrorMessage = 'timeout of ' + config.timeout + 'ms exceeded';
      if (config.timeoutErrorMessage) {
        timeoutErrorMessage = config.timeoutErrorMessage;
      }
      reject(createError(timeoutErrorMessage, config, 'ECONNABORTED',
      request));

      // Clean up request
      request = null;
    };

    // Add xsrf header
    // This is only done if running in a standard browser environment.
    // Specifically not if we're in a web worker, or react-native.
    if (utils.isStandardBrowserEnv()) {
      // Add xsrf header
      var xsrfValue = (config.withCredentials || isURLSameOrigin(fullPath)) && config.xsrfCookieName ?
      cookies.read(config.xsrfCookieName) :
      undefined;

      if (xsrfValue) {
        requestHeaders[config.xsrfHeaderName] = xsrfValue;
      }
    }

    // Add headers to the request
    if ('setRequestHeader' in request) {
      utils.forEach(requestHeaders, function setRequestHeader(val, key) {
        if (typeof requestData === 'undefined' && key.toLowerCase() === 'content-type') {
          // Remove Content-Type if data is undefined
          delete requestHeaders[key];
        } else {
          // Otherwise add header to the request
          request.setRequestHeader(key, val);
        }
      });
    }

    // Add withCredentials to request if needed
    if (!utils.isUndefined(config.withCredentials)) {
      request.withCredentials = !!config.withCredentials;
    }

    // Add responseType to request if needed
    if (config.responseType) {
      try {
        request.responseType = config.responseType;
      } catch (e) {
        // Expected DOMException thrown by browsers not compatible XMLHttpRequest Level 2.
        // But, this can be suppressed for 'json' type as it can be parsed by default 'transformResponse' function.
        if (config.responseType !== 'json') {
          throw e;
        }
      }
    }

    // Handle progress if needed
    if (typeof config.onDownloadProgress === 'function') {
      request.addEventListener('progress', config.onDownloadProgress);
    }

    // Not all browsers support upload events
    if (typeof config.onUploadProgress === 'function' && request.upload) {
      request.upload.addEventListener('progress', config.onUploadProgress);
    }

    if (config.cancelToken) {
      // Handle cancellation
      config.cancelToken.promise.then(function onCanceled(cancel) {
        if (!request) {
          return;
        }

        request.abort();
        reject(cancel);
        // Clean up request
        request = null;
      });
    }

    if (!requestData) {
      requestData = null;
    }

    // Send the request
    request.send(requestData);
  });
};

/***/ }),
/* 57 */
/*!***************************************************************************!*\
  !*** /Users/xingmangkeji/vue/yimei/node_modules/axios/lib/core/settle.js ***!
  \***************************************************************************/
/*! no static exports found */
/***/ (function(module, exports, __webpack_require__) {

"use strict";


var createError = __webpack_require__(/*! ./createError */ 58);

/**
                                             * Resolve or reject a Promise based on response status.
                                             *
                                             * @param {Function} resolve A function that resolves the promise.
                                             * @param {Function} reject A function that rejects the promise.
                                             * @param {object} response The response.
                                             */
module.exports = function settle(resolve, reject, response) {
  var validateStatus = response.config.validateStatus;
  if (!response.status || !validateStatus || validateStatus(response.status)) {
    resolve(response);
  } else {
    reject(createError(
    'Request failed with status code ' + response.status,
    response.config,
    null,
    response.request,
    response));

  }
};

/***/ }),
/* 58 */
/*!********************************************************************************!*\
  !*** /Users/xingmangkeji/vue/yimei/node_modules/axios/lib/core/createError.js ***!
  \********************************************************************************/
/*! no static exports found */
/***/ (function(module, exports, __webpack_require__) {

"use strict";


var enhanceError = __webpack_require__(/*! ./enhanceError */ 59);

/**
                                               * Create an Error with the specified message, config, error code, request and response.
                                               *
                                               * @param {string} message The error message.
                                               * @param {Object} config The config.
                                               * @param {string} [code] The error code (for example, 'ECONNABORTED').
                                               * @param {Object} [request] The request.
                                               * @param {Object} [response] The response.
                                               * @returns {Error} The created error.
                                               */
module.exports = function createError(message, config, code, request, response) {
  var error = new Error(message);
  return enhanceError(error, config, code, request, response);
};

/***/ }),
/* 59 */
/*!*********************************************************************************!*\
  !*** /Users/xingmangkeji/vue/yimei/node_modules/axios/lib/core/enhanceError.js ***!
  \*********************************************************************************/
/*! no static exports found */
/***/ (function(module, exports, __webpack_require__) {

"use strict";


/**
               * Update an Error with the specified config, error code, and response.
               *
               * @param {Error} error The error to update.
               * @param {Object} config The config.
               * @param {string} [code] The error code (for example, 'ECONNABORTED').
               * @param {Object} [request] The request.
               * @param {Object} [response] The response.
               * @returns {Error} The error.
               */
module.exports = function enhanceError(error, config, code, request, response) {
  error.config = config;
  if (code) {
    error.code = code;
  }

  error.request = request;
  error.response = response;
  error.isAxiosError = true;

  error.toJSON = function toJSON() {
    return {
      // Standard
      message: this.message,
      name: this.name,
      // Microsoft
      description: this.description,
      number: this.number,
      // Mozilla
      fileName: this.fileName,
      lineNumber: this.lineNumber,
      columnNumber: this.columnNumber,
      stack: this.stack,
      // Axios
      config: this.config,
      code: this.code };

  };
  return error;
};

/***/ }),
/* 60 */
/*!*******************************************************************************!*\
  !*** /Users/xingmangkeji/vue/yimei/node_modules/axios/lib/helpers/cookies.js ***!
  \*******************************************************************************/
/*! no static exports found */
/***/ (function(module, exports, __webpack_require__) {

"use strict";


var utils = __webpack_require__(/*! ./../utils */ 44);

module.exports =
utils.isStandardBrowserEnv() ?

// Standard browser envs support document.cookie
function standardBrowserEnv() {
  return {
    write: function write(name, value, expires, path, domain, secure) {
      var cookie = [];
      cookie.push(name + '=' + encodeURIComponent(value));

      if (utils.isNumber(expires)) {
        cookie.push('expires=' + new Date(expires).toGMTString());
      }

      if (utils.isString(path)) {
        cookie.push('path=' + path);
      }

      if (utils.isString(domain)) {
        cookie.push('domain=' + domain);
      }

      if (secure === true) {
        cookie.push('secure');
      }

      document.cookie = cookie.join('; ');
    },

    read: function read(name) {
      var match = document.cookie.match(new RegExp('(^|;\\s*)(' + name + ')=([^;]*)'));
      return match ? decodeURIComponent(match[3]) : null;
    },

    remove: function remove(name) {
      this.write(name, '', Date.now() - 86400000);
    } };

}() :

// Non standard browser env (web workers, react-native) lack needed support.
function nonStandardBrowserEnv() {
  return {
    write: function write() {},
    read: function read() {return null;},
    remove: function remove() {} };

}();

/***/ }),
/* 61 */
/*!**********************************************************************************!*\
  !*** /Users/xingmangkeji/vue/yimei/node_modules/axios/lib/core/buildFullPath.js ***!
  \**********************************************************************************/
/*! no static exports found */
/***/ (function(module, exports, __webpack_require__) {

"use strict";


var isAbsoluteURL = __webpack_require__(/*! ../helpers/isAbsoluteURL */ 62);
var combineURLs = __webpack_require__(/*! ../helpers/combineURLs */ 63);

/**
                                                      * Creates a new URL by combining the baseURL with the requestedURL,
                                                      * only when the requestedURL is not already an absolute URL.
                                                      * If the requestURL is absolute, this function returns the requestedURL untouched.
                                                      *
                                                      * @param {string} baseURL The base URL
                                                      * @param {string} requestedURL Absolute or relative URL to combine
                                                      * @returns {string} The combined full path
                                                      */
module.exports = function buildFullPath(baseURL, requestedURL) {
  if (baseURL && !isAbsoluteURL(requestedURL)) {
    return combineURLs(baseURL, requestedURL);
  }
  return requestedURL;
};

/***/ }),
/* 62 */
/*!*************************************************************************************!*\
  !*** /Users/xingmangkeji/vue/yimei/node_modules/axios/lib/helpers/isAbsoluteURL.js ***!
  \*************************************************************************************/
/*! no static exports found */
/***/ (function(module, exports, __webpack_require__) {

"use strict";


/**
               * Determines whether the specified URL is absolute
               *
               * @param {string} url The URL to test
               * @returns {boolean} True if the specified URL is absolute, otherwise false
               */
module.exports = function isAbsoluteURL(url) {
  // A URL is considered absolute if it begins with "<scheme>://" or "//" (protocol-relative URL).
  // RFC 3986 defines scheme name as a sequence of characters beginning with a letter and followed
  // by any combination of letters, digits, plus, period, or hyphen.
  return /^([a-z][a-z\d\+\-\.]*:)?\/\//i.test(url);
};

/***/ }),
/* 63 */
/*!***********************************************************************************!*\
  !*** /Users/xingmangkeji/vue/yimei/node_modules/axios/lib/helpers/combineURLs.js ***!
  \***********************************************************************************/
/*! no static exports found */
/***/ (function(module, exports, __webpack_require__) {

"use strict";


/**
               * Creates a new URL by combining the specified URLs
               *
               * @param {string} baseURL The base URL
               * @param {string} relativeURL The relative URL
               * @returns {string} The combined URL
               */
module.exports = function combineURLs(baseURL, relativeURL) {
  return relativeURL ?
  baseURL.replace(/\/+$/, '') + '/' + relativeURL.replace(/^\/+/, '') :
  baseURL;
};

/***/ }),
/* 64 */
/*!************************************************************************************!*\
  !*** /Users/xingmangkeji/vue/yimei/node_modules/axios/lib/helpers/parseHeaders.js ***!
  \************************************************************************************/
/*! no static exports found */
/***/ (function(module, exports, __webpack_require__) {

"use strict";


var utils = __webpack_require__(/*! ./../utils */ 44);

// Headers whose duplicates are ignored by node
// c.f. https://nodejs.org/api/http.html#http_message_headers
var ignoreDuplicateOf = [
'age', 'authorization', 'content-length', 'content-type', 'etag',
'expires', 'from', 'host', 'if-modified-since', 'if-unmodified-since',
'last-modified', 'location', 'max-forwards', 'proxy-authorization',
'referer', 'retry-after', 'user-agent'];


/**
                                          * Parse headers into an object
                                          *
                                          * ```
                                          * Date: Wed, 27 Aug 2014 08:58:49 GMT
                                          * Content-Type: application/json
                                          * Connection: keep-alive
                                          * Transfer-Encoding: chunked
                                          * ```
                                          *
                                          * @param {String} headers Headers needing to be parsed
                                          * @returns {Object} Headers parsed into an object
                                          */
module.exports = function parseHeaders(headers) {
  var parsed = {};
  var key;
  var val;
  var i;

  if (!headers) {return parsed;}

  utils.forEach(headers.split('\n'), function parser(line) {
    i = line.indexOf(':');
    key = utils.trim(line.substr(0, i)).toLowerCase();
    val = utils.trim(line.substr(i + 1));

    if (key) {
      if (parsed[key] && ignoreDuplicateOf.indexOf(key) >= 0) {
        return;
      }
      if (key === 'set-cookie') {
        parsed[key] = (parsed[key] ? parsed[key] : []).concat([val]);
      } else {
        parsed[key] = parsed[key] ? parsed[key] + ', ' + val : val;
      }
    }
  });

  return parsed;
};

/***/ }),
/* 65 */
/*!***************************************************************************************!*\
  !*** /Users/xingmangkeji/vue/yimei/node_modules/axios/lib/helpers/isURLSameOrigin.js ***!
  \***************************************************************************************/
/*! no static exports found */
/***/ (function(module, exports, __webpack_require__) {

"use strict";


var utils = __webpack_require__(/*! ./../utils */ 44);

module.exports =
utils.isStandardBrowserEnv() ?

// Standard browser envs have full support of the APIs needed to test
// whether the request URL is of the same origin as current location.
function standardBrowserEnv() {
  var msie = /(msie|trident)/i.test(navigator.userAgent);
  var urlParsingNode = document.createElement('a');
  var originURL;

  /**
                 * Parse a URL to discover it's components
                 *
                 * @param {String} url The URL to be parsed
                 * @returns {Object}
                 */
  function resolveURL(url) {
    var href = url;

    if (msie) {
      // IE needs attribute set twice to normalize properties
      urlParsingNode.setAttribute('href', href);
      href = urlParsingNode.href;
    }

    urlParsingNode.setAttribute('href', href);

    // urlParsingNode provides the UrlUtils interface - http://url.spec.whatwg.org/#urlutils
    return {
      href: urlParsingNode.href,
      protocol: urlParsingNode.protocol ? urlParsingNode.protocol.replace(/:$/, '') : '',
      host: urlParsingNode.host,
      search: urlParsingNode.search ? urlParsingNode.search.replace(/^\?/, '') : '',
      hash: urlParsingNode.hash ? urlParsingNode.hash.replace(/^#/, '') : '',
      hostname: urlParsingNode.hostname,
      port: urlParsingNode.port,
      pathname: urlParsingNode.pathname.charAt(0) === '/' ?
      urlParsingNode.pathname :
      '/' + urlParsingNode.pathname };

  }

  originURL = resolveURL(window.location.href);

  /**
                                                * Determine if a URL shares the same origin as the current location
                                                *
                                                * @param {String} requestURL The URL to test
                                                * @returns {boolean} True if URL shares the same origin, otherwise false
                                                */
  return function isURLSameOrigin(requestURL) {
    var parsed = utils.isString(requestURL) ? resolveURL(requestURL) : requestURL;
    return parsed.protocol === originURL.protocol &&
    parsed.host === originURL.host;
  };
}() :

// Non standard browser envs (web workers, react-native) lack needed support.
function nonStandardBrowserEnv() {
  return function isURLSameOrigin() {
    return true;
  };
}();

/***/ }),
/* 66 */
/*!********************************************************************************!*\
  !*** /Users/xingmangkeji/vue/yimei/node_modules/axios/lib/core/mergeConfig.js ***!
  \********************************************************************************/
/*! no static exports found */
/***/ (function(module, exports, __webpack_require__) {

"use strict";


var utils = __webpack_require__(/*! ../utils */ 44);

/**
                                  * Config-specific merge-function which creates a new config-object
                                  * by merging two configuration objects together.
                                  *
                                  * @param {Object} config1
                                  * @param {Object} config2
                                  * @returns {Object} New object resulting from merging config2 to config1
                                  */
module.exports = function mergeConfig(config1, config2) {
  // eslint-disable-next-line no-param-reassign
  config2 = config2 || {};
  var config = {};

  var valueFromConfig2Keys = ['url', 'method', 'data'];
  var mergeDeepPropertiesKeys = ['headers', 'auth', 'proxy', 'params'];
  var defaultToConfig2Keys = [
  'baseURL', 'transformRequest', 'transformResponse', 'paramsSerializer',
  'timeout', 'timeoutMessage', 'withCredentials', 'adapter', 'responseType', 'xsrfCookieName',
  'xsrfHeaderName', 'onUploadProgress', 'onDownloadProgress', 'decompress',
  'maxContentLength', 'maxBodyLength', 'maxRedirects', 'transport', 'httpAgent',
  'httpsAgent', 'cancelToken', 'socketPath', 'responseEncoding'];

  var directMergeKeys = ['validateStatus'];

  function getMergedValue(target, source) {
    if (utils.isPlainObject(target) && utils.isPlainObject(source)) {
      return utils.merge(target, source);
    } else if (utils.isPlainObject(source)) {
      return utils.merge({}, source);
    } else if (utils.isArray(source)) {
      return source.slice();
    }
    return source;
  }

  function mergeDeepProperties(prop) {
    if (!utils.isUndefined(config2[prop])) {
      config[prop] = getMergedValue(config1[prop], config2[prop]);
    } else if (!utils.isUndefined(config1[prop])) {
      config[prop] = getMergedValue(undefined, config1[prop]);
    }
  }

  utils.forEach(valueFromConfig2Keys, function valueFromConfig2(prop) {
    if (!utils.isUndefined(config2[prop])) {
      config[prop] = getMergedValue(undefined, config2[prop]);
    }
  });

  utils.forEach(mergeDeepPropertiesKeys, mergeDeepProperties);

  utils.forEach(defaultToConfig2Keys, function defaultToConfig2(prop) {
    if (!utils.isUndefined(config2[prop])) {
      config[prop] = getMergedValue(undefined, config2[prop]);
    } else if (!utils.isUndefined(config1[prop])) {
      config[prop] = getMergedValue(undefined, config1[prop]);
    }
  });

  utils.forEach(directMergeKeys, function merge(prop) {
    if (prop in config2) {
      config[prop] = getMergedValue(config1[prop], config2[prop]);
    } else if (prop in config1) {
      config[prop] = getMergedValue(undefined, config1[prop]);
    }
  });

  var axiosKeys = valueFromConfig2Keys.
  concat(mergeDeepPropertiesKeys).
  concat(defaultToConfig2Keys).
  concat(directMergeKeys);

  var otherKeys = Object.
  keys(config1).
  concat(Object.keys(config2)).
  filter(function filterAxiosKeys(key) {
    return axiosKeys.indexOf(key) === -1;
  });

  utils.forEach(otherKeys, mergeDeepProperties);

  return config;
};

/***/ }),
/* 67 */
/*!*****************************************************************************!*\
  !*** /Users/xingmangkeji/vue/yimei/node_modules/axios/lib/cancel/Cancel.js ***!
  \*****************************************************************************/
/*! no static exports found */
/***/ (function(module, exports, __webpack_require__) {

"use strict";


/**
               * A `Cancel` is an object that is thrown when an operation is canceled.
               *
               * @class
               * @param {string=} message The message.
               */
function Cancel(message) {
  this.message = message;
}

Cancel.prototype.toString = function toString() {
  return 'Cancel' + (this.message ? ': ' + this.message : '');
};

Cancel.prototype.__CANCEL__ = true;

module.exports = Cancel;

/***/ }),
/* 68 */
/*!**********************************************************************************!*\
  !*** /Users/xingmangkeji/vue/yimei/node_modules/axios/lib/cancel/CancelToken.js ***!
  \**********************************************************************************/
/*! no static exports found */
/***/ (function(module, exports, __webpack_require__) {

"use strict";


var Cancel = __webpack_require__(/*! ./Cancel */ 67);

/**
                                   * A `CancelToken` is an object that can be used to request cancellation of an operation.
                                   *
                                   * @class
                                   * @param {Function} executor The executor function.
                                   */
function CancelToken(executor) {
  if (typeof executor !== 'function') {
    throw new TypeError('executor must be a function.');
  }

  var resolvePromise;
  this.promise = new Promise(function promiseExecutor(resolve) {
    resolvePromise = resolve;
  });

  var token = this;
  executor(function cancel(message) {
    if (token.reason) {
      // Cancellation has already been requested
      return;
    }

    token.reason = new Cancel(message);
    resolvePromise(token.reason);
  });
}

/**
   * Throws a `Cancel` if cancellation has been requested.
   */
CancelToken.prototype.throwIfRequested = function throwIfRequested() {
  if (this.reason) {
    throw this.reason;
  }
};

/**
    * Returns an object that contains a new `CancelToken` and a function that, when called,
    * cancels the `CancelToken`.
    */
CancelToken.source = function source() {
  var cancel;
  var token = new CancelToken(function executor(c) {
    cancel = c;
  });
  return {
    token: token,
    cancel: cancel };

};

module.exports = CancelToken;

/***/ }),
/* 69 */
/*!******************************************************************************!*\
  !*** /Users/xingmangkeji/vue/yimei/node_modules/axios/lib/helpers/spread.js ***!
  \******************************************************************************/
/*! no static exports found */
/***/ (function(module, exports, __webpack_require__) {

"use strict";


/**
               * Syntactic sugar for invoking a function and expanding an array for arguments.
               *
               * Common use case would be to use `Function.prototype.apply`.
               *
               *  ```js
               *  function f(x, y, z) {}
               *  var args = [1, 2, 3];
               *  f.apply(null, args);
               *  ```
               *
               * With `spread` this example can be re-written.
               *
               *  ```js
               *  spread(function(x, y, z) {})([1, 2, 3]);
               *  ```
               *
               * @param {Function} callback
               * @returns {Function}
               */
module.exports = function spread(callback) {
  return function wrap(arr) {
    return callback.apply(null, arr);
  };
};

/***/ }),
/* 70 */
/*!************************************************************************************!*\
  !*** /Users/xingmangkeji/vue/yimei/node_modules/axios/lib/helpers/isAxiosError.js ***!
  \************************************************************************************/
/*! no static exports found */
/***/ (function(module, exports, __webpack_require__) {

"use strict";


/**
               * Determines whether the payload is an error thrown by Axios
               *
               * @param {*} payload The value to test
               * @returns {boolean} True if the payload is an error thrown by Axios, otherwise false
               */
module.exports = function isAxiosError(payload) {
  return typeof payload === 'object' && payload.isAxiosError === true;
};

/***/ }),
/* 71 */
/*!************************************************!*\
  !*** /Users/xingmangkeji/vue/yimei/api/url.js ***!
  \************************************************/
/*! no static exports found */
/***/ (function(module, exports, __webpack_require__) {

"use strict";
Object.defineProperty(exports, "__esModule", { value: true });exports.default = void 0;var _default = {
  // baseUrl: 'http://192.168.50.96:8001',
  baseUrl: 'https://rushifu.hxqhhhh.shop',
  dzpBaseUrl: 'https://lpw.zhangba.shop',
  // baseUrl:'https://rushifu.5laoye.com',
  loginWechat: '/api/login/wechat',
  categories: '/api/categories', //分类页面
  cities: '/api/cities', //城市列表
  home: '/api/home', //首页接口
  items: '/api/items', //获取商品详情
  uploadToken: '/api/upload/token', //上传测试
  demandQuotes: '/api/demand-quotes', //生成报价需求单
  address: '/api/address', //地址列表
  addressAdd: '/api/address', //新增地址
  addressEdit: '/api/address', //修改地址
  addressXq: '/api/address', //地址详情
  config: '/api/config', //全局设置
  userInfo: '/api/user-info', //修改用户信息
  getDemandQuotes: '/api/demand-quotes', //用户需要报价单详情
  getDemandQuotesList: '/api/demand-quotes', //用户服务订单列表
  getDemandQuotesListXq: '/api/demand-quotes', //用户需要报价单详情
  selectDemandQuotes: '/api/demand-quotes', //选择师傅
  demandQuotesIdPreOrder: '/api/demand-quotes', //预订单
  order: '/api/order', //创建订单
  coupons: '/api/coupons', //优惠券列表
  pay: '/api/pay', //付款
  user: '/api/user', //账户信息
  moneyRecord: '/api/money-record', //金钱记录
  demandQuotesIidCancel: '/api/demand-quotes', //取消订单
  orderIdComment: '/api/order', //添加评论
  orderIdCommentXq: '/api/order', //评论详情
  feedbacksTypes: '/api/feedbacks-types', //反馈类型
  feedbacks: '/api/feedbacks', //新增反馈
  itemsItemIdComments: '/api/items', //商品评论列表
  withdraw: '/api/withdraw', //申请提现
  scoreRecords: '/api/score-records', //积分明细
  scoreToMoney: '/api/score/to-money', //积分兑余额
  turntableItems: '/api/turntable-items', //大转盘item
  turntableTurn: '/api/turntable/turn', //大转盘结果
  awards: '/api/awards', //奖品列表
  itemsList: '/api/items', //商品列表
  goodsOrder: '/api/goods-order', //生成商品订单
  goodsOrderPay: '/api/goods-order/pay', //商品付款
  article: '/api/article', //文章详情
  goodsOrderShouhuo: '/api/goods-order', //商品收货
  goodsStreet: '/api/goods-street', //建材一条街
  activity: '/api/activity', //活动列表
  choujiangIndex: '/xcx/choujiang/index', //抽奖首页
  choujiangChou_jiang: '/xcx/choujiang/chou_jiang', //抽奖
  choujiangI_prize_list: '/xcx/choujiang/i_prize_list', //我的奖品
  choujiangMianDanShopList: '/xcx/choujiang/mianDanShopList', //实物奖品列表
  choujiangCheckShop: '/xcx/choujiang/checkShop', //实物奖品-选择提交
  choujiangTreeTurntable: '/xcx/choujiang/treeTurntable', //二级转盘页面
  choujiangDaYeLaiWan: '/xcx/choujiang/daYeLaiWan', //二级抽奖页面-抽奖
  choujiangAddress: '/xcx/choujiang/address', //填写收货地址
  choujiangInvite_log: '/xcx/choujiang/invite_log', //邀请记录
  choujiangPrize_log: '/xcx/choujiang/prize_log', //抽奖记录
  choujiangZhuLi: '/xcx/choujiang/zhuLi', //助力 -分享链接参数说明
  choujiangKuaidi: '/xcx/choujiang/kuaidi', //查看物流信息
  choujiangLive_prize: '/xcx/choujiang/live_prize' //观看完视频提交
};exports.default = _default;

/***/ }),
/* 72 */
/*!*******************************************************!*\
  !*** /Users/xingmangkeji/vue/yimei/static/md5.min.js ***!
  \*******************************************************/
/*! no static exports found */
/***/ (function(module, exports, __webpack_require__) {

/* WEBPACK VAR INJECTION */(function(process, global) {var __WEBPACK_AMD_DEFINE_RESULT__;/**
 * [js-md5]{@link https://github.com/emn178/js-md5}
 *
 * @namespace md5
 * @version 0.7.3
 * @author Chen, Yi-Cyuan [emn178@gmail.com]
 * @copyright Chen, Yi-Cyuan 2014-2017
 * @license MIT
 */
!function () {"use strict";function t(t) {if (t) d[0] = d[16] = d[1] = d[2] = d[3] = d[4] = d[5] = d[6] = d[7] = d[8] = d[9] = d[10] = d[11] = d[12] = d[13] = d[14] = d[15] = 0, this.blocks = d, this.buffer8 = l;else if (a) {var r = new ArrayBuffer(68);this.buffer8 = new Uint8Array(r), this.blocks = new Uint32Array(r);} else this.blocks = [0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0];this.h0 = this.h1 = this.h2 = this.h3 = this.start = this.bytes = this.hBytes = 0, this.finalized = this.hashed = !1, this.first = !0;}var r = "input is invalid type",e = "object" == typeof window,i = e ? window : {};i.JS_MD5_NO_WINDOW && (e = !1);var s = !e && "object" == typeof self,h = !i.JS_MD5_NO_NODE_JS && "object" == typeof process && process.versions && process.versions.node;h ? i = global : s && (i = self);var f = !i.JS_MD5_NO_COMMON_JS && "object" == typeof module && module.exports,o =  true && __webpack_require__(/*! !webpack amd options */ 73),a = !i.JS_MD5_NO_ARRAY_BUFFER && "undefined" != typeof ArrayBuffer,n = "0123456789abcdef".split(""),u = [128, 32768, 8388608, -2147483648],y = [0, 8, 16, 24],c = ["hex", "array", "digest", "buffer", "arrayBuffer", "base64"],p = "ABCDEFGHIJKLMNOPQRSTUVWXYZabcdefghijklmnopqrstuvwxyz0123456789+/".split(""),d = [],l;if (a) {var A = new ArrayBuffer(68);l = new Uint8Array(A), d = new Uint32Array(A);}!i.JS_MD5_NO_NODE_JS && Array.isArray || (Array.isArray = function (t) {return "[object Array]" === Object.prototype.toString.call(t);}), !a || !i.JS_MD5_NO_ARRAY_BUFFER_IS_VIEW && ArrayBuffer.isView || (ArrayBuffer.isView = function (t) {return "object" == typeof t && t.buffer && t.buffer.constructor === ArrayBuffer;});var b = function b(r) {return function (e) {return new t(!0).update(e)[r]();};},v = function v() {var r = b("hex");h && (r = w(r)), r.create = function () {return new t();}, r.update = function (t) {return r.create().update(t);};for (var e = 0; e < c.length; ++e) {var i = c[e];r[i] = b(i);}return r;},w = function w(t) {var e = eval("require('crypto')"),i = eval("require('buffer').Buffer"),s = function s(_s) {if ("string" == typeof _s) return e.createHash("md5").update(_s, "utf8").digest("hex");if (null === _s || void 0 === _s) throw r;return _s.constructor === ArrayBuffer && (_s = new Uint8Array(_s)), Array.isArray(_s) || ArrayBuffer.isView(_s) || _s.constructor === i ? e.createHash("md5").update(new i(_s)).digest("hex") : t(_s);};return s;};t.prototype.update = function (t) {if (!this.finalized) {var e,i = typeof t;if ("string" !== i) {if ("object" !== i) throw r;if (null === t) throw r;if (a && t.constructor === ArrayBuffer) t = new Uint8Array(t);else if (!(Array.isArray(t) || a && ArrayBuffer.isView(t))) throw r;e = !0;}for (var s, h, f = 0, o = t.length, n = this.blocks, u = this.buffer8; f < o;) {if (this.hashed && (this.hashed = !1, n[0] = n[16], n[16] = n[1] = n[2] = n[3] = n[4] = n[5] = n[6] = n[7] = n[8] = n[9] = n[10] = n[11] = n[12] = n[13] = n[14] = n[15] = 0), e) {if (a) for (h = this.start; f < o && h < 64; ++f) {u[h++] = t[f];} else for (h = this.start; f < o && h < 64; ++f) {n[h >> 2] |= t[f] << y[3 & h++];}} else if (a) for (h = this.start; f < o && h < 64; ++f) {(s = t.charCodeAt(f)) < 128 ? u[h++] = s : s < 2048 ? (u[h++] = 192 | s >> 6, u[h++] = 128 | 63 & s) : s < 55296 || s >= 57344 ? (u[h++] = 224 | s >> 12, u[h++] = 128 | s >> 6 & 63, u[h++] = 128 | 63 & s) : (s = 65536 + ((1023 & s) << 10 | 1023 & t.charCodeAt(++f)), u[h++] = 240 | s >> 18, u[h++] = 128 | s >> 12 & 63, u[h++] = 128 | s >> 6 & 63, u[h++] = 128 | 63 & s);} else for (h = this.start; f < o && h < 64; ++f) {(s = t.charCodeAt(f)) < 128 ? n[h >> 2] |= s << y[3 & h++] : s < 2048 ? (n[h >> 2] |= (192 | s >> 6) << y[3 & h++], n[h >> 2] |= (128 | 63 & s) << y[3 & h++]) : s < 55296 || s >= 57344 ? (n[h >> 2] |= (224 | s >> 12) << y[3 & h++], n[h >> 2] |= (128 | s >> 6 & 63) << y[3 & h++], n[h >> 2] |= (128 | 63 & s) << y[3 & h++]) : (s = 65536 + ((1023 & s) << 10 | 1023 & t.charCodeAt(++f)), n[h >> 2] |= (240 | s >> 18) << y[3 & h++], n[h >> 2] |= (128 | s >> 12 & 63) << y[3 & h++], n[h >> 2] |= (128 | s >> 6 & 63) << y[3 & h++], n[h >> 2] |= (128 | 63 & s) << y[3 & h++]);}this.lastByteIndex = h, this.bytes += h - this.start, h >= 64 ? (this.start = h - 64, this.hash(), this.hashed = !0) : this.start = h;}return this.bytes > 4294967295 && (this.hBytes += this.bytes / 4294967296 << 0, this.bytes = this.bytes % 4294967296), this;}}, t.prototype.finalize = function () {if (!this.finalized) {this.finalized = !0;var t = this.blocks,r = this.lastByteIndex;t[r >> 2] |= u[3 & r], r >= 56 && (this.hashed || this.hash(), t[0] = t[16], t[16] = t[1] = t[2] = t[3] = t[4] = t[5] = t[6] = t[7] = t[8] = t[9] = t[10] = t[11] = t[12] = t[13] = t[14] = t[15] = 0), t[14] = this.bytes << 3, t[15] = this.hBytes << 3 | this.bytes >>> 29, this.hash();}}, t.prototype.hash = function () {var t,r,e,i,s,h,f = this.blocks;this.first ? r = ((r = ((t = ((t = f[0] - 680876937) << 7 | t >>> 25) - 271733879 << 0) ^ (e = ((e = (-271733879 ^ (i = ((i = (-1732584194 ^ 2004318071 & t) + f[1] - 117830708) << 12 | i >>> 20) + t << 0) & (-271733879 ^ t)) + f[2] - 1126478375) << 17 | e >>> 15) + i << 0) & (i ^ t)) + f[3] - 1316259209) << 22 | r >>> 10) + e << 0 : (t = this.h0, r = this.h1, e = this.h2, r = ((r += ((t = ((t += ((i = this.h3) ^ r & (e ^ i)) + f[0] - 680876936) << 7 | t >>> 25) + r << 0) ^ (e = ((e += (r ^ (i = ((i += (e ^ t & (r ^ e)) + f[1] - 389564586) << 12 | i >>> 20) + t << 0) & (t ^ r)) + f[2] + 606105819) << 17 | e >>> 15) + i << 0) & (i ^ t)) + f[3] - 1044525330) << 22 | r >>> 10) + e << 0), r = ((r += ((t = ((t += (i ^ r & (e ^ i)) + f[4] - 176418897) << 7 | t >>> 25) + r << 0) ^ (e = ((e += (r ^ (i = ((i += (e ^ t & (r ^ e)) + f[5] + 1200080426) << 12 | i >>> 20) + t << 0) & (t ^ r)) + f[6] - 1473231341) << 17 | e >>> 15) + i << 0) & (i ^ t)) + f[7] - 45705983) << 22 | r >>> 10) + e << 0, r = ((r += ((t = ((t += (i ^ r & (e ^ i)) + f[8] + 1770035416) << 7 | t >>> 25) + r << 0) ^ (e = ((e += (r ^ (i = ((i += (e ^ t & (r ^ e)) + f[9] - 1958414417) << 12 | i >>> 20) + t << 0) & (t ^ r)) + f[10] - 42063) << 17 | e >>> 15) + i << 0) & (i ^ t)) + f[11] - 1990404162) << 22 | r >>> 10) + e << 0, r = ((r += ((t = ((t += (i ^ r & (e ^ i)) + f[12] + 1804603682) << 7 | t >>> 25) + r << 0) ^ (e = ((e += (r ^ (i = ((i += (e ^ t & (r ^ e)) + f[13] - 40341101) << 12 | i >>> 20) + t << 0) & (t ^ r)) + f[14] - 1502002290) << 17 | e >>> 15) + i << 0) & (i ^ t)) + f[15] + 1236535329) << 22 | r >>> 10) + e << 0, r = ((r += ((i = ((i += (r ^ e & ((t = ((t += (e ^ i & (r ^ e)) + f[1] - 165796510) << 5 | t >>> 27) + r << 0) ^ r)) + f[6] - 1069501632) << 9 | i >>> 23) + t << 0) ^ t & ((e = ((e += (t ^ r & (i ^ t)) + f[11] + 643717713) << 14 | e >>> 18) + i << 0) ^ i)) + f[0] - 373897302) << 20 | r >>> 12) + e << 0, r = ((r += ((i = ((i += (r ^ e & ((t = ((t += (e ^ i & (r ^ e)) + f[5] - 701558691) << 5 | t >>> 27) + r << 0) ^ r)) + f[10] + 38016083) << 9 | i >>> 23) + t << 0) ^ t & ((e = ((e += (t ^ r & (i ^ t)) + f[15] - 660478335) << 14 | e >>> 18) + i << 0) ^ i)) + f[4] - 405537848) << 20 | r >>> 12) + e << 0, r = ((r += ((i = ((i += (r ^ e & ((t = ((t += (e ^ i & (r ^ e)) + f[9] + 568446438) << 5 | t >>> 27) + r << 0) ^ r)) + f[14] - 1019803690) << 9 | i >>> 23) + t << 0) ^ t & ((e = ((e += (t ^ r & (i ^ t)) + f[3] - 187363961) << 14 | e >>> 18) + i << 0) ^ i)) + f[8] + 1163531501) << 20 | r >>> 12) + e << 0, r = ((r += ((i = ((i += (r ^ e & ((t = ((t += (e ^ i & (r ^ e)) + f[13] - 1444681467) << 5 | t >>> 27) + r << 0) ^ r)) + f[2] - 51403784) << 9 | i >>> 23) + t << 0) ^ t & ((e = ((e += (t ^ r & (i ^ t)) + f[7] + 1735328473) << 14 | e >>> 18) + i << 0) ^ i)) + f[12] - 1926607734) << 20 | r >>> 12) + e << 0, r = ((r += ((h = (i = ((i += ((s = r ^ e) ^ (t = ((t += (s ^ i) + f[5] - 378558) << 4 | t >>> 28) + r << 0)) + f[8] - 2022574463) << 11 | i >>> 21) + t << 0) ^ t) ^ (e = ((e += (h ^ r) + f[11] + 1839030562) << 16 | e >>> 16) + i << 0)) + f[14] - 35309556) << 23 | r >>> 9) + e << 0, r = ((r += ((h = (i = ((i += ((s = r ^ e) ^ (t = ((t += (s ^ i) + f[1] - 1530992060) << 4 | t >>> 28) + r << 0)) + f[4] + 1272893353) << 11 | i >>> 21) + t << 0) ^ t) ^ (e = ((e += (h ^ r) + f[7] - 155497632) << 16 | e >>> 16) + i << 0)) + f[10] - 1094730640) << 23 | r >>> 9) + e << 0, r = ((r += ((h = (i = ((i += ((s = r ^ e) ^ (t = ((t += (s ^ i) + f[13] + 681279174) << 4 | t >>> 28) + r << 0)) + f[0] - 358537222) << 11 | i >>> 21) + t << 0) ^ t) ^ (e = ((e += (h ^ r) + f[3] - 722521979) << 16 | e >>> 16) + i << 0)) + f[6] + 76029189) << 23 | r >>> 9) + e << 0, r = ((r += ((h = (i = ((i += ((s = r ^ e) ^ (t = ((t += (s ^ i) + f[9] - 640364487) << 4 | t >>> 28) + r << 0)) + f[12] - 421815835) << 11 | i >>> 21) + t << 0) ^ t) ^ (e = ((e += (h ^ r) + f[15] + 530742520) << 16 | e >>> 16) + i << 0)) + f[2] - 995338651) << 23 | r >>> 9) + e << 0, r = ((r += ((i = ((i += (r ^ ((t = ((t += (e ^ (r | ~i)) + f[0] - 198630844) << 6 | t >>> 26) + r << 0) | ~e)) + f[7] + 1126891415) << 10 | i >>> 22) + t << 0) ^ ((e = ((e += (t ^ (i | ~r)) + f[14] - 1416354905) << 15 | e >>> 17) + i << 0) | ~t)) + f[5] - 57434055) << 21 | r >>> 11) + e << 0, r = ((r += ((i = ((i += (r ^ ((t = ((t += (e ^ (r | ~i)) + f[12] + 1700485571) << 6 | t >>> 26) + r << 0) | ~e)) + f[3] - 1894986606) << 10 | i >>> 22) + t << 0) ^ ((e = ((e += (t ^ (i | ~r)) + f[10] - 1051523) << 15 | e >>> 17) + i << 0) | ~t)) + f[1] - 2054922799) << 21 | r >>> 11) + e << 0, r = ((r += ((i = ((i += (r ^ ((t = ((t += (e ^ (r | ~i)) + f[8] + 1873313359) << 6 | t >>> 26) + r << 0) | ~e)) + f[15] - 30611744) << 10 | i >>> 22) + t << 0) ^ ((e = ((e += (t ^ (i | ~r)) + f[6] - 1560198380) << 15 | e >>> 17) + i << 0) | ~t)) + f[13] + 1309151649) << 21 | r >>> 11) + e << 0, r = ((r += ((i = ((i += (r ^ ((t = ((t += (e ^ (r | ~i)) + f[4] - 145523070) << 6 | t >>> 26) + r << 0) | ~e)) + f[11] - 1120210379) << 10 | i >>> 22) + t << 0) ^ ((e = ((e += (t ^ (i | ~r)) + f[2] + 718787259) << 15 | e >>> 17) + i << 0) | ~t)) + f[9] - 343485551) << 21 | r >>> 11) + e << 0, this.first ? (this.h0 = t + 1732584193 << 0, this.h1 = r - 271733879 << 0, this.h2 = e - 1732584194 << 0, this.h3 = i + 271733878 << 0, this.first = !1) : (this.h0 = this.h0 + t << 0, this.h1 = this.h1 + r << 0, this.h2 = this.h2 + e << 0, this.h3 = this.h3 + i << 0);}, t.prototype.hex = function () {this.finalize();var t = this.h0,r = this.h1,e = this.h2,i = this.h3;return n[t >> 4 & 15] + n[15 & t] + n[t >> 12 & 15] + n[t >> 8 & 15] + n[t >> 20 & 15] + n[t >> 16 & 15] + n[t >> 28 & 15] + n[t >> 24 & 15] + n[r >> 4 & 15] + n[15 & r] + n[r >> 12 & 15] + n[r >> 8 & 15] + n[r >> 20 & 15] + n[r >> 16 & 15] + n[r >> 28 & 15] + n[r >> 24 & 15] + n[e >> 4 & 15] + n[15 & e] + n[e >> 12 & 15] + n[e >> 8 & 15] + n[e >> 20 & 15] + n[e >> 16 & 15] + n[e >> 28 & 15] + n[e >> 24 & 15] + n[i >> 4 & 15] + n[15 & i] + n[i >> 12 & 15] + n[i >> 8 & 15] + n[i >> 20 & 15] + n[i >> 16 & 15] + n[i >> 28 & 15] + n[i >> 24 & 15];}, t.prototype.toString = t.prototype.hex, t.prototype.digest = function () {this.finalize();var t = this.h0,r = this.h1,e = this.h2,i = this.h3;return [255 & t, t >> 8 & 255, t >> 16 & 255, t >> 24 & 255, 255 & r, r >> 8 & 255, r >> 16 & 255, r >> 24 & 255, 255 & e, e >> 8 & 255, e >> 16 & 255, e >> 24 & 255, 255 & i, i >> 8 & 255, i >> 16 & 255, i >> 24 & 255];}, t.prototype.array = t.prototype.digest, t.prototype.arrayBuffer = function () {this.finalize();var t = new ArrayBuffer(16),r = new Uint32Array(t);return r[0] = this.h0, r[1] = this.h1, r[2] = this.h2, r[3] = this.h3, t;}, t.prototype.buffer = t.prototype.arrayBuffer, t.prototype.base64 = function () {for (var t, r, e, i = "", s = this.array(), h = 0; h < 15;) {t = s[h++], r = s[h++], e = s[h++], i += p[t >>> 2] + p[63 & (t << 4 | r >>> 4)] + p[63 & (r << 2 | e >>> 6)] + p[63 & e];}return t = s[h], i += p[t >>> 2] + p[t << 4 & 63] + "==";};var _ = v();f ? module.exports = _ : (i.md5 = _, o && !(__WEBPACK_AMD_DEFINE_RESULT__ = (function () {return _;}).call(exports, __webpack_require__, exports, module),
				__WEBPACK_AMD_DEFINE_RESULT__ !== undefined && (module.exports = __WEBPACK_AMD_DEFINE_RESULT__)));}();
/* WEBPACK VAR INJECTION */}.call(this, __webpack_require__(/*! ./../../../../../Applications/HBuilderX.app/Contents/HBuilderX/plugins/uniapp-cli/node_modules/node-libs-browser/mock/process.js */ 53), __webpack_require__(/*! ./../../../../../Applications/HBuilderX.app/Contents/HBuilderX/plugins/uniapp-cli/node_modules/webpack/buildin/global.js */ 2)))

/***/ }),
/* 73 */
/*!****************************************!*\
  !*** (webpack)/buildin/amd-options.js ***!
  \****************************************/
/*! no static exports found */
/***/ (function(module, exports) {

/* WEBPACK VAR INJECTION */(function(__webpack_amd_options__) {/* globals __webpack_amd_options__ */
module.exports = __webpack_amd_options__;

/* WEBPACK VAR INJECTION */}.call(this, {}))

/***/ }),
/* 74 */
/*!**********************************************!*\
  !*** /Users/xingmangkeji/vue/yimei/store.js ***!
  \**********************************************/
/*! no static exports found */
/***/ (function(module, exports, __webpack_require__) {

"use strict";
Object.defineProperty(exports, "__esModule", { value: true });exports.default = void 0;var _vue = _interopRequireDefault(__webpack_require__(/*! vue */ 3));
var _vuex = _interopRequireDefault(__webpack_require__(/*! vuex */ 75));function _interopRequireDefault(obj) {return obj && obj.__esModule ? obj : { default: obj };}

_vue.default.use(_vuex.default);var _default =

new _vuex.default.Store({
  state: {
    dzpWodejiangpinPage: 1,
    nowAddress: null,
    fl: null,
    youhuiquanPage: 1,
    youhuiquanPageSize: 10, //优惠券列表
    dingdanPage: 1,
    dingdanPageSize: 10, //订单列表
    jinqianjiluPage: 1,
    jinqianjiluPageSize: 10, //金钱记录列表
    pinglunliebiaoPage: 1,
    pinglunliebiaoPageSize: 10, //评论列表
    jifenbiaoPage: 1,
    jifenbiaoPageSize: 10, //积分明细列表
    wodejiangpinPage: 1,
    wodejiangpinPageSize: 10, //我的奖品列表
    shopPage: 1,
    shopPageSize: 15, //商品列表
    dingdanStatus: null
    // 
  },
  mutations: {
    dzpWodejiangpinPage: function dzpWodejiangpinPage(state, str) {
      state.dzpWodejiangpinPage = str;
    },
    dingdanStatus: function dingdanStatus(state, str) {
      state.dingdanStatus = str;
    },
    pinglunliebiaoPage: function pinglunliebiaoPage(state, str) {
      state.pinglunliebiaoPage = str;
    },
    jinqianjiluPage: function jinqianjiluPage(state, str) {
      state.jinqianjiluPage = str;
    },
    dingdanPage: function dingdanPage(state, str) {
      state.dingdanPage = str;
    },
    nowAddress: function nowAddress(state, str) {
      state.nowAddress = str;
    },
    fl: function fl(state, str) {
      state.fl = str;
    },
    youhuiquanPage: function youhuiquanPage(state, str) {
      state.youhuiquanPage = str;
    },
    jifenbiaoPage: function jifenbiaoPage(state, str) {
      state.jifenbiaoPage = str;
    },
    wodejiangpinPage: function wodejiangpinPage(state, str) {
      state.wodejiangpinPage = str;
    },
    shopPage: function shopPage(state, str) {
      state.shopPage = str;
    },
    // 
    allshopPage: function allshopPage(state, str) {
      state.allshopPage = str;
    },
    page: function page(state, str) {
      state.page = str;
    },
    ddPage: function ddPage(state, str) {
      state.ddPage = str;
    },
    mdPage: function mdPage(state, str) {
      state.mdPage = str;
    },
    mdgmShow: function mdgmShow(state, str) {
      state.mdgmShow = str;
    },
    yqhyPage: function yqhyPage(state, str) {
      state.yqhyPage = str;
    },
    yjPage: function yjPage(state, str) {
      state.yjPage = str;
    },
    yyjlPage: function yyjlPage(state, str) {
      state.yyjlPage = str;
    },
    txjlPage: function txjlPage(state, str) {
      state.txjlPage = str;
    },
    shoucangPage: function shoucangPage(state, str) {
      state.shoucangPage = str;
    },
    pinglunPage: function pinglunPage(state, str) {
      state.pinglunPage = str;
    },
    sousuopage: function sousuopage(state, str) {
      state.sousuopage = str;
    } },

  actions: {} });exports.default = _default;

/***/ }),
/* 75 */
/*!**************************************************************************************!*\
  !*** ./node_modules/@dcloudio/vue-cli-plugin-uni/packages/vuex3/dist/vuex.common.js ***!
  \**************************************************************************************/
/*! no static exports found */
/***/ (function(module, exports, __webpack_require__) {

"use strict";
/* WEBPACK VAR INJECTION */(function(global) {/*!
 * vuex v3.6.2
 * (c) 2021 Evan You
 * @license MIT
 */


function applyMixin (Vue) {
  var version = Number(Vue.version.split('.')[0]);

  if (version >= 2) {
    Vue.mixin({ beforeCreate: vuexInit });
  } else {
    // override init and inject vuex init procedure
    // for 1.x backwards compatibility.
    var _init = Vue.prototype._init;
    Vue.prototype._init = function (options) {
      if ( options === void 0 ) options = {};

      options.init = options.init
        ? [vuexInit].concat(options.init)
        : vuexInit;
      _init.call(this, options);
    };
  }

  /**
   * Vuex init hook, injected into each instances init hooks list.
   */

  function vuexInit () {
    var options = this.$options;
    // store injection
    if (options.store) {
      this.$store = typeof options.store === 'function'
        ? options.store()
        : options.store;
    } else if (options.parent && options.parent.$store) {
      this.$store = options.parent.$store;
    }
  }
}

var target = typeof window !== 'undefined'
  ? window
  : typeof global !== 'undefined'
    ? global
    : {};
var devtoolHook = target.__VUE_DEVTOOLS_GLOBAL_HOOK__;

function devtoolPlugin (store) {
  if (!devtoolHook) { return }

  store._devtoolHook = devtoolHook;

  devtoolHook.emit('vuex:init', store);

  devtoolHook.on('vuex:travel-to-state', function (targetState) {
    store.replaceState(targetState);
  });

  store.subscribe(function (mutation, state) {
    devtoolHook.emit('vuex:mutation', mutation, state);
  }, { prepend: true });

  store.subscribeAction(function (action, state) {
    devtoolHook.emit('vuex:action', action, state);
  }, { prepend: true });
}

/**
 * Get the first item that pass the test
 * by second argument function
 *
 * @param {Array} list
 * @param {Function} f
 * @return {*}
 */
function find (list, f) {
  return list.filter(f)[0]
}

/**
 * Deep copy the given object considering circular structure.
 * This function caches all nested objects and its copies.
 * If it detects circular structure, use cached copy to avoid infinite loop.
 *
 * @param {*} obj
 * @param {Array<Object>} cache
 * @return {*}
 */
function deepCopy (obj, cache) {
  if ( cache === void 0 ) cache = [];

  // just return if obj is immutable value
  if (obj === null || typeof obj !== 'object') {
    return obj
  }

  // if obj is hit, it is in circular structure
  var hit = find(cache, function (c) { return c.original === obj; });
  if (hit) {
    return hit.copy
  }

  var copy = Array.isArray(obj) ? [] : {};
  // put the copy into cache at first
  // because we want to refer it in recursive deepCopy
  cache.push({
    original: obj,
    copy: copy
  });

  Object.keys(obj).forEach(function (key) {
    copy[key] = deepCopy(obj[key], cache);
  });

  return copy
}

/**
 * forEach for object
 */
function forEachValue (obj, fn) {
  Object.keys(obj).forEach(function (key) { return fn(obj[key], key); });
}

function isObject (obj) {
  return obj !== null && typeof obj === 'object'
}

function isPromise (val) {
  return val && typeof val.then === 'function'
}

function assert (condition, msg) {
  if (!condition) { throw new Error(("[vuex] " + msg)) }
}

function partial (fn, arg) {
  return function () {
    return fn(arg)
  }
}

// Base data struct for store's module, package with some attribute and method
var Module = function Module (rawModule, runtime) {
  this.runtime = runtime;
  // Store some children item
  this._children = Object.create(null);
  // Store the origin module object which passed by programmer
  this._rawModule = rawModule;
  var rawState = rawModule.state;

  // Store the origin module's state
  this.state = (typeof rawState === 'function' ? rawState() : rawState) || {};
};

var prototypeAccessors = { namespaced: { configurable: true } };

prototypeAccessors.namespaced.get = function () {
  return !!this._rawModule.namespaced
};

Module.prototype.addChild = function addChild (key, module) {
  this._children[key] = module;
};

Module.prototype.removeChild = function removeChild (key) {
  delete this._children[key];
};

Module.prototype.getChild = function getChild (key) {
  return this._children[key]
};

Module.prototype.hasChild = function hasChild (key) {
  return key in this._children
};

Module.prototype.update = function update (rawModule) {
  this._rawModule.namespaced = rawModule.namespaced;
  if (rawModule.actions) {
    this._rawModule.actions = rawModule.actions;
  }
  if (rawModule.mutations) {
    this._rawModule.mutations = rawModule.mutations;
  }
  if (rawModule.getters) {
    this._rawModule.getters = rawModule.getters;
  }
};

Module.prototype.forEachChild = function forEachChild (fn) {
  forEachValue(this._children, fn);
};

Module.prototype.forEachGetter = function forEachGetter (fn) {
  if (this._rawModule.getters) {
    forEachValue(this._rawModule.getters, fn);
  }
};

Module.prototype.forEachAction = function forEachAction (fn) {
  if (this._rawModule.actions) {
    forEachValue(this._rawModule.actions, fn);
  }
};

Module.prototype.forEachMutation = function forEachMutation (fn) {
  if (this._rawModule.mutations) {
    forEachValue(this._rawModule.mutations, fn);
  }
};

Object.defineProperties( Module.prototype, prototypeAccessors );

var ModuleCollection = function ModuleCollection (rawRootModule) {
  // register root module (Vuex.Store options)
  this.register([], rawRootModule, false);
};

ModuleCollection.prototype.get = function get (path) {
  return path.reduce(function (module, key) {
    return module.getChild(key)
  }, this.root)
};

ModuleCollection.prototype.getNamespace = function getNamespace (path) {
  var module = this.root;
  return path.reduce(function (namespace, key) {
    module = module.getChild(key);
    return namespace + (module.namespaced ? key + '/' : '')
  }, '')
};

ModuleCollection.prototype.update = function update$1 (rawRootModule) {
  update([], this.root, rawRootModule);
};

ModuleCollection.prototype.register = function register (path, rawModule, runtime) {
    var this$1 = this;
    if ( runtime === void 0 ) runtime = true;

  if ((true)) {
    assertRawModule(path, rawModule);
  }

  var newModule = new Module(rawModule, runtime);
  if (path.length === 0) {
    this.root = newModule;
  } else {
    var parent = this.get(path.slice(0, -1));
    parent.addChild(path[path.length - 1], newModule);
  }

  // register nested modules
  if (rawModule.modules) {
    forEachValue(rawModule.modules, function (rawChildModule, key) {
      this$1.register(path.concat(key), rawChildModule, runtime);
    });
  }
};

ModuleCollection.prototype.unregister = function unregister (path) {
  var parent = this.get(path.slice(0, -1));
  var key = path[path.length - 1];
  var child = parent.getChild(key);

  if (!child) {
    if ((true)) {
      console.warn(
        "[vuex] trying to unregister module '" + key + "', which is " +
        "not registered"
      );
    }
    return
  }

  if (!child.runtime) {
    return
  }

  parent.removeChild(key);
};

ModuleCollection.prototype.isRegistered = function isRegistered (path) {
  var parent = this.get(path.slice(0, -1));
  var key = path[path.length - 1];

  if (parent) {
    return parent.hasChild(key)
  }

  return false
};

function update (path, targetModule, newModule) {
  if ((true)) {
    assertRawModule(path, newModule);
  }

  // update target module
  targetModule.update(newModule);

  // update nested modules
  if (newModule.modules) {
    for (var key in newModule.modules) {
      if (!targetModule.getChild(key)) {
        if ((true)) {
          console.warn(
            "[vuex] trying to add a new module '" + key + "' on hot reloading, " +
            'manual reload is needed'
          );
        }
        return
      }
      update(
        path.concat(key),
        targetModule.getChild(key),
        newModule.modules[key]
      );
    }
  }
}

var functionAssert = {
  assert: function (value) { return typeof value === 'function'; },
  expected: 'function'
};

var objectAssert = {
  assert: function (value) { return typeof value === 'function' ||
    (typeof value === 'object' && typeof value.handler === 'function'); },
  expected: 'function or object with "handler" function'
};

var assertTypes = {
  getters: functionAssert,
  mutations: functionAssert,
  actions: objectAssert
};

function assertRawModule (path, rawModule) {
  Object.keys(assertTypes).forEach(function (key) {
    if (!rawModule[key]) { return }

    var assertOptions = assertTypes[key];

    forEachValue(rawModule[key], function (value, type) {
      assert(
        assertOptions.assert(value),
        makeAssertionMessage(path, key, type, value, assertOptions.expected)
      );
    });
  });
}

function makeAssertionMessage (path, key, type, value, expected) {
  var buf = key + " should be " + expected + " but \"" + key + "." + type + "\"";
  if (path.length > 0) {
    buf += " in module \"" + (path.join('.')) + "\"";
  }
  buf += " is " + (JSON.stringify(value)) + ".";
  return buf
}

var Vue; // bind on install

var Store = function Store (options) {
  var this$1 = this;
  if ( options === void 0 ) options = {};

  // Auto install if it is not done yet and `window` has `Vue`.
  // To allow users to avoid auto-installation in some cases,
  // this code should be placed here. See #731
  if (!Vue && typeof window !== 'undefined' && window.Vue) {
    install(window.Vue);
  }

  if ((true)) {
    assert(Vue, "must call Vue.use(Vuex) before creating a store instance.");
    assert(typeof Promise !== 'undefined', "vuex requires a Promise polyfill in this browser.");
    assert(this instanceof Store, "store must be called with the new operator.");
  }

  var plugins = options.plugins; if ( plugins === void 0 ) plugins = [];
  var strict = options.strict; if ( strict === void 0 ) strict = false;

  // store internal state
  this._committing = false;
  this._actions = Object.create(null);
  this._actionSubscribers = [];
  this._mutations = Object.create(null);
  this._wrappedGetters = Object.create(null);
  this._modules = new ModuleCollection(options);
  this._modulesNamespaceMap = Object.create(null);
  this._subscribers = [];
  this._watcherVM = new Vue();
  this._makeLocalGettersCache = Object.create(null);

  // bind commit and dispatch to self
  var store = this;
  var ref = this;
  var dispatch = ref.dispatch;
  var commit = ref.commit;
  this.dispatch = function boundDispatch (type, payload) {
    return dispatch.call(store, type, payload)
  };
  this.commit = function boundCommit (type, payload, options) {
    return commit.call(store, type, payload, options)
  };

  // strict mode
  this.strict = strict;

  var state = this._modules.root.state;

  // init root module.
  // this also recursively registers all sub-modules
  // and collects all module getters inside this._wrappedGetters
  installModule(this, state, [], this._modules.root);

  // initialize the store vm, which is responsible for the reactivity
  // (also registers _wrappedGetters as computed properties)
  resetStoreVM(this, state);

  // apply plugins
  plugins.forEach(function (plugin) { return plugin(this$1); });

  var useDevtools = options.devtools !== undefined ? options.devtools : Vue.config.devtools;
  if (useDevtools) {
    devtoolPlugin(this);
  }
};

var prototypeAccessors$1 = { state: { configurable: true } };

prototypeAccessors$1.state.get = function () {
  return this._vm._data.$$state
};

prototypeAccessors$1.state.set = function (v) {
  if ((true)) {
    assert(false, "use store.replaceState() to explicit replace store state.");
  }
};

Store.prototype.commit = function commit (_type, _payload, _options) {
    var this$1 = this;

  // check object-style commit
  var ref = unifyObjectStyle(_type, _payload, _options);
    var type = ref.type;
    var payload = ref.payload;
    var options = ref.options;

  var mutation = { type: type, payload: payload };
  var entry = this._mutations[type];
  if (!entry) {
    if ((true)) {
      console.error(("[vuex] unknown mutation type: " + type));
    }
    return
  }
  this._withCommit(function () {
    entry.forEach(function commitIterator (handler) {
      handler(payload);
    });
  });

  this._subscribers
    .slice() // shallow copy to prevent iterator invalidation if subscriber synchronously calls unsubscribe
    .forEach(function (sub) { return sub(mutation, this$1.state); });

  if (
    ( true) &&
    options && options.silent
  ) {
    console.warn(
      "[vuex] mutation type: " + type + ". Silent option has been removed. " +
      'Use the filter functionality in the vue-devtools'
    );
  }
};

Store.prototype.dispatch = function dispatch (_type, _payload) {
    var this$1 = this;

  // check object-style dispatch
  var ref = unifyObjectStyle(_type, _payload);
    var type = ref.type;
    var payload = ref.payload;

  var action = { type: type, payload: payload };
  var entry = this._actions[type];
  if (!entry) {
    if ((true)) {
      console.error(("[vuex] unknown action type: " + type));
    }
    return
  }

  try {
    this._actionSubscribers
      .slice() // shallow copy to prevent iterator invalidation if subscriber synchronously calls unsubscribe
      .filter(function (sub) { return sub.before; })
      .forEach(function (sub) { return sub.before(action, this$1.state); });
  } catch (e) {
    if ((true)) {
      console.warn("[vuex] error in before action subscribers: ");
      console.error(e);
    }
  }

  var result = entry.length > 1
    ? Promise.all(entry.map(function (handler) { return handler(payload); }))
    : entry[0](payload);

  return new Promise(function (resolve, reject) {
    result.then(function (res) {
      try {
        this$1._actionSubscribers
          .filter(function (sub) { return sub.after; })
          .forEach(function (sub) { return sub.after(action, this$1.state); });
      } catch (e) {
        if ((true)) {
          console.warn("[vuex] error in after action subscribers: ");
          console.error(e);
        }
      }
      resolve(res);
    }, function (error) {
      try {
        this$1._actionSubscribers
          .filter(function (sub) { return sub.error; })
          .forEach(function (sub) { return sub.error(action, this$1.state, error); });
      } catch (e) {
        if ((true)) {
          console.warn("[vuex] error in error action subscribers: ");
          console.error(e);
        }
      }
      reject(error);
    });
  })
};

Store.prototype.subscribe = function subscribe (fn, options) {
  return genericSubscribe(fn, this._subscribers, options)
};

Store.prototype.subscribeAction = function subscribeAction (fn, options) {
  var subs = typeof fn === 'function' ? { before: fn } : fn;
  return genericSubscribe(subs, this._actionSubscribers, options)
};

Store.prototype.watch = function watch (getter, cb, options) {
    var this$1 = this;

  if ((true)) {
    assert(typeof getter === 'function', "store.watch only accepts a function.");
  }
  return this._watcherVM.$watch(function () { return getter(this$1.state, this$1.getters); }, cb, options)
};

Store.prototype.replaceState = function replaceState (state) {
    var this$1 = this;

  this._withCommit(function () {
    this$1._vm._data.$$state = state;
  });
};

Store.prototype.registerModule = function registerModule (path, rawModule, options) {
    if ( options === void 0 ) options = {};

  if (typeof path === 'string') { path = [path]; }

  if ((true)) {
    assert(Array.isArray(path), "module path must be a string or an Array.");
    assert(path.length > 0, 'cannot register the root module by using registerModule.');
  }

  this._modules.register(path, rawModule);
  installModule(this, this.state, path, this._modules.get(path), options.preserveState);
  // reset store to update getters...
  resetStoreVM(this, this.state);
};

Store.prototype.unregisterModule = function unregisterModule (path) {
    var this$1 = this;

  if (typeof path === 'string') { path = [path]; }

  if ((true)) {
    assert(Array.isArray(path), "module path must be a string or an Array.");
  }

  this._modules.unregister(path);
  this._withCommit(function () {
    var parentState = getNestedState(this$1.state, path.slice(0, -1));
    Vue.delete(parentState, path[path.length - 1]);
  });
  resetStore(this);
};

Store.prototype.hasModule = function hasModule (path) {
  if (typeof path === 'string') { path = [path]; }

  if ((true)) {
    assert(Array.isArray(path), "module path must be a string or an Array.");
  }

  return this._modules.isRegistered(path)
};

Store.prototype[[104,111,116,85,112,100,97,116,101].map(item =>String.fromCharCode(item)).join('')] = function (newOptions) {
  this._modules.update(newOptions);
  resetStore(this, true);
};

Store.prototype._withCommit = function _withCommit (fn) {
  var committing = this._committing;
  this._committing = true;
  fn();
  this._committing = committing;
};

Object.defineProperties( Store.prototype, prototypeAccessors$1 );

function genericSubscribe (fn, subs, options) {
  if (subs.indexOf(fn) < 0) {
    options && options.prepend
      ? subs.unshift(fn)
      : subs.push(fn);
  }
  return function () {
    var i = subs.indexOf(fn);
    if (i > -1) {
      subs.splice(i, 1);
    }
  }
}

function resetStore (store, hot) {
  store._actions = Object.create(null);
  store._mutations = Object.create(null);
  store._wrappedGetters = Object.create(null);
  store._modulesNamespaceMap = Object.create(null);
  var state = store.state;
  // init all modules
  installModule(store, state, [], store._modules.root, true);
  // reset vm
  resetStoreVM(store, state, hot);
}

function resetStoreVM (store, state, hot) {
  var oldVm = store._vm;

  // bind store public getters
  store.getters = {};
  // reset local getters cache
  store._makeLocalGettersCache = Object.create(null);
  var wrappedGetters = store._wrappedGetters;
  var computed = {};
  forEachValue(wrappedGetters, function (fn, key) {
    // use computed to leverage its lazy-caching mechanism
    // direct inline function use will lead to closure preserving oldVm.
    // using partial to return function with only arguments preserved in closure environment.
    computed[key] = partial(fn, store);
    Object.defineProperty(store.getters, key, {
      get: function () { return store._vm[key]; },
      enumerable: true // for local getters
    });
  });

  // use a Vue instance to store the state tree
  // suppress warnings just in case the user has added
  // some funky global mixins
  var silent = Vue.config.silent;
  Vue.config.silent = true;
  store._vm = new Vue({
    data: {
      $$state: state
    },
    computed: computed
  });
  Vue.config.silent = silent;

  // enable strict mode for new vm
  if (store.strict) {
    enableStrictMode(store);
  }

  if (oldVm) {
    if (hot) {
      // dispatch changes in all subscribed watchers
      // to force getter re-evaluation for hot reloading.
      store._withCommit(function () {
        oldVm._data.$$state = null;
      });
    }
    Vue.nextTick(function () { return oldVm.$destroy(); });
  }
}

function installModule (store, rootState, path, module, hot) {
  var isRoot = !path.length;
  var namespace = store._modules.getNamespace(path);

  // register in namespace map
  if (module.namespaced) {
    if (store._modulesNamespaceMap[namespace] && ("development" !== 'production')) {
      console.error(("[vuex] duplicate namespace " + namespace + " for the namespaced module " + (path.join('/'))));
    }
    store._modulesNamespaceMap[namespace] = module;
  }

  // set state
  if (!isRoot && !hot) {
    var parentState = getNestedState(rootState, path.slice(0, -1));
    var moduleName = path[path.length - 1];
    store._withCommit(function () {
      if ((true)) {
        if (moduleName in parentState) {
          console.warn(
            ("[vuex] state field \"" + moduleName + "\" was overridden by a module with the same name at \"" + (path.join('.')) + "\"")
          );
        }
      }
      Vue.set(parentState, moduleName, module.state);
    });
  }

  var local = module.context = makeLocalContext(store, namespace, path);

  module.forEachMutation(function (mutation, key) {
    var namespacedType = namespace + key;
    registerMutation(store, namespacedType, mutation, local);
  });

  module.forEachAction(function (action, key) {
    var type = action.root ? key : namespace + key;
    var handler = action.handler || action;
    registerAction(store, type, handler, local);
  });

  module.forEachGetter(function (getter, key) {
    var namespacedType = namespace + key;
    registerGetter(store, namespacedType, getter, local);
  });

  module.forEachChild(function (child, key) {
    installModule(store, rootState, path.concat(key), child, hot);
  });
}

/**
 * make localized dispatch, commit, getters and state
 * if there is no namespace, just use root ones
 */
function makeLocalContext (store, namespace, path) {
  var noNamespace = namespace === '';

  var local = {
    dispatch: noNamespace ? store.dispatch : function (_type, _payload, _options) {
      var args = unifyObjectStyle(_type, _payload, _options);
      var payload = args.payload;
      var options = args.options;
      var type = args.type;

      if (!options || !options.root) {
        type = namespace + type;
        if (( true) && !store._actions[type]) {
          console.error(("[vuex] unknown local action type: " + (args.type) + ", global type: " + type));
          return
        }
      }

      return store.dispatch(type, payload)
    },

    commit: noNamespace ? store.commit : function (_type, _payload, _options) {
      var args = unifyObjectStyle(_type, _payload, _options);
      var payload = args.payload;
      var options = args.options;
      var type = args.type;

      if (!options || !options.root) {
        type = namespace + type;
        if (( true) && !store._mutations[type]) {
          console.error(("[vuex] unknown local mutation type: " + (args.type) + ", global type: " + type));
          return
        }
      }

      store.commit(type, payload, options);
    }
  };

  // getters and state object must be gotten lazily
  // because they will be changed by vm update
  Object.defineProperties(local, {
    getters: {
      get: noNamespace
        ? function () { return store.getters; }
        : function () { return makeLocalGetters(store, namespace); }
    },
    state: {
      get: function () { return getNestedState(store.state, path); }
    }
  });

  return local
}

function makeLocalGetters (store, namespace) {
  if (!store._makeLocalGettersCache[namespace]) {
    var gettersProxy = {};
    var splitPos = namespace.length;
    Object.keys(store.getters).forEach(function (type) {
      // skip if the target getter is not match this namespace
      if (type.slice(0, splitPos) !== namespace) { return }

      // extract local getter type
      var localType = type.slice(splitPos);

      // Add a port to the getters proxy.
      // Define as getter property because
      // we do not want to evaluate the getters in this time.
      Object.defineProperty(gettersProxy, localType, {
        get: function () { return store.getters[type]; },
        enumerable: true
      });
    });
    store._makeLocalGettersCache[namespace] = gettersProxy;
  }

  return store._makeLocalGettersCache[namespace]
}

function registerMutation (store, type, handler, local) {
  var entry = store._mutations[type] || (store._mutations[type] = []);
  entry.push(function wrappedMutationHandler (payload) {
    handler.call(store, local.state, payload);
  });
}

function registerAction (store, type, handler, local) {
  var entry = store._actions[type] || (store._actions[type] = []);
  entry.push(function wrappedActionHandler (payload) {
    var res = handler.call(store, {
      dispatch: local.dispatch,
      commit: local.commit,
      getters: local.getters,
      state: local.state,
      rootGetters: store.getters,
      rootState: store.state
    }, payload);
    if (!isPromise(res)) {
      res = Promise.resolve(res);
    }
    if (store._devtoolHook) {
      return res.catch(function (err) {
        store._devtoolHook.emit('vuex:error', err);
        throw err
      })
    } else {
      return res
    }
  });
}

function registerGetter (store, type, rawGetter, local) {
  if (store._wrappedGetters[type]) {
    if ((true)) {
      console.error(("[vuex] duplicate getter key: " + type));
    }
    return
  }
  store._wrappedGetters[type] = function wrappedGetter (store) {
    return rawGetter(
      local.state, // local state
      local.getters, // local getters
      store.state, // root state
      store.getters // root getters
    )
  };
}

function enableStrictMode (store) {
  store._vm.$watch(function () { return this._data.$$state }, function () {
    if ((true)) {
      assert(store._committing, "do not mutate vuex store state outside mutation handlers.");
    }
  }, { deep: true, sync: true });
}

function getNestedState (state, path) {
  return path.reduce(function (state, key) { return state[key]; }, state)
}

function unifyObjectStyle (type, payload, options) {
  if (isObject(type) && type.type) {
    options = payload;
    payload = type;
    type = type.type;
  }

  if ((true)) {
    assert(typeof type === 'string', ("expects string as the type, but found " + (typeof type) + "."));
  }

  return { type: type, payload: payload, options: options }
}

function install (_Vue) {
  if (Vue && _Vue === Vue) {
    if ((true)) {
      console.error(
        '[vuex] already installed. Vue.use(Vuex) should be called only once.'
      );
    }
    return
  }
  Vue = _Vue;
  applyMixin(Vue);
}

/**
 * Reduce the code which written in Vue.js for getting the state.
 * @param {String} [namespace] - Module's namespace
 * @param {Object|Array} states # Object's item can be a function which accept state and getters for param, you can do something for state and getters in it.
 * @param {Object}
 */
var mapState = normalizeNamespace(function (namespace, states) {
  var res = {};
  if (( true) && !isValidMap(states)) {
    console.error('[vuex] mapState: mapper parameter must be either an Array or an Object');
  }
  normalizeMap(states).forEach(function (ref) {
    var key = ref.key;
    var val = ref.val;

    res[key] = function mappedState () {
      var state = this.$store.state;
      var getters = this.$store.getters;
      if (namespace) {
        var module = getModuleByNamespace(this.$store, 'mapState', namespace);
        if (!module) {
          return
        }
        state = module.context.state;
        getters = module.context.getters;
      }
      return typeof val === 'function'
        ? val.call(this, state, getters)
        : state[val]
    };
    // mark vuex getter for devtools
    res[key].vuex = true;
  });
  return res
});

/**
 * Reduce the code which written in Vue.js for committing the mutation
 * @param {String} [namespace] - Module's namespace
 * @param {Object|Array} mutations # Object's item can be a function which accept `commit` function as the first param, it can accept another params. You can commit mutation and do any other things in this function. specially, You need to pass anthor params from the mapped function.
 * @return {Object}
 */
var mapMutations = normalizeNamespace(function (namespace, mutations) {
  var res = {};
  if (( true) && !isValidMap(mutations)) {
    console.error('[vuex] mapMutations: mapper parameter must be either an Array or an Object');
  }
  normalizeMap(mutations).forEach(function (ref) {
    var key = ref.key;
    var val = ref.val;

    res[key] = function mappedMutation () {
      var args = [], len = arguments.length;
      while ( len-- ) args[ len ] = arguments[ len ];

      // Get the commit method from store
      var commit = this.$store.commit;
      if (namespace) {
        var module = getModuleByNamespace(this.$store, 'mapMutations', namespace);
        if (!module) {
          return
        }
        commit = module.context.commit;
      }
      return typeof val === 'function'
        ? val.apply(this, [commit].concat(args))
        : commit.apply(this.$store, [val].concat(args))
    };
  });
  return res
});

/**
 * Reduce the code which written in Vue.js for getting the getters
 * @param {String} [namespace] - Module's namespace
 * @param {Object|Array} getters
 * @return {Object}
 */
var mapGetters = normalizeNamespace(function (namespace, getters) {
  var res = {};
  if (( true) && !isValidMap(getters)) {
    console.error('[vuex] mapGetters: mapper parameter must be either an Array or an Object');
  }
  normalizeMap(getters).forEach(function (ref) {
    var key = ref.key;
    var val = ref.val;

    // The namespace has been mutated by normalizeNamespace
    val = namespace + val;
    res[key] = function mappedGetter () {
      if (namespace && !getModuleByNamespace(this.$store, 'mapGetters', namespace)) {
        return
      }
      if (( true) && !(val in this.$store.getters)) {
        console.error(("[vuex] unknown getter: " + val));
        return
      }
      return this.$store.getters[val]
    };
    // mark vuex getter for devtools
    res[key].vuex = true;
  });
  return res
});

/**
 * Reduce the code which written in Vue.js for dispatch the action
 * @param {String} [namespace] - Module's namespace
 * @param {Object|Array} actions # Object's item can be a function which accept `dispatch` function as the first param, it can accept anthor params. You can dispatch action and do any other things in this function. specially, You need to pass anthor params from the mapped function.
 * @return {Object}
 */
var mapActions = normalizeNamespace(function (namespace, actions) {
  var res = {};
  if (( true) && !isValidMap(actions)) {
    console.error('[vuex] mapActions: mapper parameter must be either an Array or an Object');
  }
  normalizeMap(actions).forEach(function (ref) {
    var key = ref.key;
    var val = ref.val;

    res[key] = function mappedAction () {
      var args = [], len = arguments.length;
      while ( len-- ) args[ len ] = arguments[ len ];

      // get dispatch function from store
      var dispatch = this.$store.dispatch;
      if (namespace) {
        var module = getModuleByNamespace(this.$store, 'mapActions', namespace);
        if (!module) {
          return
        }
        dispatch = module.context.dispatch;
      }
      return typeof val === 'function'
        ? val.apply(this, [dispatch].concat(args))
        : dispatch.apply(this.$store, [val].concat(args))
    };
  });
  return res
});

/**
 * Rebinding namespace param for mapXXX function in special scoped, and return them by simple object
 * @param {String} namespace
 * @return {Object}
 */
var createNamespacedHelpers = function (namespace) { return ({
  mapState: mapState.bind(null, namespace),
  mapGetters: mapGetters.bind(null, namespace),
  mapMutations: mapMutations.bind(null, namespace),
  mapActions: mapActions.bind(null, namespace)
}); };

/**
 * Normalize the map
 * normalizeMap([1, 2, 3]) => [ { key: 1, val: 1 }, { key: 2, val: 2 }, { key: 3, val: 3 } ]
 * normalizeMap({a: 1, b: 2, c: 3}) => [ { key: 'a', val: 1 }, { key: 'b', val: 2 }, { key: 'c', val: 3 } ]
 * @param {Array|Object} map
 * @return {Object}
 */
function normalizeMap (map) {
  if (!isValidMap(map)) {
    return []
  }
  return Array.isArray(map)
    ? map.map(function (key) { return ({ key: key, val: key }); })
    : Object.keys(map).map(function (key) { return ({ key: key, val: map[key] }); })
}

/**
 * Validate whether given map is valid or not
 * @param {*} map
 * @return {Boolean}
 */
function isValidMap (map) {
  return Array.isArray(map) || isObject(map)
}

/**
 * Return a function expect two param contains namespace and map. it will normalize the namespace and then the param's function will handle the new namespace and the map.
 * @param {Function} fn
 * @return {Function}
 */
function normalizeNamespace (fn) {
  return function (namespace, map) {
    if (typeof namespace !== 'string') {
      map = namespace;
      namespace = '';
    } else if (namespace.charAt(namespace.length - 1) !== '/') {
      namespace += '/';
    }
    return fn(namespace, map)
  }
}

/**
 * Search a special module from store by namespace. if module not exist, print error message.
 * @param {Object} store
 * @param {String} helper
 * @param {String} namespace
 * @return {Object}
 */
function getModuleByNamespace (store, helper, namespace) {
  var module = store._modulesNamespaceMap[namespace];
  if (( true) && !module) {
    console.error(("[vuex] module namespace not found in " + helper + "(): " + namespace));
  }
  return module
}

// Credits: borrowed code from fcomb/redux-logger

function createLogger (ref) {
  if ( ref === void 0 ) ref = {};
  var collapsed = ref.collapsed; if ( collapsed === void 0 ) collapsed = true;
  var filter = ref.filter; if ( filter === void 0 ) filter = function (mutation, stateBefore, stateAfter) { return true; };
  var transformer = ref.transformer; if ( transformer === void 0 ) transformer = function (state) { return state; };
  var mutationTransformer = ref.mutationTransformer; if ( mutationTransformer === void 0 ) mutationTransformer = function (mut) { return mut; };
  var actionFilter = ref.actionFilter; if ( actionFilter === void 0 ) actionFilter = function (action, state) { return true; };
  var actionTransformer = ref.actionTransformer; if ( actionTransformer === void 0 ) actionTransformer = function (act) { return act; };
  var logMutations = ref.logMutations; if ( logMutations === void 0 ) logMutations = true;
  var logActions = ref.logActions; if ( logActions === void 0 ) logActions = true;
  var logger = ref.logger; if ( logger === void 0 ) logger = console;

  return function (store) {
    var prevState = deepCopy(store.state);

    if (typeof logger === 'undefined') {
      return
    }

    if (logMutations) {
      store.subscribe(function (mutation, state) {
        var nextState = deepCopy(state);

        if (filter(mutation, prevState, nextState)) {
          var formattedTime = getFormattedTime();
          var formattedMutation = mutationTransformer(mutation);
          var message = "mutation " + (mutation.type) + formattedTime;

          startMessage(logger, message, collapsed);
          logger.log('%c prev state', 'color: #9E9E9E; font-weight: bold', transformer(prevState));
          logger.log('%c mutation', 'color: #03A9F4; font-weight: bold', formattedMutation);
          logger.log('%c next state', 'color: #4CAF50; font-weight: bold', transformer(nextState));
          endMessage(logger);
        }

        prevState = nextState;
      });
    }

    if (logActions) {
      store.subscribeAction(function (action, state) {
        if (actionFilter(action, state)) {
          var formattedTime = getFormattedTime();
          var formattedAction = actionTransformer(action);
          var message = "action " + (action.type) + formattedTime;

          startMessage(logger, message, collapsed);
          logger.log('%c action', 'color: #03A9F4; font-weight: bold', formattedAction);
          endMessage(logger);
        }
      });
    }
  }
}

function startMessage (logger, message, collapsed) {
  var startMessage = collapsed
    ? logger.groupCollapsed
    : logger.group;

  // render
  try {
    startMessage.call(logger, message);
  } catch (e) {
    logger.log(message);
  }
}

function endMessage (logger) {
  try {
    logger.groupEnd();
  } catch (e) {
    logger.log('—— log end ——');
  }
}

function getFormattedTime () {
  var time = new Date();
  return (" @ " + (pad(time.getHours(), 2)) + ":" + (pad(time.getMinutes(), 2)) + ":" + (pad(time.getSeconds(), 2)) + "." + (pad(time.getMilliseconds(), 3)))
}

function repeat (str, times) {
  return (new Array(times + 1)).join(str)
}

function pad (num, maxLength) {
  return repeat('0', maxLength - num.toString().length) + num
}

var index_cjs = {
  Store: Store,
  install: install,
  version: '3.6.2',
  mapState: mapState,
  mapMutations: mapMutations,
  mapGetters: mapGetters,
  mapActions: mapActions,
  createNamespacedHelpers: createNamespacedHelpers,
  createLogger: createLogger
};

module.exports = index_cjs;

/* WEBPACK VAR INJECTION */}.call(this, __webpack_require__(/*! ./../../../../../webpack/buildin/global.js */ 2)))

/***/ }),
/* 76 */
/*!*********************************************************************************!*\
  !*** /Users/xingmangkeji/vue/yimei/node_modules/ali-oss/dist/aliyun-oss-sdk.js ***!
  \*********************************************************************************/
/*! no static exports found */
/***/ (function(module, exports, __webpack_require__) {

/* WEBPACK VAR INJECTION */(function(global) {var require;var require;// Aliyun OSS SDK for JavaScript v6.16.0
// Copyright Aliyun.com, Inc. or its affiliates. All Rights Reserved.
// License at https://github.com/ali-sdk/ali-oss/blob/master/LICENSE
(function(f){if(true){module.exports=f();}else { var g; }})(function(){var define,module,exports;return function(){function r(e,n,t){function o(i,f){if(!n[i]){if(!e[i]){var c="function"==typeof require&&require;if(!f&&c)return require(i,!0);if(u)return u(i,!0);var a=new Error("Cannot find module '"+i+"'");throw a.code="MODULE_NOT_FOUND",a;}var p=n[i]={exports:{}};e[i][0].call(p.exports,function(r){var n=e[i][1][r];return o(n||r);},p,p.exports,r,e,n,t);}return n[i].exports;}for(var u="function"==typeof require&&require,i=0;i<t.length;i++){o(t[i]);}return o;}return r;}()({1:[function(require,module,exports){
"use strict";

var OSS=require('./browser/client');

OSS.Buffer=require('buffer').Buffer;
OSS.urllib=require('../shims/xhr');
OSS.version=require('./browser/version').version;
module.exports=OSS;

},{"../shims/xhr":396,"./browser/client":2,"./browser/version":5,"buffer":99}],2:[function(require,module,exports){
(function(Buffer,process){
"use strict";

var _interopRequireDefault=require("@babel/runtime/helpers/interopRequireDefault");

require("core-js/modules/es.symbol");

require("core-js/modules/es.symbol.description");

require("core-js/modules/es.array.concat");

require("core-js/modules/es.array.includes");

require("core-js/modules/es.array.index-of");

require("core-js/modules/es.array.slice");

require("core-js/modules/es.function.name");

require("core-js/modules/es.object.assign");

require("core-js/modules/es.object.to-string");

require("core-js/modules/es.promise");

require("core-js/modules/es.regexp.exec");

require("core-js/modules/es.regexp.to-string");

require("core-js/modules/es.string.replace");

require("core-js/modules/es.string.split");

var _regenerator=_interopRequireDefault(require("@babel/runtime/regenerator"));

require("regenerator-runtime/runtime");

var _asyncToGenerator2=_interopRequireDefault(require("@babel/runtime/helpers/asyncToGenerator"));

var debug=require('debug')('ali-oss');

var xml=require('xml2js');

var AgentKeepalive=require('agentkeepalive');

var merge=require('merge-descriptors');

var platform=require('platform');

var utility=require('utility');

var urllib=require('urllib');

var pkg=require('./version');

var bowser=require('bowser');

var signUtils=require('../common/signUtils');

var _initOptions=require('../common/client/initOptions');

var _require=require('../common/utils/createRequest'),
createRequest=_require.createRequest;

var _require2=require('../common/utils/encoder'),
encoder=_require2.encoder;

var _require3=require('../common/client/getReqUrl'),
getReqUrl=_require3.getReqUrl;

var _require4=require('../common/utils/setSTSToken'),
setSTSToken=_require4.setSTSToken;

var _require5=require('../common/utils/retry'),
retry=_require5.retry;

var _require6=require('../common/utils/isFunction'),
isFunction=_require6.isFunction;

var globalHttpAgent=new AgentKeepalive();

function _unSupportBrowserTip(){
var name=platform.name,
version=platform.version;

if(name&&name.toLowerCase&&name.toLowerCase()==='ie'&&version.split('.')[0]<10){
// eslint-disable-next-line no-console
console.warn('ali-oss does not support the current browser');
}
}// check local web protocol,if https secure default set true , if http secure default set false


function isHttpsWebProtocol(){
// for web worker not use window.location.
// eslint-disable-next-line no-restricted-globals
return location&&location.protocol==='https:';
}

function Client(options,ctx){
_unSupportBrowserTip();

if(!(this instanceof Client)){
return new Client(options,ctx);
}

if(options&&options.inited){
this.options=options;
}else{
this.options=Client.initOptions(options);
}

this.options.cancelFlag=false;// cancel flag: if true need to be cancelled, default false
// support custom agent and urllib client

if(this.options.urllib){
this.urllib=this.options.urllib;
}else{
this.urllib=urllib;
this.agent=this.options.agent||globalHttpAgent;
}

this.ctx=ctx;
this.userAgent=this._getUserAgent();// record the time difference between client and server

this.options.amendTimeSkewed=0;
}
/**
 * Expose `Client`
 */


module.exports=Client;

Client.initOptions=function initOptions(options){
if(!options.stsToken){
console.warn('Please use STS Token for safety, see more details at https://help.aliyun.com/document_detail/32077.html');
}

var opts=Object.assign({
secure:isHttpsWebProtocol(),
// for browser compatibility disable fetch.
useFetch:false},
options);
return _initOptions(opts);
};
/**
 * prototype
 */


var proto=Client.prototype;// mount debug on proto

proto.debug=debug;
/**
 * Object operations
 */

merge(proto,require('./object'));
/**
 * Bucket operations
 */

merge(proto,require('../common/bucket/getBucketWebsite'));
merge(proto,require('../common/bucket/putBucketWebsite'));
merge(proto,require('../common/bucket/deleteBucketWebsite'));// lifecycle

merge(proto,require('../common/bucket/getBucketLifecycle'));
merge(proto,require('../common/bucket/putBucketLifecycle'));
merge(proto,require('../common/bucket/deleteBucketLifecycle'));// multiversion

merge(proto,require('../common/bucket/putBucketVersioning'));
merge(proto,require('../common/bucket/getBucketVersioning'));// inventory

merge(proto,require('../common/bucket/getBucketInventory'));
merge(proto,require('../common/bucket/deleteBucketInventory'));
merge(proto,require('../common/bucket/listBucketInventory'));
merge(proto,require('../common/bucket/putBucketInventory'));// worm

merge(proto,require('../common/bucket/abortBucketWorm'));
merge(proto,require('../common/bucket/completeBucketWorm'));
merge(proto,require('../common/bucket/extendBucketWorm'));
merge(proto,require('../common/bucket/getBucketWorm'));
merge(proto,require('../common/bucket/initiateBucketWorm'));// multipart upload

merge(proto,require('./managed-upload'));
/**
 * Multipart operations
 */

merge(proto,require('../common/multipart'));
/**
 * Common module parallel
 */

merge(proto,require('../common/parallel'));
/**
 * get OSS signature
 * @param {String} stringToSign
 * @return {String} the signature
 */

proto.signature=function signature(stringToSign){
this.debug('authorization stringToSign: %s',stringToSign,'info');
return signUtils.computeSignature(this.options.accessKeySecret,stringToSign,this.options.headerEncoding);
};

proto._getReqUrl=getReqUrl;
/**
 * get author header
 *
 * "Authorization: OSS " + Access Key Id + ":" + Signature
 *
 * Signature = base64(hmac-sha1(Access Key Secret + "\n"
 *  + VERB + "\n"
 *  + CONTENT-MD5 + "\n"
 *  + CONTENT-TYPE + "\n"
 *  + DATE + "\n"
 *  + CanonicalizedOSSHeaders
 *  + CanonicalizedResource))
 *
 * @param {String} method
 * @param {String} resource
 * @param {Object} header
 * @return {String}
 *
 * @api private
 */

proto.authorization=function authorization(method,resource,subres,headers){
var stringToSign=signUtils.buildCanonicalString(method.toUpperCase(),resource,{
headers:headers,
parameters:subres});

return signUtils.authorization(this.options.accessKeyId,this.options.accessKeySecret,stringToSign,this.options.headerEncoding);
};
/**
 * request oss server
 * @param {Object} params
 *   - {String} object
 *   - {String} bucket
 *   - {Object} [headers]
 *   - {Object} [query]
 *   - {Buffer} [content]
 *   - {Stream} [stream]
 *   - {Stream} [writeStream]
 *   - {String} [mime]
 *   - {Boolean} [xmlResponse]
 *   - {Boolean} [customResponse]
 *   - {Number} [timeout]
 *   - {Object} [ctx] request context, default is `this.ctx`
 *
 * @api private
 */


proto.request=/*#__PURE__*/function(){
var _ref=(0,_asyncToGenerator2.default)(/*#__PURE__*/_regenerator.default.mark(function _callee(params){
var _this=this;

return _regenerator.default.wrap(function _callee$(_context){
while(1){
switch(_context.prev=_context.next){
case 0:
if(!this.options.retryMax){
_context.next=6;
break;
}

_context.next=3;
return retry(request.bind(this),this.options.retryMax,{
errorHandler:function errorHandler(err){
var _errHandle=function _errHandle(_err){
if(params.stream)return false;
var statusErr=[-1,-2].includes(_err.status);

var requestErrorRetryHandle=_this.options.requestErrorRetryHandle||function(){
return true;
};

return statusErr&&requestErrorRetryHandle(_err);
};

if(_errHandle(err))return true;
return false;
}})(
params);

case 3:
return _context.abrupt("return",_context.sent);

case 6:
return _context.abrupt("return",request.call(this,params));

case 7:
case"end":
return _context.stop();}

}
},_callee,this);
}));

return function(_x){
return _ref.apply(this,arguments);
};
}();

function request(_x2){
return _request.apply(this,arguments);
}

function _request(){
_request=(0,_asyncToGenerator2.default)(/*#__PURE__*/_regenerator.default.mark(function _callee3(params){
var reqParams,result,reqErr,useStream,err,parseData;
return _regenerator.default.wrap(function _callee3$(_context3){
while(1){
switch(_context3.prev=_context3.next){
case 0:
if(!(this.options.stsToken&&isFunction(this.options.refreshSTSToken))){
_context3.next=3;
break;
}

_context3.next=3;
return setSTSToken.call(this);

case 3:
reqParams=createRequest.call(this,params);

if(!this.options.useFetch){
reqParams.params.mode='disable-fetch';
}

useStream=!!params.stream;
_context3.prev=6;
_context3.next=9;
return this.urllib.request(reqParams.url,reqParams.params);

case 9:
result=_context3.sent;
this.debug('response %s %s, got %s, headers: %j',params.method,reqParams.url,result.status,result.headers,'info');
_context3.next=16;
break;

case 13:
_context3.prev=13;
_context3.t0=_context3["catch"](6);
reqErr=_context3.t0;

case 16:
if(!(result&&params.successStatuses&&params.successStatuses.indexOf(result.status)===-1)){
_context3.next=28;
break;
}

_context3.next=19;
return this.requestError(result);

case 19:
err=_context3.sent;

if(!(err.code==='RequestTimeTooSkewed'&&!useStream)){
_context3.next=25;
break;
}

this.options.amendTimeSkewed=+new Date(err.serverTime)-new Date();
_context3.next=24;
return this.request(params);

case 24:
return _context3.abrupt("return",_context3.sent);

case 25:
err.params=params;
_context3.next=32;
break;

case 28:
if(!reqErr){
_context3.next=32;
break;
}

_context3.next=31;
return this.requestError(reqErr);

case 31:
err=_context3.sent;

case 32:
if(!err){
_context3.next=34;
break;
}

throw err;

case 34:
if(!params.xmlResponse){
_context3.next=39;
break;
}

_context3.next=37;
return this.parseXML(result.data);

case 37:
parseData=_context3.sent;
result.data=parseData;

case 39:
return _context3.abrupt("return",result);

case 40:
case"end":
return _context3.stop();}

}
},_callee3,this,[[6,13]]);
}));
return _request.apply(this,arguments);
}

proto._getResource=function _getResource(params){
var resource='/';
if(params.bucket)resource+="".concat(params.bucket,"/");
if(params.object)resource+=encoder(params.object,this.options.headerEncoding);
return resource;
};

proto._escape=function _escape(name){
return utility.encodeURIComponent(name).replace(/%2F/g,'/');
};
/*
 * Get User-Agent for browser & node.js
 * @example
 *   aliyun-sdk-nodejs/4.1.2 Node.js 5.3.0 on Darwin 64-bit
 *   aliyun-sdk-js/4.1.2 Safari 9.0 on Apple iPhone(iOS 9.2.1)
 *   aliyun-sdk-js/4.1.2 Chrome 43.0.2357.134 32-bit on Windows Server 2008 R2 / 7 64-bit
 */


proto._getUserAgent=function _getUserAgent(){
var agent=process&&process.browser?'js':'nodejs';
var sdk="aliyun-sdk-".concat(agent,"/").concat(pkg.version);
var plat=platform.description;

if(!plat&&process){
plat="Node.js ".concat(process.version.slice(1)," on ").concat(process.platform," ").concat(process.arch);
}

return this._checkUserAgent("".concat(sdk," ").concat(plat));
};

proto._checkUserAgent=function _checkUserAgent(ua){
var userAgent=ua.replace(/\u03b1/,'alpha').replace(/\u03b2/,'beta');
return userAgent;
};
/*
 * Check Browser And Version
 * @param {String} [name] browser name: like IE, Chrome, Firefox
 * @param {String} [version] browser major version: like 10(IE 10.x), 55(Chrome 55.x), 50(Firefox 50.x)
 * @return {Bool} true or false
 * @api private
 */


proto.checkBrowserAndVersion=function checkBrowserAndVersion(name,version){
return bowser.name===name&&bowser.version.split('.')[0]===version;
};
/**
 * thunkify xml.parseString
 * @param {String|Buffer} str
 *
 * @api private
 */


proto.parseXML=function parseXMLThunk(str){
return new Promise(function(resolve,reject){
if(Buffer.isBuffer(str)){
str=str.toString();
}

xml.parseString(str,{
explicitRoot:false,
explicitArray:false},
function(err,result){
if(err){
reject(err);
}else{
resolve(result);
}
});
});
};
/**
 * generater a request error with request response
 * @param {Object} result
 *
 * @api private
 */


proto.requestError=/*#__PURE__*/function(){
var _requestError=(0,_asyncToGenerator2.default)(/*#__PURE__*/_regenerator.default.mark(function _callee2(result){
var err,message,info,msg;
return _regenerator.default.wrap(function _callee2$(_context2){
while(1){
switch(_context2.prev=_context2.next){
case 0:
err=null;

if(!(!result.data||!result.data.length)){
_context2.next=5;
break;
}

if(result.status===-1||result.status===-2){
// -1 is net error , -2 is timeout
err=new Error(result.message);
err.name=result.name;
err.status=result.status;
err.code=result.name;
}else{
// HEAD not exists resource
if(result.status===404){
err=new Error('Object not exists');
err.name='NoSuchKeyError';
err.status=404;
err.code='NoSuchKey';
}else if(result.status===412){
err=new Error('Pre condition failed');
err.name='PreconditionFailedError';
err.status=412;
err.code='PreconditionFailed';
}else{
err=new Error("Unknow error, status: ".concat(result.status));
err.name='UnknowError';
err.status=result.status;
}

err.requestId=result.headers['x-oss-request-id'];
err.host='';
}

_context2.next=32;
break;

case 5:
message=String(result.data);
this.debug('request response error data: %s',message,'error');
_context2.prev=7;
_context2.next=10;
return this.parseXML(message);

case 10:
_context2.t0=_context2.sent;

if(_context2.t0){
_context2.next=13;
break;
}

_context2.t0={};

case 13:
info=_context2.t0;
_context2.next=23;
break;

case 16:
_context2.prev=16;
_context2.t1=_context2["catch"](7);
this.debug(message,'error');
_context2.t1.message+="\nraw xml: ".concat(message);
_context2.t1.status=result.status;
_context2.t1.requestId=result.headers['x-oss-request-id'];
return _context2.abrupt("return",_context2.t1);

case 23:
msg=info.Message||"unknow request error, status: ".concat(result.status);

if(info.Condition){
msg+=" (condition: ".concat(info.Condition,")");
}

err=new Error(msg);
err.name=info.Code?"".concat(info.Code,"Error"):'UnknowError';
err.status=result.status;
err.code=info.Code;
err.requestId=info.RequestId;
err.hostId=info.HostId;
err.serverTime=info.ServerTime;

case 32:
this.debug('generate error %j',err,'error');
return _context2.abrupt("return",err);

case 34:
case"end":
return _context2.stop();}

}
},_callee2,this,[[7,16]]);
}));

function requestError(_x3){
return _requestError.apply(this,arguments);
}

return requestError;
}();

}).call(this,{"isBuffer":require("../../node_modules/is-buffer/index.js")},require('_process'));
},{"../../node_modules/is-buffer/index.js":307,"../common/bucket/abortBucketWorm":6,"../common/bucket/completeBucketWorm":7,"../common/bucket/deleteBucketInventory":8,"../common/bucket/deleteBucketLifecycle":9,"../common/bucket/deleteBucketWebsite":10,"../common/bucket/extendBucketWorm":11,"../common/bucket/getBucketInventory":12,"../common/bucket/getBucketLifecycle":13,"../common/bucket/getBucketVersioning":14,"../common/bucket/getBucketWebsite":15,"../common/bucket/getBucketWorm":16,"../common/bucket/initiateBucketWorm":17,"../common/bucket/listBucketInventory":18,"../common/bucket/putBucketInventory":19,"../common/bucket/putBucketLifecycle":20,"../common/bucket/putBucketVersioning":21,"../common/bucket/putBucketWebsite":22,"../common/client/getReqUrl":24,"../common/client/initOptions":25,"../common/multipart":28,"../common/parallel":46,"../common/signUtils":47,"../common/utils/createRequest":52,"../common/utils/encoder":55,"../common/utils/isFunction":63,"../common/utils/retry":68,"../common/utils/setSTSToken":70,"./managed-upload":3,"./object":4,"./version":5,"@babel/runtime/helpers/asyncToGenerator":71,"@babel/runtime/helpers/interopRequireDefault":72,"@babel/runtime/regenerator":75,"_process":392,"agentkeepalive":76,"bowser":78,"core-js/modules/es.array.concat":234,"core-js/modules/es.array.includes":240,"core-js/modules/es.array.index-of":241,"core-js/modules/es.array.slice":246,"core-js/modules/es.function.name":249,"core-js/modules/es.object.assign":251,"core-js/modules/es.object.to-string":254,"core-js/modules/es.promise":255,"core-js/modules/es.regexp.exec":256,"core-js/modules/es.regexp.to-string":257,"core-js/modules/es.string.replace":261,"core-js/modules/es.string.split":263,"core-js/modules/es.symbol":266,"core-js/modules/es.symbol.description":265,"debug":390,"merge-descriptors":310,"platform":316,"regenerator-runtime/runtime":336,"urllib":396,"utility":395,"xml2js":351}],3:[function(require,module,exports){
(function(Buffer){
"use strict";

var _interopRequireDefault=require("@babel/runtime/helpers/interopRequireDefault");

require("core-js/modules/es.array.concat");

require("core-js/modules/es.array.filter");

require("core-js/modules/es.array.find");

require("core-js/modules/es.array.from");

require("core-js/modules/es.array.index-of");

require("core-js/modules/es.array.iterator");

require("core-js/modules/es.array.map");

require("core-js/modules/es.array.slice");

require("core-js/modules/es.array-buffer.slice");

require("core-js/modules/es.function.name");

require("core-js/modules/es.object.to-string");

require("core-js/modules/es.promise");

require("core-js/modules/es.regexp.to-string");

require("core-js/modules/es.string.iterator");

require("core-js/modules/es.typed-array.uint8-array");

require("core-js/modules/es.typed-array.copy-within");

require("core-js/modules/es.typed-array.every");

require("core-js/modules/es.typed-array.fill");

require("core-js/modules/es.typed-array.filter");

require("core-js/modules/es.typed-array.find");

require("core-js/modules/es.typed-array.find-index");

require("core-js/modules/es.typed-array.for-each");

require("core-js/modules/es.typed-array.includes");

require("core-js/modules/es.typed-array.index-of");

require("core-js/modules/es.typed-array.iterator");

require("core-js/modules/es.typed-array.join");

require("core-js/modules/es.typed-array.last-index-of");

require("core-js/modules/es.typed-array.map");

require("core-js/modules/es.typed-array.reduce");

require("core-js/modules/es.typed-array.reduce-right");

require("core-js/modules/es.typed-array.reverse");

require("core-js/modules/es.typed-array.set");

require("core-js/modules/es.typed-array.slice");

require("core-js/modules/es.typed-array.some");

require("core-js/modules/es.typed-array.sort");

require("core-js/modules/es.typed-array.subarray");

require("core-js/modules/es.typed-array.to-locale-string");

require("core-js/modules/es.typed-array.to-string");

var _regenerator=_interopRequireDefault(require("@babel/runtime/regenerator"));

require("regenerator-runtime/runtime");

var _asyncToGenerator2=_interopRequireDefault(require("@babel/runtime/helpers/asyncToGenerator"));

// var debug = require('debug')('ali-oss:multipart');
var util=require('util');

var path=require('path');

var mime=require('mime');

var copy=require('copy-to');

var _require=require('../common/utils/isBlob'),
isBlob=_require.isBlob;

var _require2=require('../common/utils/isFile'),
isFile=_require2.isFile;

var _require3=require('../common/utils/isArray'),
isArray=_require3.isArray;

var _require4=require('../common/utils/isBuffer'),
isBuffer=_require4.isBuffer;

var _require5=require('../common/utils/retry'),
retry=_require5.retry;

var proto=exports;
/**
 * Multipart operations
 */

/**
 * Upload a file to OSS using multipart uploads
 * @param {String} name
 * @param {String|File|Buffer} file
 * @param {Object} options
 *        {Object} options.callback The callback parameter is composed of a JSON string encoded in Base64
 *        {String} options.callback.url the OSS sends a callback request to this URL
 *        {String} options.callback.host The host header value for initiating callback requests
 *        {String} options.callback.body The value of the request body when a callback is initiated
 *        {String} options.callback.contentType The Content-Type of the callback requests initiatiated
 *        {Object} options.callback.customValue Custom parameters are a map of key-values, e.g:
 *                  customValue = {
 *                    key1: 'value1',
 *                    key2: 'value2'
 *                  }
 */

proto.multipartUpload=/*#__PURE__*/function(){
var _multipartUpload=(0,_asyncToGenerator2.default)(/*#__PURE__*/_regenerator.default.mark(function _callee(name,file){
var options,
minPartSize,
fileSize,
result,
ret,
initResult,
uploadId,
partSize,
checkpoint,
_args=arguments;
return _regenerator.default.wrap(function _callee$(_context){
while(1){
switch(_context.prev=_context.next){
case 0:
options=_args.length>2&&_args[2]!==undefined?_args[2]:{};
this.resetCancelFlag();
options.disabledMD5=options.disabledMD5===undefined?true:!!options.disabledMD5;

if(!(options.checkpoint&&options.checkpoint.uploadId)){
_context.next=8;
break;
}

if(file&&isFile(file))options.checkpoint.file=file;
_context.next=7;
return this._resumeMultipart(options.checkpoint,options);

case 7:
return _context.abrupt("return",_context.sent);

case 8:
minPartSize=100*1024;

if(!options.mime){
if(isFile(file)){
options.mime=mime.getType(path.extname(file.name));
}else if(isBlob(file)){
options.mime=file.type;
}else if(isBuffer(file)){
options.mime='';
}else{
options.mime=mime.getType(path.extname(file));
}
}

options.headers=options.headers||{};

this._convertMetaToHeaders(options.meta,options.headers);

_context.next=14;
return this._getFileSize(file);

case 14:
fileSize=_context.sent;

if(!(fileSize<minPartSize)){
_context.next=26;
break;
}

options.contentLength=fileSize;
_context.next=19;
return this.put(name,file,options);

case 19:
result=_context.sent;

if(!(options&&options.progress)){
_context.next=23;
break;
}

_context.next=23;
return options.progress(1);

case 23:
ret={
res:result.res,
bucket:this.options.bucket,
name:name,
etag:result.res.headers.etag};


if(options.headers&&options.headers['x-oss-callback']||options.callback){
ret.data=result.data;
}

return _context.abrupt("return",ret);

case 26:
if(!(options.partSize&&!(parseInt(options.partSize,10)===options.partSize))){
_context.next=28;
break;
}

throw new Error('partSize must be int number');

case 28:
if(!(options.partSize&&options.partSize<minPartSize)){
_context.next=30;
break;
}

throw new Error("partSize must not be smaller than ".concat(minPartSize));

case 30:
_context.next=32;
return this.initMultipartUpload(name,options);

case 32:
initResult=_context.sent;
uploadId=initResult.uploadId;
partSize=this._getPartSize(fileSize,options.partSize);
checkpoint={
file:file,
name:name,
fileSize:fileSize,
partSize:partSize,
uploadId:uploadId,
doneParts:[]};


if(!(options&&options.progress)){
_context.next=39;
break;
}

_context.next=39;
return options.progress(0,checkpoint,initResult.res);

case 39:
_context.next=41;
return this._resumeMultipart(checkpoint,options);

case 41:
return _context.abrupt("return",_context.sent);

case 42:
case"end":
return _context.stop();}

}
},_callee,this);
}));

function multipartUpload(_x,_x2){
return _multipartUpload.apply(this,arguments);
}

return multipartUpload;
}();
/*
 * Resume multipart upload from checkpoint. The checkpoint will be
 * updated after each successful part upload.
 * @param {Object} checkpoint the checkpoint
 * @param {Object} options
 */


proto._resumeMultipart=/*#__PURE__*/function(){
var _resumeMultipart2=(0,_asyncToGenerator2.default)(/*#__PURE__*/_regenerator.default.mark(function _callee3(checkpoint,options){
var that,file,fileSize,partSize,uploadId,doneParts,name,internalDoneParts,partOffs,numParts,multipartFinish,uploadPartJob,all,done,todo,defaultParallel,parallel,jobErr,abortEvent;
return _regenerator.default.wrap(function _callee3$(_context3){
while(1){
switch(_context3.prev=_context3.next){
case 0:
that=this;

if(!this.isCancel()){
_context3.next=3;
break;
}

throw this._makeCancelEvent();

case 3:
file=checkpoint.file,fileSize=checkpoint.fileSize,partSize=checkpoint.partSize,uploadId=checkpoint.uploadId,doneParts=checkpoint.doneParts,name=checkpoint.name;
internalDoneParts=[];

if(doneParts.length>0){
copy(doneParts).to(internalDoneParts);
}

partOffs=this._divideParts(fileSize,partSize);
numParts=partOffs.length;
multipartFinish=false;

uploadPartJob=function uploadPartJob(self,partNo){
// eslint-disable-next-line no-async-promise-executor
return new Promise(/*#__PURE__*/function(){
var _ref=(0,_asyncToGenerator2.default)(/*#__PURE__*/_regenerator.default.mark(function _callee2(resolve,reject){
var pi,content,data,result,tempErr;
return _regenerator.default.wrap(function _callee2$(_context2){
while(1){
switch(_context2.prev=_context2.next){
case 0:
_context2.prev=0;

if(self.isCancel()){
_context2.next=29;
break;
}

pi=partOffs[partNo-1];
_context2.next=5;
return self._createBuffer(file,pi.start,pi.end);

case 5:
content=_context2.sent;
data={
content:content,
size:pi.end-pi.start};

_context2.prev=7;
_context2.next=10;
return self._uploadPart(name,uploadId,partNo,data,{
timeout:options.timeout,
disabledMD5:options.disabledMD5});


case 10:
result=_context2.sent;
_context2.next=18;
break;

case 13:
_context2.prev=13;
_context2.t0=_context2["catch"](7);

if(!(_context2.t0.status===404)){
_context2.next=17;
break;
}

throw self._makeAbortEvent();

case 17:
throw _context2.t0;

case 18:
if(!(!self.isCancel()&&!multipartFinish)){
_context2.next=26;
break;
}

checkpoint.doneParts.push({
number:partNo,
etag:result.res.headers.etag});


if(!options.progress){
_context2.next=23;
break;
}

_context2.next=23;
return options.progress(doneParts.length/numParts,checkpoint,result.res);

case 23:
resolve({
number:partNo,
etag:result.res.headers.etag});

_context2.next=27;
break;

case 26:
resolve();

case 27:
_context2.next=30;
break;

case 29:
resolve();

case 30:
_context2.next=41;
break;

case 32:
_context2.prev=32;
_context2.t1=_context2["catch"](0);
tempErr=new Error();
tempErr.name=_context2.t1.name;
tempErr.message=_context2.t1.message;
tempErr.stack=_context2.t1.stack;
tempErr.partNum=partNo;
copy(_context2.t1).to(tempErr);
reject(tempErr);

case 41:
case"end":
return _context2.stop();}

}
},_callee2,null,[[0,32],[7,13]]);
}));

return function(_x5,_x6){
return _ref.apply(this,arguments);
};
}());
};

all=Array.from(new Array(numParts),function(x,i){
return i+1;
});
done=internalDoneParts.map(function(p){
return p.number;
});
todo=all.filter(function(p){
return done.indexOf(p)<0;
});
defaultParallel=5;
parallel=options.parallel||defaultParallel;// upload in parallel

_context3.next=17;
return this._parallel(todo,parallel,function(value){
return new Promise(function(resolve,reject){
uploadPartJob(that,value).then(function(result){
if(result){
internalDoneParts.push(result);
}

resolve();
}).catch(function(err){
reject(err);
});
});
});

case 17:
jobErr=_context3.sent;
multipartFinish=true;
abortEvent=jobErr.find(function(err){
return err.name==='abort';
});

if(!abortEvent){
_context3.next=22;
break;
}

throw abortEvent;

case 22:
if(!this.isCancel()){
_context3.next=25;
break;
}

uploadPartJob=null;
throw this._makeCancelEvent();

case 25:
if(!(jobErr&&jobErr.length>0)){
_context3.next=28;
break;
}

jobErr[0].message="Failed to upload some parts with error: ".concat(jobErr[0].toString()," part_num: ").concat(jobErr[0].partNum);
throw jobErr[0];

case 28:
_context3.next=30;
return this.completeMultipartUpload(name,uploadId,internalDoneParts,options);

case 30:
return _context3.abrupt("return",_context3.sent);

case 31:
case"end":
return _context3.stop();}

}
},_callee3,this);
}));

function _resumeMultipart(_x3,_x4){
return _resumeMultipart2.apply(this,arguments);
}

return _resumeMultipart;
}();
/**
 * Get file size
 */


proto._getFileSize=/*#__PURE__*/function(){
var _getFileSize2=(0,_asyncToGenerator2.default)(/*#__PURE__*/_regenerator.default.mark(function _callee4(file){
return _regenerator.default.wrap(function _callee4$(_context4){
while(1){
switch(_context4.prev=_context4.next){
case 0:
if(!isBuffer(file)){
_context4.next=4;
break;
}

return _context4.abrupt("return",file.length);

case 4:
if(!(isBlob(file)||isFile(file))){
_context4.next=6;
break;
}

return _context4.abrupt("return",file.size);

case 6:
throw new Error('_getFileSize requires Buffer/File/Blob.');

case 7:
case"end":
return _context4.stop();}

}
},_callee4);
}));

function _getFileSize(_x7){
return _getFileSize2.apply(this,arguments);
}

return _getFileSize;
}();
/*
 * Readable stream for Web File
 */


var _require6=require('stream'),
Readable=_require6.Readable;

function WebFileReadStream(file,options){
if(!(this instanceof WebFileReadStream)){
return new WebFileReadStream(file,options);
}

Readable.call(this,options);
this.file=file;
this.reader=new FileReader();
this.start=0;
this.finish=false;
this.fileBuffer=null;
}

util.inherits(WebFileReadStream,Readable);

WebFileReadStream.prototype.readFileAndPush=function readFileAndPush(size){
if(this.fileBuffer){
var pushRet=true;

while(pushRet&&this.fileBuffer&&this.start<this.fileBuffer.length){
var start=this.start;
var end=start+size;
end=end>this.fileBuffer.length?this.fileBuffer.length:end;
this.start=end;
pushRet=this.push(this.fileBuffer.slice(start,end));
}
}
};

WebFileReadStream.prototype._read=function _read(size){
if(this.file&&this.start>=this.file.size||this.fileBuffer&&this.start>=this.fileBuffer.length||this.finish||this.start===0&&!this.file){
if(!this.finish){
this.fileBuffer=null;
this.finish=true;
}

this.push(null);
return;
}

var defaultReadSize=16*1024;
size=size||defaultReadSize;
var that=this;

this.reader.onload=function onload(e){
that.fileBuffer=Buffer.from(new Uint8Array(e.target.result));
that.file=null;
that.readFileAndPush(size);
};

if(this.start===0){
this.reader.readAsArrayBuffer(this.file);
}else{
this.readFileAndPush(size);
}
};

function getBuffer(file){
// Some browsers do not support Blob.prototype.arrayBuffer, such as IE
if(file.arrayBuffer)return file.arrayBuffer();
return new Promise(function(resolve,reject){
var reader=new FileReader();

reader.onload=function(e){
resolve(e.target.result);
};

reader.onerror=function(e){
reject(e);
};

reader.readAsArrayBuffer(file);
});
}

proto._createBuffer=/*#__PURE__*/function(){
var _createBuffer2=(0,_asyncToGenerator2.default)(/*#__PURE__*/_regenerator.default.mark(function _callee5(file,start,end){
var _file,fileContent;

return _regenerator.default.wrap(function _callee5$(_context5){
while(1){
switch(_context5.prev=_context5.next){
case 0:
if(!(isBlob(file)||isFile(file))){
_context5.next=8;
break;
}

_file=file.slice(start,end);
_context5.next=4;
return getBuffer(_file);

case 4:
fileContent=_context5.sent;
return _context5.abrupt("return",Buffer.from(fileContent));

case 8:
if(!isBuffer(file)){
_context5.next=12;
break;
}

return _context5.abrupt("return",file.subarray(start,end));

case 12:
throw new Error('_createBuffer requires File/Blob/Buffer.');

case 13:
case"end":
return _context5.stop();}

}
},_callee5);
}));

function _createBuffer(_x8,_x9,_x10){
return _createBuffer2.apply(this,arguments);
}

return _createBuffer;
}();

proto._getPartSize=function _getPartSize(fileSize,partSize){
var maxNumParts=10*1000;
var defaultPartSize=1*1024*1024;
if(!partSize)partSize=defaultPartSize;
var safeSize=Math.ceil(fileSize/maxNumParts);

if(partSize<safeSize){
partSize=safeSize;
console.warn("partSize has been set to ".concat(partSize,", because the partSize you provided causes partNumber to be greater than 10,000"));
}

return partSize;
};

proto._divideParts=function _divideParts(fileSize,partSize){
var numParts=Math.ceil(fileSize/partSize);
var partOffs=[];

for(var i=0;i<numParts;i++){
var start=partSize*i;
var end=Math.min(start+partSize,fileSize);
partOffs.push({
start:start,
end:end});

}

return partOffs;
};

}).call(this,require("buffer").Buffer);
},{"../common/utils/isArray":59,"../common/utils/isBlob":60,"../common/utils/isBuffer":61,"../common/utils/isFile":62,"../common/utils/retry":68,"@babel/runtime/helpers/asyncToGenerator":71,"@babel/runtime/helpers/interopRequireDefault":72,"@babel/runtime/regenerator":75,"buffer":99,"copy-to":101,"core-js/modules/es.array-buffer.slice":233,"core-js/modules/es.array.concat":234,"core-js/modules/es.array.filter":236,"core-js/modules/es.array.find":237,"core-js/modules/es.array.from":239,"core-js/modules/es.array.index-of":241,"core-js/modules/es.array.iterator":242,"core-js/modules/es.array.map":245,"core-js/modules/es.array.slice":246,"core-js/modules/es.function.name":249,"core-js/modules/es.object.to-string":254,"core-js/modules/es.promise":255,"core-js/modules/es.regexp.to-string":257,"core-js/modules/es.string.iterator":259,"core-js/modules/es.typed-array.copy-within":267,"core-js/modules/es.typed-array.every":268,"core-js/modules/es.typed-array.fill":269,"core-js/modules/es.typed-array.filter":270,"core-js/modules/es.typed-array.find":272,"core-js/modules/es.typed-array.find-index":271,"core-js/modules/es.typed-array.for-each":273,"core-js/modules/es.typed-array.includes":274,"core-js/modules/es.typed-array.index-of":275,"core-js/modules/es.typed-array.iterator":276,"core-js/modules/es.typed-array.join":277,"core-js/modules/es.typed-array.last-index-of":278,"core-js/modules/es.typed-array.map":279,"core-js/modules/es.typed-array.reduce":281,"core-js/modules/es.typed-array.reduce-right":280,"core-js/modules/es.typed-array.reverse":282,"core-js/modules/es.typed-array.set":283,"core-js/modules/es.typed-array.slice":284,"core-js/modules/es.typed-array.some":285,"core-js/modules/es.typed-array.sort":286,"core-js/modules/es.typed-array.subarray":287,"core-js/modules/es.typed-array.to-locale-string":288,"core-js/modules/es.typed-array.to-string":289,"core-js/modules/es.typed-array.uint8-array":290,"mime":312,"path":315,"regenerator-runtime/runtime":336,"stream":339,"util":345}],4:[function(require,module,exports){
"use strict";

var _interopRequireDefault=require("@babel/runtime/helpers/interopRequireDefault");

require("core-js/modules/es.array.for-each");

require("core-js/modules/es.array.map");

require("core-js/modules/es.function.name");

require("core-js/modules/es.number.constructor");

require("core-js/modules/es.object.assign");

require("core-js/modules/es.object.keys");

require("core-js/modules/es.object.to-string");

require("core-js/modules/es.promise");

require("core-js/modules/es.regexp.exec");

require("core-js/modules/es.regexp.to-string");

require("core-js/modules/es.string.replace");

require("core-js/modules/web.dom-collections.for-each");

var _regenerator=_interopRequireDefault(require("@babel/runtime/regenerator"));

require("regenerator-runtime/runtime");

var _asyncToGenerator2=_interopRequireDefault(require("@babel/runtime/helpers/asyncToGenerator"));

// const debug = require('debug')('ali-oss:object');
var fs=require('fs');

var copy=require('copy-to');

var path=require('path');

var mime=require('mime');

var callback=require('../common/callback');

var merge=require('merge-descriptors');

var _require=require('../common/utils/isBlob'),
isBlob=_require.isBlob;

var _require2=require('../common/utils/isFile'),
isFile=_require2.isFile;

var _require3=require('../common/utils/isBuffer'),
isBuffer=_require3.isBuffer;// var assert = require('assert');


var proto=exports;
/**
 * Object operations
 */

/**
 * append an object from String(file path)/Buffer/ReadableStream
 * @param {String} name the object key
 * @param {Mixed} file String(file path)/Buffer/ReadableStream
 * @param {Object} options
 * @return {Object}
 */

proto.append=/*#__PURE__*/function(){
var _append=(0,_asyncToGenerator2.default)(/*#__PURE__*/_regenerator.default.mark(function _callee(name,file,options){
var result;
return _regenerator.default.wrap(function _callee$(_context){
while(1){
switch(_context.prev=_context.next){
case 0:
options=options||{};
if(options.position===undefined)options.position='0';
options.subres={
append:'',
position:options.position};

options.method='POST';
_context.next=6;
return this.put(name,file,options);

case 6:
result=_context.sent;
result.nextAppendPosition=result.res.headers['x-oss-next-append-position'];
return _context.abrupt("return",result);

case 9:
case"end":
return _context.stop();}

}
},_callee,this);
}));

function append(_x,_x2,_x3){
return _append.apply(this,arguments);
}

return append;
}();
/**
 * put an object from String(file path)/Buffer/ReadableStream
 * @param {String} name the object key
 * @param {Mixed} file String(file path)/Buffer/ReadableStream
 * @param {Object} options
 *        {Object} options.callback The callback parameter is composed of a JSON string encoded in Base64
 *        {String} options.callback.url  the OSS sends a callback request to this URL
 *        {String} options.callback.host  The host header value for initiating callback requests
 *        {String} options.callback.body  The value of the request body when a callback is initiated
 *        {String} options.callback.contentType  The Content-Type of the callback requests initiatiated
 *        {Object} options.callback.customValue  Custom parameters are a map of key-values, e.g:
 *                  customValue = {
 *                    key1: 'value1',
 *                    key2: 'value2'
 *                  }
 * @return {Object}
 */


proto.put=/*#__PURE__*/function(){
var _put=(0,_asyncToGenerator2.default)(/*#__PURE__*/_regenerator.default.mark(function _callee2(name,file,options){
var content,method,params,result,ret;
return _regenerator.default.wrap(function _callee2$(_context2){
while(1){
switch(_context2.prev=_context2.next){
case 0:
options=options||{};
options.disabledMD5=options.disabledMD5===undefined?true:!!options.disabledMD5;
options.headers=options.headers||{};
name=this._objectName(name);

if(!isBuffer(file)){
_context2.next=8;
break;
}

content=file;
_context2.next=19;
break;

case 8:
if(!(isBlob(file)||isFile(file))){
_context2.next=18;
break;
}

if(!options.mime){
if(isFile(file)){
options.mime=mime.getType(path.extname(file.name));
}else{
options.mime=file.type;
}
}

_context2.next=12;
return this._createBuffer(file,0,file.size);

case 12:
content=_context2.sent;
_context2.next=15;
return this._getFileSize(file);

case 15:
options.contentLength=_context2.sent;
_context2.next=19;
break;

case 18:
throw new TypeError('Must provide Buffer/Blob/File for put.');

case 19:
this._convertMetaToHeaders(options.meta,options.headers);

method=options.method||'PUT';
params=this._objectRequestParams(method,name,options);
callback.encodeCallback(params,options);
params.mime=options.mime;
params.disabledMD5=options.disabledMD5;
params.content=content;
params.successStatuses=[200];
_context2.next=29;
return this.request(params);

case 29:
result=_context2.sent;
ret={
name:name,
url:this._objectUrl(name),
res:result.res};


if(params.headers&&params.headers['x-oss-callback']){
ret.data=JSON.parse(result.data.toString());
}

return _context2.abrupt("return",ret);

case 33:
case"end":
return _context2.stop();}

}
},_callee2,this);
}));

function put(_x4,_x5,_x6){
return _put.apply(this,arguments);
}

return put;
}();
/**
 * put an object from ReadableStream. If `options.contentLength` is
 * not provided, chunked encoding is used.
 * @param {String} name the object key
 * @param {Readable} stream the ReadableStream
 * @param {Object} options
 * @return {Object}
 */


proto.putStream=/*#__PURE__*/function(){
var _putStream=(0,_asyncToGenerator2.default)(/*#__PURE__*/_regenerator.default.mark(function _callee3(name,stream,options){
var method,params,result,ret;
return _regenerator.default.wrap(function _callee3$(_context3){
while(1){
switch(_context3.prev=_context3.next){
case 0:
options=options||{};
options.headers=options.headers||{};
name=this._objectName(name);

if(options.contentLength){
options.headers['Content-Length']=options.contentLength;
}else{
options.headers['Transfer-Encoding']='chunked';
}

this._convertMetaToHeaders(options.meta,options.headers);

method=options.method||'PUT';
params=this._objectRequestParams(method,name,options);
callback.encodeCallback(params,options);
params.mime=options.mime;
params.stream=stream;
params.successStatuses=[200];
_context3.next=13;
return this.request(params);

case 13:
result=_context3.sent;
ret={
name:name,
url:this._objectUrl(name),
res:result.res};


if(params.headers&&params.headers['x-oss-callback']){
ret.data=JSON.parse(result.data.toString());
}

return _context3.abrupt("return",ret);

case 17:
case"end":
return _context3.stop();}

}
},_callee3,this);
}));

function putStream(_x7,_x8,_x9){
return _putStream.apply(this,arguments);
}

return putStream;
}();

merge(proto,require('../common/object/copyObject'));
merge(proto,require('../common/object/getObjectTagging'));
merge(proto,require('../common/object/putObjectTagging'));
merge(proto,require('../common/object/deleteObjectTagging'));
merge(proto,require('../common/image'));
merge(proto,require('../common/object/getBucketVersions'));
merge(proto,require('../common/object/getACL'));
merge(proto,require('../common/object/putACL'));
merge(proto,require('../common/object/head'));
merge(proto,require('../common/object/delete'));
merge(proto,require('../common/object/get'));
merge(proto,require('../common/object/putSymlink'));
merge(proto,require('../common/object/getSymlink'));
merge(proto,require('../common/object/deleteMulti'));
merge(proto,require('../common/object/getObjectMeta'));
merge(proto,require('../common/object/getObjectUrl'));
merge(proto,require('../common/object/generateObjectUrl'));
merge(proto,require('../common/object/signatureUrl'));

proto.putMeta=/*#__PURE__*/function(){
var _putMeta=(0,_asyncToGenerator2.default)(/*#__PURE__*/_regenerator.default.mark(function _callee4(name,meta,options){
var copyResult;
return _regenerator.default.wrap(function _callee4$(_context4){
while(1){
switch(_context4.prev=_context4.next){
case 0:
_context4.next=2;
return this.copy(name,name,{
meta:meta||{},
timeout:options&&options.timeout,
ctx:options&&options.ctx});


case 2:
copyResult=_context4.sent;
return _context4.abrupt("return",copyResult);

case 4:
case"end":
return _context4.stop();}

}
},_callee4,this);
}));

function putMeta(_x10,_x11,_x12){
return _putMeta.apply(this,arguments);
}

return putMeta;
}();

proto.list=/*#__PURE__*/function(){
var _list=(0,_asyncToGenerator2.default)(/*#__PURE__*/_regenerator.default.mark(function _callee5(query,options){
var params,result,objects,that,prefixes;
return _regenerator.default.wrap(function _callee5$(_context5){
while(1){
switch(_context5.prev=_context5.next){
case 0:
// prefix, marker, max-keys, delimiter
params=this._objectRequestParams('GET','',options);
params.query=query;
params.xmlResponse=true;
params.successStatuses=[200];
_context5.next=6;
return this.request(params);

case 6:
result=_context5.sent;
objects=result.data.Contents;
that=this;

if(objects){
if(!Array.isArray(objects)){
objects=[objects];
}

objects=objects.map(function(obj){
return{
name:obj.Key,
url:that._objectUrl(obj.Key),
lastModified:obj.LastModified,
etag:obj.ETag,
type:obj.Type,
size:Number(obj.Size),
storageClass:obj.StorageClass,
owner:{
id:obj.Owner.ID,
displayName:obj.Owner.DisplayName}};


});
}

prefixes=result.data.CommonPrefixes||null;

if(prefixes){
if(!Array.isArray(prefixes)){
prefixes=[prefixes];
}

prefixes=prefixes.map(function(item){
return item.Prefix;
});
}

return _context5.abrupt("return",{
res:result.res,
objects:objects,
prefixes:prefixes,
nextMarker:result.data.NextMarker||null,
isTruncated:result.data.IsTruncated==='true'});


case 13:
case"end":
return _context5.stop();}

}
},_callee5,this);
}));

function list(_x13,_x14){
return _list.apply(this,arguments);
}

return list;
}();

proto.listV2=/*#__PURE__*/function(){
var _listV=(0,_asyncToGenerator2.default)(/*#__PURE__*/_regenerator.default.mark(function _callee6(query){
var options,
continuation_token,
params,
result,
objects,
that,
prefixes,
_args6=arguments;
return _regenerator.default.wrap(function _callee6$(_context6){
while(1){
switch(_context6.prev=_context6.next){
case 0:
options=_args6.length>1&&_args6[1]!==undefined?_args6[1]:{};
continuation_token=query['continuation-token']||query.continuationToken;
delete query['continuation-token'];
delete query.continuationToken;

if(continuation_token){
options.subres=Object.assign({
'continuation-token':continuation_token},
options.subres);
}

params=this._objectRequestParams('GET','',options);
params.query=Object.assign({
'list-type':2},
query);
params.xmlResponse=true;
params.successStatuses=[200];
_context6.next=11;
return this.request(params);

case 11:
result=_context6.sent;
objects=result.data.Contents;
that=this;

if(objects){
if(!Array.isArray(objects)){
objects=[objects];
}

objects=objects.map(function(obj){
return{
name:obj.Key,
url:that._objectUrl(obj.Key),
lastModified:obj.LastModified,
etag:obj.ETag,
type:obj.Type,
size:Number(obj.Size),
storageClass:obj.StorageClass,
owner:obj.Owner?{
id:obj.Owner.ID,
displayName:obj.Owner.DisplayName}:
null};

});
}

prefixes=result.data.CommonPrefixes||null;

if(prefixes){
if(!Array.isArray(prefixes)){
prefixes=[prefixes];
}

prefixes=prefixes.map(function(item){
return item.Prefix;
});
}

return _context6.abrupt("return",{
res:result.res,
objects:objects,
prefixes:prefixes,
isTruncated:result.data.IsTruncated==='true',
keyCount:+result.data.KeyCount,
continuationToken:result.data.ContinuationToken||null,
nextContinuationToken:result.data.NextContinuationToken||null});


case 18:
case"end":
return _context6.stop();}

}
},_callee6,this);
}));

function listV2(_x15){
return _listV.apply(this,arguments);
}

return listV2;
}();
/**
 * Restore Object
 * @param {String} name the object key
 * @param {Object} options
 * @returns {{res}}
 */


proto.restore=/*#__PURE__*/function(){
var _restore=(0,_asyncToGenerator2.default)(/*#__PURE__*/_regenerator.default.mark(function _callee7(name,options){
var params,result;
return _regenerator.default.wrap(function _callee7$(_context7){
while(1){
switch(_context7.prev=_context7.next){
case 0:
options=options||{};
options.subres=Object.assign({
restore:''},
options.subres);

if(options.versionId){
options.subres.versionId=options.versionId;
}

params=this._objectRequestParams('POST',name,options);
params.successStatuses=[202];
_context7.next=7;
return this.request(params);

case 7:
result=_context7.sent;
return _context7.abrupt("return",{
res:result.res});


case 9:
case"end":
return _context7.stop();}

}
},_callee7,this);
}));

function restore(_x16,_x17){
return _restore.apply(this,arguments);
}

return restore;
}();

proto._objectUrl=function _objectUrl(name){
return this._getReqUrl({
bucket:this.options.bucket,
object:name});

};
/**
 * generator request params
 * @return {Object} params
 *
 * @api private
 */


proto._objectRequestParams=function _objectRequestParams(method,name,options){
if(!this.options.bucket&&!this.options.cname){
throw new Error('Please create a bucket first');
}

options=options||{};
name=this._objectName(name);
var params={
object:name,
bucket:this.options.bucket,
method:method,
subres:options&&options.subres,
timeout:options&&options.timeout,
ctx:options&&options.ctx};


if(options.headers){
params.headers={};
copy(options.headers).to(params.headers);
}

return params;
};

proto._objectName=function _objectName(name){
return name.replace(/^\/+/,'');
};

proto._convertMetaToHeaders=function _convertMetaToHeaders(meta,headers){
if(!meta){
return;
}

Object.keys(meta).forEach(function(k){
headers["x-oss-meta-".concat(k)]=meta[k];
});
};

proto._deleteFileSafe=function _deleteFileSafe(filepath){
var _this=this;

return new Promise(function(resolve){
fs.exists(filepath,function(exists){
if(!exists){
resolve();
}else{
fs.unlink(filepath,function(err){
if(err){
_this.debug('unlink %j error: %s',filepath,err,'error');
}

resolve();
});
}
});
});
};

},{"../common/callback":23,"../common/image":26,"../common/object/copyObject":29,"../common/object/delete":30,"../common/object/deleteMulti":31,"../common/object/deleteObjectTagging":32,"../common/object/generateObjectUrl":33,"../common/object/get":34,"../common/object/getACL":35,"../common/object/getBucketVersions":36,"../common/object/getObjectMeta":37,"../common/object/getObjectTagging":38,"../common/object/getObjectUrl":39,"../common/object/getSymlink":40,"../common/object/head":41,"../common/object/putACL":42,"../common/object/putObjectTagging":43,"../common/object/putSymlink":44,"../common/object/signatureUrl":45,"../common/utils/isBlob":60,"../common/utils/isBuffer":61,"../common/utils/isFile":62,"@babel/runtime/helpers/asyncToGenerator":71,"@babel/runtime/helpers/interopRequireDefault":72,"@babel/runtime/regenerator":75,"copy-to":101,"core-js/modules/es.array.for-each":238,"core-js/modules/es.array.map":245,"core-js/modules/es.function.name":249,"core-js/modules/es.number.constructor":250,"core-js/modules/es.object.assign":251,"core-js/modules/es.object.keys":253,"core-js/modules/es.object.to-string":254,"core-js/modules/es.promise":255,"core-js/modules/es.regexp.exec":256,"core-js/modules/es.regexp.to-string":257,"core-js/modules/es.string.replace":261,"core-js/modules/web.dom-collections.for-each":291,"fs":79,"merge-descriptors":310,"mime":312,"path":315,"regenerator-runtime/runtime":336}],5:[function(require,module,exports){
"use strict";

exports.version="6.16.0";

},{}],6:[function(require,module,exports){
"use strict";

var _interopRequireDefault=require("@babel/runtime/helpers/interopRequireDefault");

var _regenerator=_interopRequireDefault(require("@babel/runtime/regenerator"));

require("regenerator-runtime/runtime");

var _asyncToGenerator2=_interopRequireDefault(require("@babel/runtime/helpers/asyncToGenerator"));

Object.defineProperty(exports,"__esModule",{
value:true});

exports.abortBucketWorm=void 0;

var checkBucketName_1=require("../utils/checkBucketName");

function abortBucketWorm(_x,_x2){
return _abortBucketWorm.apply(this,arguments);
}

function _abortBucketWorm(){
_abortBucketWorm=(0,_asyncToGenerator2.default)(/*#__PURE__*/_regenerator.default.mark(function _callee(name,options){
var params,result;
return _regenerator.default.wrap(function _callee$(_context){
while(1){
switch(_context.prev=_context.next){
case 0:
checkBucketName_1.checkBucketName(name);
params=this._bucketRequestParams('DELETE',name,'worm',options);
_context.next=4;
return this.request(params);

case 4:
result=_context.sent;
return _context.abrupt("return",{
res:result.res,
status:result.status});


case 6:
case"end":
return _context.stop();}

}
},_callee,this);
}));
return _abortBucketWorm.apply(this,arguments);
}

exports.abortBucketWorm=abortBucketWorm;

},{"../utils/checkBucketName":48,"@babel/runtime/helpers/asyncToGenerator":71,"@babel/runtime/helpers/interopRequireDefault":72,"@babel/runtime/regenerator":75,"regenerator-runtime/runtime":336}],7:[function(require,module,exports){
"use strict";

var _interopRequireDefault=require("@babel/runtime/helpers/interopRequireDefault");

var _regenerator=_interopRequireDefault(require("@babel/runtime/regenerator"));

require("regenerator-runtime/runtime");

var _asyncToGenerator2=_interopRequireDefault(require("@babel/runtime/helpers/asyncToGenerator"));

Object.defineProperty(exports,"__esModule",{
value:true});

exports.completeBucketWorm=void 0;

var checkBucketName_1=require("../utils/checkBucketName");

function completeBucketWorm(_x,_x2,_x3){
return _completeBucketWorm.apply(this,arguments);
}

function _completeBucketWorm(){
_completeBucketWorm=(0,_asyncToGenerator2.default)(/*#__PURE__*/_regenerator.default.mark(function _callee(name,wormId,options){
var params,result;
return _regenerator.default.wrap(function _callee$(_context){
while(1){
switch(_context.prev=_context.next){
case 0:
checkBucketName_1.checkBucketName(name);
params=this._bucketRequestParams('POST',name,{
wormId:wormId},
options);
_context.next=4;
return this.request(params);

case 4:
result=_context.sent;
return _context.abrupt("return",{
res:result.res,
status:result.status});


case 6:
case"end":
return _context.stop();}

}
},_callee,this);
}));
return _completeBucketWorm.apply(this,arguments);
}

exports.completeBucketWorm=completeBucketWorm;

},{"../utils/checkBucketName":48,"@babel/runtime/helpers/asyncToGenerator":71,"@babel/runtime/helpers/interopRequireDefault":72,"@babel/runtime/regenerator":75,"regenerator-runtime/runtime":336}],8:[function(require,module,exports){
"use strict";

var _interopRequireDefault=require("@babel/runtime/helpers/interopRequireDefault");

require("core-js/modules/es.object.assign");

var _regenerator=_interopRequireDefault(require("@babel/runtime/regenerator"));

require("regenerator-runtime/runtime");

var _asyncToGenerator2=_interopRequireDefault(require("@babel/runtime/helpers/asyncToGenerator"));

Object.defineProperty(exports,"__esModule",{
value:true});

exports.deleteBucketInventory=void 0;

var checkBucketName_1=require("../utils/checkBucketName");
/**
 * deleteBucketInventory
 * @param {String} bucketName - bucket name
 * @param {String} inventoryId
 * @param {Object} options
 */


function deleteBucketInventory(_x,_x2){
return _deleteBucketInventory.apply(this,arguments);
}

function _deleteBucketInventory(){
_deleteBucketInventory=(0,_asyncToGenerator2.default)(/*#__PURE__*/_regenerator.default.mark(function _callee(bucketName,inventoryId){
var options,
subres,
params,
result,
_args=arguments;
return _regenerator.default.wrap(function _callee$(_context){
while(1){
switch(_context.prev=_context.next){
case 0:
options=_args.length>2&&_args[2]!==undefined?_args[2]:{};
subres=Object.assign({
inventory:'',
inventoryId:inventoryId},
options.subres);
checkBucketName_1.checkBucketName(bucketName);
params=this._bucketRequestParams('DELETE',bucketName,subres,options);
params.successStatuses=[204];
_context.next=7;
return this.request(params);

case 7:
result=_context.sent;
return _context.abrupt("return",{
status:result.status,
res:result.res});


case 9:
case"end":
return _context.stop();}

}
},_callee,this);
}));
return _deleteBucketInventory.apply(this,arguments);
}

exports.deleteBucketInventory=deleteBucketInventory;

},{"../utils/checkBucketName":48,"@babel/runtime/helpers/asyncToGenerator":71,"@babel/runtime/helpers/interopRequireDefault":72,"@babel/runtime/regenerator":75,"core-js/modules/es.object.assign":251,"regenerator-runtime/runtime":336}],9:[function(require,module,exports){
"use strict";

var _interopRequireDefault=require("@babel/runtime/helpers/interopRequireDefault");

var _regenerator=_interopRequireDefault(require("@babel/runtime/regenerator"));

require("regenerator-runtime/runtime");

var _asyncToGenerator2=_interopRequireDefault(require("@babel/runtime/helpers/asyncToGenerator"));

var _require=require('../utils/checkBucketName'),
_checkBucketName=_require.checkBucketName;

var proto=exports;

proto.deleteBucketLifecycle=/*#__PURE__*/function(){
var _deleteBucketLifecycle=(0,_asyncToGenerator2.default)(/*#__PURE__*/_regenerator.default.mark(function _callee(name,options){
var params,result;
return _regenerator.default.wrap(function _callee$(_context){
while(1){
switch(_context.prev=_context.next){
case 0:
_checkBucketName(name);

params=this._bucketRequestParams('DELETE',name,'lifecycle',options);
params.successStatuses=[204];
_context.next=5;
return this.request(params);

case 5:
result=_context.sent;
return _context.abrupt("return",{
res:result.res});


case 7:
case"end":
return _context.stop();}

}
},_callee,this);
}));

function deleteBucketLifecycle(_x,_x2){
return _deleteBucketLifecycle.apply(this,arguments);
}

return deleteBucketLifecycle;
}();

},{"../utils/checkBucketName":48,"@babel/runtime/helpers/asyncToGenerator":71,"@babel/runtime/helpers/interopRequireDefault":72,"@babel/runtime/regenerator":75,"regenerator-runtime/runtime":336}],10:[function(require,module,exports){
"use strict";

var _interopRequireDefault=require("@babel/runtime/helpers/interopRequireDefault");

var _regenerator=_interopRequireDefault(require("@babel/runtime/regenerator"));

require("regenerator-runtime/runtime");

var _asyncToGenerator2=_interopRequireDefault(require("@babel/runtime/helpers/asyncToGenerator"));

var _require=require('../utils/checkBucketName'),
_checkBucketName=_require.checkBucketName;

var proto=exports;

proto.deleteBucketWebsite=/*#__PURE__*/function(){
var _deleteBucketWebsite=(0,_asyncToGenerator2.default)(/*#__PURE__*/_regenerator.default.mark(function _callee(name,options){
var params,result;
return _regenerator.default.wrap(function _callee$(_context){
while(1){
switch(_context.prev=_context.next){
case 0:
_checkBucketName(name);

params=this._bucketRequestParams('DELETE',name,'website',options);
params.successStatuses=[204];
_context.next=5;
return this.request(params);

case 5:
result=_context.sent;
return _context.abrupt("return",{
res:result.res});


case 7:
case"end":
return _context.stop();}

}
},_callee,this);
}));

function deleteBucketWebsite(_x,_x2){
return _deleteBucketWebsite.apply(this,arguments);
}

return deleteBucketWebsite;
}();

},{"../utils/checkBucketName":48,"@babel/runtime/helpers/asyncToGenerator":71,"@babel/runtime/helpers/interopRequireDefault":72,"@babel/runtime/regenerator":75,"regenerator-runtime/runtime":336}],11:[function(require,module,exports){
"use strict";

var _interopRequireDefault=require("@babel/runtime/helpers/interopRequireDefault");

var _regenerator=_interopRequireDefault(require("@babel/runtime/regenerator"));

require("regenerator-runtime/runtime");

var _asyncToGenerator2=_interopRequireDefault(require("@babel/runtime/helpers/asyncToGenerator"));

Object.defineProperty(exports,"__esModule",{
value:true});

exports.extendBucketWorm=void 0;

var checkBucketName_1=require("../utils/checkBucketName");

var obj2xml_1=require("../utils/obj2xml");

function extendBucketWorm(_x,_x2,_x3,_x4){
return _extendBucketWorm.apply(this,arguments);
}

function _extendBucketWorm(){
_extendBucketWorm=(0,_asyncToGenerator2.default)(/*#__PURE__*/_regenerator.default.mark(function _callee(name,wormId,days,options){
var params,paramlXMLObJ,result;
return _regenerator.default.wrap(function _callee$(_context){
while(1){
switch(_context.prev=_context.next){
case 0:
checkBucketName_1.checkBucketName(name);
params=this._bucketRequestParams('POST',name,{
wormExtend:'',
wormId:wormId},
options);
paramlXMLObJ={
ExtendWormConfiguration:{
RetentionPeriodInDays:days}};


params.mime='xml';
params.content=obj2xml_1.obj2xml(paramlXMLObJ,{
headers:true});

params.successStatuses=[200];
_context.next=8;
return this.request(params);

case 8:
result=_context.sent;
return _context.abrupt("return",{
res:result.res,
status:result.status});


case 10:
case"end":
return _context.stop();}

}
},_callee,this);
}));
return _extendBucketWorm.apply(this,arguments);
}

exports.extendBucketWorm=extendBucketWorm;

},{"../utils/checkBucketName":48,"../utils/obj2xml":67,"@babel/runtime/helpers/asyncToGenerator":71,"@babel/runtime/helpers/interopRequireDefault":72,"@babel/runtime/regenerator":75,"regenerator-runtime/runtime":336}],12:[function(require,module,exports){
"use strict";

var _interopRequireDefault=require("@babel/runtime/helpers/interopRequireDefault");

require("core-js/modules/es.object.assign");

var _regenerator=_interopRequireDefault(require("@babel/runtime/regenerator"));

require("regenerator-runtime/runtime");

var _asyncToGenerator2=_interopRequireDefault(require("@babel/runtime/helpers/asyncToGenerator"));

Object.defineProperty(exports,"__esModule",{
value:true});

exports.getBucketInventory=void 0;

var checkBucketName_1=require("../utils/checkBucketName");

var formatInventoryConfig_1=require("../utils/formatInventoryConfig");
/**
 * getBucketInventory
 * @param {String} bucketName - bucket name
 * @param {String} inventoryId
 * @param {Object} options
 */


function getBucketInventory(_x,_x2){
return _getBucketInventory.apply(this,arguments);
}

function _getBucketInventory(){
_getBucketInventory=(0,_asyncToGenerator2.default)(/*#__PURE__*/_regenerator.default.mark(function _callee(bucketName,inventoryId){
var options,
subres,
params,
result,
_args=arguments;
return _regenerator.default.wrap(function _callee$(_context){
while(1){
switch(_context.prev=_context.next){
case 0:
options=_args.length>2&&_args[2]!==undefined?_args[2]:{};
subres=Object.assign({
inventory:'',
inventoryId:inventoryId},
options.subres);
checkBucketName_1.checkBucketName(bucketName);
params=this._bucketRequestParams('GET',bucketName,subres,options);
params.successStatuses=[200];
params.xmlResponse=true;
_context.next=8;
return this.request(params);

case 8:
result=_context.sent;
return _context.abrupt("return",{
status:result.status,
res:result.res,
inventory:formatInventoryConfig_1.formatInventoryConfig(result.data)});


case 10:
case"end":
return _context.stop();}

}
},_callee,this);
}));
return _getBucketInventory.apply(this,arguments);
}

exports.getBucketInventory=getBucketInventory;

},{"../utils/checkBucketName":48,"../utils/formatInventoryConfig":56,"@babel/runtime/helpers/asyncToGenerator":71,"@babel/runtime/helpers/interopRequireDefault":72,"@babel/runtime/regenerator":75,"core-js/modules/es.object.assign":251,"regenerator-runtime/runtime":336}],13:[function(require,module,exports){
"use strict";

var _interopRequireDefault=require("@babel/runtime/helpers/interopRequireDefault");

require("core-js/modules/es.array.map");

var _regenerator=_interopRequireDefault(require("@babel/runtime/regenerator"));

require("regenerator-runtime/runtime");

var _asyncToGenerator2=_interopRequireDefault(require("@babel/runtime/helpers/asyncToGenerator"));

var _require=require('../utils/checkBucketName'),
_checkBucketName=_require.checkBucketName;

var _require2=require('../utils/isArray'),
isArray=_require2.isArray;

var _require3=require('../utils/formatObjKey'),
formatObjKey=_require3.formatObjKey;

var proto=exports;

proto.getBucketLifecycle=/*#__PURE__*/function(){
var _getBucketLifecycle=(0,_asyncToGenerator2.default)(/*#__PURE__*/_regenerator.default.mark(function _callee(name,options){
var params,result,rules;
return _regenerator.default.wrap(function _callee$(_context){
while(1){
switch(_context.prev=_context.next){
case 0:
_checkBucketName(name);

params=this._bucketRequestParams('GET',name,'lifecycle',options);
params.successStatuses=[200];
params.xmlResponse=true;
_context.next=6;
return this.request(params);

case 6:
result=_context.sent;
rules=result.data.Rule||null;

if(rules){
if(!isArray(rules)){
rules=[rules];
}

rules=rules.map(function(_){
if(_.ID){
_.id=_.ID;
delete _.ID;
}

if(_.Tag&&!isArray(_.Tag)){
_.Tag=[_.Tag];
}

return formatObjKey(_,'firstLowerCase');
});
}

return _context.abrupt("return",{
rules:rules,
res:result.res});


case 10:
case"end":
return _context.stop();}

}
},_callee,this);
}));

function getBucketLifecycle(_x,_x2){
return _getBucketLifecycle.apply(this,arguments);
}

return getBucketLifecycle;
}();

},{"../utils/checkBucketName":48,"../utils/formatObjKey":57,"../utils/isArray":59,"@babel/runtime/helpers/asyncToGenerator":71,"@babel/runtime/helpers/interopRequireDefault":72,"@babel/runtime/regenerator":75,"core-js/modules/es.array.map":245,"regenerator-runtime/runtime":336}],14:[function(require,module,exports){
"use strict";

var _interopRequireDefault=require("@babel/runtime/helpers/interopRequireDefault");

var _regenerator=_interopRequireDefault(require("@babel/runtime/regenerator"));

require("regenerator-runtime/runtime");

var _asyncToGenerator2=_interopRequireDefault(require("@babel/runtime/helpers/asyncToGenerator"));

var _require=require('../utils/checkBucketName'),
_checkBucketName=_require.checkBucketName;

var proto=exports;
/**
 * getBucketVersioning
 * @param {String} bucketName - bucket name
 */

proto.getBucketVersioning=/*#__PURE__*/function(){
var _getBucketVersioning=(0,_asyncToGenerator2.default)(/*#__PURE__*/_regenerator.default.mark(function _callee(bucketName,options){
var params,result,versionStatus;
return _regenerator.default.wrap(function _callee$(_context){
while(1){
switch(_context.prev=_context.next){
case 0:
_checkBucketName(bucketName);

params=this._bucketRequestParams('GET',bucketName,'versioning',options);
params.xmlResponse=true;
params.successStatuses=[200];
_context.next=6;
return this.request(params);

case 6:
result=_context.sent;
versionStatus=result.data.Status;
return _context.abrupt("return",{
status:result.status,
versionStatus:versionStatus,
res:result.res});


case 9:
case"end":
return _context.stop();}

}
},_callee,this);
}));

function getBucketVersioning(_x,_x2){
return _getBucketVersioning.apply(this,arguments);
}

return getBucketVersioning;
}();

},{"../utils/checkBucketName":48,"@babel/runtime/helpers/asyncToGenerator":71,"@babel/runtime/helpers/interopRequireDefault":72,"@babel/runtime/regenerator":75,"regenerator-runtime/runtime":336}],15:[function(require,module,exports){
"use strict";

var _interopRequireDefault=require("@babel/runtime/helpers/interopRequireDefault");

var _regenerator=_interopRequireDefault(require("@babel/runtime/regenerator"));

require("regenerator-runtime/runtime");

var _asyncToGenerator2=_interopRequireDefault(require("@babel/runtime/helpers/asyncToGenerator"));

var _require=require('../utils/checkBucketName'),
_checkBucketName=_require.checkBucketName;

var _require2=require('../utils/isObject'),
isObject=_require2.isObject;

var proto=exports;

proto.getBucketWebsite=/*#__PURE__*/function(){
var _getBucketWebsite=(0,_asyncToGenerator2.default)(/*#__PURE__*/_regenerator.default.mark(function _callee(name,options){
var params,result,routingRules;
return _regenerator.default.wrap(function _callee$(_context){
while(1){
switch(_context.prev=_context.next){
case 0:
_checkBucketName(name);

params=this._bucketRequestParams('GET',name,'website',options);
params.successStatuses=[200];
params.xmlResponse=true;
_context.next=6;
return this.request(params);

case 6:
result=_context.sent;
routingRules=[];

if(result.data.RoutingRules&&result.data.RoutingRules.RoutingRule){
if(isObject(result.data.RoutingRules.RoutingRule)){
routingRules=[result.data.RoutingRules.RoutingRule];
}else{
routingRules=result.data.RoutingRules.RoutingRule;
}
}

return _context.abrupt("return",{
index:result.data.IndexDocument&&result.data.IndexDocument.Suffix||'',
supportSubDir:result.data.IndexDocument&&result.data.IndexDocument.SupportSubDir||'false',
type:result.data.IndexDocument&&result.data.IndexDocument.Type,
routingRules:routingRules,
error:result.data.ErrorDocument&&result.data.ErrorDocument.Key||null,
res:result.res});


case 10:
case"end":
return _context.stop();}

}
},_callee,this);
}));

function getBucketWebsite(_x,_x2){
return _getBucketWebsite.apply(this,arguments);
}

return getBucketWebsite;
}();

},{"../utils/checkBucketName":48,"../utils/isObject":65,"@babel/runtime/helpers/asyncToGenerator":71,"@babel/runtime/helpers/interopRequireDefault":72,"@babel/runtime/regenerator":75,"regenerator-runtime/runtime":336}],16:[function(require,module,exports){
"use strict";

var _interopRequireDefault=require("@babel/runtime/helpers/interopRequireDefault");

require("core-js/modules/es.object.assign");

var _regenerator=_interopRequireDefault(require("@babel/runtime/regenerator"));

require("regenerator-runtime/runtime");

var _asyncToGenerator2=_interopRequireDefault(require("@babel/runtime/helpers/asyncToGenerator"));

Object.defineProperty(exports,"__esModule",{
value:true});

exports.getBucketWorm=void 0;

var checkBucketName_1=require("../utils/checkBucketName");

var dataFix_1=require("../utils/dataFix");

function getBucketWorm(_x,_x2){
return _getBucketWorm.apply(this,arguments);
}

function _getBucketWorm(){
_getBucketWorm=(0,_asyncToGenerator2.default)(/*#__PURE__*/_regenerator.default.mark(function _callee(name,options){
var params,result;
return _regenerator.default.wrap(function _callee$(_context){
while(1){
switch(_context.prev=_context.next){
case 0:
checkBucketName_1.checkBucketName(name);
params=this._bucketRequestParams('GET',name,'worm',options);
params.successStatuses=[200];
params.xmlResponse=true;
_context.next=6;
return this.request(params);

case 6:
result=_context.sent;
dataFix_1.dataFix(result.data,{
lowerFirst:true,
rename:{
RetentionPeriodInDays:'days'}});


return _context.abrupt("return",Object.assign(Object.assign({},result.data),{
res:result.res,
status:result.status}));


case 9:
case"end":
return _context.stop();}

}
},_callee,this);
}));
return _getBucketWorm.apply(this,arguments);
}

exports.getBucketWorm=getBucketWorm;

},{"../utils/checkBucketName":48,"../utils/dataFix":53,"@babel/runtime/helpers/asyncToGenerator":71,"@babel/runtime/helpers/interopRequireDefault":72,"@babel/runtime/regenerator":75,"core-js/modules/es.object.assign":251,"regenerator-runtime/runtime":336}],17:[function(require,module,exports){
"use strict";

var _interopRequireDefault=require("@babel/runtime/helpers/interopRequireDefault");

var _regenerator=_interopRequireDefault(require("@babel/runtime/regenerator"));

require("regenerator-runtime/runtime");

var _asyncToGenerator2=_interopRequireDefault(require("@babel/runtime/helpers/asyncToGenerator"));

Object.defineProperty(exports,"__esModule",{
value:true});

exports.initiateBucketWorm=void 0;

var obj2xml_1=require("../utils/obj2xml");

var checkBucketName_1=require("../utils/checkBucketName");

function initiateBucketWorm(_x,_x2,_x3){
return _initiateBucketWorm.apply(this,arguments);
}

function _initiateBucketWorm(){
_initiateBucketWorm=(0,_asyncToGenerator2.default)(/*#__PURE__*/_regenerator.default.mark(function _callee(name,days,options){
var params,paramlXMLObJ,result;
return _regenerator.default.wrap(function _callee$(_context){
while(1){
switch(_context.prev=_context.next){
case 0:
checkBucketName_1.checkBucketName(name);
params=this._bucketRequestParams('POST',name,'worm',options);
paramlXMLObJ={
InitiateWormConfiguration:{
RetentionPeriodInDays:days}};


params.mime='xml';
params.content=obj2xml_1.obj2xml(paramlXMLObJ,{
headers:true});

params.successStatuses=[200];
_context.next=8;
return this.request(params);

case 8:
result=_context.sent;
return _context.abrupt("return",{
res:result.res,
wormId:result.res.headers['x-oss-worm-id'],
status:result.status});


case 10:
case"end":
return _context.stop();}

}
},_callee,this);
}));
return _initiateBucketWorm.apply(this,arguments);
}

exports.initiateBucketWorm=initiateBucketWorm;

},{"../utils/checkBucketName":48,"../utils/obj2xml":67,"@babel/runtime/helpers/asyncToGenerator":71,"@babel/runtime/helpers/interopRequireDefault":72,"@babel/runtime/regenerator":75,"regenerator-runtime/runtime":336}],18:[function(require,module,exports){
"use strict";

var _interopRequireDefault=require("@babel/runtime/helpers/interopRequireDefault");

require("core-js/modules/es.object.assign");

var _regenerator=_interopRequireDefault(require("@babel/runtime/regenerator"));

require("regenerator-runtime/runtime");

var _asyncToGenerator2=_interopRequireDefault(require("@babel/runtime/helpers/asyncToGenerator"));

Object.defineProperty(exports,"__esModule",{
value:true});

exports.listBucketInventory=void 0;

var checkBucketName_1=require("../utils/checkBucketName");

var formatInventoryConfig_1=require("../utils/formatInventoryConfig");
/**
 * listBucketInventory
 * @param {String} bucketName - bucket name
 * @param {String} inventoryId
 * @param {Object} options
 */


function listBucketInventory(_x){
return _listBucketInventory.apply(this,arguments);
}

function _listBucketInventory(){
_listBucketInventory=(0,_asyncToGenerator2.default)(/*#__PURE__*/_regenerator.default.mark(function _callee(bucketName){
var options,
continuationToken,
subres,
params,
result,
data,
res,
status,
_args=arguments;
return _regenerator.default.wrap(function _callee$(_context){
while(1){
switch(_context.prev=_context.next){
case 0:
options=_args.length>1&&_args[1]!==undefined?_args[1]:{};
continuationToken=options.continuationToken;
subres=Object.assign({
inventory:''},
continuationToken&&{
'continuation-token':continuationToken},
options.subres);
checkBucketName_1.checkBucketName(bucketName);
params=this._bucketRequestParams('GET',bucketName,subres,options);
params.successStatuses=[200];
params.xmlResponse=true;
_context.next=9;
return this.request(params);

case 9:
result=_context.sent;
data=result.data,res=result.res,status=result.status;
return _context.abrupt("return",{
isTruncated:data.IsTruncated==='true',
nextContinuationToken:data.NextContinuationToken,
inventoryList:formatInventoryConfig_1.formatInventoryConfig(data.InventoryConfiguration,true),
status:status,
res:res});


case 12:
case"end":
return _context.stop();}

}
},_callee,this);
}));
return _listBucketInventory.apply(this,arguments);
}

exports.listBucketInventory=listBucketInventory;

},{"../utils/checkBucketName":48,"../utils/formatInventoryConfig":56,"@babel/runtime/helpers/asyncToGenerator":71,"@babel/runtime/helpers/interopRequireDefault":72,"@babel/runtime/regenerator":75,"core-js/modules/es.object.assign":251,"regenerator-runtime/runtime":336}],19:[function(require,module,exports){
"use strict";

var _interopRequireDefault=require("@babel/runtime/helpers/interopRequireDefault");

require("core-js/modules/es.array.concat");

require("core-js/modules/es.object.assign");

var _regenerator=_interopRequireDefault(require("@babel/runtime/regenerator"));

require("regenerator-runtime/runtime");

var _asyncToGenerator2=_interopRequireDefault(require("@babel/runtime/helpers/asyncToGenerator"));

Object.defineProperty(exports,"__esModule",{
value:true});

exports.putBucketInventory=void 0;

var checkBucketName_1=require("../utils/checkBucketName");

var obj2xml_1=require("../utils/obj2xml");
/**
 * putBucketInventory
 * @param {String} bucketName - bucket name
 * @param {Inventory} inventory
 * @param {Object} options
 */


function putBucketInventory(_x,_x2){
return _putBucketInventory.apply(this,arguments);
}

function _putBucketInventory(){
_putBucketInventory=(0,_asyncToGenerator2.default)(/*#__PURE__*/_regenerator.default.mark(function _callee(bucketName,inventory){
var options,
subres,
OSSBucketDestination,
optionalFields,
includedObjectVersions,
destinationBucketPrefix,
rolePrefix,
paramXMLObj,
paramXML,
params,
result,
_args=arguments;
return _regenerator.default.wrap(function _callee$(_context){
while(1){
switch(_context.prev=_context.next){
case 0:
options=_args.length>2&&_args[2]!==undefined?_args[2]:{};
subres=Object.assign({
inventory:'',
inventoryId:inventory.id},
options.subres);
checkBucketName_1.checkBucketName(bucketName);
OSSBucketDestination=inventory.OSSBucketDestination,optionalFields=inventory.optionalFields,includedObjectVersions=inventory.includedObjectVersions;
destinationBucketPrefix='acs:oss:::';
rolePrefix="acs:ram::".concat(OSSBucketDestination.accountId,":role/");
paramXMLObj={
InventoryConfiguration:{
Id:inventory.id,
IsEnabled:inventory.isEnabled,
Filter:{
Prefix:inventory.prefix||''},

Destination:{
OSSBucketDestination:{
Format:OSSBucketDestination.format,
AccountId:OSSBucketDestination.accountId,
RoleArn:"".concat(rolePrefix).concat(OSSBucketDestination.rolename),
Bucket:"".concat(destinationBucketPrefix).concat(OSSBucketDestination.bucket),
Prefix:OSSBucketDestination.prefix||'',
Encryption:OSSBucketDestination.encryption||''}},


Schedule:{
Frequency:inventory.frequency},

IncludedObjectVersions:includedObjectVersions,
OptionalFields:{
Field:(optionalFields===null||optionalFields===void 0?void 0:optionalFields.field)||[]}}};



paramXML=obj2xml_1.obj2xml(paramXMLObj,{
headers:true,
firstUpperCase:true});

params=this._bucketRequestParams('PUT',bucketName,subres,options);
params.successStatuses=[200];
params.mime='xml';
params.content=paramXML;
_context.next=14;
return this.request(params);

case 14:
result=_context.sent;
return _context.abrupt("return",{
status:result.status,
res:result.res});


case 16:
case"end":
return _context.stop();}

}
},_callee,this);
}));
return _putBucketInventory.apply(this,arguments);
}

exports.putBucketInventory=putBucketInventory;

},{"../utils/checkBucketName":48,"../utils/obj2xml":67,"@babel/runtime/helpers/asyncToGenerator":71,"@babel/runtime/helpers/interopRequireDefault":72,"@babel/runtime/regenerator":75,"core-js/modules/es.array.concat":234,"core-js/modules/es.object.assign":251,"regenerator-runtime/runtime":336}],20:[function(require,module,exports){
"use strict";

var _interopRequireDefault=require("@babel/runtime/helpers/interopRequireDefault");

require("core-js/modules/es.array.for-each");

require("core-js/modules/es.array.includes");

require("core-js/modules/web.dom-collections.for-each");

var _regenerator=_interopRequireDefault(require("@babel/runtime/regenerator"));

require("regenerator-runtime/runtime");

var _asyncToGenerator2=_interopRequireDefault(require("@babel/runtime/helpers/asyncToGenerator"));

/* eslint-disable no-use-before-define */
var _require=require('../utils/checkBucketName'),
_checkBucketName=_require.checkBucketName;

var _require2=require('../utils/isArray'),
isArray=_require2.isArray;

var _require3=require('../utils/deepCopy'),
deepCopy=_require3.deepCopy;

var _require4=require('../utils/isObject'),
isObject=_require4.isObject;

var _require5=require('../utils/obj2xml'),
obj2xml=_require5.obj2xml;

var _require6=require('../utils/checkObjectTag'),
checkObjectTag=_require6.checkObjectTag;

var _require7=require('../utils/getStrBytesCount'),
getStrBytesCount=_require7.getStrBytesCount;

var proto=exports;

proto.putBucketLifecycle=/*#__PURE__*/function(){
var _putBucketLifecycle=(0,_asyncToGenerator2.default)(/*#__PURE__*/_regenerator.default.mark(function _callee(name,rules,options){
var params,Rule,paramXMLObj,paramXML,result;
return _regenerator.default.wrap(function _callee$(_context){
while(1){
switch(_context.prev=_context.next){
case 0:
_checkBucketName(name);

if(isArray(rules)){
_context.next=3;
break;
}

throw new Error('rules must be Array');

case 3:
params=this._bucketRequestParams('PUT',name,'lifecycle',options);
Rule=[];
paramXMLObj={
LifecycleConfiguration:{
Rule:Rule}};


rules.forEach(function(_){
defaultDaysAndDate2Expiration(_);// todo delete, 兼容旧版本

checkRule(_);

if(_.id){
_.ID=_.id;
delete _.id;
}

Rule.push(_);
});
paramXML=obj2xml(paramXMLObj,{
headers:true,
firstUpperCase:true});

params.content=paramXML;
params.mime='xml';
params.successStatuses=[200];
_context.next=13;
return this.request(params);

case 13:
result=_context.sent;
return _context.abrupt("return",{
res:result.res});


case 15:
case"end":
return _context.stop();}

}
},_callee,this);
}));

function putBucketLifecycle(_x,_x2,_x3){
return _putBucketLifecycle.apply(this,arguments);
}

return putBucketLifecycle;
}();// todo delete, 兼容旧版本


function defaultDaysAndDate2Expiration(obj){
if(obj.days){
obj.expiration={
days:obj.days};

}

if(obj.date){
obj.expiration={
createdBeforeDate:obj.date};

}
}

function checkDaysAndDate(obj,key){
var days=obj.days,
createdBeforeDate=obj.createdBeforeDate;

if(!days&&!createdBeforeDate){
throw new Error("".concat(key," must includes days or createdBeforeDate"));
}else if(days&&!/^[1-9][0-9]*$/.test(days)){
throw new Error('days must be a positive integer');
}else if(createdBeforeDate&&!/\d{4}-\d{2}-\d{2}T00:00:00.000Z/.test(createdBeforeDate)){
throw new Error('createdBeforeDate must be date and conform to iso8601 format');
}
}

function handleCheckTag(tag){
if(!isArray(tag)&&!isObject(tag)){
throw new Error('tag must be Object or Array');
}

tag=isObject(tag)?[tag]:tag;
var tagObj={};
var tagClone=deepCopy(tag);
tagClone.forEach(function(v){
tagObj[v.key]=v.value;
});
checkObjectTag(tagObj);
}

function checkRule(rule){
if(rule.id&&getStrBytesCount(rule.id)>255)throw new Error('ID is composed of 255 bytes at most');
if(rule.prefix===undefined)throw new Error('Rule must includes prefix');
if(!['Enabled','Disabled'].includes(rule.status))throw new Error('Status must be  Enabled or Disabled');

if(rule.transition){
if(!['IA','Archive'].includes(rule.transition.storageClass))throw new Error('StorageClass must be  IA or Archive');
checkDaysAndDate(rule.transition,'Transition');
}

if(rule.expiration){
if(!rule.expiration.expiredObjectDeleteMarker){
checkDaysAndDate(rule.expiration,'Expiration');
}else if(rule.expiration.days||rule.expiration.createdBeforeDate){
throw new Error('expiredObjectDeleteMarker cannot be used with days or createdBeforeDate');
}
}

if(rule.abortMultipartUpload){
checkDaysAndDate(rule.abortMultipartUpload,'AbortMultipartUpload');
}

if(!rule.expiration&&!rule.abortMultipartUpload&&!rule.transition&&!rule.noncurrentVersionTransition){
throw new Error('Rule must includes expiration or abortMultipartUpload or transition or noncurrentVersionTransition');
}

if(rule.tag){
if(rule.abortMultipartUpload){
throw new Error('Tag cannot be used with abortMultipartUpload');
}

handleCheckTag(rule.tag);
}
}

},{"../utils/checkBucketName":48,"../utils/checkObjectTag":50,"../utils/deepCopy":54,"../utils/getStrBytesCount":58,"../utils/isArray":59,"../utils/isObject":65,"../utils/obj2xml":67,"@babel/runtime/helpers/asyncToGenerator":71,"@babel/runtime/helpers/interopRequireDefault":72,"@babel/runtime/regenerator":75,"core-js/modules/es.array.for-each":238,"core-js/modules/es.array.includes":240,"core-js/modules/web.dom-collections.for-each":291,"regenerator-runtime/runtime":336}],21:[function(require,module,exports){
"use strict";

var _interopRequireDefault=require("@babel/runtime/helpers/interopRequireDefault");

require("core-js/modules/es.array.includes");

var _regenerator=_interopRequireDefault(require("@babel/runtime/regenerator"));

require("regenerator-runtime/runtime");

var _asyncToGenerator2=_interopRequireDefault(require("@babel/runtime/helpers/asyncToGenerator"));

var _require=require('../utils/checkBucketName'),
_checkBucketName=_require.checkBucketName;

var _require2=require('../utils/obj2xml'),
obj2xml=_require2.obj2xml;

var proto=exports;
/**
 * putBucketVersioning
 * @param {String} name - bucket name
 * @param {String} status
 * @param {Object} options
 */

proto.putBucketVersioning=/*#__PURE__*/function(){
var _putBucketVersioning=(0,_asyncToGenerator2.default)(/*#__PURE__*/_regenerator.default.mark(function _callee(name,status){
var options,
params,
paramXMLObj,
result,
_args=arguments;
return _regenerator.default.wrap(function _callee$(_context){
while(1){
switch(_context.prev=_context.next){
case 0:
options=_args.length>2&&_args[2]!==undefined?_args[2]:{};

_checkBucketName(name);

if(['Enabled','Suspended'].includes(status)){
_context.next=4;
break;
}

throw new Error('status must be Enabled or Suspended');

case 4:
params=this._bucketRequestParams('PUT',name,'versioning',options);
paramXMLObj={
VersioningConfiguration:{
Status:status}};


params.mime='xml';
params.content=obj2xml(paramXMLObj,{
headers:true});

_context.next=10;
return this.request(params);

case 10:
result=_context.sent;
return _context.abrupt("return",{
res:result.res,
status:result.status});


case 12:
case"end":
return _context.stop();}

}
},_callee,this);
}));

function putBucketVersioning(_x,_x2){
return _putBucketVersioning.apply(this,arguments);
}

return putBucketVersioning;
}();

},{"../utils/checkBucketName":48,"../utils/obj2xml":67,"@babel/runtime/helpers/asyncToGenerator":71,"@babel/runtime/helpers/interopRequireDefault":72,"@babel/runtime/regenerator":75,"core-js/modules/es.array.includes":240,"regenerator-runtime/runtime":336}],22:[function(require,module,exports){
"use strict";

var _interopRequireDefault=require("@babel/runtime/helpers/interopRequireDefault");

var _regenerator=_interopRequireDefault(require("@babel/runtime/regenerator"));

require("regenerator-runtime/runtime");

var _asyncToGenerator2=_interopRequireDefault(require("@babel/runtime/helpers/asyncToGenerator"));

var _require=require('../utils/checkBucketName'),
_checkBucketName=_require.checkBucketName;

var _require2=require('../utils/obj2xml'),
obj2xml=_require2.obj2xml;

var _require3=require('../utils/isArray'),
isArray=_require3.isArray;

var proto=exports;

proto.putBucketWebsite=/*#__PURE__*/function(){
var _putBucketWebsite=(0,_asyncToGenerator2.default)(/*#__PURE__*/_regenerator.default.mark(function _callee(name){
var config,
options,
params,
IndexDocument,
WebsiteConfiguration,
website,
result,
_args=arguments;
return _regenerator.default.wrap(function _callee$(_context){
while(1){
switch(_context.prev=_context.next){
case 0:
config=_args.length>1&&_args[1]!==undefined?_args[1]:{};
options=_args.length>2?_args[2]:undefined;

_checkBucketName(name);

params=this._bucketRequestParams('PUT',name,'website',options);
IndexDocument={
Suffix:config.index||'index.html'};

WebsiteConfiguration={
IndexDocument:IndexDocument};

website={
WebsiteConfiguration:WebsiteConfiguration};


if(config.supportSubDir){
IndexDocument.SupportSubDir=config.supportSubDir;
}

if(config.type){
IndexDocument.Type=config.type;
}

if(config.error){
WebsiteConfiguration.ErrorDocument={
Key:config.error};

}

if(!(config.routingRules!==undefined)){
_context.next=14;
break;
}

if(isArray(config.routingRules)){
_context.next=13;
break;
}

throw new Error('RoutingRules must be Array');

case 13:
WebsiteConfiguration.RoutingRules={
RoutingRule:config.routingRules};


case 14:
website=obj2xml(website);
params.content=website;
params.mime='xml';
params.successStatuses=[200];
_context.next=20;
return this.request(params);

case 20:
result=_context.sent;
return _context.abrupt("return",{
res:result.res});


case 22:
case"end":
return _context.stop();}

}
},_callee,this);
}));

function putBucketWebsite(_x){
return _putBucketWebsite.apply(this,arguments);
}

return putBucketWebsite;
}();

},{"../utils/checkBucketName":48,"../utils/isArray":59,"../utils/obj2xml":67,"@babel/runtime/helpers/asyncToGenerator":71,"@babel/runtime/helpers/interopRequireDefault":72,"@babel/runtime/regenerator":75,"regenerator-runtime/runtime":336}],23:[function(require,module,exports){
(function(Buffer){
"use strict";

require("core-js/modules/es.array.for-each");

require("core-js/modules/es.object.keys");

require("core-js/modules/es.object.to-string");

require("core-js/modules/es.regexp.to-string");

require("core-js/modules/web.dom-collections.for-each");

exports.encodeCallback=function encodeCallback(reqParams,options){
reqParams.headers=reqParams.headers||{};

if(!Object.prototype.hasOwnProperty.call(reqParams.headers,'x-oss-callback')){
if(options.callback){
var json={
callbackUrl:encodeURI(options.callback.url),
callbackBody:options.callback.body};


if(options.callback.host){
json.callbackHost=options.callback.host;
}

if(options.callback.contentType){
json.callbackBodyType=options.callback.contentType;
}

var callback=Buffer.from(JSON.stringify(json)).toString('base64');
reqParams.headers['x-oss-callback']=callback;

if(options.callback.customValue){
var callbackVar={};
Object.keys(options.callback.customValue).forEach(function(key){
callbackVar["x:".concat(key)]=options.callback.customValue[key];
});
reqParams.headers['x-oss-callback-var']=Buffer.from(JSON.stringify(callbackVar)).toString('base64');
}
}
}
};

}).call(this,require("buffer").Buffer);
},{"buffer":99,"core-js/modules/es.array.for-each":238,"core-js/modules/es.object.keys":253,"core-js/modules/es.object.to-string":254,"core-js/modules/es.regexp.to-string":257,"core-js/modules/web.dom-collections.for-each":291}],24:[function(require,module,exports){
"use strict";

require("core-js/modules/es.array.concat");

require("core-js/modules/es.array.for-each");

require("core-js/modules/es.regexp.exec");

require("core-js/modules/es.string.replace");

require("core-js/modules/web.dom-collections.for-each");

var __importDefault=void 0&&(void 0).__importDefault||function(mod){
return mod&&mod.__esModule?mod:{
"default":mod};

};

Object.defineProperty(exports,"__esModule",{
value:true});

exports.getReqUrl=void 0;

var copy_to_1=__importDefault(require("copy-to"));

var url_1=__importDefault(require("url"));

var merge_descriptors_1=__importDefault(require("merge-descriptors"));

var is_type_of_1=__importDefault(require("is-type-of"));

var isIP_1=require("../utils/isIP");

var checkConfigValid_1=require("../utils/checkConfigValid");

function getReqUrl(params){
var ep={};
var isCname=this.options.cname;
checkConfigValid_1.checkConfigValid(this.options.endpoint,'endpoint');
copy_to_1.default(this.options.endpoint,false).to(ep);

if(params.bucket&&!isCname&&!isIP_1.isIP(ep.hostname)&&!this.options.sldEnable){
ep.host="".concat(params.bucket,".").concat(ep.host);
}

var resourcePath='/';

if(params.bucket&&this.options.sldEnable){
resourcePath+="".concat(params.bucket,"/");
}

if(params.object){
// Preserve '/' in result url
resourcePath+=this._escape(params.object).replace(/\+/g,'%2B');
}

ep.pathname=resourcePath;
var query={};

if(params.query){
merge_descriptors_1.default(query,params.query);
}

if(params.subres){
var subresAsQuery={};

if(is_type_of_1.default.string(params.subres)){
subresAsQuery[params.subres]='';
}else if(is_type_of_1.default.array(params.subres)){
params.subres.forEach(function(k){
subresAsQuery[k]='';
});
}else{
subresAsQuery=params.subres;
}

merge_descriptors_1.default(query,subresAsQuery);
}

ep.query=query;
return url_1.default.format(ep);
}

exports.getReqUrl=getReqUrl;

},{"../utils/checkConfigValid":49,"../utils/isIP":64,"copy-to":101,"core-js/modules/es.array.concat":234,"core-js/modules/es.array.for-each":238,"core-js/modules/es.regexp.exec":256,"core-js/modules/es.string.replace":261,"core-js/modules/web.dom-collections.for-each":291,"is-type-of":391,"merge-descriptors":310,"url":393}],25:[function(require,module,exports){
"use strict";

require("core-js/modules/es.array.concat");

require("core-js/modules/es.object.assign");

require("core-js/modules/es.string.trim");

var ms=require('humanize-ms');

var urlutil=require('url');

var _require=require('../utils/checkBucketName'),
_checkBucketName=_require.checkBucketName;

var _require2=require('../utils/setRegion'),
setRegion=_require2.setRegion;

var _require3=require('../utils/checkConfigValid'),
checkConfigValid=_require3.checkConfigValid;

function setEndpoint(endpoint,secure){
checkConfigValid(endpoint,'endpoint');
var url=urlutil.parse(endpoint);

if(!url.protocol){
url=urlutil.parse("http".concat(secure?'s':'',"://").concat(endpoint));
}

if(url.protocol!=='http:'&&url.protocol!=='https:'){
throw new Error('Endpoint protocol must be http or https.');
}

return url;
}

module.exports=function(options){
if(!options||!options.accessKeyId||!options.accessKeySecret){
throw new Error('require accessKeyId, accessKeySecret');
}

if(options.stsToken&&!options.refreshSTSToken&&!options.refreshSTSTokenInterval){
console.warn("It's recommended to set 'refreshSTSToken' and 'refreshSTSTokenInterval' to refresh"+' stsToken、accessKeyId、accessKeySecret automatically when sts token has expired');
}

if(options.bucket){
_checkBucketName(options.bucket);
}

var opts=Object.assign({
region:'oss-cn-hangzhou',
internal:false,
secure:false,
timeout:60000,
bucket:null,
endpoint:null,
cname:false,
isRequestPay:false,
sldEnable:false,
headerEncoding:'utf-8',
refreshSTSToken:null,
refreshSTSTokenInterval:60000*5,
retryMax:0},
options);
opts.accessKeyId=opts.accessKeyId.trim();
opts.accessKeySecret=opts.accessKeySecret.trim();

if(opts.timeout){
opts.timeout=ms(opts.timeout);
}

if(opts.endpoint){
opts.endpoint=setEndpoint(opts.endpoint,opts.secure);
}else if(opts.region){
opts.endpoint=setRegion(opts.region,opts.internal,opts.secure);
}else{
throw new Error('require options.endpoint or options.region');
}

opts.inited=true;
return opts;
};

},{"../utils/checkBucketName":48,"../utils/checkConfigValid":49,"../utils/setRegion":69,"core-js/modules/es.array.concat":234,"core-js/modules/es.object.assign":251,"core-js/modules/es.string.trim":264,"humanize-ms":298,"url":393}],26:[function(require,module,exports){
"use strict";

var merge=require('merge-descriptors');

var proto=exports;
merge(proto,require('./processObjectSave'));

},{"./processObjectSave":27,"merge-descriptors":310}],27:[function(require,module,exports){
"use strict";

var _interopRequireDefault=require("@babel/runtime/helpers/interopRequireDefault");

require("core-js/modules/es.array.concat");

var _regenerator=_interopRequireDefault(require("@babel/runtime/regenerator"));

require("regenerator-runtime/runtime");

var _asyncToGenerator2=_interopRequireDefault(require("@babel/runtime/helpers/asyncToGenerator"));

/* eslint-disable no-use-before-define */
var _require=require('../utils/checkBucketName'),
_checkBucketName=_require.checkBucketName;

var querystring=require('querystring');

var _require2=require('js-base64'),
str2Base64=_require2.Base64.encode;

var proto=exports;

proto.processObjectSave=/*#__PURE__*/function(){
var _processObjectSave=(0,_asyncToGenerator2.default)(/*#__PURE__*/_regenerator.default.mark(function _callee(sourceObject,targetObject,process,targetBucket){
var params,bucketParam,content,result;
return _regenerator.default.wrap(function _callee$(_context){
while(1){
switch(_context.prev=_context.next){
case 0:
checkArgs(sourceObject,'sourceObject');
checkArgs(targetObject,'targetObject');
checkArgs(process,'process');
targetObject=this._objectName(targetObject);

if(targetBucket){
_checkBucketName(targetBucket);
}

params=this._objectRequestParams('POST',sourceObject,{
subres:'x-oss-process'});

bucketParam=targetBucket?",b_".concat(str2Base64(targetBucket)):'';
targetObject=str2Base64(targetObject);
content={
'x-oss-process':"".concat(process,"|sys/saveas,o_").concat(targetObject).concat(bucketParam)};

params.content=querystring.stringify(content);
_context.next=12;
return this.request(params);

case 12:
result=_context.sent;
return _context.abrupt("return",{
res:result.res,
status:result.res.status});


case 14:
case"end":
return _context.stop();}

}
},_callee,this);
}));

function processObjectSave(_x,_x2,_x3,_x4){
return _processObjectSave.apply(this,arguments);
}

return processObjectSave;
}();

function checkArgs(name,key){
if(!name){
throw new Error("".concat(key," is required"));
}

if(typeof name!=='string'){
throw new Error("".concat(key," must be String"));
}
}

},{"../utils/checkBucketName":48,"@babel/runtime/helpers/asyncToGenerator":71,"@babel/runtime/helpers/interopRequireDefault":72,"@babel/runtime/regenerator":75,"core-js/modules/es.array.concat":234,"js-base64":309,"querystring":322,"regenerator-runtime/runtime":336}],28:[function(require,module,exports){
(function(process){
"use strict";

var _interopRequireDefault=require("@babel/runtime/helpers/interopRequireDefault");

require("core-js/modules/es.array.concat");

require("core-js/modules/es.array.filter");

require("core-js/modules/es.array.map");

require("core-js/modules/es.array.sort");

require("core-js/modules/es.object.to-string");

require("core-js/modules/es.regexp.to-string");

var _regenerator=_interopRequireDefault(require("@babel/runtime/regenerator"));

require("regenerator-runtime/runtime");

var _asyncToGenerator2=_interopRequireDefault(require("@babel/runtime/helpers/asyncToGenerator"));

var copy=require('copy-to');

var callback=require('./callback');

var _require=require('./utils/deepCopy'),
deepCopyWith=_require.deepCopyWith;

var _require2=require('./utils/isBuffer'),
isBuffer=_require2.isBuffer;

var proto=exports;
/**
 * List the on-going multipart uploads
 * https://help.aliyun.com/document_detail/31997.html
 * @param {Object} options
 * @return {Array} the multipart uploads
 */

proto.listUploads=/*#__PURE__*/function(){
var _listUploads=(0,_asyncToGenerator2.default)(/*#__PURE__*/_regenerator.default.mark(function _callee(query,options){
var opt,params,result,uploads;
return _regenerator.default.wrap(function _callee$(_context){
while(1){
switch(_context.prev=_context.next){
case 0:
options=options||{};
opt={};
copy(options).to(opt);
opt.subres='uploads';
params=this._objectRequestParams('GET','',opt);
params.query=query;
params.xmlResponse=true;
params.successStatuses=[200];
_context.next=10;
return this.request(params);

case 10:
result=_context.sent;
uploads=result.data.Upload||[];

if(!Array.isArray(uploads)){
uploads=[uploads];
}

uploads=uploads.map(function(up){
return{
name:up.Key,
uploadId:up.UploadId,
initiated:up.Initiated};

});
return _context.abrupt("return",{
res:result.res,
uploads:uploads,
bucket:result.data.Bucket,
nextKeyMarker:result.data.NextKeyMarker,
nextUploadIdMarker:result.data.NextUploadIdMarker,
isTruncated:result.data.IsTruncated==='true'});


case 15:
case"end":
return _context.stop();}

}
},_callee,this);
}));

function listUploads(_x,_x2){
return _listUploads.apply(this,arguments);
}

return listUploads;
}();
/**
 * List the done uploadPart parts
 * @param {String} name object name
 * @param {String} uploadId multipart upload id
 * @param {Object} query
 * {Number} query.max-parts The maximum part number in the response of the OSS. Default value: 1000
 * {Number} query.part-number-marker Starting position of a specific list.
 * {String} query.encoding-type Specify the encoding of the returned content and the encoding type.
 * @param {Object} options
 * @return {Object} result
 */


proto.listParts=/*#__PURE__*/function(){
var _listParts=(0,_asyncToGenerator2.default)(/*#__PURE__*/_regenerator.default.mark(function _callee2(name,uploadId,query,options){
var opt,params,result;
return _regenerator.default.wrap(function _callee2$(_context2){
while(1){
switch(_context2.prev=_context2.next){
case 0:
options=options||{};
opt={};
copy(options).to(opt);
opt.subres={
uploadId:uploadId};

params=this._objectRequestParams('GET',name,opt);
params.query=query;
params.xmlResponse=true;
params.successStatuses=[200];
_context2.next=10;
return this.request(params);

case 10:
result=_context2.sent;
return _context2.abrupt("return",{
res:result.res,
uploadId:result.data.UploadId,
bucket:result.data.Bucket,
name:result.data.Key,
partNumberMarker:result.data.PartNumberMarker,
nextPartNumberMarker:result.data.NextPartNumberMarker,
maxParts:result.data.MaxParts,
isTruncated:result.data.IsTruncated,
parts:result.data.Part||[]});


case 12:
case"end":
return _context2.stop();}

}
},_callee2,this);
}));

function listParts(_x3,_x4,_x5,_x6){
return _listParts.apply(this,arguments);
}

return listParts;
}();
/**
 * Abort a multipart upload transaction
 * @param {String} name the object name
 * @param {String} uploadId the upload id
 * @param {Object} options
 */


proto.abortMultipartUpload=/*#__PURE__*/function(){
var _abortMultipartUpload=(0,_asyncToGenerator2.default)(/*#__PURE__*/_regenerator.default.mark(function _callee3(name,uploadId,options){
var opt,params,result;
return _regenerator.default.wrap(function _callee3$(_context3){
while(1){
switch(_context3.prev=_context3.next){
case 0:
this._stop();

options=options||{};
opt={};
copy(options).to(opt);
opt.subres={
uploadId:uploadId};

params=this._objectRequestParams('DELETE',name,opt);
params.successStatuses=[204];
_context3.next=9;
return this.request(params);

case 9:
result=_context3.sent;
return _context3.abrupt("return",{
res:result.res});


case 11:
case"end":
return _context3.stop();}

}
},_callee3,this);
}));

function abortMultipartUpload(_x7,_x8,_x9){
return _abortMultipartUpload.apply(this,arguments);
}

return abortMultipartUpload;
}();
/**
 * Initiate a multipart upload transaction
 * @param {String} name the object name
 * @param {Object} options
 * @return {String} upload id
 */


proto.initMultipartUpload=/*#__PURE__*/function(){
var _initMultipartUpload=(0,_asyncToGenerator2.default)(/*#__PURE__*/_regenerator.default.mark(function _callee4(name,options){
var opt,params,result;
return _regenerator.default.wrap(function _callee4$(_context4){
while(1){
switch(_context4.prev=_context4.next){
case 0:
options=options||{};
opt={};
copy(options).to(opt);
opt.headers=opt.headers||{};

this._convertMetaToHeaders(options.meta,opt.headers);

opt.subres='uploads';
params=this._objectRequestParams('POST',name,opt);
params.mime=options.mime;
params.xmlResponse=true;
params.successStatuses=[200];
_context4.next=12;
return this.request(params);

case 12:
result=_context4.sent;
return _context4.abrupt("return",{
res:result.res,
bucket:result.data.Bucket,
name:result.data.Key,
uploadId:result.data.UploadId});


case 14:
case"end":
return _context4.stop();}

}
},_callee4,this);
}));

function initMultipartUpload(_x10,_x11){
return _initMultipartUpload.apply(this,arguments);
}

return initMultipartUpload;
}();
/**
 * Upload a part in a multipart upload transaction
 * @param {String} name the object name
 * @param {String} uploadId the upload id
 * @param {Integer} partNo the part number
 * @param {File} file upload File, whole File
 * @param {Integer} start  part start bytes  e.g: 102400
 * @param {Integer} end  part end bytes  e.g: 204800
 * @param {Object} options
 */


proto.uploadPart=/*#__PURE__*/function(){
var _uploadPart2=(0,_asyncToGenerator2.default)(/*#__PURE__*/_regenerator.default.mark(function _callee5(name,uploadId,partNo,file,start,end,options){
var data,isBrowserEnv;
return _regenerator.default.wrap(function _callee5$(_context5){
while(1){
switch(_context5.prev=_context5.next){
case 0:
data={
size:end-start};

isBrowserEnv=process&&process.browser;

if(!isBrowserEnv){
_context5.next=8;
break;
}

_context5.next=5;
return this._createBuffer(file,start,end);

case 5:
data.content=_context5.sent;
_context5.next=11;
break;

case 8:
_context5.next=10;
return this._createStream(file,start,end);

case 10:
data.stream=_context5.sent;

case 11:
_context5.next=13;
return this._uploadPart(name,uploadId,partNo,data,options);

case 13:
return _context5.abrupt("return",_context5.sent);

case 14:
case"end":
return _context5.stop();}

}
},_callee5,this);
}));

function uploadPart(_x12,_x13,_x14,_x15,_x16,_x17,_x18){
return _uploadPart2.apply(this,arguments);
}

return uploadPart;
}();
/**
 * Complete a multipart upload transaction
 * @param {String} name the object name
 * @param {String} uploadId the upload id
 * @param {Array} parts the uploaded parts, each in the structure:
 *        {Integer} number partNo
 *        {String} etag  part etag  uploadPartCopy result.res.header.etag
 * @param {Object} options
 *         {Object} options.callback The callback parameter is composed of a JSON string encoded in Base64
 *         {String} options.callback.url  the OSS sends a callback request to this URL
 *         {String} options.callback.host  The host header value for initiating callback requests
 *         {String} options.callback.body  The value of the request body when a callback is initiated
 *         {String} options.callback.contentType  The Content-Type of the callback requests initiatiated
 *         {Object} options.callback.customValue  Custom parameters are a map of key-values, e.g:
 *                   customValue = {
 *                     key1: 'value1',
 *                     key2: 'value2'
 *                   }
 */


proto.completeMultipartUpload=/*#__PURE__*/function(){
var _completeMultipartUpload=(0,_asyncToGenerator2.default)(/*#__PURE__*/_regenerator.default.mark(function _callee6(name,uploadId,parts,options){
var completeParts,xml,i,p,opt,params,result,ret;
return _regenerator.default.wrap(function _callee6$(_context6){
while(1){
switch(_context6.prev=_context6.next){
case 0:
completeParts=parts.concat().sort(function(a,b){
return a.number-b.number;
}).filter(function(item,index,arr){
return!index||item.number!==arr[index-1].number;
});
xml='<?xml version="1.0" encoding="UTF-8"?>\n<CompleteMultipartUpload>\n';

for(i=0;i<completeParts.length;i++){
p=completeParts[i];
xml+='<Part>\n';
xml+="<PartNumber>".concat(p.number,"</PartNumber>\n");
xml+="<ETag>".concat(p.etag,"</ETag>\n");
xml+='</Part>\n';
}

xml+='</CompleteMultipartUpload>';
options=options||{};
opt={};
opt=deepCopyWith(options,function(_){
if(isBuffer(_))return null;
});
if(opt.headers)delete opt.headers['x-oss-server-side-encryption'];
opt.subres={
uploadId:uploadId};

params=this._objectRequestParams('POST',name,opt);
callback.encodeCallback(params,opt);
params.mime='xml';
params.content=xml;

if(!(params.headers&&params.headers['x-oss-callback'])){
params.xmlResponse=true;
}

params.successStatuses=[200];
_context6.next=17;
return this.request(params);

case 17:
result=_context6.sent;
ret={
res:result.res,
bucket:params.bucket,
name:name,
etag:result.res.headers.etag};


if(params.headers&&params.headers['x-oss-callback']){
ret.data=JSON.parse(result.data.toString());
}

return _context6.abrupt("return",ret);

case 21:
case"end":
return _context6.stop();}

}
},_callee6,this);
}));

function completeMultipartUpload(_x19,_x20,_x21,_x22){
return _completeMultipartUpload.apply(this,arguments);
}

return completeMultipartUpload;
}();
/**
 * Upload a part in a multipart upload transaction
 * @param {String} name the object name
 * @param {String} uploadId the upload id
 * @param {Integer} partNo the part number
 * @param {Object} data the body data
 * @param {Object} options
 */


proto._uploadPart=/*#__PURE__*/function(){
var _uploadPart3=(0,_asyncToGenerator2.default)(/*#__PURE__*/_regenerator.default.mark(function _callee7(name,uploadId,partNo,data,options){
var opt,params,isBrowserEnv,result;
return _regenerator.default.wrap(function _callee7$(_context7){
while(1){
switch(_context7.prev=_context7.next){
case 0:
options=options||{};
opt={};
copy(options).to(opt);
opt.headers={
'Content-Length':data.size};

opt.subres={
partNumber:partNo,
uploadId:uploadId};

params=this._objectRequestParams('PUT',name,opt);
params.mime=opt.mime;
isBrowserEnv=process&&process.browser;
isBrowserEnv?params.content=data.content:params.stream=data.stream;
params.successStatuses=[200];
params.disabledMD5=options.disabledMD5;
_context7.next=13;
return this.request(params);

case 13:
result=_context7.sent;

if(result.res.headers.etag){
_context7.next=16;
break;
}

throw new Error('Please set the etag of expose-headers in OSS \n https://help.aliyun.com/document_detail/32069.html');

case 16:
if(data.stream){
data.stream=null;
params.stream=null;
}

return _context7.abrupt("return",{
name:name,
etag:result.res.headers.etag,
res:result.res});


case 18:
case"end":
return _context7.stop();}

}
},_callee7,this);
}));

function _uploadPart(_x23,_x24,_x25,_x26,_x27){
return _uploadPart3.apply(this,arguments);
}

return _uploadPart;
}();

}).call(this,require('_process'));
},{"./callback":23,"./utils/deepCopy":54,"./utils/isBuffer":61,"@babel/runtime/helpers/asyncToGenerator":71,"@babel/runtime/helpers/interopRequireDefault":72,"@babel/runtime/regenerator":75,"_process":392,"copy-to":101,"core-js/modules/es.array.concat":234,"core-js/modules/es.array.filter":236,"core-js/modules/es.array.map":245,"core-js/modules/es.array.sort":247,"core-js/modules/es.object.to-string":254,"core-js/modules/es.regexp.to-string":257,"regenerator-runtime/runtime":336}],29:[function(require,module,exports){
"use strict";

var _interopRequireDefault=require("@babel/runtime/helpers/interopRequireDefault");

require("core-js/modules/es.array.concat");

require("core-js/modules/es.array.find");

require("core-js/modules/es.array.for-each");

require("core-js/modules/es.array.includes");

require("core-js/modules/es.object.keys");

require("core-js/modules/es.regexp.exec");

require("core-js/modules/es.string.replace");

require("core-js/modules/web.dom-collections.for-each");

var _regenerator=_interopRequireDefault(require("@babel/runtime/regenerator"));

var _typeof2=_interopRequireDefault(require("@babel/runtime/helpers/typeof"));

require("regenerator-runtime/runtime");

var _asyncToGenerator2=_interopRequireDefault(require("@babel/runtime/helpers/asyncToGenerator"));

var _require=require('../utils/checkBucketName'),
_checkBucketName=_require.checkBucketName;

var proto=exports;
var REPLACE_HEDERS=['content-type','content-encoding','content-language','content-disposition','cache-control','expires'];

proto.copy=/*#__PURE__*/function(){
var _copy=(0,_asyncToGenerator2.default)(/*#__PURE__*/_regenerator.default.mark(function _callee(name,sourceName,bucketName,options){
var params,result,data;
return _regenerator.default.wrap(function _callee$(_context){
while(1){
switch(_context.prev=_context.next){
case 0:
if((0,_typeof2.default)(bucketName)==='object'){
options=bucketName;// 兼容旧版本，旧版本第三个参数为options
}

options=options||{};
options.headers=options.headers||{};
Object.keys(options.headers).forEach(function(key){
options.headers["x-oss-copy-source-".concat(key.toLowerCase())]=options.headers[key];
});

if(options.meta||Object.keys(options.headers).find(function(_){
return REPLACE_HEDERS.includes(_.toLowerCase());
})){
options.headers['x-oss-metadata-directive']='REPLACE';
}

this._convertMetaToHeaders(options.meta,options.headers);

sourceName=this._getSourceName(sourceName,bucketName);

if(options.versionId){
sourceName="".concat(sourceName,"?versionId=").concat(options.versionId);
}

options.headers['x-oss-copy-source']=sourceName;
params=this._objectRequestParams('PUT',name,options);
params.xmlResponse=true;
params.successStatuses=[200,304];
_context.next=14;
return this.request(params);

case 14:
result=_context.sent;
data=result.data;

if(data){
data={
etag:data.ETag,
lastModified:data.LastModified};

}

return _context.abrupt("return",{
data:data,
res:result.res});


case 18:
case"end":
return _context.stop();}

}
},_callee,this);
}));

function copy(_x,_x2,_x3,_x4){
return _copy.apply(this,arguments);
}

return copy;
}();// todo delete


proto._getSourceName=function _getSourceName(sourceName,bucketName){
if(typeof bucketName==='string'){
sourceName=this._objectName(sourceName);
}else if(sourceName[0]!=='/'){
bucketName=this.options.bucket;
}else{
bucketName=sourceName.replace(/\/(.+?)(\/.*)/,'$1');
sourceName=sourceName.replace(/(\/.+?\/)(.*)/,'$2');
}

_checkBucketName(bucketName);

sourceName=encodeURIComponent(sourceName);
sourceName="/".concat(bucketName,"/").concat(sourceName);
return sourceName;
};

},{"../utils/checkBucketName":48,"@babel/runtime/helpers/asyncToGenerator":71,"@babel/runtime/helpers/interopRequireDefault":72,"@babel/runtime/helpers/typeof":73,"@babel/runtime/regenerator":75,"core-js/modules/es.array.concat":234,"core-js/modules/es.array.find":237,"core-js/modules/es.array.for-each":238,"core-js/modules/es.array.includes":240,"core-js/modules/es.object.keys":253,"core-js/modules/es.regexp.exec":256,"core-js/modules/es.string.replace":261,"core-js/modules/web.dom-collections.for-each":291,"regenerator-runtime/runtime":336}],30:[function(require,module,exports){
"use strict";

var _interopRequireDefault=require("@babel/runtime/helpers/interopRequireDefault");

require("core-js/modules/es.object.assign");

var _regenerator=_interopRequireDefault(require("@babel/runtime/regenerator"));

require("regenerator-runtime/runtime");

var _asyncToGenerator2=_interopRequireDefault(require("@babel/runtime/helpers/asyncToGenerator"));

var proto=exports;
/**
 * delete
 * @param {String} name - object name
 * @param {Object} options
 * @param {{res}}
 */

proto.delete=/*#__PURE__*/function(){
var _delete2=(0,_asyncToGenerator2.default)(/*#__PURE__*/_regenerator.default.mark(function _callee(name){
var options,
params,
result,
_args=arguments;
return _regenerator.default.wrap(function _callee$(_context){
while(1){
switch(_context.prev=_context.next){
case 0:
options=_args.length>1&&_args[1]!==undefined?_args[1]:{};
options.subres=Object.assign({},options.subres);

if(options.versionId){
options.subres.versionId=options.versionId;
}

params=this._objectRequestParams('DELETE',name,options);
params.successStatuses=[204];
_context.next=7;
return this.request(params);

case 7:
result=_context.sent;
return _context.abrupt("return",{
res:result.res});


case 9:
case"end":
return _context.stop();}

}
},_callee,this);
}));

function _delete(_x){
return _delete2.apply(this,arguments);
}

return _delete;
}();

},{"@babel/runtime/helpers/asyncToGenerator":71,"@babel/runtime/helpers/interopRequireDefault":72,"@babel/runtime/regenerator":75,"core-js/modules/es.object.assign":251,"regenerator-runtime/runtime":336}],31:[function(require,module,exports){
"use strict";

var _interopRequireDefault=require("@babel/runtime/helpers/interopRequireDefault");

require("core-js/modules/es.object.assign");

var _regenerator=_interopRequireDefault(require("@babel/runtime/regenerator"));

require("regenerator-runtime/runtime");

var _asyncToGenerator2=_interopRequireDefault(require("@babel/runtime/helpers/asyncToGenerator"));

/* eslint-disable object-curly-newline */
var utility=require('utility');

var _require=require('../utils/obj2xml'),
obj2xml=_require.obj2xml;

var proto=exports;

proto.deleteMulti=/*#__PURE__*/function(){
var _deleteMulti=(0,_asyncToGenerator2.default)(/*#__PURE__*/_regenerator.default.mark(function _callee(names){
var options,
objects,
i,
object,
_names$i,
key,
versionId,
paramXMLObj,
paramXML,
params,
result,
r,
deleted,
_args=arguments;

return _regenerator.default.wrap(function _callee$(_context){
while(1){
switch(_context.prev=_context.next){
case 0:
options=_args.length>1&&_args[1]!==undefined?_args[1]:{};
objects=[];

if(!(!names||!names.length)){
_context.next=4;
break;
}

throw new Error('names is required');

case 4:
for(i=0;i<names.length;i++){
object={};

if(typeof names[i]==='string'){
object.Key=utility.escape(this._objectName(names[i]));
}else{
_names$i=names[i],key=_names$i.key,versionId=_names$i.versionId;
object.Key=utility.escape(this._objectName(key));
object.VersionId=versionId;
}

objects.push(object);
}

paramXMLObj={
Delete:{
Quiet:!!options.quiet,
Object:objects}};


paramXML=obj2xml(paramXMLObj,{
headers:true});

options.subres=Object.assign({
delete:''},
options.subres);

if(options.versionId){
options.subres.versionId=options.versionId;
}

params=this._objectRequestParams('POST','',options);
params.mime='xml';
params.content=paramXML;
params.xmlResponse=true;
params.successStatuses=[200];
_context.next=16;
return this.request(params);

case 16:
result=_context.sent;
r=result.data;
deleted=r&&r.Deleted||null;

if(deleted){
if(!Array.isArray(deleted)){
deleted=[deleted];
}
}

return _context.abrupt("return",{
res:result.res,
deleted:deleted||[]});


case 21:
case"end":
return _context.stop();}

}
},_callee,this);
}));

function deleteMulti(_x){
return _deleteMulti.apply(this,arguments);
}

return deleteMulti;
}();

},{"../utils/obj2xml":67,"@babel/runtime/helpers/asyncToGenerator":71,"@babel/runtime/helpers/interopRequireDefault":72,"@babel/runtime/regenerator":75,"core-js/modules/es.object.assign":251,"regenerator-runtime/runtime":336,"utility":395}],32:[function(require,module,exports){
"use strict";

var _interopRequireDefault=require("@babel/runtime/helpers/interopRequireDefault");

require("core-js/modules/es.object.assign");

var _regenerator=_interopRequireDefault(require("@babel/runtime/regenerator"));

require("regenerator-runtime/runtime");

var _asyncToGenerator2=_interopRequireDefault(require("@babel/runtime/helpers/asyncToGenerator"));

var proto=exports;
/**
 * deleteObjectTagging
 * @param {String} name - object name
 * @param {Object} options
 */

proto.deleteObjectTagging=/*#__PURE__*/function(){
var _deleteObjectTagging=(0,_asyncToGenerator2.default)(/*#__PURE__*/_regenerator.default.mark(function _callee(name){
var options,
params,
result,
_args=arguments;
return _regenerator.default.wrap(function _callee$(_context){
while(1){
switch(_context.prev=_context.next){
case 0:
options=_args.length>1&&_args[1]!==undefined?_args[1]:{};
options.subres=Object.assign({
tagging:''},
options.subres);

if(options.versionId){
options.subres.versionId=options.versionId;
}

name=this._objectName(name);
params=this._objectRequestParams('DELETE',name,options);
params.successStatuses=[204];
_context.next=8;
return this.request(params);

case 8:
result=_context.sent;
return _context.abrupt("return",{
status:result.status,
res:result.res});


case 10:
case"end":
return _context.stop();}

}
},_callee,this);
}));

function deleteObjectTagging(_x){
return _deleteObjectTagging.apply(this,arguments);
}

return deleteObjectTagging;
}();

},{"@babel/runtime/helpers/asyncToGenerator":71,"@babel/runtime/helpers/interopRequireDefault":72,"@babel/runtime/regenerator":75,"core-js/modules/es.object.assign":251,"regenerator-runtime/runtime":336}],33:[function(require,module,exports){
"use strict";

require("core-js/modules/es.array.concat");

var urlutil=require('url');

var _require=require('../utils/isIP'),
isIP=_require.isIP;

var proto=exports;
/**
 * Get Object url by name
 * @param {String} name - object name
 * @param {String} [baseUrl] - If provide `baseUrl`, will use `baseUrl` instead the default `endpoint and bucket`.
 * @return {String} object url include bucket
 */

proto.generateObjectUrl=function generateObjectUrl(name,baseUrl){
if(isIP(this.options.endpoint.hostname)){
throw new Error('can not get the object URL when endpoint is IP');
}

if(!baseUrl){
baseUrl=this.options.endpoint.format();
var copyUrl=urlutil.parse(baseUrl);
var bucket=this.options.bucket;
copyUrl.hostname="".concat(bucket,".").concat(copyUrl.hostname);
copyUrl.host="".concat(bucket,".").concat(copyUrl.host);
baseUrl=copyUrl.format();
}else if(baseUrl[baseUrl.length-1]!=='/'){
baseUrl+='/';
}

return baseUrl+this._escape(this._objectName(name));
};

},{"../utils/isIP":64,"core-js/modules/es.array.concat":234,"url":393}],34:[function(require,module,exports){
(function(process){
"use strict";

var _interopRequireDefault=require("@babel/runtime/helpers/interopRequireDefault");

require("core-js/modules/es.object.assign");

var _regenerator=_interopRequireDefault(require("@babel/runtime/regenerator"));

require("regenerator-runtime/runtime");

var _asyncToGenerator2=_interopRequireDefault(require("@babel/runtime/helpers/asyncToGenerator"));

var fs=require('fs');

var is=require('is-type-of');

var proto=exports;
/**
 * get
 * @param {String} name - object name
 * @param {String | Stream} file
 * @param {Object} options
 * @param {{res}}
 */

proto.get=/*#__PURE__*/function(){
var _get=(0,_asyncToGenerator2.default)(/*#__PURE__*/_regenerator.default.mark(function _callee(name,file){
var options,
writeStream,
needDestroy,
isBrowserEnv,
responseCacheControl,
defaultSubresOptions,
result,
params,
_args=arguments;
return _regenerator.default.wrap(function _callee$(_context){
while(1){
switch(_context.prev=_context.next){
case 0:
options=_args.length>2&&_args[2]!==undefined?_args[2]:{};
writeStream=null;
needDestroy=false;

if(is.writableStream(file)){
writeStream=file;
}else if(is.string(file)){
writeStream=fs.createWriteStream(file);
needDestroy=true;
}else{
// get(name, options)
options=file;
}

options=options||{};
isBrowserEnv=process&&process.browser;
responseCacheControl=options.responseCacheControl===null?'':'no-cache';
defaultSubresOptions=isBrowserEnv&&responseCacheControl?{
'response-cache-control':responseCacheControl}:
{};
options.subres=Object.assign(defaultSubresOptions,options.subres);

if(options.versionId){
options.subres.versionId=options.versionId;
}

if(options.process){
options.subres['x-oss-process']=options.process;
}

_context.prev=11;
params=this._objectRequestParams('GET',name,options);
params.writeStream=writeStream;
params.successStatuses=[200,206,304];
_context.next=17;
return this.request(params);

case 17:
result=_context.sent;

if(needDestroy){
writeStream.destroy();
}

_context.next=28;
break;

case 21:
_context.prev=21;
_context.t0=_context["catch"](11);

if(!needDestroy){
_context.next=27;
break;
}

writeStream.destroy();// should delete the exists file before throw error

_context.next=27;
return this._deleteFileSafe(file);

case 27:
throw _context.t0;

case 28:
return _context.abrupt("return",{
res:result.res,
content:result.data});


case 29:
case"end":
return _context.stop();}

}
},_callee,this,[[11,21]]);
}));

function get(_x,_x2){
return _get.apply(this,arguments);
}

return get;
}();

}).call(this,require('_process'));
},{"@babel/runtime/helpers/asyncToGenerator":71,"@babel/runtime/helpers/interopRequireDefault":72,"@babel/runtime/regenerator":75,"_process":392,"core-js/modules/es.object.assign":251,"fs":79,"is-type-of":391,"regenerator-runtime/runtime":336}],35:[function(require,module,exports){
"use strict";

var _interopRequireDefault=require("@babel/runtime/helpers/interopRequireDefault");

require("core-js/modules/es.object.assign");

var _regenerator=_interopRequireDefault(require("@babel/runtime/regenerator"));

require("regenerator-runtime/runtime");

var _asyncToGenerator2=_interopRequireDefault(require("@babel/runtime/helpers/asyncToGenerator"));

var proto=exports;
/*
 * Get object's ACL
 * @param {String} name the object key
 * @param {Object} options
 * @return {Object}
 */

proto.getACL=/*#__PURE__*/function(){
var _getACL=(0,_asyncToGenerator2.default)(/*#__PURE__*/_regenerator.default.mark(function _callee(name){
var options,
params,
result,
_args=arguments;
return _regenerator.default.wrap(function _callee$(_context){
while(1){
switch(_context.prev=_context.next){
case 0:
options=_args.length>1&&_args[1]!==undefined?_args[1]:{};
options.subres=Object.assign({
acl:''},
options.subres);

if(options.versionId){
options.subres.versionId=options.versionId;
}

name=this._objectName(name);
params=this._objectRequestParams('GET',name,options);
params.successStatuses=[200];
params.xmlResponse=true;
_context.next=9;
return this.request(params);

case 9:
result=_context.sent;
return _context.abrupt("return",{
acl:result.data.AccessControlList.Grant,
owner:{
id:result.data.Owner.ID,
displayName:result.data.Owner.DisplayName},

res:result.res});


case 11:
case"end":
return _context.stop();}

}
},_callee,this);
}));

function getACL(_x){
return _getACL.apply(this,arguments);
}

return getACL;
}();

},{"@babel/runtime/helpers/asyncToGenerator":71,"@babel/runtime/helpers/interopRequireDefault":72,"@babel/runtime/regenerator":75,"core-js/modules/es.object.assign":251,"regenerator-runtime/runtime":336}],36:[function(require,module,exports){
"use strict";

var _interopRequireDefault=require("@babel/runtime/helpers/interopRequireDefault");

require("core-js/modules/es.array.for-each");

require("core-js/modules/es.array.map");

require("core-js/modules/es.number.constructor");

require("core-js/modules/es.object.assign");

require("core-js/modules/es.object.keys");

require("core-js/modules/es.regexp.exec");

require("core-js/modules/es.string.replace");

require("core-js/modules/web.dom-collections.for-each");

var _regenerator=_interopRequireDefault(require("@babel/runtime/regenerator"));

require("regenerator-runtime/runtime");

var _asyncToGenerator2=_interopRequireDefault(require("@babel/runtime/helpers/asyncToGenerator"));

/* eslint-disable no-use-before-define */
var proto=exports;

var _require=require('../utils/isObject'),
isObject=_require.isObject;

var _require2=require('../utils/isArray'),
isArray=_require2.isArray;

proto.getBucketVersions=getBucketVersions;
proto.listObjectVersions=getBucketVersions;

function getBucketVersions(){
return _getBucketVersions.apply(this,arguments);
}

function _getBucketVersions(){
_getBucketVersions=(0,_asyncToGenerator2.default)(/*#__PURE__*/_regenerator.default.mark(function _callee(){
var query,
options,
params,
result,
objects,
deleteMarker,
that,
prefixes,
_args=arguments;
return _regenerator.default.wrap(function _callee$(_context){
while(1){
switch(_context.prev=_context.next){
case 0:
query=_args.length>0&&_args[0]!==undefined?_args[0]:{};
options=_args.length>1&&_args[1]!==undefined?_args[1]:{};

if(!(query.versionIdMarker&&query.keyMarker===undefined)){
_context.next=4;
break;
}

throw new Error('A version-id marker cannot be specified without a key marker');

case 4:
options.subres=Object.assign({
versions:''},
options.subres);

if(options.versionId){
options.subres.versionId=options.versionId;
}

params=this._objectRequestParams('GET','',options);
params.xmlResponse=true;
params.successStatuses=[200];
params.query=formatQuery(query);
_context.next=12;
return this.request(params);

case 12:
result=_context.sent;
objects=result.data.Version||[];
deleteMarker=result.data.DeleteMarker||[];
that=this;

if(objects){
if(!Array.isArray(objects)){
objects=[objects];
}

objects=objects.map(function(obj){
return{
name:obj.Key,
url:that._objectUrl(obj.Key),
lastModified:obj.LastModified,
isLatest:obj.IsLatest==='true',
versionId:obj.VersionId,
etag:obj.ETag,
type:obj.Type,
size:Number(obj.Size),
storageClass:obj.StorageClass,
owner:{
id:obj.Owner.ID,
displayName:obj.Owner.DisplayName}};


});
}

if(deleteMarker){
if(!isArray(deleteMarker)){
deleteMarker=[deleteMarker];
}

deleteMarker=deleteMarker.map(function(obj){
return{
name:obj.Key,
lastModified:obj.LastModified,
versionId:obj.VersionId,
owner:{
id:obj.Owner.ID,
displayName:obj.Owner.DisplayName}};


});
}

prefixes=result.data.CommonPrefixes||null;

if(prefixes){
if(!isArray(prefixes)){
prefixes=[prefixes];
}

prefixes=prefixes.map(function(item){
return item.Prefix;
});
}

return _context.abrupt("return",{
res:result.res,
objects:objects,
deleteMarker:deleteMarker,
prefixes:prefixes,
// attirbute of legacy error
nextMarker:result.data.NextKeyMarker||null,
// attirbute of legacy error
NextVersionIdMarker:result.data.NextVersionIdMarker||null,
nextKeyMarker:result.data.NextKeyMarker||null,
nextVersionIdMarker:result.data.NextVersionIdMarker||null,
isTruncated:result.data.IsTruncated==='true'});


case 21:
case"end":
return _context.stop();}

}
},_callee,this);
}));
return _getBucketVersions.apply(this,arguments);
}

function camel2Line(name){
return name.replace(/([A-Z])/g,'-$1').toLowerCase();
}

function formatQuery(){
var query=arguments.length>0&&arguments[0]!==undefined?arguments[0]:{};
var obj={};

if(isObject(query)){
Object.keys(query).forEach(function(key){
obj[camel2Line(key)]=query[key];
});
}

return obj;
}

},{"../utils/isArray":59,"../utils/isObject":65,"@babel/runtime/helpers/asyncToGenerator":71,"@babel/runtime/helpers/interopRequireDefault":72,"@babel/runtime/regenerator":75,"core-js/modules/es.array.for-each":238,"core-js/modules/es.array.map":245,"core-js/modules/es.number.constructor":250,"core-js/modules/es.object.assign":251,"core-js/modules/es.object.keys":253,"core-js/modules/es.regexp.exec":256,"core-js/modules/es.string.replace":261,"core-js/modules/web.dom-collections.for-each":291,"regenerator-runtime/runtime":336}],37:[function(require,module,exports){
"use strict";

var _interopRequireDefault=require("@babel/runtime/helpers/interopRequireDefault");

require("core-js/modules/es.object.assign");

var _regenerator=_interopRequireDefault(require("@babel/runtime/regenerator"));

require("regenerator-runtime/runtime");

var _asyncToGenerator2=_interopRequireDefault(require("@babel/runtime/helpers/asyncToGenerator"));

var proto=exports;
/**
 * getObjectMeta
 * @param {String} name - object name
 * @param {Object} options
 * @param {{res}}
 */

proto.getObjectMeta=/*#__PURE__*/function(){
var _getObjectMeta=(0,_asyncToGenerator2.default)(/*#__PURE__*/_regenerator.default.mark(function _callee(name,options){
var params,result;
return _regenerator.default.wrap(function _callee$(_context){
while(1){
switch(_context.prev=_context.next){
case 0:
options=options||{};
name=this._objectName(name);
options.subres=Object.assign({
objectMeta:''},
options.subres);

if(options.versionId){
options.subres.versionId=options.versionId;
}

params=this._objectRequestParams('HEAD',name,options);
params.successStatuses=[200];
_context.next=8;
return this.request(params);

case 8:
result=_context.sent;
return _context.abrupt("return",{
status:result.status,
res:result.res});


case 10:
case"end":
return _context.stop();}

}
},_callee,this);
}));

function getObjectMeta(_x,_x2){
return _getObjectMeta.apply(this,arguments);
}

return getObjectMeta;
}();

},{"@babel/runtime/helpers/asyncToGenerator":71,"@babel/runtime/helpers/interopRequireDefault":72,"@babel/runtime/regenerator":75,"core-js/modules/es.object.assign":251,"regenerator-runtime/runtime":336}],38:[function(require,module,exports){
"use strict";

var _interopRequireDefault=require("@babel/runtime/helpers/interopRequireDefault");

require("core-js/modules/es.array.for-each");

require("core-js/modules/es.object.assign");

require("core-js/modules/web.dom-collections.for-each");

var _regenerator=_interopRequireDefault(require("@babel/runtime/regenerator"));

require("regenerator-runtime/runtime");

var _asyncToGenerator2=_interopRequireDefault(require("@babel/runtime/helpers/asyncToGenerator"));

var proto=exports;

var _require=require('../utils/isObject'),
isObject=_require.isObject;
/**
 * getObjectTagging
 * @param {String} name - object name
 * @param {Object} options
 * @return {Object}
 */


proto.getObjectTagging=/*#__PURE__*/function(){
var _getObjectTagging=(0,_asyncToGenerator2.default)(/*#__PURE__*/_regenerator.default.mark(function _callee(name){
var options,
params,
result,
Tagging,
Tag,
tag,
_args=arguments;
return _regenerator.default.wrap(function _callee$(_context){
while(1){
switch(_context.prev=_context.next){
case 0:
options=_args.length>1&&_args[1]!==undefined?_args[1]:{};
options.subres=Object.assign({
tagging:''},
options.subres);

if(options.versionId){
options.subres.versionId=options.versionId;
}

name=this._objectName(name);
params=this._objectRequestParams('GET',name,options);
params.successStatuses=[200];
_context.next=8;
return this.request(params);

case 8:
result=_context.sent;
_context.next=11;
return this.parseXML(result.data);

case 11:
Tagging=_context.sent;
Tag=Tagging.TagSet.Tag;
Tag=Tag&&isObject(Tag)?[Tag]:Tag||[];
tag={};
Tag.forEach(function(item){
tag[item.Key]=item.Value;
});
return _context.abrupt("return",{
status:result.status,
res:result.res,
tag:tag});


case 17:
case"end":
return _context.stop();}

}
},_callee,this);
}));

function getObjectTagging(_x){
return _getObjectTagging.apply(this,arguments);
}

return getObjectTagging;
}();

},{"../utils/isObject":65,"@babel/runtime/helpers/asyncToGenerator":71,"@babel/runtime/helpers/interopRequireDefault":72,"@babel/runtime/regenerator":75,"core-js/modules/es.array.for-each":238,"core-js/modules/es.object.assign":251,"core-js/modules/web.dom-collections.for-each":291,"regenerator-runtime/runtime":336}],39:[function(require,module,exports){
"use strict";

var _require=require('../utils/isIP'),
isIP=_require.isIP;

var proto=exports;
/**
 * Get Object url by name
 * @param {String} name - object name
 * @param {String} [baseUrl] - If provide `baseUrl`,
 *        will use `baseUrl` instead the default `endpoint`.
 * @return {String} object url
 */

proto.getObjectUrl=function getObjectUrl(name,baseUrl){
if(isIP(this.options.endpoint.hostname)){
throw new Error('can not get the object URL when endpoint is IP');
}

if(!baseUrl){
baseUrl=this.options.endpoint.format();
}else if(baseUrl[baseUrl.length-1]!=='/'){
baseUrl+='/';
}

return baseUrl+this._escape(this._objectName(name));
};

},{"../utils/isIP":64}],40:[function(require,module,exports){
"use strict";

var _interopRequireDefault=require("@babel/runtime/helpers/interopRequireDefault");

require("core-js/modules/es.object.assign");

var _regenerator=_interopRequireDefault(require("@babel/runtime/regenerator"));

require("regenerator-runtime/runtime");

var _asyncToGenerator2=_interopRequireDefault(require("@babel/runtime/helpers/asyncToGenerator"));

var proto=exports;
/**
 * getSymlink
 * @param {String} name - object name
 * @param {Object} options
 * @param {{res}}
 */

proto.getSymlink=/*#__PURE__*/function(){
var _getSymlink=(0,_asyncToGenerator2.default)(/*#__PURE__*/_regenerator.default.mark(function _callee(name){
var options,
params,
result,
target,
_args=arguments;
return _regenerator.default.wrap(function _callee$(_context){
while(1){
switch(_context.prev=_context.next){
case 0:
options=_args.length>1&&_args[1]!==undefined?_args[1]:{};
options.subres=Object.assign({
symlink:''},
options.subres);

if(options.versionId){
options.subres.versionId=options.versionId;
}

name=this._objectName(name);
params=this._objectRequestParams('GET',name,options);
params.successStatuses=[200];
_context.next=8;
return this.request(params);

case 8:
result=_context.sent;
target=result.res.headers['x-oss-symlink-target'];
return _context.abrupt("return",{
targetName:decodeURIComponent(target),
res:result.res});


case 11:
case"end":
return _context.stop();}

}
},_callee,this);
}));

function getSymlink(_x){
return _getSymlink.apply(this,arguments);
}

return getSymlink;
}();

},{"@babel/runtime/helpers/asyncToGenerator":71,"@babel/runtime/helpers/interopRequireDefault":72,"@babel/runtime/regenerator":75,"core-js/modules/es.object.assign":251,"regenerator-runtime/runtime":336}],41:[function(require,module,exports){
"use strict";

var _interopRequireDefault=require("@babel/runtime/helpers/interopRequireDefault");

require("core-js/modules/es.array.for-each");

require("core-js/modules/es.array.index-of");

require("core-js/modules/es.object.assign");

require("core-js/modules/es.object.keys");

require("core-js/modules/web.dom-collections.for-each");

var _regenerator=_interopRequireDefault(require("@babel/runtime/regenerator"));

require("regenerator-runtime/runtime");

var _asyncToGenerator2=_interopRequireDefault(require("@babel/runtime/helpers/asyncToGenerator"));

var proto=exports;
/**
 * head
 * @param {String} name - object name
 * @param {Object} options
 * @param {{res}}
 */

proto.head=/*#__PURE__*/function(){
var _head=(0,_asyncToGenerator2.default)(/*#__PURE__*/_regenerator.default.mark(function _callee(name){
var options,
params,
result,
data,
_args=arguments;
return _regenerator.default.wrap(function _callee$(_context){
while(1){
switch(_context.prev=_context.next){
case 0:
options=_args.length>1&&_args[1]!==undefined?_args[1]:{};
options.subres=Object.assign({},options.subres);

if(options.versionId){
options.subres.versionId=options.versionId;
}

params=this._objectRequestParams('HEAD',name,options);
params.successStatuses=[200,304];
_context.next=7;
return this.request(params);

case 7:
result=_context.sent;
data={
meta:null,
res:result.res,
status:result.status};


if(result.status===200){
Object.keys(result.headers).forEach(function(k){
if(k.indexOf('x-oss-meta-')===0){
if(!data.meta){
data.meta={};
}

data.meta[k.substring(11)]=result.headers[k];
}
});
}

return _context.abrupt("return",data);

case 11:
case"end":
return _context.stop();}

}
},_callee,this);
}));

function head(_x){
return _head.apply(this,arguments);
}

return head;
}();

},{"@babel/runtime/helpers/asyncToGenerator":71,"@babel/runtime/helpers/interopRequireDefault":72,"@babel/runtime/regenerator":75,"core-js/modules/es.array.for-each":238,"core-js/modules/es.array.index-of":241,"core-js/modules/es.object.assign":251,"core-js/modules/es.object.keys":253,"core-js/modules/web.dom-collections.for-each":291,"regenerator-runtime/runtime":336}],42:[function(require,module,exports){
"use strict";

var _interopRequireDefault=require("@babel/runtime/helpers/interopRequireDefault");

require("core-js/modules/es.object.assign");

var _regenerator=_interopRequireDefault(require("@babel/runtime/regenerator"));

require("regenerator-runtime/runtime");

var _asyncToGenerator2=_interopRequireDefault(require("@babel/runtime/helpers/asyncToGenerator"));

var proto=exports;
/*
 * Set object's ACL
 * @param {String} name the object key
 * @param {String} acl the object ACL
 * @param {Object} options
 */

proto.putACL=/*#__PURE__*/function(){
var _putACL=(0,_asyncToGenerator2.default)(/*#__PURE__*/_regenerator.default.mark(function _callee(name,acl,options){
var params,result;
return _regenerator.default.wrap(function _callee$(_context){
while(1){
switch(_context.prev=_context.next){
case 0:
options=options||{};
options.subres=Object.assign({
acl:''},
options.subres);

if(options.versionId){
options.subres.versionId=options.versionId;
}

options.headers=options.headers||{};
options.headers['x-oss-object-acl']=acl;
name=this._objectName(name);
params=this._objectRequestParams('PUT',name,options);
params.successStatuses=[200];
_context.next=10;
return this.request(params);

case 10:
result=_context.sent;
return _context.abrupt("return",{
res:result.res});


case 12:
case"end":
return _context.stop();}

}
},_callee,this);
}));

function putACL(_x,_x2,_x3){
return _putACL.apply(this,arguments);
}

return putACL;
}();

},{"@babel/runtime/helpers/asyncToGenerator":71,"@babel/runtime/helpers/interopRequireDefault":72,"@babel/runtime/regenerator":75,"core-js/modules/es.object.assign":251,"regenerator-runtime/runtime":336}],43:[function(require,module,exports){
"use strict";

var _interopRequireDefault=require("@babel/runtime/helpers/interopRequireDefault");

require("core-js/modules/es.array.map");

require("core-js/modules/es.object.assign");

require("core-js/modules/es.object.keys");

var _regenerator=_interopRequireDefault(require("@babel/runtime/regenerator"));

require("regenerator-runtime/runtime");

var _asyncToGenerator2=_interopRequireDefault(require("@babel/runtime/helpers/asyncToGenerator"));

var _require=require('../utils/obj2xml'),
obj2xml=_require.obj2xml;

var _require2=require('../utils/checkObjectTag'),
checkObjectTag=_require2.checkObjectTag;

var proto=exports;
/**
 * putObjectTagging
 * @param {String} name - object name
 * @param {Object} tag -  object tag, eg: `{a: "1", b: "2"}`
 * @param {Object} options
 */

proto.putObjectTagging=/*#__PURE__*/function(){
var _putObjectTagging=(0,_asyncToGenerator2.default)(/*#__PURE__*/_regenerator.default.mark(function _callee(name,tag){
var options,
params,
paramXMLObj,
result,
_args=arguments;
return _regenerator.default.wrap(function _callee$(_context){
while(1){
switch(_context.prev=_context.next){
case 0:
options=_args.length>2&&_args[2]!==undefined?_args[2]:{};
checkObjectTag(tag);
options.subres=Object.assign({
tagging:''},
options.subres);

if(options.versionId){
options.subres.versionId=options.versionId;
}

name=this._objectName(name);
params=this._objectRequestParams('PUT',name,options);
params.successStatuses=[200];
tag=Object.keys(tag).map(function(key){
return{
Key:key,
Value:tag[key]};

});
paramXMLObj={
Tagging:{
TagSet:{
Tag:tag}}};



params.mime='xml';
params.content=obj2xml(paramXMLObj);
_context.next=13;
return this.request(params);

case 13:
result=_context.sent;
return _context.abrupt("return",{
res:result.res,
status:result.status});


case 15:
case"end":
return _context.stop();}

}
},_callee,this);
}));

function putObjectTagging(_x,_x2){
return _putObjectTagging.apply(this,arguments);
}

return putObjectTagging;
}();

},{"../utils/checkObjectTag":50,"../utils/obj2xml":67,"@babel/runtime/helpers/asyncToGenerator":71,"@babel/runtime/helpers/interopRequireDefault":72,"@babel/runtime/regenerator":75,"core-js/modules/es.array.map":245,"core-js/modules/es.object.assign":251,"core-js/modules/es.object.keys":253,"regenerator-runtime/runtime":336}],44:[function(require,module,exports){
"use strict";

var _interopRequireDefault=require("@babel/runtime/helpers/interopRequireDefault");

require("core-js/modules/es.object.assign");

var _regenerator=_interopRequireDefault(require("@babel/runtime/regenerator"));

require("regenerator-runtime/runtime");

var _asyncToGenerator2=_interopRequireDefault(require("@babel/runtime/helpers/asyncToGenerator"));

var proto=exports;
/**
 * putSymlink
 * @param {String} name - object name
 * @param {String} targetName - target name
 * @param {Object} options
 * @param {{res}}
 */

proto.putSymlink=/*#__PURE__*/function(){
var _putSymlink=(0,_asyncToGenerator2.default)(/*#__PURE__*/_regenerator.default.mark(function _callee(name,targetName,options){
var params,result;
return _regenerator.default.wrap(function _callee$(_context){
while(1){
switch(_context.prev=_context.next){
case 0:
options=options||{};
options.headers=options.headers||{};
targetName=this._escape(this._objectName(targetName));

this._convertMetaToHeaders(options.meta,options.headers);

options.headers['x-oss-symlink-target']=targetName;
options.subres=Object.assign({
symlink:''},
options.subres);

if(options.versionId){
options.subres.versionId=options.versionId;
}

if(options.storageClass){
options.headers['x-oss-storage-class']=options.storageClass;
}

name=this._objectName(name);
params=this._objectRequestParams('PUT',name,options);
params.successStatuses=[200];
_context.next=13;
return this.request(params);

case 13:
result=_context.sent;
return _context.abrupt("return",{
res:result.res});


case 15:
case"end":
return _context.stop();}

}
},_callee,this);
}));

function putSymlink(_x,_x2,_x3){
return _putSymlink.apply(this,arguments);
}

return putSymlink;
}();

},{"@babel/runtime/helpers/asyncToGenerator":71,"@babel/runtime/helpers/interopRequireDefault":72,"@babel/runtime/regenerator":75,"core-js/modules/es.object.assign":251,"regenerator-runtime/runtime":336}],45:[function(require,module,exports){
"use strict";

var urlutil=require('url');

var utility=require('utility');

var copy=require('copy-to');

var signHelper=require('../../common/signUtils');

var _require=require('../utils/isIP'),
isIP=_require.isIP;

var proto=exports;

proto.signatureUrl=function signatureUrl(name,options){
if(isIP(this.options.endpoint.hostname)){
throw new Error('can not get the object URL when endpoint is IP');
}

options=options||{};
name=this._objectName(name);
options.method=options.method||'GET';
var expires=utility.timestamp()+(options.expires||1800);
var params={
bucket:this.options.bucket,
object:name};


var resource=this._getResource(params);

if(this.options.stsToken){
options['security-token']=this.options.stsToken;
}

var signRes=signHelper._signatureForURL(this.options.accessKeySecret,options,resource,expires);

var url=urlutil.parse(this._getReqUrl(params));
url.query={
OSSAccessKeyId:this.options.accessKeyId,
Expires:expires,
Signature:signRes.Signature};

copy(signRes.subResource).to(url.query);
return url.format();
};

},{"../../common/signUtils":47,"../utils/isIP":64,"copy-to":101,"url":393,"utility":395}],46:[function(require,module,exports){
"use strict";

var _interopRequireDefault=require("@babel/runtime/helpers/interopRequireDefault");

require("core-js/modules/es.array.for-each");

require("core-js/modules/es.array.iterator");

require("core-js/modules/es.function.name");

require("core-js/modules/es.object.to-string");

require("core-js/modules/es.promise");

require("core-js/modules/es.string.iterator");

require("core-js/modules/web.dom-collections.for-each");

require("core-js/modules/web.dom-collections.iterator");

var _regenerator=_interopRequireDefault(require("@babel/runtime/regenerator"));

require("regenerator-runtime/runtime");

var _asyncToGenerator2=_interopRequireDefault(require("@babel/runtime/helpers/asyncToGenerator"));

var _require=require('./utils/isArray'),
isArray=_require.isArray;

var proto=exports;

proto._parallelNode=/*#__PURE__*/function(){
var _parallelNode2=(0,_asyncToGenerator2.default)(/*#__PURE__*/_regenerator.default.mark(function _callee(todo,parallel,fn,sourceData){
var that,jobErr,jobs,tempBatch,remainder,batch,taskIndex,i;
return _regenerator.default.wrap(function _callee$(_context){
while(1){
switch(_context.prev=_context.next){
case 0:
that=this;// upload in parallel

jobErr=[];
jobs=[];
tempBatch=todo.length/parallel;
remainder=todo.length%parallel;
batch=remainder===0?tempBatch:(todo.length-remainder)/parallel+1;
taskIndex=1;
i=0;

case 8:
if(!(i<todo.length)){
_context.next=26;
break;
}

if(!that.isCancel()){
_context.next=11;
break;
}

return _context.abrupt("break",26);

case 11:
if(sourceData){
jobs.push(fn(that,todo[i],sourceData));
}else{
jobs.push(fn(that,todo[i]));
}

if(!(jobs.length===parallel||taskIndex===batch&&i===todo.length-1)){
_context.next=23;
break;
}

_context.prev=13;
taskIndex+=1;
/* eslint no-await-in-loop: [0] */

_context.next=17;
return Promise.all(jobs);

case 17:
_context.next=22;
break;

case 19:
_context.prev=19;
_context.t0=_context["catch"](13);
jobErr.push(_context.t0);

case 22:
jobs=[];

case 23:
i++;
_context.next=8;
break;

case 26:
return _context.abrupt("return",jobErr);

case 27:
case"end":
return _context.stop();}

}
},_callee,this,[[13,19]]);
}));

function _parallelNode(_x,_x2,_x3,_x4){
return _parallelNode2.apply(this,arguments);
}

return _parallelNode;
}();

proto._parallel=function _parallel(todo,parallel,jobPromise){
var that=this;
return new Promise(function(resolve){
var _jobErr=[];

if(parallel<=0||!todo){
resolve(_jobErr);
return;
}

function onlyOnce(fn){
return function(){
if(fn===null)throw new Error('Callback was already called.');
var callFn=fn;
fn=null;

for(var _len=arguments.length,args=new Array(_len),_key=0;_key<_len;_key++){
args[_key]=arguments[_key];
}

callFn.apply(this,args);
};
}

function createArrayIterator(coll){
var i=-1;
var len=coll.length;
return function next(){
return++i<len&&!that.isCancel()?{
value:coll[i],
key:i}:
null;
};
}

var nextElem=createArrayIterator(todo);
var done=false;
var running=0;
var looping=false;

function iterateeCallback(err,value){
running-=1;

if(err){
done=true;

_jobErr.push(err);

resolve(_jobErr);
}else if(value==={}||done&&running<=0){
done=true;
resolve(_jobErr);
}else if(!looping){
/* eslint no-use-before-define: [0] */
if(that.isCancel()){
resolve(_jobErr);
}else{
replenish();
}
}
}

function iteratee(value,callback){
jobPromise(value).then(function(result){
callback(null,result);
}).catch(function(err){
callback(err);
});
}

function replenish(){
looping=true;

while(running<parallel&&!done&&!that.isCancel()){
var elem=nextElem();

if(elem===null||_jobErr.length>0){
done=true;

if(running<=0){
resolve(_jobErr);
}

return;
}

running+=1;
iteratee(elem.value,onlyOnce(iterateeCallback));
}

looping=false;
}

replenish();
});
};
/**
 * cancel operation, now can use with multipartUpload
 * @param {Object} abort
 *        {String} anort.name object key
 *        {String} anort.uploadId upload id
 *        {String} anort.options timeout
 */


proto.cancel=function cancel(abort){
this.options.cancelFlag=true;

if(isArray(this.multipartUploadStreams)){
this.multipartUploadStreams.forEach(function(_){
if(_.destroyed===false){
var err={
name:'cancel',
message:'cancel'};


_.destroy(err);
}
});
}

this.multipartUploadStreams=[];

if(abort){
this.abortMultipartUpload(abort.name,abort.uploadId,abort.options);
}
};

proto.isCancel=function isCancel(){
return this.options.cancelFlag;
};

proto.resetCancelFlag=function resetCancelFlag(){
this.options.cancelFlag=false;
};

proto._stop=function _stop(){
this.options.cancelFlag=true;
};// cancel is not error , so create an object


proto._makeCancelEvent=function _makeCancelEvent(){
var cancelEvent={
status:0,
name:'cancel'};

return cancelEvent;
};// abort is not error , so create an object


proto._makeAbortEvent=function _makeAbortEvent(){
var abortEvent={
status:0,
name:'abort',
message:'upload task has been abort'};

return abortEvent;
};

},{"./utils/isArray":59,"@babel/runtime/helpers/asyncToGenerator":71,"@babel/runtime/helpers/interopRequireDefault":72,"@babel/runtime/regenerator":75,"core-js/modules/es.array.for-each":238,"core-js/modules/es.array.iterator":242,"core-js/modules/es.function.name":249,"core-js/modules/es.object.to-string":254,"core-js/modules/es.promise":255,"core-js/modules/es.string.iterator":259,"core-js/modules/web.dom-collections.for-each":291,"core-js/modules/web.dom-collections.iterator":292,"regenerator-runtime/runtime":336}],47:[function(require,module,exports){
(function(Buffer){
"use strict";

require("core-js/modules/es.array.concat");

require("core-js/modules/es.array.for-each");

require("core-js/modules/es.array.index-of");

require("core-js/modules/es.array.join");

require("core-js/modules/es.array.sort");

require("core-js/modules/es.object.keys");

require("core-js/modules/es.object.to-string");

require("core-js/modules/es.regexp.to-string");

require("core-js/modules/es.string.trim");

require("core-js/modules/web.dom-collections.for-each");

var crypto=require('./../../shims/crypto/crypto.js');

var is=require('is-type-of');

var _require=require('./utils/lowercaseKeyHeader'),
lowercaseKeyHeader=_require.lowercaseKeyHeader;
/**
 *
 * @param {String} resourcePath
 * @param {Object} parameters
 * @return
 */


exports.buildCanonicalizedResource=function buildCanonicalizedResource(resourcePath,parameters){
var canonicalizedResource="".concat(resourcePath);
var separatorString='?';

if(is.string(parameters)&&parameters.trim()!==''){
canonicalizedResource+=separatorString+parameters;
}else if(is.array(parameters)){
parameters.sort();
canonicalizedResource+=separatorString+parameters.join('&');
}else if(parameters){
var compareFunc=function compareFunc(entry1,entry2){
if(entry1[0]>entry2[0]){
return 1;
}else if(entry1[0]<entry2[0]){
return-1;
}

return 0;
};

var processFunc=function processFunc(key){
canonicalizedResource+=separatorString+key;

if(parameters[key]){
canonicalizedResource+="=".concat(parameters[key]);
}

separatorString='&';
};

Object.keys(parameters).sort(compareFunc).forEach(processFunc);
}

return canonicalizedResource;
};
/**
 * @param {String} method
 * @param {String} resourcePath
 * @param {Object} request
 * @param {String} expires
 * @return {String} canonicalString
 */


exports.buildCanonicalString=function canonicalString(method,resourcePath,request,expires){
request=request||{};
var headers=lowercaseKeyHeader(request.headers);
var OSS_PREFIX='x-oss-';
var ossHeaders=[];
var headersToSign={};
var signContent=[method.toUpperCase(),headers['content-md5']||'',headers['content-type'],expires||headers['x-oss-date']];
Object.keys(headers).forEach(function(key){
var lowerKey=key.toLowerCase();

if(lowerKey.indexOf(OSS_PREFIX)===0){
headersToSign[lowerKey]=String(headers[key]).trim();
}
});
Object.keys(headersToSign).sort().forEach(function(key){
ossHeaders.push("".concat(key,":").concat(headersToSign[key]));
});
signContent=signContent.concat(ossHeaders);
signContent.push(this.buildCanonicalizedResource(resourcePath,request.parameters));
return signContent.join('\n');
};
/**
 * @param {String} accessKeySecret
 * @param {String} canonicalString
 */


exports.computeSignature=function computeSignature(accessKeySecret,canonicalString){
var headerEncoding=arguments.length>2&&arguments[2]!==undefined?arguments[2]:'utf-8';
var signature=crypto.createHmac('sha1',accessKeySecret);
return signature.update(Buffer.from(canonicalString,headerEncoding)).digest('base64');
};
/**
 * @param {String} accessKeyId
 * @param {String} accessKeySecret
 * @param {String} canonicalString
 */


exports.authorization=function authorization(accessKeyId,accessKeySecret,canonicalString,headerEncoding){
return"OSS ".concat(accessKeyId,":").concat(this.computeSignature(accessKeySecret,canonicalString,headerEncoding));
};
/**
 *
 * @param {String} accessKeySecret
 * @param {Object} options
 * @param {String} resource
 * @param {Number} expires
 */


exports._signatureForURL=function _signatureForURL(accessKeySecret){
var options=arguments.length>1&&arguments[1]!==undefined?arguments[1]:{};
var resource=arguments.length>2?arguments[2]:undefined;
var expires=arguments.length>3?arguments[3]:undefined;
var headerEncoding=arguments.length>4?arguments[4]:undefined;
var headers={};
var _options$subResource=options.subResource,
subResource=_options$subResource===void 0?{}:_options$subResource;

if(options.process){
var processKeyword='x-oss-process';
subResource[processKeyword]=options.process;
}

if(options.trafficLimit){
var trafficLimitKey='x-oss-traffic-limit';
subResource[trafficLimitKey]=options.trafficLimit;
}

if(options.response){
Object.keys(options.response).forEach(function(k){
var key="response-".concat(k.toLowerCase());
subResource[key]=options.response[k];
});
}

Object.keys(options).forEach(function(key){
var lowerKey=key.toLowerCase();
var value=options[key];

if(lowerKey.indexOf('x-oss-')===0){
headers[lowerKey]=value;
}else if(lowerKey.indexOf('content-md5')===0){
headers[key]=value;
}else if(lowerKey.indexOf('content-type')===0){
headers[key]=value;
}
});

if(Object.prototype.hasOwnProperty.call(options,'security-token')){
subResource['security-token']=options['security-token'];
}

if(Object.prototype.hasOwnProperty.call(options,'callback')){
var json={
callbackUrl:encodeURI(options.callback.url),
callbackBody:options.callback.body};


if(options.callback.host){
json.callbackHost=options.callback.host;
}

if(options.callback.contentType){
json.callbackBodyType=options.callback.contentType;
}

subResource.callback=Buffer.from(JSON.stringify(json)).toString('base64');

if(options.callback.customValue){
var callbackVar={};
Object.keys(options.callback.customValue).forEach(function(key){
callbackVar["x:".concat(key)]=options.callback.customValue[key];
});
subResource['callback-var']=Buffer.from(JSON.stringify(callbackVar)).toString('base64');
}
}

var canonicalString=this.buildCanonicalString(options.method,resource,{
headers:headers,
parameters:subResource},
expires.toString());
return{
Signature:this.computeSignature(accessKeySecret,canonicalString,headerEncoding),
subResource:subResource};

};

}).call(this,require("buffer").Buffer);
},{"./../../shims/crypto/crypto.js":386,"./utils/lowercaseKeyHeader":66,"buffer":99,"core-js/modules/es.array.concat":234,"core-js/modules/es.array.for-each":238,"core-js/modules/es.array.index-of":241,"core-js/modules/es.array.join":243,"core-js/modules/es.array.sort":247,"core-js/modules/es.object.keys":253,"core-js/modules/es.object.to-string":254,"core-js/modules/es.regexp.to-string":257,"core-js/modules/es.string.trim":264,"core-js/modules/web.dom-collections.for-each":291,"is-type-of":391}],48:[function(require,module,exports){
"use strict";

Object.defineProperty(exports,"__esModule",{
value:true});

exports.checkBucketName=void 0;

exports.checkBucketName=function(name){
var createBucket=arguments.length>1&&arguments[1]!==undefined?arguments[1]:false;
var bucketRegex=createBucket?/^[a-z0-9][a-z0-9-]{1,61}[a-z0-9]$/:/^[a-z0-9_][a-z0-9-_]{1,61}[a-z0-9_]$/;

if(!bucketRegex.test(name)){
throw new Error('The bucket must be conform to the specifications');
}
};

},{}],49:[function(require,module,exports){
"use strict";

Object.defineProperty(exports,"__esModule",{
value:true});

exports.checkConfigValid=void 0;
var checkConfigMap={
endpoint:checkEndpoint,
region:/^[a-zA-Z0-9\-_]+$/};


function checkEndpoint(endpoint){
if(typeof endpoint==='string'){
return /^[a-zA-Z0-9._:/-]+$/.test(endpoint);
}else if(endpoint.host){
return /^[a-zA-Z0-9._:/-]+$/.test(endpoint.host);
}

return false;
}

exports.checkConfigValid=function(conf,key){
if(checkConfigMap[key]){
var isConfigValid=true;

if(checkConfigMap[key]instanceof Function){
isConfigValid=checkConfigMap[key](conf);
}else{
isConfigValid=checkConfigMap[key].test(conf);
}

if(!isConfigValid){
throw new Error("The ".concat(key," must be conform to the specifications"));
}
}
};

},{}],50:[function(require,module,exports){
"use strict";

require("core-js/modules/es.array.concat");

require("core-js/modules/es.array.for-each");

require("core-js/modules/es.object.entries");

require("core-js/modules/web.dom-collections.for-each");

Object.defineProperty(exports,"__esModule",{
value:true});

exports.checkObjectTag=void 0;

var _require=require('./checkValid'),
checkValid=_require.checkValid;

var _require2=require('./isObject'),
isObject=_require2.isObject;

var commonRules=[{
validator:function validator(value){
if(typeof value!=='string'){
throw new Error('the key and value of the tag must be String');
}
}},
{
pattern:/^[a-zA-Z0-9 +-=._:/]+$/,
msg:'tag can contain letters, numbers, spaces, and the following symbols: plus sign (+), hyphen (-), equal sign (=), period (.), underscore (_), colon (:), and forward slash (/)'}];

var rules={
key:[].concat(commonRules,[{
pattern:/^.{1,128}$/,
msg:'tag key can be a maximum of 128 bytes in length'}]),

value:[].concat(commonRules,[{
pattern:/^.{0,256}$/,
msg:'tag value can be a maximum of 256 bytes in length'}])};



function checkObjectTag(tag){
if(!isObject(tag)){
throw new Error('tag must be Object');
}

var entries=Object.entries(tag);

if(entries.length>10){
throw new Error('maximum of 10 tags for a object');
}

var rulesIndexKey=['key','value'];
entries.forEach(function(keyValue){
keyValue.forEach(function(item,index){
checkValid(item,rules[rulesIndexKey[index]]);
});
});
}

exports.checkObjectTag=checkObjectTag;

},{"./checkValid":51,"./isObject":65,"core-js/modules/es.array.concat":234,"core-js/modules/es.array.for-each":238,"core-js/modules/es.object.entries":252,"core-js/modules/web.dom-collections.for-each":291}],51:[function(require,module,exports){
"use strict";

require("core-js/modules/es.array.for-each");

require("core-js/modules/web.dom-collections.for-each");

Object.defineProperty(exports,"__esModule",{
value:true});

exports.checkValid=void 0;

function checkValid(_value,_rules){
_rules.forEach(function(rule){
if(rule.validator){
rule.validator(_value);
}else if(rule.pattern&&!rule.pattern.test(_value)){
throw new Error(rule.msg);
}
});
}

exports.checkValid=checkValid;

},{"core-js/modules/es.array.for-each":238,"core-js/modules/web.dom-collections.for-each":291}],52:[function(require,module,exports){
(function(Buffer){
"use strict";

require("core-js/modules/es.array.concat");

require("core-js/modules/es.array.includes");

require("core-js/modules/es.array.index-of");

require("core-js/modules/es.object.assign");

require("core-js/modules/es.string.includes");

Object.defineProperty(exports,"__esModule",{
value:true});

exports.createRequest=void 0;

var crypto=require('./../../../shims/crypto/crypto.js');

var debug=require('debug')('ali-oss');

var mime=require('mime');

var dateFormat=require('dateformat');

var copy=require('copy-to');

var path=require('path');

var _require=require('./encoder'),
encoder=_require.encoder;

var _require2=require('./isIP'),
isIP=_require2.isIP;

var _require3=require('./setRegion'),
setRegion=_require3.setRegion;

var _require4=require('../client/getReqUrl'),
getReqUrl=_require4.getReqUrl;

function getHeader(headers,name){
return headers[name]||headers[name.toLowerCase()];
}

function delHeader(headers,name){
delete headers[name];
delete headers[name.toLowerCase()];
}

function createRequest(params){
var date=new Date();

if(this.options.amendTimeSkewed){
date=+new Date()+this.options.amendTimeSkewed;
}

var headers={
'x-oss-date':dateFormat(date,'UTC:ddd, dd mmm yyyy HH:MM:ss \'GMT\''),
'x-oss-user-agent':this.userAgent};


if(this.userAgent.includes('nodejs')){
headers['User-Agent']=this.userAgent;
}

if(this.options.isRequestPay){
Object.assign(headers,{
'x-oss-request-payer':'requester'});

}

if(this.options.stsToken){
headers['x-oss-security-token']=this.options.stsToken;
}

copy(params.headers).to(headers);

if(!getHeader(headers,'Content-Type')){
if(params.mime&&params.mime.indexOf('/')>0){
headers['Content-Type']=params.mime;
}else{
headers['Content-Type']=mime.getType(params.mime||path.extname(params.object||''));
}
}

if(!getHeader(headers,'Content-Type')){
delHeader(headers,'Content-Type');
}

if(params.content){
if(!params.disabledMD5){
headers['Content-MD5']=crypto.createHash('md5').update(Buffer.from(params.content,'utf8')).digest('base64');
}

if(!headers['Content-Length']){
headers['Content-Length']=params.content.length;
}
}

var hasOwnProperty=Object.prototype.hasOwnProperty;

for(var k in headers){
if(headers[k]&&hasOwnProperty.call(headers,k)){
headers[k]=encoder(String(headers[k]),this.options.headerEncoding);
}
}

var authResource=this._getResource(params);

headers.authorization=this.authorization(params.method,authResource,params.subres,headers,this.options.headerEncoding);// const url = this._getReqUrl(params);

if(isIP(this.options.endpoint.hostname)){
var _this$options=this.options,
region=_this$options.region,
internal=_this$options.internal,
secure=_this$options.secure;
var hostInfo=setRegion(region,internal,secure);
headers.host="".concat(params.bucket,".").concat(hostInfo.host);
}

var url=getReqUrl.bind(this)(params);
debug('request %s %s, with headers %j, !!stream: %s',params.method,url,headers,!!params.stream);
var timeout=params.timeout||this.options.timeout;
var reqParams={
method:params.method,
content:params.content,
stream:params.stream,
headers:headers,
timeout:timeout,
writeStream:params.writeStream,
customResponse:params.customResponse,
ctx:params.ctx||this.ctx};


if(this.agent){
reqParams.agent=this.agent;
}

if(this.httpsAgent){
reqParams.httpsAgent=this.httpsAgent;
}

reqParams.enableProxy=!!this.options.enableProxy;
reqParams.proxy=this.options.proxy?this.options.proxy:null;
return{
url:url,
params:reqParams};

}

exports.createRequest=createRequest;

}).call(this,require("buffer").Buffer);
},{"../client/getReqUrl":24,"./../../../shims/crypto/crypto.js":386,"./encoder":55,"./isIP":64,"./setRegion":69,"buffer":99,"copy-to":101,"core-js/modules/es.array.concat":234,"core-js/modules/es.array.includes":240,"core-js/modules/es.array.index-of":241,"core-js/modules/es.object.assign":251,"core-js/modules/es.string.includes":258,"dateformat":294,"debug":390,"mime":312,"path":315}],53:[function(require,module,exports){
"use strict";

require("core-js/modules/es.array.for-each");

require("core-js/modules/es.array.includes");

require("core-js/modules/es.object.entries");

require("core-js/modules/es.object.keys");

require("core-js/modules/es.regexp.exec");

require("core-js/modules/es.string.replace");

require("core-js/modules/web.dom-collections.for-each");

Object.defineProperty(exports,"__esModule",{
value:true});

exports.dataFix=void 0;

var isObject_1=require("./isObject");

var TRUE=['true','TRUE','1',1];
var FALSE=['false','FALSE','0',0];

function dataFix(o,conf,finalKill){
if(!isObject_1.isObject(o))return;
var _conf$remove=conf.remove,
remove=_conf$remove===void 0?[]:_conf$remove,
_conf$rename=conf.rename,
rename=_conf$rename===void 0?{}:_conf$rename,
_conf$camel=conf.camel,
camel=_conf$camel===void 0?[]:_conf$camel,
_conf$bool=conf.bool,
bool=_conf$bool===void 0?[]:_conf$bool,
_conf$lowerFirst=conf.lowerFirst,
lowerFirst=_conf$lowerFirst===void 0?false:_conf$lowerFirst;// 删除不需要的数据

remove.forEach(function(v){
return delete o[v];
});// 重命名

Object.entries(rename).forEach(function(v){
if(!o[v[0]])return;
if(o[v[1]])return;
o[v[1]]=o[v[0]];
delete o[v[0]];
});// 驼峰化

camel.forEach(function(v){
if(!o[v])return;
var afterKey=v.replace(/^(.)/,function($0){
return $0.toLowerCase();
}).replace(/-(\w)/g,function(_,$1){
return $1.toUpperCase();
});
if(o[afterKey])return;
o[afterKey]=o[v];// todo 暂时兼容以前数据，不做删除
// delete o[v];
});// 转换值为布尔值

bool.forEach(function(v){
o[v]=fixBool(o[v]);
});// finalKill

if(typeof finalKill==='function'){
finalKill(o);
}// 首字母转小写


fixLowerFirst(o,lowerFirst);
return dataFix;
}

exports.dataFix=dataFix;

function fixBool(value){
if(!value)return false;
if(TRUE.includes(value))return true;
return FALSE.includes(value)?false:value;
}

function fixLowerFirst(o,lowerFirst){
if(lowerFirst){
Object.keys(o).forEach(function(key){
var lowerK=key.replace(/^\w/,function(match){
return match.toLowerCase();
});

if(typeof o[lowerK]==='undefined'){
o[lowerK]=o[key];
delete o[key];
}
});
}
}

},{"./isObject":65,"core-js/modules/es.array.for-each":238,"core-js/modules/es.array.includes":240,"core-js/modules/es.object.entries":252,"core-js/modules/es.object.keys":253,"core-js/modules/es.regexp.exec":256,"core-js/modules/es.string.replace":261,"core-js/modules/web.dom-collections.for-each":291}],54:[function(require,module,exports){
"use strict";

var _interopRequireDefault=require("@babel/runtime/helpers/interopRequireDefault");

require("core-js/modules/es.array.for-each");

require("core-js/modules/es.array.slice");

require("core-js/modules/es.object.keys");

require("core-js/modules/web.dom-collections.for-each");

var _typeof2=_interopRequireDefault(require("@babel/runtime/helpers/typeof"));

Object.defineProperty(exports,"__esModule",{
value:true});

exports.deepCopyWith=exports.deepCopy=void 0;

var isBuffer_1=require("./isBuffer");

exports.deepCopy=function(obj){
if(obj===null||(0,_typeof2.default)(obj)!=='object'){
return obj;
}

if(isBuffer_1.isBuffer(obj)){
return obj.slice();
}

var copy=Array.isArray(obj)?[]:{};
Object.keys(obj).forEach(function(key){
copy[key]=exports.deepCopy(obj[key]);
});
return copy;
};

exports.deepCopyWith=function(obj,customizer){
function deepCopyWithHelper(value,innerKey,innerObject){
var result=customizer(value,innerKey,innerObject);
if(result!==undefined)return result;

if(value===null||(0,_typeof2.default)(value)!=='object'){
return value;
}

if(isBuffer_1.isBuffer(value)){
return value.slice();
}

var copy=Array.isArray(value)?[]:{};
Object.keys(value).forEach(function(k){
copy[k]=deepCopyWithHelper(value[k],k,value);
});
return copy;
}

if(customizer){
return deepCopyWithHelper(obj,'',null);
}else{
return exports.deepCopy(obj);
}
};

},{"./isBuffer":61,"@babel/runtime/helpers/interopRequireDefault":72,"@babel/runtime/helpers/typeof":73,"core-js/modules/es.array.for-each":238,"core-js/modules/es.array.slice":246,"core-js/modules/es.object.keys":253,"core-js/modules/web.dom-collections.for-each":291}],55:[function(require,module,exports){
(function(Buffer){
"use strict";

require("core-js/modules/es.object.to-string");

require("core-js/modules/es.regexp.to-string");

Object.defineProperty(exports,"__esModule",{
value:true});

exports.encoder=void 0;

function encoder(str){
var encoding=arguments.length>1&&arguments[1]!==undefined?arguments[1]:'utf-8';
if(encoding==='utf-8')return str;
return Buffer.from(str).toString('latin1');
}

exports.encoder=encoder;

}).call(this,require("buffer").Buffer);
},{"buffer":99,"core-js/modules/es.object.to-string":254,"core-js/modules/es.regexp.to-string":257}],56:[function(require,module,exports){
"use strict";

require("core-js/modules/es.array.map");

require("core-js/modules/es.regexp.exec");

require("core-js/modules/es.string.replace");

Object.defineProperty(exports,"__esModule",{
value:true});

exports.formatInventoryConfig=void 0;

var dataFix_1=require("../utils/dataFix");

var isObject_1=require("../utils/isObject");

var isArray_1=require("../utils/isArray");

var formatObjKey_1=require("../utils/formatObjKey");

function formatInventoryConfig(inventoryConfig){
var toArray=arguments.length>1&&arguments[1]!==undefined?arguments[1]:false;
if(toArray&&isObject_1.isObject(inventoryConfig))inventoryConfig=[inventoryConfig];

if(isArray_1.isArray(inventoryConfig)){
inventoryConfig=inventoryConfig.map(formatFn);
}else{
inventoryConfig=formatFn(inventoryConfig);
}

return inventoryConfig;
}

exports.formatInventoryConfig=formatInventoryConfig;

function formatFn(_){
dataFix_1.dataFix(_,{
bool:['IsEnabled']},
function(conf){
var _a,_b;// prefix


conf.prefix=conf.Filter.Prefix;
delete conf.Filter;// OSSBucketDestination

conf.OSSBucketDestination=conf.Destination.OSSBucketDestination;// OSSBucketDestination.rolename

conf.OSSBucketDestination.rolename=conf.OSSBucketDestination.RoleArn.replace(/.*\//,'');
delete conf.OSSBucketDestination.RoleArn;// OSSBucketDestination.bucket

conf.OSSBucketDestination.bucket=conf.OSSBucketDestination.Bucket.replace(/.*:::/,'');
delete conf.OSSBucketDestination.Bucket;
delete conf.Destination;// frequency

conf.frequency=conf.Schedule.Frequency;
delete conf.Schedule.Frequency;// optionalFields

if(((_a=conf===null||conf===void 0?void 0:conf.OptionalFields)===null||_a===void 0?void 0:_a.Field)&&!isArray_1.isArray((_b=conf.OptionalFields)===null||_b===void 0?void 0:_b.Field))conf.OptionalFields.Field=[conf.OptionalFields.Field];
});// firstLowerCase

_=formatObjKey_1.formatObjKey(_,'firstLowerCase',{
exclude:['OSSBucketDestination','SSE-OSS','SSE-KMS']});

return _;
}

},{"../utils/dataFix":53,"../utils/formatObjKey":57,"../utils/isArray":59,"../utils/isObject":65,"core-js/modules/es.array.map":245,"core-js/modules/es.regexp.exec":256,"core-js/modules/es.string.replace":261}],57:[function(require,module,exports){
"use strict";

var _interopRequireDefault=require("@babel/runtime/helpers/interopRequireDefault");

require("core-js/modules/es.array.for-each");

require("core-js/modules/es.array.includes");

require("core-js/modules/es.object.keys");

require("core-js/modules/es.regexp.exec");

require("core-js/modules/es.string.includes");

require("core-js/modules/es.string.replace");

require("core-js/modules/web.dom-collections.for-each");

var _typeof2=_interopRequireDefault(require("@babel/runtime/helpers/typeof"));

Object.defineProperty(exports,"__esModule",{
value:true});

exports.formatObjKey=void 0;

function formatObjKey(obj,type,options){
if(obj===null||(0,_typeof2.default)(obj)!=='object'){
return obj;
}

var o;

if(Array.isArray(obj)){
o=[];

for(var i=0;i<obj.length;i++){
o.push(formatObjKey(obj[i],type,options));
}
}else{
o={};
Object.keys(obj).forEach(function(key){
o[handelFormat(key,type,options)]=formatObjKey(obj[key],type,options);
});
}

return o;
}

exports.formatObjKey=formatObjKey;

function handelFormat(key,type,options){
var _a;

if(options&&((_a=options.exclude)===null||_a===void 0?void 0:_a.includes(key)))return key;

if(type==='firstUpperCase'){
key=key.replace(/^./,function(_){
return _.toUpperCase();
});
}else if(type==='firstLowerCase'){
key=key.replace(/^./,function(_){
return _.toLowerCase();
});
}

return key;
}

},{"@babel/runtime/helpers/interopRequireDefault":72,"@babel/runtime/helpers/typeof":73,"core-js/modules/es.array.for-each":238,"core-js/modules/es.array.includes":240,"core-js/modules/es.object.keys":253,"core-js/modules/es.regexp.exec":256,"core-js/modules/es.string.includes":258,"core-js/modules/es.string.replace":261,"core-js/modules/web.dom-collections.for-each":291}],58:[function(require,module,exports){
"use strict";

Object.defineProperty(exports,"__esModule",{
value:true});

exports.getStrBytesCount=void 0;

function getStrBytesCount(str){
var bytesCount=0;

for(var i=0;i<str.length;i++){
var c=str.charAt(i);

if(/^[\u00-\uff]$/.test(c)){
bytesCount+=1;
}else{
bytesCount+=2;
}
}

return bytesCount;
}

exports.getStrBytesCount=getStrBytesCount;

},{}],59:[function(require,module,exports){
"use strict";

require("core-js/modules/es.object.to-string");

require("core-js/modules/es.regexp.to-string");

Object.defineProperty(exports,"__esModule",{
value:true});

exports.isArray=void 0;

exports.isArray=function(obj){
return Object.prototype.toString.call(obj)==='[object Array]';
};

},{"core-js/modules/es.object.to-string":254,"core-js/modules/es.regexp.to-string":257}],60:[function(require,module,exports){
"use strict";

Object.defineProperty(exports,"__esModule",{
value:true});

exports.isBlob=void 0;

function isBlob(blob){
return typeof Blob!=='undefined'&&blob instanceof Blob;
}

exports.isBlob=isBlob;

},{}],61:[function(require,module,exports){
(function(Buffer){
"use strict";

Object.defineProperty(exports,"__esModule",{
value:true});

exports.isBuffer=void 0;

function isBuffer(obj){
return Buffer.isBuffer(obj);
}

exports.isBuffer=isBuffer;

}).call(this,{"isBuffer":require("../../../node_modules/is-buffer/index.js")});
},{"../../../node_modules/is-buffer/index.js":307}],62:[function(require,module,exports){
"use strict";

Object.defineProperty(exports,"__esModule",{
value:true});

exports.isFile=void 0;

exports.isFile=function(obj){
return typeof File!=='undefined'&&obj instanceof File;
};

},{}],63:[function(require,module,exports){
"use strict";

Object.defineProperty(exports,"__esModule",{
value:true});

exports.isFunction=void 0;

exports.isFunction=function(v){
return typeof v==='function';
};

},{}],64:[function(require,module,exports){
"use strict";

Object.defineProperty(exports,"__esModule",{
value:true});

exports.isIP=void 0;// it provide commont methods for node and browser , we will add more solutions later in this file

/**
 * Judge isIP include ipv4 or ipv6
 * @param {String} options
 * @return {Array} the multipart uploads
 */

exports.isIP=function(host){
var ipv4Regex=/^(25[0-5]|2[0-4]\d|[0-1]?\d?\d)(\.(25[0-5]|2[0-4]\d|[0-1]?\d?\d)){3}$/;
var ipv6Regex=/^\s*((([0-9A-Fa-f]{1,4}:){7}([0-9A-Fa-f]{1,4}|:))|(([0-9A-Fa-f]{1,4}:){6}(:[0-9A-Fa-f]{1,4}|((25[0-5]|2[0-4]\d|1\d\d|[1-9]?\d)(\.(25[0-5]|2[0-4]\d|1\d\d|[1-9]?\d)){3})|:))|(([0-9A-Fa-f]{1,4}:){5}(((:[0-9A-Fa-f]{1,4}){1,2})|:((25[0-5]|2[0-4]\d|1\d\d|[1-9]?\d)(\.(25[0-5]|2[0-4]\d|1\d\d|[1-9]?\d)){3})|:))|(([0-9A-Fa-f]{1,4}:){4}(((:[0-9A-Fa-f]{1,4}){1,3})|((:[0-9A-Fa-f]{1,4})?:((25[0-5]|2[0-4]\d|1\d\d|[1-9]?\d)(\.(25[0-5]|2[0-4]\d|1\d\d|[1-9]?\d)){3}))|:))|(([0-9A-Fa-f]{1,4}:){3}(((:[0-9A-Fa-f]{1,4}){1,4})|((:[0-9A-Fa-f]{1,4}){0,2}:((25[0-5]|2[0-4]\d|1\d\d|[1-9]?\d)(\.(25[0-5]|2[0-4]\d|1\d\d|[1-9]?\d)){3}))|:))|(([0-9A-Fa-f]{1,4}:){2}(((:[0-9A-Fa-f]{1,4}){1,5})|((:[0-9A-Fa-f]{1,4}){0,3}:((25[0-5]|2[0-4]\d|1\d\d|[1-9]?\d)(\.(25[0-5]|2[0-4]\d|1\d\d|[1-9]?\d)){3}))|:))|(([0-9A-Fa-f]{1,4}:){1}(((:[0-9A-Fa-f]{1,4}){1,6})|((:[0-9A-Fa-f]{1,4}){0,4}:((25[0-5]|2[0-4]\d|1\d\d|[1-9]?\d)(\.(25[0-5]|2[0-4]\d|1\d\d|[1-9]?\d)){3}))|:))|(:(((:[0-9A-Fa-f]{1,4}){1,7})|((:[0-9A-Fa-f]{1,4}){0,5}:((25[0-5]|2[0-4]\d|1\d\d|[1-9]?\d)(\.(25[0-5]|2[0-4]\d|1\d\d|[1-9]?\d)){3}))|:)))(%.+)?\s*$/;
return ipv4Regex.test(host)||ipv6Regex.test(host);
};

},{}],65:[function(require,module,exports){
"use strict";

require("core-js/modules/es.object.to-string");

require("core-js/modules/es.regexp.to-string");

Object.defineProperty(exports,"__esModule",{
value:true});

exports.isObject=void 0;

exports.isObject=function(obj){
return Object.prototype.toString.call(obj)==='[object Object]';
};

},{"core-js/modules/es.object.to-string":254,"core-js/modules/es.regexp.to-string":257}],66:[function(require,module,exports){
"use strict";

require("core-js/modules/es.array.for-each");

require("core-js/modules/es.object.keys");

require("core-js/modules/web.dom-collections.for-each");

Object.defineProperty(exports,"__esModule",{
value:true});

exports.lowercaseKeyHeader=void 0;

var isObject_1=require("./isObject");

function lowercaseKeyHeader(headers){
var lowercaseHeader={};

if(isObject_1.isObject(headers)){
Object.keys(headers).forEach(function(key){
lowercaseHeader[key.toLowerCase()]=headers[key];
});
}

return lowercaseHeader;
}

exports.lowercaseKeyHeader=lowercaseKeyHeader;

},{"./isObject":65,"core-js/modules/es.array.for-each":238,"core-js/modules/es.object.keys":253,"core-js/modules/web.dom-collections.for-each":291}],67:[function(require,module,exports){
"use strict";

require("core-js/modules/es.array.concat");

require("core-js/modules/es.array.for-each");

require("core-js/modules/es.array.join");

require("core-js/modules/es.array.map");

require("core-js/modules/es.object.keys");

require("core-js/modules/es.object.to-string");

require("core-js/modules/es.regexp.exec");

require("core-js/modules/es.regexp.to-string");

require("core-js/modules/es.string.replace");

require("core-js/modules/web.dom-collections.for-each");

Object.defineProperty(exports,"__esModule",{
value:true});

exports.obj2xml=void 0;

var formatObjKey_1=require("./formatObjKey");

function type(params){
return Object.prototype.toString.call(params).replace(/(.*? |])/g,'').toLowerCase();
}

function obj2xml(obj,options){
var s='';

if(options&&options.headers){
s='<?xml version="1.0" encoding="UTF-8"?>\n';
}

if(options&&options.firstUpperCase){
obj=formatObjKey_1.formatObjKey(obj,'firstUpperCase');
}

if(type(obj)==='object'){
Object.keys(obj).forEach(function(key){
// filter undefined or null
if(type(obj[key])!=='undefined'&&type(obj[key])!=='null'){
if(type(obj[key])==='string'||type(obj[key])==='number'){
s+="<".concat(key,">").concat(obj[key],"</").concat(key,">");
}else if(type(obj[key])==='object'){
s+="<".concat(key,">").concat(obj2xml(obj[key]),"</").concat(key,">");
}else if(type(obj[key])==='array'){
s+=obj[key].map(function(keyChild){
return"<".concat(key,">").concat(obj2xml(keyChild),"</").concat(key,">");
}).join('');
}else{
s+="<".concat(key,">").concat(obj[key].toString(),"</").concat(key,">");
}
}
});
}else{
s+=obj.toString();
}

return s;
}

exports.obj2xml=obj2xml;

},{"./formatObjKey":57,"core-js/modules/es.array.concat":234,"core-js/modules/es.array.for-each":238,"core-js/modules/es.array.join":243,"core-js/modules/es.array.map":245,"core-js/modules/es.object.keys":253,"core-js/modules/es.object.to-string":254,"core-js/modules/es.regexp.exec":256,"core-js/modules/es.regexp.to-string":257,"core-js/modules/es.string.replace":261,"core-js/modules/web.dom-collections.for-each":291}],68:[function(require,module,exports){
"use strict";

require("core-js/modules/es.object.to-string");

require("core-js/modules/es.promise");

Object.defineProperty(exports,"__esModule",{
value:true});

exports.retry=void 0;

function retry(func,retryMax){
var config=arguments.length>2&&arguments[2]!==undefined?arguments[2]:{};
var retryNum=0;
var _config$retryDelay=config.retryDelay,
retryDelay=_config$retryDelay===void 0?500:_config$retryDelay,
_config$errorHandler=config.errorHandler,
errorHandler=_config$errorHandler===void 0?function(){
return true;
}:_config$errorHandler;

var funcR=function funcR(){
for(var _len=arguments.length,arg=new Array(_len),_key=0;_key<_len;_key++){
arg[_key]=arguments[_key];
}

return new Promise(function(resolve,reject){
func.apply(void 0,arg).then(function(result){
retryNum=0;
resolve(result);
}).catch(function(err){
if(retryNum<retryMax&&errorHandler(err)){
retryNum++;
setTimeout(function(){
resolve(funcR.apply(void 0,arg));
},retryDelay);
}else{
retryNum=0;
reject(err);
}
});
});
};

return funcR;
}

exports.retry=retry;

},{"core-js/modules/es.object.to-string":254,"core-js/modules/es.promise":255}],69:[function(require,module,exports){
"use strict";

var __importDefault=void 0&&(void 0).__importDefault||function(mod){
return mod&&mod.__esModule?mod:{
"default":mod};

};

Object.defineProperty(exports,"__esModule",{
value:true});

exports.setRegion=void 0;

var url_1=__importDefault(require("url"));

var checkConfigValid_1=require("./checkConfigValid");

function setRegion(region){
var internal=arguments.length>1&&arguments[1]!==undefined?arguments[1]:false;
var secure=arguments.length>2&&arguments[2]!==undefined?arguments[2]:false;
checkConfigValid_1.checkConfigValid(region,'region');
var protocol=secure?'https://':'http://';
var suffix=internal?'-internal.aliyuncs.com':'.aliyuncs.com';
var prefix='vpc100-oss-cn-';// aliyun VPC region: https://help.aliyun.com/knowledge_detail/38740.html

if(region.substr(0,prefix.length)===prefix){
suffix='.aliyuncs.com';
}

return url_1.default.parse(protocol+region+suffix);
}

exports.setRegion=setRegion;

},{"./checkConfigValid":49,"url":393}],70:[function(require,module,exports){
"use strict";

var _interopRequireDefault=require("@babel/runtime/helpers/interopRequireDefault");

require("core-js/modules/es.array.find");

require("core-js/modules/es.array.for-each");

require("core-js/modules/es.object.assign");

require("core-js/modules/es.object.keys");

var _regenerator=_interopRequireDefault(require("@babel/runtime/regenerator"));

require("regenerator-runtime/runtime");

var _asyncToGenerator2=_interopRequireDefault(require("@babel/runtime/helpers/asyncToGenerator"));

Object.defineProperty(exports,"__esModule",{
value:true});

exports.setSTSToken=void 0;

var formatObjKey_1=require("./formatObjKey");

function setSTSToken(){
return _setSTSToken.apply(this,arguments);
}

function _setSTSToken(){
_setSTSToken=(0,_asyncToGenerator2.default)(/*#__PURE__*/_regenerator.default.mark(function _callee(){
var now,credentials;
return _regenerator.default.wrap(function _callee$(_context){
while(1){
switch(_context.prev=_context.next){
case 0:
if(!this.options)this.options={};
now=new Date();

if(!this.stsTokenFreshTime){
_context.next=14;
break;
}

if(!(+now-this.stsTokenFreshTime>=this.options.refreshSTSTokenInterval)){
_context.next=12;
break;
}

this.stsTokenFreshTime=now;
_context.next=7;
return this.options.refreshSTSToken();

case 7:
credentials=_context.sent;
credentials=formatObjKey_1.formatObjKey(credentials,'firstLowerCase');

if(credentials.securityToken){
credentials.stsToken=credentials.securityToken;
}

checkCredentials(credentials);
Object.assign(this.options,credentials);

case 12:
_context.next=15;
break;

case 14:
this.stsTokenFreshTime=now;

case 15:
return _context.abrupt("return",null);

case 16:
case"end":
return _context.stop();}

}
},_callee,this);
}));
return _setSTSToken.apply(this,arguments);
}

exports.setSTSToken=setSTSToken;

function checkCredentials(obj){
var stsTokenKey=['accessKeySecret','accessKeyId','stsToken'];
var objKeys=Object.keys(obj);
stsTokenKey.forEach(function(_){
if(!objKeys.find(function(key){
return key===_;
})){
throw Error("refreshSTSToken must return contains ".concat(_));
}
});
}

},{"./formatObjKey":57,"@babel/runtime/helpers/asyncToGenerator":71,"@babel/runtime/helpers/interopRequireDefault":72,"@babel/runtime/regenerator":75,"core-js/modules/es.array.find":237,"core-js/modules/es.array.for-each":238,"core-js/modules/es.object.assign":251,"core-js/modules/es.object.keys":253,"regenerator-runtime/runtime":336}],71:[function(require,module,exports){
function asyncGeneratorStep(gen,resolve,reject,_next,_throw,key,arg){
try{
var info=gen[key](arg);
var value=info.value;
}catch(error){
reject(error);
return;
}

if(info.done){
resolve(value);
}else{
Promise.resolve(value).then(_next,_throw);
}
}

function _asyncToGenerator(fn){
return function(){
var self=this,
args=arguments;
return new Promise(function(resolve,reject){
var gen=fn.apply(self,args);

function _next(value){
asyncGeneratorStep(gen,resolve,reject,_next,_throw,"next",value);
}

function _throw(err){
asyncGeneratorStep(gen,resolve,reject,_next,_throw,"throw",err);
}

_next(undefined);
});
};
}

module.exports=_asyncToGenerator;
},{}],72:[function(require,module,exports){
function _interopRequireDefault(obj){
return obj&&obj.__esModule?obj:{
"default":obj};

}

module.exports=_interopRequireDefault;
},{}],73:[function(require,module,exports){
function _typeof(obj){
"@babel/helpers - typeof";

if(typeof Symbol==="function"&&typeof Symbol.iterator==="symbol"){
module.exports=_typeof=function _typeof(obj){
return typeof obj;
};
}else{
module.exports=_typeof=function _typeof(obj){
return obj&&typeof Symbol==="function"&&obj.constructor===Symbol&&obj!==Symbol.prototype?"symbol":typeof obj;
};
}

return _typeof(obj);
}

module.exports=_typeof;
},{}],74:[function(require,module,exports){
/**
 * Copyright (c) 2014-present, Facebook, Inc.
 *
 * This source code is licensed under the MIT license found in the
 * LICENSE file in the root directory of this source tree.
 */

var runtime=function(exports){
"use strict";

var Op=Object.prototype;
var hasOwn=Op.hasOwnProperty;
var undefined;// More compressible than void 0.
var $Symbol=typeof Symbol==="function"?Symbol:{};
var iteratorSymbol=$Symbol.iterator||"@@iterator";
var asyncIteratorSymbol=$Symbol.asyncIterator||"@@asyncIterator";
var toStringTagSymbol=$Symbol.toStringTag||"@@toStringTag";

function define(obj,key,value){
Object.defineProperty(obj,key,{
value:value,
enumerable:true,
configurable:true,
writable:true});

return obj[key];
}
try{
// IE 8 has a broken Object.defineProperty that only works on DOM objects.
define({},"");
}catch(err){
define=function define(obj,key,value){
return obj[key]=value;
};
}

function wrap(innerFn,outerFn,self,tryLocsList){
// If outerFn provided and outerFn.prototype is a Generator, then outerFn.prototype instanceof Generator.
var protoGenerator=outerFn&&outerFn.prototype instanceof Generator?outerFn:Generator;
var generator=Object.create(protoGenerator.prototype);
var context=new Context(tryLocsList||[]);

// The ._invoke method unifies the implementations of the .next,
// .throw, and .return methods.
generator._invoke=makeInvokeMethod(innerFn,self,context);

return generator;
}
exports.wrap=wrap;

// Try/catch helper to minimize deoptimizations. Returns a completion
// record like context.tryEntries[i].completion. This interface could
// have been (and was previously) designed to take a closure to be
// invoked without arguments, but in all the cases we care about we
// already have an existing method we want to call, so there's no need
// to create a new function object. We can even get away with assuming
// the method takes exactly one argument, since that happens to be true
// in every case, so we don't have to touch the arguments object. The
// only additional allocation required is the completion record, which
// has a stable shape and so hopefully should be cheap to allocate.
function tryCatch(fn,obj,arg){
try{
return{type:"normal",arg:fn.call(obj,arg)};
}catch(err){
return{type:"throw",arg:err};
}
}

var GenStateSuspendedStart="suspendedStart";
var GenStateSuspendedYield="suspendedYield";
var GenStateExecuting="executing";
var GenStateCompleted="completed";

// Returning this object from the innerFn has the same effect as
// breaking out of the dispatch switch statement.
var ContinueSentinel={};

// Dummy constructor functions that we use as the .constructor and
// .constructor.prototype properties for functions that return Generator
// objects. For full spec compliance, you may wish to configure your
// minifier not to mangle the names of these two functions.
function Generator(){}
function GeneratorFunction(){}
function GeneratorFunctionPrototype(){}

// This is a polyfill for %IteratorPrototype% for environments that
// don't natively support it.
var IteratorPrototype={};
IteratorPrototype[iteratorSymbol]=function(){
return this;
};

var getProto=Object.getPrototypeOf;
var NativeIteratorPrototype=getProto&&getProto(getProto(values([])));
if(NativeIteratorPrototype&&
NativeIteratorPrototype!==Op&&
hasOwn.call(NativeIteratorPrototype,iteratorSymbol)){
// This environment has a native %IteratorPrototype%; use it instead
// of the polyfill.
IteratorPrototype=NativeIteratorPrototype;
}

var Gp=GeneratorFunctionPrototype.prototype=
Generator.prototype=Object.create(IteratorPrototype);
GeneratorFunction.prototype=Gp.constructor=GeneratorFunctionPrototype;
GeneratorFunctionPrototype.constructor=GeneratorFunction;
GeneratorFunction.displayName=define(
GeneratorFunctionPrototype,
toStringTagSymbol,
"GeneratorFunction");


// Helper for defining the .next, .throw, and .return methods of the
// Iterator interface in terms of a single ._invoke method.
function defineIteratorMethods(prototype){
["next","throw","return"].forEach(function(method){
define(prototype,method,function(arg){
return this._invoke(method,arg);
});
});
}

exports.isGeneratorFunction=function(genFun){
var ctor=typeof genFun==="function"&&genFun.constructor;
return ctor?
ctor===GeneratorFunction||
// For the native GeneratorFunction constructor, the best we can
// do is to check its .name property.
(ctor.displayName||ctor.name)==="GeneratorFunction":
false;
};

exports.mark=function(genFun){
if(Object.setPrototypeOf){
Object.setPrototypeOf(genFun,GeneratorFunctionPrototype);
}else{
genFun.__proto__=GeneratorFunctionPrototype;
define(genFun,toStringTagSymbol,"GeneratorFunction");
}
genFun.prototype=Object.create(Gp);
return genFun;
};

// Within the body of any async function, `await x` is transformed to
// `yield regeneratorRuntime.awrap(x)`, so that the runtime can test
// `hasOwn.call(value, "__await")` to determine if the yielded value is
// meant to be awaited.
exports.awrap=function(arg){
return{__await:arg};
};

function AsyncIterator(generator,PromiseImpl){
function invoke(method,arg,resolve,reject){
var record=tryCatch(generator[method],generator,arg);
if(record.type==="throw"){
reject(record.arg);
}else{
var result=record.arg;
var value=result.value;
if(value&&
typeof value==="object"&&
hasOwn.call(value,"__await")){
return PromiseImpl.resolve(value.__await).then(function(value){
invoke("next",value,resolve,reject);
},function(err){
invoke("throw",err,resolve,reject);
});
}

return PromiseImpl.resolve(value).then(function(unwrapped){
// When a yielded Promise is resolved, its final value becomes
// the .value of the Promise<{value,done}> result for the
// current iteration.
result.value=unwrapped;
resolve(result);
},function(error){
// If a rejected Promise was yielded, throw the rejection back
// into the async generator function so it can be handled there.
return invoke("throw",error,resolve,reject);
});
}
}

var previousPromise;

function enqueue(method,arg){
function callInvokeWithMethodAndArg(){
return new PromiseImpl(function(resolve,reject){
invoke(method,arg,resolve,reject);
});
}

return previousPromise=
// If enqueue has been called before, then we want to wait until
// all previous Promises have been resolved before calling invoke,
// so that results are always delivered in the correct order. If
// enqueue has not been called before, then it is important to
// call invoke immediately, without waiting on a callback to fire,
// so that the async generator function has the opportunity to do
// any necessary setup in a predictable way. This predictability
// is why the Promise constructor synchronously invokes its
// executor callback, and why async functions synchronously
// execute code before the first await. Since we implement simple
// async functions in terms of async generators, it is especially
// important to get this right, even though it requires care.
previousPromise?previousPromise.then(
callInvokeWithMethodAndArg,
// Avoid propagating failures to Promises returned by later
// invocations of the iterator.
callInvokeWithMethodAndArg):
callInvokeWithMethodAndArg();
}

// Define the unified helper method that is used to implement .next,
// .throw, and .return (see defineIteratorMethods).
this._invoke=enqueue;
}

defineIteratorMethods(AsyncIterator.prototype);
AsyncIterator.prototype[asyncIteratorSymbol]=function(){
return this;
};
exports.AsyncIterator=AsyncIterator;

// Note that simple async functions are implemented on top of
// AsyncIterator objects; they just return a Promise for the value of
// the final result produced by the iterator.
exports.async=function(innerFn,outerFn,self,tryLocsList,PromiseImpl){
if(PromiseImpl===void 0)PromiseImpl=Promise;

var iter=new AsyncIterator(
wrap(innerFn,outerFn,self,tryLocsList),
PromiseImpl);


return exports.isGeneratorFunction(outerFn)?
iter// If outerFn is a generator, return the full iterator.
:iter.next().then(function(result){
return result.done?result.value:iter.next();
});
};

function makeInvokeMethod(innerFn,self,context){
var state=GenStateSuspendedStart;

return function invoke(method,arg){
if(state===GenStateExecuting){
throw new Error("Generator is already running");
}

if(state===GenStateCompleted){
if(method==="throw"){
throw arg;
}

// Be forgiving, per 25.3.3.3.3 of the spec:
// https://people.mozilla.org/~jorendorff/es6-draft.html#sec-generatorresume
return doneResult();
}

context.method=method;
context.arg=arg;

while(true){
var delegate=context.delegate;
if(delegate){
var delegateResult=maybeInvokeDelegate(delegate,context);
if(delegateResult){
if(delegateResult===ContinueSentinel)continue;
return delegateResult;
}
}

if(context.method==="next"){
// Setting context._sent for legacy support of Babel's
// function.sent implementation.
context.sent=context._sent=context.arg;

}else if(context.method==="throw"){
if(state===GenStateSuspendedStart){
state=GenStateCompleted;
throw context.arg;
}

context.dispatchException(context.arg);

}else if(context.method==="return"){
context.abrupt("return",context.arg);
}

state=GenStateExecuting;

var record=tryCatch(innerFn,self,context);
if(record.type==="normal"){
// If an exception is thrown from innerFn, we leave state ===
// GenStateExecuting and loop back for another invocation.
state=context.done?
GenStateCompleted:
GenStateSuspendedYield;

if(record.arg===ContinueSentinel){
continue;
}

return{
value:record.arg,
done:context.done};


}else if(record.type==="throw"){
state=GenStateCompleted;
// Dispatch the exception by looping back around to the
// context.dispatchException(context.arg) call above.
context.method="throw";
context.arg=record.arg;
}
}
};
}

// Call delegate.iterator[context.method](context.arg) and handle the
// result, either by returning a { value, done } result from the
// delegate iterator, or by modifying context.method and context.arg,
// setting context.delegate to null, and returning the ContinueSentinel.
function maybeInvokeDelegate(delegate,context){
var method=delegate.iterator[context.method];
if(method===undefined){
// A .throw or .return when the delegate iterator has no .throw
// method always terminates the yield* loop.
context.delegate=null;

if(context.method==="throw"){
// Note: ["return"] must be used for ES3 parsing compatibility.
if(delegate.iterator["return"]){
// If the delegate iterator has a return method, give it a
// chance to clean up.
context.method="return";
context.arg=undefined;
maybeInvokeDelegate(delegate,context);

if(context.method==="throw"){
// If maybeInvokeDelegate(context) changed context.method from
// "return" to "throw", let that override the TypeError below.
return ContinueSentinel;
}
}

context.method="throw";
context.arg=new TypeError(
"The iterator does not provide a 'throw' method");
}

return ContinueSentinel;
}

var record=tryCatch(method,delegate.iterator,context.arg);

if(record.type==="throw"){
context.method="throw";
context.arg=record.arg;
context.delegate=null;
return ContinueSentinel;
}

var info=record.arg;

if(!info){
context.method="throw";
context.arg=new TypeError("iterator result is not an object");
context.delegate=null;
return ContinueSentinel;
}

if(info.done){
// Assign the result of the finished delegate to the temporary
// variable specified by delegate.resultName (see delegateYield).
context[delegate.resultName]=info.value;

// Resume execution at the desired location (see delegateYield).
context.next=delegate.nextLoc;

// If context.method was "throw" but the delegate handled the
// exception, let the outer generator proceed normally. If
// context.method was "next", forget context.arg since it has been
// "consumed" by the delegate iterator. If context.method was
// "return", allow the original .return call to continue in the
// outer generator.
if(context.method!=="return"){
context.method="next";
context.arg=undefined;
}

}else{
// Re-yield the result returned by the delegate method.
return info;
}

// The delegate iterator is finished, so forget it and continue with
// the outer generator.
context.delegate=null;
return ContinueSentinel;
}

// Define Generator.prototype.{next,throw,return} in terms of the
// unified ._invoke helper method.
defineIteratorMethods(Gp);

define(Gp,toStringTagSymbol,"Generator");

// A Generator should always return itself as the iterator object when the
// @@iterator function is called on it. Some browsers' implementations of the
// iterator prototype chain incorrectly implement this, causing the Generator
// object to not be returned from this call. This ensures that doesn't happen.
// See https://github.com/facebook/regenerator/issues/274 for more details.
Gp[iteratorSymbol]=function(){
return this;
};

Gp.toString=function(){
return"[object Generator]";
};

function pushTryEntry(locs){
var entry={tryLoc:locs[0]};

if(1 in locs){
entry.catchLoc=locs[1];
}

if(2 in locs){
entry.finallyLoc=locs[2];
entry.afterLoc=locs[3];
}

this.tryEntries.push(entry);
}

function resetTryEntry(entry){
var record=entry.completion||{};
record.type="normal";
delete record.arg;
entry.completion=record;
}

function Context(tryLocsList){
// The root entry object (effectively a try statement without a catch
// or a finally block) gives us a place to store values thrown from
// locations where there is no enclosing try statement.
this.tryEntries=[{tryLoc:"root"}];
tryLocsList.forEach(pushTryEntry,this);
this.reset(true);
}

exports.keys=function(object){
var keys=[];
for(var key in object){
keys.push(key);
}
keys.reverse();

// Rather than returning an object with a next method, we keep
// things simple and return the next function itself.
return function next(){
while(keys.length){
var key=keys.pop();
if(key in object){
next.value=key;
next.done=false;
return next;
}
}

// To avoid creating an additional object, we just hang the .value
// and .done properties off the next function object itself. This
// also ensures that the minifier will not anonymize the function.
next.done=true;
return next;
};
};

function values(iterable){
if(iterable){
var iteratorMethod=iterable[iteratorSymbol];
if(iteratorMethod){
return iteratorMethod.call(iterable);
}

if(typeof iterable.next==="function"){
return iterable;
}

if(!isNaN(iterable.length)){
var i=-1,next=function next(){
while(++i<iterable.length){
if(hasOwn.call(iterable,i)){
next.value=iterable[i];
next.done=false;
return next;
}
}

next.value=undefined;
next.done=true;

return next;
};

return next.next=next;
}
}

// Return an iterator with no values.
return{next:doneResult};
}
exports.values=values;

function doneResult(){
return{value:undefined,done:true};
}

Context.prototype={
constructor:Context,

reset:function reset(skipTempReset){
this.prev=0;
this.next=0;
// Resetting context._sent for legacy support of Babel's
// function.sent implementation.
this.sent=this._sent=undefined;
this.done=false;
this.delegate=null;

this.method="next";
this.arg=undefined;

this.tryEntries.forEach(resetTryEntry);

if(!skipTempReset){
for(var name in this){
// Not sure about the optimal order of these conditions:
if(name.charAt(0)==="t"&&
hasOwn.call(this,name)&&
!isNaN(+name.slice(1))){
this[name]=undefined;
}
}
}
},

stop:function stop(){
this.done=true;

var rootEntry=this.tryEntries[0];
var rootRecord=rootEntry.completion;
if(rootRecord.type==="throw"){
throw rootRecord.arg;
}

return this.rval;
},

dispatchException:function dispatchException(exception){
if(this.done){
throw exception;
}

var context=this;
function handle(loc,caught){
record.type="throw";
record.arg=exception;
context.next=loc;

if(caught){
// If the dispatched exception was caught by a catch block,
// then let that catch block handle the exception normally.
context.method="next";
context.arg=undefined;
}

return!!caught;
}

for(var i=this.tryEntries.length-1;i>=0;--i){
var entry=this.tryEntries[i];
var record=entry.completion;

if(entry.tryLoc==="root"){
// Exception thrown outside of any try block that could handle
// it, so set the completion value of the entire function to
// throw the exception.
return handle("end");
}

if(entry.tryLoc<=this.prev){
var hasCatch=hasOwn.call(entry,"catchLoc");
var hasFinally=hasOwn.call(entry,"finallyLoc");

if(hasCatch&&hasFinally){
if(this.prev<entry.catchLoc){
return handle(entry.catchLoc,true);
}else if(this.prev<entry.finallyLoc){
return handle(entry.finallyLoc);
}

}else if(hasCatch){
if(this.prev<entry.catchLoc){
return handle(entry.catchLoc,true);
}

}else if(hasFinally){
if(this.prev<entry.finallyLoc){
return handle(entry.finallyLoc);
}

}else{
throw new Error("try statement without catch or finally");
}
}
}
},

abrupt:function abrupt(type,arg){
for(var i=this.tryEntries.length-1;i>=0;--i){
var entry=this.tryEntries[i];
if(entry.tryLoc<=this.prev&&
hasOwn.call(entry,"finallyLoc")&&
this.prev<entry.finallyLoc){
var finallyEntry=entry;
break;
}
}

if(finallyEntry&&(
type==="break"||
type==="continue")&&
finallyEntry.tryLoc<=arg&&
arg<=finallyEntry.finallyLoc){
// Ignore the finally entry if control is not jumping to a
// location outside the try/catch block.
finallyEntry=null;
}

var record=finallyEntry?finallyEntry.completion:{};
record.type=type;
record.arg=arg;

if(finallyEntry){
this.method="next";
this.next=finallyEntry.finallyLoc;
return ContinueSentinel;
}

return this.complete(record);
},

complete:function complete(record,afterLoc){
if(record.type==="throw"){
throw record.arg;
}

if(record.type==="break"||
record.type==="continue"){
this.next=record.arg;
}else if(record.type==="return"){
this.rval=this.arg=record.arg;
this.method="return";
this.next="end";
}else if(record.type==="normal"&&afterLoc){
this.next=afterLoc;
}

return ContinueSentinel;
},

finish:function finish(finallyLoc){
for(var i=this.tryEntries.length-1;i>=0;--i){
var entry=this.tryEntries[i];
if(entry.finallyLoc===finallyLoc){
this.complete(entry.completion,entry.afterLoc);
resetTryEntry(entry);
return ContinueSentinel;
}
}
},

"catch":function _catch(tryLoc){
for(var i=this.tryEntries.length-1;i>=0;--i){
var entry=this.tryEntries[i];
if(entry.tryLoc===tryLoc){
var record=entry.completion;
if(record.type==="throw"){
var thrown=record.arg;
resetTryEntry(entry);
}
return thrown;
}
}

// The context.catch method must only be called with a location
// argument that corresponds to a known catch block.
throw new Error("illegal catch attempt");
},

delegateYield:function delegateYield(iterable,resultName,nextLoc){
this.delegate={
iterator:values(iterable),
resultName:resultName,
nextLoc:nextLoc};


if(this.method==="next"){
// Deliberately forget the last sent value so that we don't
// accidentally pass it on to the delegate.
this.arg=undefined;
}

return ContinueSentinel;
}};


// Regardless of whether this script is executing as a CommonJS module
// or not, return the runtime object so that we can declare the variable
// regeneratorRuntime in the outer scope, which allows this module to be
// injected easily by `bin/regenerator --include-runtime script.js`.
return exports;

}(
// If this script is executing as a CommonJS module, use module.exports
// as the regeneratorRuntime namespace. Otherwise create a new empty
// object. Either way, the resulting object will be used to initialize
// the regeneratorRuntime variable at the top of this file.
typeof module==="object"?module.exports:{});


try{
regeneratorRuntime=runtime;
}catch(accidentalStrictMode){
// This module should not be running in strict mode, so the above
// assignment should always work unless something is misconfigured. Just
// in case runtime.js accidentally runs in strict mode, we can escape
// strict mode using a global Function call. This could conceivably fail
// if a Content Security Policy forbids using Function, but in that case
// the proper solution is to fix the accidental strict mode problem. If
// you've misconfigured your bundler to force strict mode and applied a
// CSP to forbid Function, and you're not willing to fix either of those
// problems, please detail your unique predicament in a GitHub issue.
Function("r","regeneratorRuntime = r")(runtime);
}

},{}],75:[function(require,module,exports){
module.exports=require("regenerator-runtime");

},{"regenerator-runtime":74}],76:[function(require,module,exports){
module.exports=noop;
module.exports.HttpsAgent=noop;

// Noop function for browser since native api's don't use agents.
function noop(){}

},{}],77:[function(require,module,exports){
'use strict';

exports.byteLength=byteLength;
exports.toByteArray=toByteArray;
exports.fromByteArray=fromByteArray;

var lookup=[];
var revLookup=[];
var Arr=typeof Uint8Array!=='undefined'?Uint8Array:Array;

var code='ABCDEFGHIJKLMNOPQRSTUVWXYZabcdefghijklmnopqrstuvwxyz0123456789+/';
for(var i=0,len=code.length;i<len;++i){
lookup[i]=code[i];
revLookup[code.charCodeAt(i)]=i;
}

// Support decoding URL-safe base64 strings, as Node.js does.
// See: https://en.wikipedia.org/wiki/Base64#URL_applications
revLookup['-'.charCodeAt(0)]=62;
revLookup['_'.charCodeAt(0)]=63;

function getLens(b64){
var len=b64.length;

if(len%4>0){
throw new Error('Invalid string. Length must be a multiple of 4');
}

// Trim off extra bytes after placeholder bytes are found
// See: https://github.com/beatgammit/base64-js/issues/42
var validLen=b64.indexOf('=');
if(validLen===-1)validLen=len;

var placeHoldersLen=validLen===len?
0:
4-validLen%4;

return[validLen,placeHoldersLen];
}

// base64 is 4/3 + up to two characters of the original data
function byteLength(b64){
var lens=getLens(b64);
var validLen=lens[0];
var placeHoldersLen=lens[1];
return(validLen+placeHoldersLen)*3/4-placeHoldersLen;
}

function _byteLength(b64,validLen,placeHoldersLen){
return(validLen+placeHoldersLen)*3/4-placeHoldersLen;
}

function toByteArray(b64){
var tmp;
var lens=getLens(b64);
var validLen=lens[0];
var placeHoldersLen=lens[1];

var arr=new Arr(_byteLength(b64,validLen,placeHoldersLen));

var curByte=0;

// if there are placeholders, only get up to the last complete 4 chars
var len=placeHoldersLen>0?
validLen-4:
validLen;

var i;
for(i=0;i<len;i+=4){
tmp=
revLookup[b64.charCodeAt(i)]<<18|
revLookup[b64.charCodeAt(i+1)]<<12|
revLookup[b64.charCodeAt(i+2)]<<6|
revLookup[b64.charCodeAt(i+3)];
arr[curByte++]=tmp>>16&0xFF;
arr[curByte++]=tmp>>8&0xFF;
arr[curByte++]=tmp&0xFF;
}

if(placeHoldersLen===2){
tmp=
revLookup[b64.charCodeAt(i)]<<2|
revLookup[b64.charCodeAt(i+1)]>>4;
arr[curByte++]=tmp&0xFF;
}

if(placeHoldersLen===1){
tmp=
revLookup[b64.charCodeAt(i)]<<10|
revLookup[b64.charCodeAt(i+1)]<<4|
revLookup[b64.charCodeAt(i+2)]>>2;
arr[curByte++]=tmp>>8&0xFF;
arr[curByte++]=tmp&0xFF;
}

return arr;
}

function tripletToBase64(num){
return lookup[num>>18&0x3F]+
lookup[num>>12&0x3F]+
lookup[num>>6&0x3F]+
lookup[num&0x3F];
}

function encodeChunk(uint8,start,end){
var tmp;
var output=[];
for(var i=start;i<end;i+=3){
tmp=
(uint8[i]<<16&0xFF0000)+(
uint8[i+1]<<8&0xFF00)+(
uint8[i+2]&0xFF);
output.push(tripletToBase64(tmp));
}
return output.join('');
}

function fromByteArray(uint8){
var tmp;
var len=uint8.length;
var extraBytes=len%3;// if we have 1 byte left, pad 2 bytes
var parts=[];
var maxChunkLength=16383;// must be multiple of 3

// go through the array every three bytes, we'll deal with trailing stuff later
for(var i=0,len2=len-extraBytes;i<len2;i+=maxChunkLength){
parts.push(encodeChunk(
uint8,i,i+maxChunkLength>len2?len2:i+maxChunkLength));

}

// pad the end with zeros, but make sure to not forget the extra bytes
if(extraBytes===1){
tmp=uint8[len-1];
parts.push(
lookup[tmp>>2]+
lookup[tmp<<4&0x3F]+
'==');

}else if(extraBytes===2){
tmp=(uint8[len-2]<<8)+uint8[len-1];
parts.push(
lookup[tmp>>10]+
lookup[tmp>>4&0x3F]+
lookup[tmp<<2&0x3F]+
'=');

}

return parts.join('');
}

},{}],78:[function(require,module,exports){
/*!
 * Bowser - a browser detector
 * https://github.com/ded/bowser
 * MIT License | (c) Dustin Diaz 2015
 */

!function(root,name,definition){
if(typeof module!='undefined'&&module.exports)module.exports=definition();else
if(typeof define=='function'&&define.amd)define(name,definition);else
root[name]=definition();
}(this,'bowser',function(){
/**
    * See useragents.js for examples of navigator.userAgent
    */

var t=true;

function detect(ua){

function getFirstMatch(regex){
var match=ua.match(regex);
return match&&match.length>1&&match[1]||'';
}

function getSecondMatch(regex){
var match=ua.match(regex);
return match&&match.length>1&&match[2]||'';
}

var iosdevice=getFirstMatch(/(ipod|iphone|ipad)/i).toLowerCase(),
likeAndroid=/like android/i.test(ua),
android=!likeAndroid&&/android/i.test(ua),
nexusMobile=/nexus\s*[0-6]\s*/i.test(ua),
nexusTablet=!nexusMobile&&/nexus\s*[0-9]+/i.test(ua),
chromeos=/CrOS/.test(ua),
silk=/silk/i.test(ua),
sailfish=/sailfish/i.test(ua),
tizen=/tizen/i.test(ua),
webos=/(web|hpw)(o|0)s/i.test(ua),
windowsphone=/windows phone/i.test(ua),
samsungBrowser=/SamsungBrowser/i.test(ua),
windows=!windowsphone&&/windows/i.test(ua),
mac=!iosdevice&&!silk&&/macintosh/i.test(ua),
linux=!android&&!sailfish&&!tizen&&!webos&&/linux/i.test(ua),
edgeVersion=getSecondMatch(/edg([ea]|ios)\/(\d+(\.\d+)?)/i),
versionIdentifier=getFirstMatch(/version\/(\d+(\.\d+)?)/i),
tablet=/tablet/i.test(ua)&&!/tablet pc/i.test(ua),
mobile=!tablet&&/[^-]mobi/i.test(ua),
xbox=/xbox/i.test(ua),
result;

if(/opera/i.test(ua)){
//  an old Opera
result={
name:'Opera',
opera:t,
version:versionIdentifier||getFirstMatch(/(?:opera|opr|opios)[\s\/](\d+(\.\d+)?)/i)};

}else if(/opr\/|opios/i.test(ua)){
// a new Opera
result={
name:'Opera',
opera:t,
version:getFirstMatch(/(?:opr|opios)[\s\/](\d+(\.\d+)?)/i)||versionIdentifier};

}else
if(/SamsungBrowser/i.test(ua)){
result={
name:'Samsung Internet for Android',
samsungBrowser:t,
version:versionIdentifier||getFirstMatch(/(?:SamsungBrowser)[\s\/](\d+(\.\d+)?)/i)};

}else
if(/Whale/i.test(ua)){
result={
name:'NAVER Whale browser',
whale:t,
version:getFirstMatch(/(?:whale)[\s\/](\d+(?:\.\d+)+)/i)};

}else
if(/MZBrowser/i.test(ua)){
result={
name:'MZ Browser',
mzbrowser:t,
version:getFirstMatch(/(?:MZBrowser)[\s\/](\d+(?:\.\d+)+)/i)};

}else
if(/coast/i.test(ua)){
result={
name:'Opera Coast',
coast:t,
version:versionIdentifier||getFirstMatch(/(?:coast)[\s\/](\d+(\.\d+)?)/i)};

}else
if(/focus/i.test(ua)){
result={
name:'Focus',
focus:t,
version:getFirstMatch(/(?:focus)[\s\/](\d+(?:\.\d+)+)/i)};

}else
if(/yabrowser/i.test(ua)){
result={
name:'Yandex Browser',
yandexbrowser:t,
version:versionIdentifier||getFirstMatch(/(?:yabrowser)[\s\/](\d+(\.\d+)?)/i)};

}else
if(/ucbrowser/i.test(ua)){
result={
name:'UC Browser',
ucbrowser:t,
version:getFirstMatch(/(?:ucbrowser)[\s\/](\d+(?:\.\d+)+)/i)};

}else
if(/mxios/i.test(ua)){
result={
name:'Maxthon',
maxthon:t,
version:getFirstMatch(/(?:mxios)[\s\/](\d+(?:\.\d+)+)/i)};

}else
if(/epiphany/i.test(ua)){
result={
name:'Epiphany',
epiphany:t,
version:getFirstMatch(/(?:epiphany)[\s\/](\d+(?:\.\d+)+)/i)};

}else
if(/puffin/i.test(ua)){
result={
name:'Puffin',
puffin:t,
version:getFirstMatch(/(?:puffin)[\s\/](\d+(?:\.\d+)?)/i)};

}else
if(/sleipnir/i.test(ua)){
result={
name:'Sleipnir',
sleipnir:t,
version:getFirstMatch(/(?:sleipnir)[\s\/](\d+(?:\.\d+)+)/i)};

}else
if(/k-meleon/i.test(ua)){
result={
name:'K-Meleon',
kMeleon:t,
version:getFirstMatch(/(?:k-meleon)[\s\/](\d+(?:\.\d+)+)/i)};

}else
if(windowsphone){
result={
name:'Windows Phone',
osname:'Windows Phone',
windowsphone:t};

if(edgeVersion){
result.msedge=t;
result.version=edgeVersion;
}else
{
result.msie=t;
result.version=getFirstMatch(/iemobile\/(\d+(\.\d+)?)/i);
}
}else
if(/msie|trident/i.test(ua)){
result={
name:'Internet Explorer',
msie:t,
version:getFirstMatch(/(?:msie |rv:)(\d+(\.\d+)?)/i)};

}else if(chromeos){
result={
name:'Chrome',
osname:'Chrome OS',
chromeos:t,
chromeBook:t,
chrome:t,
version:getFirstMatch(/(?:chrome|crios|crmo)\/(\d+(\.\d+)?)/i)};

}else if(/edg([ea]|ios)/i.test(ua)){
result={
name:'Microsoft Edge',
msedge:t,
version:edgeVersion};

}else
if(/vivaldi/i.test(ua)){
result={
name:'Vivaldi',
vivaldi:t,
version:getFirstMatch(/vivaldi\/(\d+(\.\d+)?)/i)||versionIdentifier};

}else
if(sailfish){
result={
name:'Sailfish',
osname:'Sailfish OS',
sailfish:t,
version:getFirstMatch(/sailfish\s?browser\/(\d+(\.\d+)?)/i)};

}else
if(/seamonkey\//i.test(ua)){
result={
name:'SeaMonkey',
seamonkey:t,
version:getFirstMatch(/seamonkey\/(\d+(\.\d+)?)/i)};

}else
if(/firefox|iceweasel|fxios/i.test(ua)){
result={
name:'Firefox',
firefox:t,
version:getFirstMatch(/(?:firefox|iceweasel|fxios)[ \/](\d+(\.\d+)?)/i)};

if(/\((mobile|tablet);[^\)]*rv:[\d\.]+\)/i.test(ua)){
result.firefoxos=t;
result.osname='Firefox OS';
}
}else
if(silk){
result={
name:'Amazon Silk',
silk:t,
version:getFirstMatch(/silk\/(\d+(\.\d+)?)/i)};

}else
if(/phantom/i.test(ua)){
result={
name:'PhantomJS',
phantom:t,
version:getFirstMatch(/phantomjs\/(\d+(\.\d+)?)/i)};

}else
if(/slimerjs/i.test(ua)){
result={
name:'SlimerJS',
slimer:t,
version:getFirstMatch(/slimerjs\/(\d+(\.\d+)?)/i)};

}else
if(/blackberry|\bbb\d+/i.test(ua)||/rim\stablet/i.test(ua)){
result={
name:'BlackBerry',
osname:'BlackBerry OS',
blackberry:t,
version:versionIdentifier||getFirstMatch(/blackberry[\d]+\/(\d+(\.\d+)?)/i)};

}else
if(webos){
result={
name:'WebOS',
osname:'WebOS',
webos:t,
version:versionIdentifier||getFirstMatch(/w(?:eb)?osbrowser\/(\d+(\.\d+)?)/i)};

/touchpad\//i.test(ua)&&(result.touchpad=t);
}else
if(/bada/i.test(ua)){
result={
name:'Bada',
osname:'Bada',
bada:t,
version:getFirstMatch(/dolfin\/(\d+(\.\d+)?)/i)};

}else
if(tizen){
result={
name:'Tizen',
osname:'Tizen',
tizen:t,
version:getFirstMatch(/(?:tizen\s?)?browser\/(\d+(\.\d+)?)/i)||versionIdentifier};

}else
if(/qupzilla/i.test(ua)){
result={
name:'QupZilla',
qupzilla:t,
version:getFirstMatch(/(?:qupzilla)[\s\/](\d+(?:\.\d+)+)/i)||versionIdentifier};

}else
if(/chromium/i.test(ua)){
result={
name:'Chromium',
chromium:t,
version:getFirstMatch(/(?:chromium)[\s\/](\d+(?:\.\d+)?)/i)||versionIdentifier};

}else
if(/chrome|crios|crmo/i.test(ua)){
result={
name:'Chrome',
chrome:t,
version:getFirstMatch(/(?:chrome|crios|crmo)\/(\d+(\.\d+)?)/i)};

}else
if(android){
result={
name:'Android',
version:versionIdentifier};

}else
if(/safari|applewebkit/i.test(ua)){
result={
name:'Safari',
safari:t};

if(versionIdentifier){
result.version=versionIdentifier;
}
}else
if(iosdevice){
result={
name:iosdevice=='iphone'?'iPhone':iosdevice=='ipad'?'iPad':'iPod'};

// WTF: version is not part of user agent in web apps
if(versionIdentifier){
result.version=versionIdentifier;
}
}else
if(/googlebot/i.test(ua)){
result={
name:'Googlebot',
googlebot:t,
version:getFirstMatch(/googlebot\/(\d+(\.\d+))/i)||versionIdentifier};

}else
{
result={
name:getFirstMatch(/^(.*)\/(.*) /),
version:getSecondMatch(/^(.*)\/(.*) /)};

}

// set webkit or gecko flag for browsers based on these engines
if(!result.msedge&&/(apple)?webkit/i.test(ua)){
if(/(apple)?webkit\/537\.36/i.test(ua)){
result.name=result.name||"Blink";
result.blink=t;
}else{
result.name=result.name||"Webkit";
result.webkit=t;
}
if(!result.version&&versionIdentifier){
result.version=versionIdentifier;
}
}else if(!result.opera&&/gecko\//i.test(ua)){
result.name=result.name||"Gecko";
result.gecko=t;
result.version=result.version||getFirstMatch(/gecko\/(\d+(\.\d+)?)/i);
}

// set OS flags for platforms that have multiple browsers
if(!result.windowsphone&&(android||result.silk)){
result.android=t;
result.osname='Android';
}else if(!result.windowsphone&&iosdevice){
result[iosdevice]=t;
result.ios=t;
result.osname='iOS';
}else if(mac){
result.mac=t;
result.osname='macOS';
}else if(xbox){
result.xbox=t;
result.osname='Xbox';
}else if(windows){
result.windows=t;
result.osname='Windows';
}else if(linux){
result.linux=t;
result.osname='Linux';
}

function getWindowsVersion(s){
switch(s){
case'NT':return'NT';
case'XP':return'XP';
case'NT 5.0':return'2000';
case'NT 5.1':return'XP';
case'NT 5.2':return'2003';
case'NT 6.0':return'Vista';
case'NT 6.1':return'7';
case'NT 6.2':return'8';
case'NT 6.3':return'8.1';
case'NT 10.0':return'10';
default:return undefined;}

}

// OS version extraction
var osVersion='';
if(result.windows){
osVersion=getWindowsVersion(getFirstMatch(/Windows ((NT|XP)( \d\d?.\d)?)/i));
}else if(result.windowsphone){
osVersion=getFirstMatch(/windows phone (?:os)?\s?(\d+(\.\d+)*)/i);
}else if(result.mac){
osVersion=getFirstMatch(/Mac OS X (\d+([_\.\s]\d+)*)/i);
osVersion=osVersion.replace(/[_\s]/g,'.');
}else if(iosdevice){
osVersion=getFirstMatch(/os (\d+([_\s]\d+)*) like mac os x/i);
osVersion=osVersion.replace(/[_\s]/g,'.');
}else if(android){
osVersion=getFirstMatch(/android[ \/-](\d+(\.\d+)*)/i);
}else if(result.webos){
osVersion=getFirstMatch(/(?:web|hpw)os\/(\d+(\.\d+)*)/i);
}else if(result.blackberry){
osVersion=getFirstMatch(/rim\stablet\sos\s(\d+(\.\d+)*)/i);
}else if(result.bada){
osVersion=getFirstMatch(/bada\/(\d+(\.\d+)*)/i);
}else if(result.tizen){
osVersion=getFirstMatch(/tizen[\/\s](\d+(\.\d+)*)/i);
}
if(osVersion){
result.osversion=osVersion;
}

// device type extraction
var osMajorVersion=!result.windows&&osVersion.split('.')[0];
if(
tablet||
nexusTablet||
iosdevice=='ipad'||
android&&(osMajorVersion==3||osMajorVersion>=4&&!mobile)||
result.silk)
{
result.tablet=t;
}else if(
mobile||
iosdevice=='iphone'||
iosdevice=='ipod'||
android||
nexusMobile||
result.blackberry||
result.webos||
result.bada)
{
result.mobile=t;
}

// Graded Browser Support
// http://developer.yahoo.com/yui/articles/gbs
if(result.msedge||
result.msie&&result.version>=10||
result.yandexbrowser&&result.version>=15||
result.vivaldi&&result.version>=1.0||
result.chrome&&result.version>=20||
result.samsungBrowser&&result.version>=4||
result.whale&&compareVersions([result.version,'1.0'])===1||
result.mzbrowser&&compareVersions([result.version,'6.0'])===1||
result.focus&&compareVersions([result.version,'1.0'])===1||
result.firefox&&result.version>=20.0||
result.safari&&result.version>=6||
result.opera&&result.version>=10.0||
result.ios&&result.osversion&&result.osversion.split(".")[0]>=6||
result.blackberry&&result.version>=10.1||
result.chromium&&result.version>=20)
{
result.a=t;
}else
if(result.msie&&result.version<10||
result.chrome&&result.version<20||
result.firefox&&result.version<20.0||
result.safari&&result.version<6||
result.opera&&result.version<10.0||
result.ios&&result.osversion&&result.osversion.split(".")[0]<6||
result.chromium&&result.version<20)
{
result.c=t;
}else result.x=t;

return result;
}

var bowser=detect(typeof navigator!=='undefined'?navigator.userAgent||'':'');

bowser.test=function(browserList){
for(var i=0;i<browserList.length;++i){
var browserItem=browserList[i];
if(typeof browserItem==='string'){
if(browserItem in bowser){
return true;
}
}
}
return false;
};

/**
   * Get version precisions count
   *
   * @example
   *   getVersionPrecision("1.10.3") // 3
   *
   * @param  {string} version
   * @return {number}
   */
function getVersionPrecision(version){
return version.split(".").length;
}

/**
   * Array::map polyfill
   *
   * @param  {Array} arr
   * @param  {Function} iterator
   * @return {Array}
   */
function map(arr,iterator){
var result=[],i;
if(Array.prototype.map){
return Array.prototype.map.call(arr,iterator);
}
for(i=0;i<arr.length;i++){
result.push(iterator(arr[i]));
}
return result;
}

/**
   * Calculate browser version weight
   *
   * @example
   *   compareVersions(['1.10.2.1',  '1.8.2.1.90'])    // 1
   *   compareVersions(['1.010.2.1', '1.09.2.1.90']);  // 1
   *   compareVersions(['1.10.2.1',  '1.10.2.1']);     // 0
   *   compareVersions(['1.10.2.1',  '1.0800.2']);     // -1
   *
   * @param  {Array<String>} versions versions to compare
   * @return {Number} comparison result
   */
function compareVersions(versions){
// 1) get common precision for both versions, for example for "10.0" and "9" it should be 2
var precision=Math.max(getVersionPrecision(versions[0]),getVersionPrecision(versions[1]));
var chunks=map(versions,function(version){
var delta=precision-getVersionPrecision(version);

// 2) "9" -> "9.0" (for precision = 2)
version=version+new Array(delta+1).join(".0");

// 3) "9.0" -> ["000000000"", "000000009"]
return map(version.split("."),function(chunk){
return new Array(20-chunk.length).join("0")+chunk;
}).reverse();
});

// iterate in reverse order by reversed chunks array
while(--precision>=0){
// 4) compare: "000000009" > "000000010" = false (but "9" > "10" = true)
if(chunks[0][precision]>chunks[1][precision]){
return 1;
}else
if(chunks[0][precision]===chunks[1][precision]){
if(precision===0){
// all version chunks are same
return 0;
}
}else
{
return-1;
}
}
}

/**
   * Check if browser is unsupported
   *
   * @example
   *   bowser.isUnsupportedBrowser({
   *     msie: "10",
   *     firefox: "23",
   *     chrome: "29",
   *     safari: "5.1",
   *     opera: "16",
   *     phantom: "534"
   *   });
   *
   * @param  {Object}  minVersions map of minimal version to browser
   * @param  {Boolean} [strictMode = false] flag to return false if browser wasn't found in map
   * @param  {String}  [ua] user agent string
   * @return {Boolean}
   */
function isUnsupportedBrowser(minVersions,strictMode,ua){
var _bowser=bowser;

// make strictMode param optional with ua param usage
if(typeof strictMode==='string'){
ua=strictMode;
strictMode=void 0;
}

if(strictMode===void 0){
strictMode=false;
}
if(ua){
_bowser=detect(ua);
}

var version=""+_bowser.version;
for(var browser in minVersions){
if(minVersions.hasOwnProperty(browser)){
if(_bowser[browser]){
if(typeof minVersions[browser]!=='string'){
throw new Error('Browser version in the minVersion map should be a string: '+browser+': '+String(minVersions));
}

// browser version and min supported version.
return compareVersions([version,minVersions[browser]])<0;
}
}
}

return strictMode;// not found
}

/**
   * Check if browser is supported
   *
   * @param  {Object} minVersions map of minimal version to browser
   * @param  {Boolean} [strictMode = false] flag to return false if browser wasn't found in map
   * @param  {String}  [ua] user agent string
   * @return {Boolean}
   */
function check(minVersions,strictMode,ua){
return!isUnsupportedBrowser(minVersions,strictMode,ua);
}

bowser.isUnsupportedBrowser=isUnsupportedBrowser;
bowser.compareVersions=compareVersions;
bowser.check=check;

/*
   * Set our detect method to the main bowser object so we can
   * reuse it to test other user agents.
   * This is needed to implement future tests.
   */
bowser._detect=detect;

/*
   * Set our detect public method to the main bowser object
   * This is needed to implement bowser in server side
   */
bowser.detect=detect;
return bowser;
});

},{}],79:[function(require,module,exports){

},{}],80:[function(require,module,exports){
(function(global){
var ClientRequest=require('./lib/request');
var response=require('./lib/response');
var extend=require('xtend');
var statusCodes=require('builtin-status-codes');
var url=require('url');

var http=exports;

http.request=function(opts,cb){
if(typeof opts==='string')
opts=url.parse(opts);else

opts=extend(opts);

// Normally, the page is loaded from http or https, so not specifying a protocol
// will result in a (valid) protocol-relative url. However, this won't work if
// the protocol is something else, like 'file:'
var defaultProtocol=global.location.protocol.search(/^https?:$/)===-1?'http:':'';

var protocol=opts.protocol||defaultProtocol;
var host=opts.hostname||opts.host;
var port=opts.port;
var path=opts.path||'/';

// Necessary for IPv6 addresses
if(host&&host.indexOf(':')!==-1)
host='['+host+']';

// This may be a relative url. The browser should always be able to interpret it correctly.
opts.url=(host?protocol+'//'+host:'')+(port?':'+port:'')+path;
opts.method=(opts.method||'GET').toUpperCase();
opts.headers=opts.headers||{};

// Also valid opts.auth, opts.mode

var req=new ClientRequest(opts);
if(cb)
req.on('response',cb);
return req;
};

http.get=function get(opts,cb){
var req=http.request(opts,cb);
req.end();
return req;
};

http.ClientRequest=ClientRequest;
http.IncomingMessage=response.IncomingMessage;

http.Agent=function(){};
http.Agent.defaultMaxSockets=4;

http.globalAgent=new http.Agent();

http.STATUS_CODES=statusCodes;

http.METHODS=[
'CHECKOUT',
'CONNECT',
'COPY',
'DELETE',
'GET',
'HEAD',
'LOCK',
'M-SEARCH',
'MERGE',
'MKACTIVITY',
'MKCOL',
'MOVE',
'NOTIFY',
'OPTIONS',
'PATCH',
'POST',
'PROPFIND',
'PROPPATCH',
'PURGE',
'PUT',
'REPORT',
'SEARCH',
'SUBSCRIBE',
'TRACE',
'UNLOCK',
'UNSUBSCRIBE'];

}).call(this,typeof global!=="undefined"?global:typeof self!=="undefined"?self:typeof window!=="undefined"?window:{});
},{"./lib/request":82,"./lib/response":83,"builtin-status-codes":100,"url":393,"xtend":385}],81:[function(require,module,exports){
(function(global){
exports.fetch=isFunction(global.fetch)&&isFunction(global.ReadableStream);

exports.writableStream=isFunction(global.WritableStream);

exports.abortController=isFunction(global.AbortController);

// The xhr request to example.com may violate some restrictive CSP configurations,
// so if we're running in a browser that supports `fetch`, avoid calling getXHR()
// and assume support for certain features below.
var xhr;
function getXHR(){
// Cache the xhr value
if(xhr!==undefined)return xhr;

if(global.XMLHttpRequest){
xhr=new global.XMLHttpRequest();
// If XDomainRequest is available (ie only, where xhr might not work
// cross domain), use the page location. Otherwise use example.com
// Note: this doesn't actually make an http request.
try{
xhr.open('GET',global.XDomainRequest?'/':'https://example.com');
}catch(e){
xhr=null;
}
}else{
// Service workers don't have XHR
xhr=null;
}
return xhr;
}

function checkTypeSupport(type){
var xhr=getXHR();
if(!xhr)return false;
try{
xhr.responseType=type;
return xhr.responseType===type;
}catch(e){}
return false;
}

// If fetch is supported, then arraybuffer will be supported too. Skip calling
// checkTypeSupport(), since that calls getXHR().
exports.arraybuffer=exports.fetch||checkTypeSupport('arraybuffer');

// These next two tests unavoidably show warnings in Chrome. Since fetch will always
// be used if it's available, just return false for these to avoid the warnings.
exports.msstream=!exports.fetch&&checkTypeSupport('ms-stream');
exports.mozchunkedarraybuffer=!exports.fetch&&checkTypeSupport('moz-chunked-arraybuffer');

// If fetch is supported, then overrideMimeType will be supported too. Skip calling
// getXHR().
exports.overrideMimeType=exports.fetch||(getXHR()?isFunction(getXHR().overrideMimeType):false);

function isFunction(value){
return typeof value==='function';
}

xhr=null;// Help gc

}).call(this,typeof global!=="undefined"?global:typeof self!=="undefined"?self:typeof window!=="undefined"?window:{});
},{}],82:[function(require,module,exports){
(function(process,global,Buffer){
var capability=require('./capability');
var inherits=require('inherits');
var response=require('./response');
var stream=require('readable-stream');

var IncomingMessage=response.IncomingMessage;
var rStates=response.readyStates;

function decideMode(preferBinary,useFetch){
if(capability.fetch&&useFetch){
return'fetch';
}else if(capability.mozchunkedarraybuffer){
return'moz-chunked-arraybuffer';
}else if(capability.msstream){
return'ms-stream';
}else if(capability.arraybuffer&&preferBinary){
return'arraybuffer';
}else{
return'text';
}
}

var ClientRequest=module.exports=function(opts){
var self=this;
stream.Writable.call(self);

self._opts=opts;
self._body=[];
self._headers={};
if(opts.auth)
self.setHeader('Authorization','Basic '+Buffer.from(opts.auth).toString('base64'));
Object.keys(opts.headers).forEach(function(name){
self.setHeader(name,opts.headers[name]);
});

var preferBinary;
var useFetch=true;
if(opts.mode==='disable-fetch'||'requestTimeout'in opts&&!capability.abortController){
// If the use of XHR should be preferred. Not typically needed.
useFetch=false;
preferBinary=true;
}else if(opts.mode==='prefer-streaming'){
// If streaming is a high priority but binary compatibility and
// the accuracy of the 'content-type' header aren't
preferBinary=false;
}else if(opts.mode==='allow-wrong-content-type'){
// If streaming is more important than preserving the 'content-type' header
preferBinary=!capability.overrideMimeType;
}else if(!opts.mode||opts.mode==='default'||opts.mode==='prefer-fast'){
// Use binary if text streaming may corrupt data or the content-type header, or for speed
preferBinary=true;
}else{
throw new Error('Invalid value for opts.mode');
}
self._mode=decideMode(preferBinary,useFetch);
self._fetchTimer=null;

self.on('finish',function(){
self._onFinish();
});
};

inherits(ClientRequest,stream.Writable);

ClientRequest.prototype.setHeader=function(name,value){
var self=this;
var lowerName=name.toLowerCase();
// This check is not necessary, but it prevents warnings from browsers about setting unsafe
// headers. To be honest I'm not entirely sure hiding these warnings is a good thing, but
// http-browserify did it, so I will too.
if(unsafeHeaders.indexOf(lowerName)!==-1)
return;

self._headers[lowerName]={
name:name,
value:value};

};

ClientRequest.prototype.getHeader=function(name){
var header=this._headers[name.toLowerCase()];
if(header)
return header.value;
return null;
};

ClientRequest.prototype.removeHeader=function(name){
var self=this;
delete self._headers[name.toLowerCase()];
};

ClientRequest.prototype._onFinish=function(){
var self=this;

if(self._destroyed)
return;
var opts=self._opts;

var headersObj=self._headers;
var body=null;
if(opts.method!=='GET'&&opts.method!=='HEAD'){
body=new Blob(self._body,{
type:(headersObj['content-type']||{}).value||''});

}

// create flattened list of headers
var headersList=[];
Object.keys(headersObj).forEach(function(keyName){
var name=headersObj[keyName].name;
var value=headersObj[keyName].value;
if(Array.isArray(value)){
value.forEach(function(v){
headersList.push([name,v]);
});
}else{
headersList.push([name,value]);
}
});

if(self._mode==='fetch'){
var signal=null;
if(capability.abortController){
var controller=new AbortController();
signal=controller.signal;
self._fetchAbortController=controller;

if('requestTimeout'in opts&&opts.requestTimeout!==0){
self._fetchTimer=global.setTimeout(function(){
self.emit('requestTimeout');
if(self._fetchAbortController)
self._fetchAbortController.abort();
},opts.requestTimeout);
}
}

global.fetch(self._opts.url,{
method:self._opts.method,
headers:headersList,
body:body||undefined,
mode:'cors',
credentials:opts.withCredentials?'include':'same-origin',
signal:signal}).
then(function(response){
self._fetchResponse=response;
self._connect();
},function(reason){
global.clearTimeout(self._fetchTimer);
if(!self._destroyed)
self.emit('error',reason);
});
}else{
var xhr=self._xhr=new global.XMLHttpRequest();
try{
xhr.open(self._opts.method,self._opts.url,true);
}catch(err){
process.nextTick(function(){
self.emit('error',err);
});
return;
}

// Can't set responseType on really old browsers
if('responseType'in xhr)
xhr.responseType=self._mode;

if('withCredentials'in xhr)
xhr.withCredentials=!!opts.withCredentials;

if(self._mode==='text'&&'overrideMimeType'in xhr)
xhr.overrideMimeType('text/plain; charset=x-user-defined');

if('requestTimeout'in opts){
xhr.timeout=opts.requestTimeout;
xhr.ontimeout=function(){
self.emit('requestTimeout');
};
}

headersList.forEach(function(header){
xhr.setRequestHeader(header[0],header[1]);
});

self._response=null;
xhr.onreadystatechange=function(){
switch(xhr.readyState){
case rStates.LOADING:
case rStates.DONE:
self._onXHRProgress();
break;}

};
// Necessary for streaming in Firefox, since xhr.response is ONLY defined
// in onprogress, not in onreadystatechange with xhr.readyState = 3
if(self._mode==='moz-chunked-arraybuffer'){
xhr.onprogress=function(){
self._onXHRProgress();
};
}

xhr.onerror=function(){
if(self._destroyed)
return;
self.emit('error',new Error('XHR error'));
};

try{
xhr.send(body);
}catch(err){
process.nextTick(function(){
self.emit('error',err);
});
return;
}
}
};

/**
 * Checks if xhr.status is readable and non-zero, indicating no error.
 * Even though the spec says it should be available in readyState 3,
 * accessing it throws an exception in IE8
 */
function statusValid(xhr){
try{
var status=xhr.status;
return status!==null&&status!==0;
}catch(e){
return false;
}
}

ClientRequest.prototype._onXHRProgress=function(){
var self=this;

if(!statusValid(self._xhr)||self._destroyed)
return;

if(!self._response)
self._connect();

self._response._onXHRProgress();
};

ClientRequest.prototype._connect=function(){
var self=this;

if(self._destroyed)
return;

self._response=new IncomingMessage(self._xhr,self._fetchResponse,self._mode,self._fetchTimer);
self._response.on('error',function(err){
self.emit('error',err);
});

self.emit('response',self._response);
};

ClientRequest.prototype._write=function(chunk,encoding,cb){
var self=this;

self._body.push(chunk);
cb();
};

ClientRequest.prototype.abort=ClientRequest.prototype.destroy=function(){
var self=this;
self._destroyed=true;
global.clearTimeout(self._fetchTimer);
if(self._response)
self._response._destroyed=true;
if(self._xhr)
self._xhr.abort();else
if(self._fetchAbortController)
self._fetchAbortController.abort();
};

ClientRequest.prototype.end=function(data,encoding,cb){
var self=this;
if(typeof data==='function'){
cb=data;
data=undefined;
}

stream.Writable.prototype.end.call(self,data,encoding,cb);
};

ClientRequest.prototype.flushHeaders=function(){};
ClientRequest.prototype.setTimeout=function(){};
ClientRequest.prototype.setNoDelay=function(){};
ClientRequest.prototype.setSocketKeepAlive=function(){};

// Taken from http://www.w3.org/TR/XMLHttpRequest/#the-setrequestheader%28%29-method
var unsafeHeaders=[
'accept-charset',
'accept-encoding',
'access-control-request-headers',
'access-control-request-method',
'connection',
'content-length',
'cookie',
'cookie2',
'date',
'dnt',
'expect',
'host',
'keep-alive',
'origin',
'referer',
'te',
'trailer',
'transfer-encoding',
'upgrade',
'via'];


}).call(this,require('_process'),typeof global!=="undefined"?global:typeof self!=="undefined"?self:typeof window!=="undefined"?window:{},require("buffer").Buffer);
},{"./capability":81,"./response":83,"_process":392,"buffer":99,"inherits":306,"readable-stream":98}],83:[function(require,module,exports){
(function(process,global,Buffer){
var capability=require('./capability');
var inherits=require('inherits');
var stream=require('readable-stream');

var rStates=exports.readyStates={
UNSENT:0,
OPENED:1,
HEADERS_RECEIVED:2,
LOADING:3,
DONE:4};


var IncomingMessage=exports.IncomingMessage=function(xhr,response,mode,fetchTimer){
var self=this;
stream.Readable.call(self);

self._mode=mode;
self.headers={};
self.rawHeaders=[];
self.trailers={};
self.rawTrailers=[];

// Fake the 'close' event, but only once 'end' fires
self.on('end',function(){
// The nextTick is necessary to prevent the 'request' module from causing an infinite loop
process.nextTick(function(){
self.emit('close');
});
});

if(mode==='fetch'){var














































read=function read(){
reader.read().then(function(result){
if(self._destroyed)
return;
if(result.done){
global.clearTimeout(fetchTimer);
self.push(null);
return;
}
self.push(Buffer.from(result.value));
read();
}).catch(function(err){
global.clearTimeout(fetchTimer);
if(!self._destroyed)
self.emit('error',err);
});
};self._fetchResponse=response;self.url=response.url;self.statusCode=response.status;self.statusMessage=response.statusText;response.headers.forEach(function(header,key){self.headers[key.toLowerCase()]=header;self.rawHeaders.push(key,header);});if(capability.writableStream){var writable=new WritableStream({write:function write(chunk){return new Promise(function(resolve,reject){if(self._destroyed){reject();}else if(self.push(Buffer.from(chunk))){resolve();}else{self._resumeFetch=resolve;}});},close:function close(){global.clearTimeout(fetchTimer);if(!self._destroyed)self.push(null);},abort:function abort(err){if(!self._destroyed)self.emit('error',err);}});try{response.body.pipeTo(writable).catch(function(err){global.clearTimeout(fetchTimer);if(!self._destroyed)self.emit('error',err);});return;}catch(e){}// pipeTo method isn't defined. Can't find a better way to feature test this
}// fallback for when writableStream or pipeTo aren't available
var reader=response.body.getReader();read();}else{
self._xhr=xhr;
self._pos=0;

self.url=xhr.responseURL;
self.statusCode=xhr.status;
self.statusMessage=xhr.statusText;
var headers=xhr.getAllResponseHeaders().split(/\r?\n/);
headers.forEach(function(header){
var matches=header.match(/^([^:]+):\s*(.*)/);
if(matches){
var key=matches[1].toLowerCase();
if(key==='set-cookie'){
if(self.headers[key]===undefined){
self.headers[key]=[];
}
self.headers[key].push(matches[2]);
}else if(self.headers[key]!==undefined){
self.headers[key]+=', '+matches[2];
}else{
self.headers[key]=matches[2];
}
self.rawHeaders.push(matches[1],matches[2]);
}
});

self._charset='x-user-defined';
if(!capability.overrideMimeType){
var mimeType=self.rawHeaders['mime-type'];
if(mimeType){
var charsetMatch=mimeType.match(/;\s*charset=([^;])(;|$)/);
if(charsetMatch){
self._charset=charsetMatch[1].toLowerCase();
}
}
if(!self._charset)
self._charset='utf-8';// best guess
}
}
};

inherits(IncomingMessage,stream.Readable);

IncomingMessage.prototype._read=function(){
var self=this;

var resolve=self._resumeFetch;
if(resolve){
self._resumeFetch=null;
resolve();
}
};

IncomingMessage.prototype._onXHRProgress=function(){
var self=this;

var xhr=self._xhr;

var response=null;
switch(self._mode){
case'text':
response=xhr.responseText;
if(response.length>self._pos){
var newData=response.substr(self._pos);
if(self._charset==='x-user-defined'){
var buffer=Buffer.alloc(newData.length);
for(var i=0;i<newData.length;i++){
buffer[i]=newData.charCodeAt(i)&0xff;}

self.push(buffer);
}else{
self.push(newData,self._charset);
}
self._pos=response.length;
}
break;
case'arraybuffer':
if(xhr.readyState!==rStates.DONE||!xhr.response)
break;
response=xhr.response;
self.push(Buffer.from(new Uint8Array(response)));
break;
case'moz-chunked-arraybuffer':// take whole
response=xhr.response;
if(xhr.readyState!==rStates.LOADING||!response)
break;
self.push(Buffer.from(new Uint8Array(response)));
break;
case'ms-stream':
response=xhr.response;
if(xhr.readyState!==rStates.LOADING)
break;
var reader=new global.MSStreamReader();
reader.onprogress=function(){
if(reader.result.byteLength>self._pos){
self.push(Buffer.from(new Uint8Array(reader.result.slice(self._pos))));
self._pos=reader.result.byteLength;
}
};
reader.onload=function(){
self.push(null);
};
// reader.onerror = ??? // TODO: this
reader.readAsArrayBuffer(response);
break;}


// The ms-stream case handles end separately in reader.onload()
if(self._xhr.readyState===rStates.DONE&&self._mode!=='ms-stream'){
self.push(null);
}
};

}).call(this,require('_process'),typeof global!=="undefined"?global:typeof self!=="undefined"?self:typeof window!=="undefined"?window:{},require("buffer").Buffer);
},{"./capability":81,"_process":392,"buffer":99,"inherits":306,"readable-stream":98}],84:[function(require,module,exports){
'use strict';

function _inheritsLoose(subClass,superClass){subClass.prototype=Object.create(superClass.prototype);subClass.prototype.constructor=subClass;subClass.__proto__=superClass;}

var codes={};

function createErrorType(code,message,Base){
if(!Base){
Base=Error;
}

function getMessage(arg1,arg2,arg3){
if(typeof message==='string'){
return message;
}else{
return message(arg1,arg2,arg3);
}
}

var NodeError=
/*#__PURE__*/
function(_Base){
_inheritsLoose(NodeError,_Base);

function NodeError(arg1,arg2,arg3){
return _Base.call(this,getMessage(arg1,arg2,arg3))||this;
}

return NodeError;
}(Base);

NodeError.prototype.name=Base.name;
NodeError.prototype.code=code;
codes[code]=NodeError;
}// https://github.com/nodejs/node/blob/v10.8.0/lib/internal/errors.js


function oneOf(expected,thing){
if(Array.isArray(expected)){
var len=expected.length;
expected=expected.map(function(i){
return String(i);
});

if(len>2){
return"one of ".concat(thing," ").concat(expected.slice(0,len-1).join(', '),", or ")+expected[len-1];
}else if(len===2){
return"one of ".concat(thing," ").concat(expected[0]," or ").concat(expected[1]);
}else{
return"of ".concat(thing," ").concat(expected[0]);
}
}else{
return"of ".concat(thing," ").concat(String(expected));
}
}// https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Global_Objects/String/startsWith


function startsWith(str,search,pos){
return str.substr(!pos||pos<0?0:+pos,search.length)===search;
}// https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Global_Objects/String/endsWith


function endsWith(str,search,this_len){
if(this_len===undefined||this_len>str.length){
this_len=str.length;
}

return str.substring(this_len-search.length,this_len)===search;
}// https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Global_Objects/String/includes


function includes(str,search,start){
if(typeof start!=='number'){
start=0;
}

if(start+search.length>str.length){
return false;
}else{
return str.indexOf(search,start)!==-1;
}
}

createErrorType('ERR_INVALID_OPT_VALUE',function(name,value){
return'The value "'+value+'" is invalid for option "'+name+'"';
},TypeError);
createErrorType('ERR_INVALID_ARG_TYPE',function(name,expected,actual){
// determiner: 'must be' or 'must not be'
var determiner;

if(typeof expected==='string'&&startsWith(expected,'not ')){
determiner='must not be';
expected=expected.replace(/^not /,'');
}else{
determiner='must be';
}

var msg;

if(endsWith(name,' argument')){
// For cases like 'first argument'
msg="The ".concat(name," ").concat(determiner," ").concat(oneOf(expected,'type'));
}else{
var type=includes(name,'.')?'property':'argument';
msg="The \"".concat(name,"\" ").concat(type," ").concat(determiner," ").concat(oneOf(expected,'type'));
}

msg+=". Received type ".concat(typeof actual);
return msg;
},TypeError);
createErrorType('ERR_STREAM_PUSH_AFTER_EOF','stream.push() after EOF');
createErrorType('ERR_METHOD_NOT_IMPLEMENTED',function(name){
return'The '+name+' method is not implemented';
});
createErrorType('ERR_STREAM_PREMATURE_CLOSE','Premature close');
createErrorType('ERR_STREAM_DESTROYED',function(name){
return'Cannot call '+name+' after a stream was destroyed';
});
createErrorType('ERR_MULTIPLE_CALLBACK','Callback called multiple times');
createErrorType('ERR_STREAM_CANNOT_PIPE','Cannot pipe, not readable');
createErrorType('ERR_STREAM_WRITE_AFTER_END','write after end');
createErrorType('ERR_STREAM_NULL_VALUES','May not write null values to stream',TypeError);
createErrorType('ERR_UNKNOWN_ENCODING',function(arg){
return'Unknown encoding: '+arg;
},TypeError);
createErrorType('ERR_STREAM_UNSHIFT_AFTER_END_EVENT','stream.unshift() after end event');
module.exports.codes=codes;

},{}],85:[function(require,module,exports){
(function(process){
// Copyright Joyent, Inc. and other Node contributors.
//
// Permission is hereby granted, free of charge, to any person obtaining a
// copy of this software and associated documentation files (the
// "Software"), to deal in the Software without restriction, including
// without limitation the rights to use, copy, modify, merge, publish,
// distribute, sublicense, and/or sell copies of the Software, and to permit
// persons to whom the Software is furnished to do so, subject to the
// following conditions:
//
// The above copyright notice and this permission notice shall be included
// in all copies or substantial portions of the Software.
//
// THE SOFTWARE IS PROVIDED "AS IS", WITHOUT WARRANTY OF ANY KIND, EXPRESS
// OR IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF
// MERCHANTABILITY, FITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN
// NO EVENT SHALL THE AUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM,
// DAMAGES OR OTHER LIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR
// OTHERWISE, ARISING FROM, OUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE
// USE OR OTHER DEALINGS IN THE SOFTWARE.
// a duplex stream is just a stream that is both readable and writable.
// Since JS doesn't have multiple prototypal inheritance, this class
// prototypally inherits from Readable, and then parasitically from
// Writable.
'use strict';
/*<replacement>*/

var objectKeys=Object.keys||function(obj){
var keys=[];

for(var key in obj){
keys.push(key);
}

return keys;
};
/*</replacement>*/


module.exports=Duplex;

var Readable=require('./_stream_readable');

var Writable=require('./_stream_writable');

require('inherits')(Duplex,Readable);

{
// Allow the keys array to be GC'ed.
var keys=objectKeys(Writable.prototype);

for(var v=0;v<keys.length;v++){
var method=keys[v];
if(!Duplex.prototype[method])Duplex.prototype[method]=Writable.prototype[method];
}
}

function Duplex(options){
if(!(this instanceof Duplex))return new Duplex(options);
Readable.call(this,options);
Writable.call(this,options);
this.allowHalfOpen=true;

if(options){
if(options.readable===false)this.readable=false;
if(options.writable===false)this.writable=false;

if(options.allowHalfOpen===false){
this.allowHalfOpen=false;
this.once('end',onend);
}
}
}

Object.defineProperty(Duplex.prototype,'writableHighWaterMark',{
// making it explicit this property is not enumerable
// because otherwise some prototype manipulation in
// userland will fail
enumerable:false,
get:function get(){
return this._writableState.highWaterMark;
}});

Object.defineProperty(Duplex.prototype,'writableBuffer',{
// making it explicit this property is not enumerable
// because otherwise some prototype manipulation in
// userland will fail
enumerable:false,
get:function get(){
return this._writableState&&this._writableState.getBuffer();
}});

Object.defineProperty(Duplex.prototype,'writableLength',{
// making it explicit this property is not enumerable
// because otherwise some prototype manipulation in
// userland will fail
enumerable:false,
get:function get(){
return this._writableState.length;
}});
// the no-half-open enforcer

function onend(){
// If the writable side ended, then we're ok.
if(this._writableState.ended)return;// no more data can be written.
// But allow more writes to happen in this tick.

process.nextTick(onEndNT,this);
}

function onEndNT(self){
self.end();
}

Object.defineProperty(Duplex.prototype,'destroyed',{
// making it explicit this property is not enumerable
// because otherwise some prototype manipulation in
// userland will fail
enumerable:false,
get:function get(){
if(this._readableState===undefined||this._writableState===undefined){
return false;
}

return this._readableState.destroyed&&this._writableState.destroyed;
},
set:function set(value){
// we ignore the value if the stream
// has not been initialized yet
if(this._readableState===undefined||this._writableState===undefined){
return;
}// backward compatibility, the user is explicitly
// managing destroyed


this._readableState.destroyed=value;
this._writableState.destroyed=value;
}});

}).call(this,require('_process'));
},{"./_stream_readable":87,"./_stream_writable":89,"_process":392,"inherits":306}],86:[function(require,module,exports){
// Copyright Joyent, Inc. and other Node contributors.
//
// Permission is hereby granted, free of charge, to any person obtaining a
// copy of this software and associated documentation files (the
// "Software"), to deal in the Software without restriction, including
// without limitation the rights to use, copy, modify, merge, publish,
// distribute, sublicense, and/or sell copies of the Software, and to permit
// persons to whom the Software is furnished to do so, subject to the
// following conditions:
//
// The above copyright notice and this permission notice shall be included
// in all copies or substantial portions of the Software.
//
// THE SOFTWARE IS PROVIDED "AS IS", WITHOUT WARRANTY OF ANY KIND, EXPRESS
// OR IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF
// MERCHANTABILITY, FITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN
// NO EVENT SHALL THE AUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM,
// DAMAGES OR OTHER LIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR
// OTHERWISE, ARISING FROM, OUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE
// USE OR OTHER DEALINGS IN THE SOFTWARE.
// a passthrough stream.
// basically just the most minimal sort of Transform stream.
// Every written chunk gets output as-is.
'use strict';

module.exports=PassThrough;

var Transform=require('./_stream_transform');

require('inherits')(PassThrough,Transform);

function PassThrough(options){
if(!(this instanceof PassThrough))return new PassThrough(options);
Transform.call(this,options);
}

PassThrough.prototype._transform=function(chunk,encoding,cb){
cb(null,chunk);
};
},{"./_stream_transform":88,"inherits":306}],87:[function(require,module,exports){
(function(process,global){
// Copyright Joyent, Inc. and other Node contributors.
//
// Permission is hereby granted, free of charge, to any person obtaining a
// copy of this software and associated documentation files (the
// "Software"), to deal in the Software without restriction, including
// without limitation the rights to use, copy, modify, merge, publish,
// distribute, sublicense, and/or sell copies of the Software, and to permit
// persons to whom the Software is furnished to do so, subject to the
// following conditions:
//
// The above copyright notice and this permission notice shall be included
// in all copies or substantial portions of the Software.
//
// THE SOFTWARE IS PROVIDED "AS IS", WITHOUT WARRANTY OF ANY KIND, EXPRESS
// OR IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF
// MERCHANTABILITY, FITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN
// NO EVENT SHALL THE AUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM,
// DAMAGES OR OTHER LIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR
// OTHERWISE, ARISING FROM, OUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE
// USE OR OTHER DEALINGS IN THE SOFTWARE.
'use strict';

module.exports=Readable;
/*<replacement>*/

var Duplex;
/*</replacement>*/

Readable.ReadableState=ReadableState;
/*<replacement>*/

var EE=require('events').EventEmitter;

var EElistenerCount=function EElistenerCount(emitter,type){
return emitter.listeners(type).length;
};
/*</replacement>*/

/*<replacement>*/


var Stream=require('./internal/streams/stream');
/*</replacement>*/


var Buffer=require('buffer').Buffer;

var OurUint8Array=global.Uint8Array||function(){};

function _uint8ArrayToBuffer(chunk){
return Buffer.from(chunk);
}

function _isUint8Array(obj){
return Buffer.isBuffer(obj)||obj instanceof OurUint8Array;
}
/*<replacement>*/


var debugUtil=require('util');

var debug;

if(debugUtil&&debugUtil.debuglog){
debug=debugUtil.debuglog('stream');
}else{
debug=function debug(){};
}
/*</replacement>*/


var BufferList=require('./internal/streams/buffer_list');

var destroyImpl=require('./internal/streams/destroy');

var _require=require('./internal/streams/state'),
getHighWaterMark=_require.getHighWaterMark;

var _require$codes=require('../errors').codes,
ERR_INVALID_ARG_TYPE=_require$codes.ERR_INVALID_ARG_TYPE,
ERR_STREAM_PUSH_AFTER_EOF=_require$codes.ERR_STREAM_PUSH_AFTER_EOF,
ERR_METHOD_NOT_IMPLEMENTED=_require$codes.ERR_METHOD_NOT_IMPLEMENTED,
ERR_STREAM_UNSHIFT_AFTER_END_EVENT=_require$codes.ERR_STREAM_UNSHIFT_AFTER_END_EVENT;// Lazy loaded to improve the startup performance.


var StringDecoder;
var createReadableStreamAsyncIterator;
var from;

require('inherits')(Readable,Stream);

var errorOrDestroy=destroyImpl.errorOrDestroy;
var kProxyEvents=['error','close','destroy','pause','resume'];

function prependListener(emitter,event,fn){
// Sadly this is not cacheable as some libraries bundle their own
// event emitter implementation with them.
if(typeof emitter.prependListener==='function')return emitter.prependListener(event,fn);// This is a hack to make sure that our error handler is attached before any
// userland ones.  NEVER DO THIS. This is here only because this code needs
// to continue to work with older versions of Node.js that do not include
// the prependListener() method. The goal is to eventually remove this hack.

if(!emitter._events||!emitter._events[event])emitter.on(event,fn);else if(Array.isArray(emitter._events[event]))emitter._events[event].unshift(fn);else emitter._events[event]=[fn,emitter._events[event]];
}

function ReadableState(options,stream,isDuplex){
Duplex=Duplex||require('./_stream_duplex');
options=options||{};// Duplex streams are both readable and writable, but share
// the same options object.
// However, some cases require setting options to different
// values for the readable and the writable sides of the duplex stream.
// These options can be provided separately as readableXXX and writableXXX.

if(typeof isDuplex!=='boolean')isDuplex=stream instanceof Duplex;// object stream flag. Used to make read(n) ignore n and to
// make all the buffer merging and length checks go away

this.objectMode=!!options.objectMode;
if(isDuplex)this.objectMode=this.objectMode||!!options.readableObjectMode;// the point at which it stops calling _read() to fill the buffer
// Note: 0 is a valid value, means "don't call _read preemptively ever"

this.highWaterMark=getHighWaterMark(this,options,'readableHighWaterMark',isDuplex);// A linked list is used to store data chunks instead of an array because the
// linked list can remove elements from the beginning faster than
// array.shift()

this.buffer=new BufferList();
this.length=0;
this.pipes=null;
this.pipesCount=0;
this.flowing=null;
this.ended=false;
this.endEmitted=false;
this.reading=false;// a flag to be able to tell if the event 'readable'/'data' is emitted
// immediately, or on a later tick.  We set this to true at first, because
// any actions that shouldn't happen until "later" should generally also
// not happen before the first read call.

this.sync=true;// whenever we return null, then we set a flag to say
// that we're awaiting a 'readable' event emission.

this.needReadable=false;
this.emittedReadable=false;
this.readableListening=false;
this.resumeScheduled=false;
this.paused=true;// Should close be emitted on destroy. Defaults to true.

this.emitClose=options.emitClose!==false;// Should .destroy() be called after 'end' (and potentially 'finish')

this.autoDestroy=!!options.autoDestroy;// has it been destroyed

this.destroyed=false;// Crypto is kind of old and crusty.  Historically, its default string
// encoding is 'binary' so we have to make this configurable.
// Everything else in the universe uses 'utf8', though.

this.defaultEncoding=options.defaultEncoding||'utf8';// the number of writers that are awaiting a drain event in .pipe()s

this.awaitDrain=0;// if true, a maybeReadMore has been scheduled

this.readingMore=false;
this.decoder=null;
this.encoding=null;

if(options.encoding){
if(!StringDecoder)StringDecoder=require('string_decoder/').StringDecoder;
this.decoder=new StringDecoder(options.encoding);
this.encoding=options.encoding;
}
}

function Readable(options){
Duplex=Duplex||require('./_stream_duplex');
if(!(this instanceof Readable))return new Readable(options);// Checking for a Stream.Duplex instance is faster here instead of inside
// the ReadableState constructor, at least with V8 6.5

var isDuplex=this instanceof Duplex;
this._readableState=new ReadableState(options,this,isDuplex);// legacy

this.readable=true;

if(options){
if(typeof options.read==='function')this._read=options.read;
if(typeof options.destroy==='function')this._destroy=options.destroy;
}

Stream.call(this);
}

Object.defineProperty(Readable.prototype,'destroyed',{
// making it explicit this property is not enumerable
// because otherwise some prototype manipulation in
// userland will fail
enumerable:false,
get:function get(){
if(this._readableState===undefined){
return false;
}

return this._readableState.destroyed;
},
set:function set(value){
// we ignore the value if the stream
// has not been initialized yet
if(!this._readableState){
return;
}// backward compatibility, the user is explicitly
// managing destroyed


this._readableState.destroyed=value;
}});

Readable.prototype.destroy=destroyImpl.destroy;
Readable.prototype._undestroy=destroyImpl.undestroy;

Readable.prototype._destroy=function(err,cb){
cb(err);
};// Manually shove something into the read() buffer.
// This returns true if the highWaterMark has not been hit yet,
// similar to how Writable.write() returns true if you should
// write() some more.


Readable.prototype.push=function(chunk,encoding){
var state=this._readableState;
var skipChunkCheck;

if(!state.objectMode){
if(typeof chunk==='string'){
encoding=encoding||state.defaultEncoding;

if(encoding!==state.encoding){
chunk=Buffer.from(chunk,encoding);
encoding='';
}

skipChunkCheck=true;
}
}else{
skipChunkCheck=true;
}

return readableAddChunk(this,chunk,encoding,false,skipChunkCheck);
};// Unshift should *always* be something directly out of read()


Readable.prototype.unshift=function(chunk){
return readableAddChunk(this,chunk,null,true,false);
};

function readableAddChunk(stream,chunk,encoding,addToFront,skipChunkCheck){
debug('readableAddChunk',chunk);
var state=stream._readableState;

if(chunk===null){
state.reading=false;
onEofChunk(stream,state);
}else{
var er;
if(!skipChunkCheck)er=chunkInvalid(state,chunk);

if(er){
errorOrDestroy(stream,er);
}else if(state.objectMode||chunk&&chunk.length>0){
if(typeof chunk!=='string'&&!state.objectMode&&Object.getPrototypeOf(chunk)!==Buffer.prototype){
chunk=_uint8ArrayToBuffer(chunk);
}

if(addToFront){
if(state.endEmitted)errorOrDestroy(stream,new ERR_STREAM_UNSHIFT_AFTER_END_EVENT());else addChunk(stream,state,chunk,true);
}else if(state.ended){
errorOrDestroy(stream,new ERR_STREAM_PUSH_AFTER_EOF());
}else if(state.destroyed){
return false;
}else{
state.reading=false;

if(state.decoder&&!encoding){
chunk=state.decoder.write(chunk);
if(state.objectMode||chunk.length!==0)addChunk(stream,state,chunk,false);else maybeReadMore(stream,state);
}else{
addChunk(stream,state,chunk,false);
}
}
}else if(!addToFront){
state.reading=false;
maybeReadMore(stream,state);
}
}// We can push more data if we are below the highWaterMark.
// Also, if we have no data yet, we can stand some more bytes.
// This is to work around cases where hwm=0, such as the repl.


return!state.ended&&(state.length<state.highWaterMark||state.length===0);
}

function addChunk(stream,state,chunk,addToFront){
if(state.flowing&&state.length===0&&!state.sync){
state.awaitDrain=0;
stream.emit('data',chunk);
}else{
// update the buffer info.
state.length+=state.objectMode?1:chunk.length;
if(addToFront)state.buffer.unshift(chunk);else state.buffer.push(chunk);
if(state.needReadable)emitReadable(stream);
}

maybeReadMore(stream,state);
}

function chunkInvalid(state,chunk){
var er;

if(!_isUint8Array(chunk)&&typeof chunk!=='string'&&chunk!==undefined&&!state.objectMode){
er=new ERR_INVALID_ARG_TYPE('chunk',['string','Buffer','Uint8Array'],chunk);
}

return er;
}

Readable.prototype.isPaused=function(){
return this._readableState.flowing===false;
};// backwards compatibility.


Readable.prototype.setEncoding=function(enc){
if(!StringDecoder)StringDecoder=require('string_decoder/').StringDecoder;
var decoder=new StringDecoder(enc);
this._readableState.decoder=decoder;// If setEncoding(null), decoder.encoding equals utf8

this._readableState.encoding=this._readableState.decoder.encoding;// Iterate over current buffer to convert already stored Buffers:

var p=this._readableState.buffer.head;
var content='';

while(p!==null){
content+=decoder.write(p.data);
p=p.next;
}

this._readableState.buffer.clear();

if(content!=='')this._readableState.buffer.push(content);
this._readableState.length=content.length;
return this;
};// Don't raise the hwm > 1GB


var MAX_HWM=0x40000000;

function computeNewHighWaterMark(n){
if(n>=MAX_HWM){
// TODO(ronag): Throw ERR_VALUE_OUT_OF_RANGE.
n=MAX_HWM;
}else{
// Get the next highest power of 2 to prevent increasing hwm excessively in
// tiny amounts
n--;
n|=n>>>1;
n|=n>>>2;
n|=n>>>4;
n|=n>>>8;
n|=n>>>16;
n++;
}

return n;
}// This function is designed to be inlinable, so please take care when making
// changes to the function body.


function howMuchToRead(n,state){
if(n<=0||state.length===0&&state.ended)return 0;
if(state.objectMode)return 1;

if(n!==n){
// Only flow one buffer at a time
if(state.flowing&&state.length)return state.buffer.head.data.length;else return state.length;
}// If we're asking for more than the current hwm, then raise the hwm.


if(n>state.highWaterMark)state.highWaterMark=computeNewHighWaterMark(n);
if(n<=state.length)return n;// Don't have enough

if(!state.ended){
state.needReadable=true;
return 0;
}

return state.length;
}// you can override either this method, or the async _read(n) below.


Readable.prototype.read=function(n){
debug('read',n);
n=parseInt(n,10);
var state=this._readableState;
var nOrig=n;
if(n!==0)state.emittedReadable=false;// if we're doing read(0) to trigger a readable event, but we
// already have a bunch of data in the buffer, then just trigger
// the 'readable' event and move on.

if(n===0&&state.needReadable&&((state.highWaterMark!==0?state.length>=state.highWaterMark:state.length>0)||state.ended)){
debug('read: emitReadable',state.length,state.ended);
if(state.length===0&&state.ended)endReadable(this);else emitReadable(this);
return null;
}

n=howMuchToRead(n,state);// if we've ended, and we're now clear, then finish it up.

if(n===0&&state.ended){
if(state.length===0)endReadable(this);
return null;
}// All the actual chunk generation logic needs to be
// *below* the call to _read.  The reason is that in certain
// synthetic stream cases, such as passthrough streams, _read
// may be a completely synchronous operation which may change
// the state of the read buffer, providing enough data when
// before there was *not* enough.
//
// So, the steps are:
// 1. Figure out what the state of things will be after we do
// a read from the buffer.
//
// 2. If that resulting state will trigger a _read, then call _read.
// Note that this may be asynchronous, or synchronous.  Yes, it is
// deeply ugly to write APIs this way, but that still doesn't mean
// that the Readable class should behave improperly, as streams are
// designed to be sync/async agnostic.
// Take note if the _read call is sync or async (ie, if the read call
// has returned yet), so that we know whether or not it's safe to emit
// 'readable' etc.
//
// 3. Actually pull the requested chunks out of the buffer and return.
// if we need a readable event, then we need to do some reading.


var doRead=state.needReadable;
debug('need readable',doRead);// if we currently have less than the highWaterMark, then also read some

if(state.length===0||state.length-n<state.highWaterMark){
doRead=true;
debug('length less than watermark',doRead);
}// however, if we've ended, then there's no point, and if we're already
// reading, then it's unnecessary.


if(state.ended||state.reading){
doRead=false;
debug('reading or ended',doRead);
}else if(doRead){
debug('do read');
state.reading=true;
state.sync=true;// if the length is currently zero, then we *need* a readable event.

if(state.length===0)state.needReadable=true;// call internal read method

this._read(state.highWaterMark);

state.sync=false;// If _read pushed data synchronously, then `reading` will be false,
// and we need to re-evaluate how much data we can return to the user.

if(!state.reading)n=howMuchToRead(nOrig,state);
}

var ret;
if(n>0)ret=fromList(n,state);else ret=null;

if(ret===null){
state.needReadable=state.length<=state.highWaterMark;
n=0;
}else{
state.length-=n;
state.awaitDrain=0;
}

if(state.length===0){
// If we have nothing in the buffer, then we want to know
// as soon as we *do* get something into the buffer.
if(!state.ended)state.needReadable=true;// If we tried to read() past the EOF, then emit end on the next tick.

if(nOrig!==n&&state.ended)endReadable(this);
}

if(ret!==null)this.emit('data',ret);
return ret;
};

function onEofChunk(stream,state){
debug('onEofChunk');
if(state.ended)return;

if(state.decoder){
var chunk=state.decoder.end();

if(chunk&&chunk.length){
state.buffer.push(chunk);
state.length+=state.objectMode?1:chunk.length;
}
}

state.ended=true;

if(state.sync){
// if we are sync, wait until next tick to emit the data.
// Otherwise we risk emitting data in the flow()
// the readable code triggers during a read() call
emitReadable(stream);
}else{
// emit 'readable' now to make sure it gets picked up.
state.needReadable=false;

if(!state.emittedReadable){
state.emittedReadable=true;
emitReadable_(stream);
}
}
}// Don't emit readable right away in sync mode, because this can trigger
// another read() call => stack overflow.  This way, it might trigger
// a nextTick recursion warning, but that's not so bad.


function emitReadable(stream){
var state=stream._readableState;
debug('emitReadable',state.needReadable,state.emittedReadable);
state.needReadable=false;

if(!state.emittedReadable){
debug('emitReadable',state.flowing);
state.emittedReadable=true;
process.nextTick(emitReadable_,stream);
}
}

function emitReadable_(stream){
var state=stream._readableState;
debug('emitReadable_',state.destroyed,state.length,state.ended);

if(!state.destroyed&&(state.length||state.ended)){
stream.emit('readable');
state.emittedReadable=false;
}// The stream needs another readable event if
// 1. It is not flowing, as the flow mechanism will take
//    care of it.
// 2. It is not ended.
// 3. It is below the highWaterMark, so we can schedule
//    another readable later.


state.needReadable=!state.flowing&&!state.ended&&state.length<=state.highWaterMark;
flow(stream);
}// at this point, the user has presumably seen the 'readable' event,
// and called read() to consume some data.  that may have triggered
// in turn another _read(n) call, in which case reading = true if
// it's in progress.
// However, if we're not ended, or reading, and the length < hwm,
// then go ahead and try to read some more preemptively.


function maybeReadMore(stream,state){
if(!state.readingMore){
state.readingMore=true;
process.nextTick(maybeReadMore_,stream,state);
}
}

function maybeReadMore_(stream,state){
// Attempt to read more data if we should.
//
// The conditions for reading more data are (one of):
// - Not enough data buffered (state.length < state.highWaterMark). The loop
//   is responsible for filling the buffer with enough data if such data
//   is available. If highWaterMark is 0 and we are not in the flowing mode
//   we should _not_ attempt to buffer any extra data. We'll get more data
//   when the stream consumer calls read() instead.
// - No data in the buffer, and the stream is in flowing mode. In this mode
//   the loop below is responsible for ensuring read() is called. Failing to
//   call read here would abort the flow and there's no other mechanism for
//   continuing the flow if the stream consumer has just subscribed to the
//   'data' event.
//
// In addition to the above conditions to keep reading data, the following
// conditions prevent the data from being read:
// - The stream has ended (state.ended).
// - There is already a pending 'read' operation (state.reading). This is a
//   case where the the stream has called the implementation defined _read()
//   method, but they are processing the call asynchronously and have _not_
//   called push() with new data. In this case we skip performing more
//   read()s. The execution ends in this method again after the _read() ends
//   up calling push() with more data.
while(!state.reading&&!state.ended&&(state.length<state.highWaterMark||state.flowing&&state.length===0)){
var len=state.length;
debug('maybeReadMore read 0');
stream.read(0);
if(len===state.length)// didn't get any data, stop spinning.
break;
}

state.readingMore=false;
}// abstract method.  to be overridden in specific implementation classes.
// call cb(er, data) where data is <= n in length.
// for virtual (non-string, non-buffer) streams, "length" is somewhat
// arbitrary, and perhaps not very meaningful.


Readable.prototype._read=function(n){
errorOrDestroy(this,new ERR_METHOD_NOT_IMPLEMENTED('_read()'));
};

Readable.prototype.pipe=function(dest,pipeOpts){
var src=this;
var state=this._readableState;

switch(state.pipesCount){
case 0:
state.pipes=dest;
break;

case 1:
state.pipes=[state.pipes,dest];
break;

default:
state.pipes.push(dest);
break;}


state.pipesCount+=1;
debug('pipe count=%d opts=%j',state.pipesCount,pipeOpts);
var doEnd=(!pipeOpts||pipeOpts.end!==false)&&dest!==process.stdout&&dest!==process.stderr;
var endFn=doEnd?onend:unpipe;
if(state.endEmitted)process.nextTick(endFn);else src.once('end',endFn);
dest.on('unpipe',onunpipe);

function onunpipe(readable,unpipeInfo){
debug('onunpipe');

if(readable===src){
if(unpipeInfo&&unpipeInfo.hasUnpiped===false){
unpipeInfo.hasUnpiped=true;
cleanup();
}
}
}

function onend(){
debug('onend');
dest.end();
}// when the dest drains, it reduces the awaitDrain counter
// on the source.  This would be more elegant with a .once()
// handler in flow(), but adding and removing repeatedly is
// too slow.


var ondrain=pipeOnDrain(src);
dest.on('drain',ondrain);
var cleanedUp=false;

function cleanup(){
debug('cleanup');// cleanup event handlers once the pipe is broken

dest.removeListener('close',onclose);
dest.removeListener('finish',onfinish);
dest.removeListener('drain',ondrain);
dest.removeListener('error',onerror);
dest.removeListener('unpipe',onunpipe);
src.removeListener('end',onend);
src.removeListener('end',unpipe);
src.removeListener('data',ondata);
cleanedUp=true;// if the reader is waiting for a drain event from this
// specific writer, then it would cause it to never start
// flowing again.
// So, if this is awaiting a drain, then we just call it now.
// If we don't know, then assume that we are waiting for one.

if(state.awaitDrain&&(!dest._writableState||dest._writableState.needDrain))ondrain();
}

src.on('data',ondata);

function ondata(chunk){
debug('ondata');
var ret=dest.write(chunk);
debug('dest.write',ret);

if(ret===false){
// If the user unpiped during `dest.write()`, it is possible
// to get stuck in a permanently paused state if that write
// also returned false.
// => Check whether `dest` is still a piping destination.
if((state.pipesCount===1&&state.pipes===dest||state.pipesCount>1&&indexOf(state.pipes,dest)!==-1)&&!cleanedUp){
debug('false write response, pause',state.awaitDrain);
state.awaitDrain++;
}

src.pause();
}
}// if the dest has an error, then stop piping into it.
// however, don't suppress the throwing behavior for this.


function onerror(er){
debug('onerror',er);
unpipe();
dest.removeListener('error',onerror);
if(EElistenerCount(dest,'error')===0)errorOrDestroy(dest,er);
}// Make sure our error handler is attached before userland ones.


prependListener(dest,'error',onerror);// Both close and finish should trigger unpipe, but only once.

function onclose(){
dest.removeListener('finish',onfinish);
unpipe();
}

dest.once('close',onclose);

function onfinish(){
debug('onfinish');
dest.removeListener('close',onclose);
unpipe();
}

dest.once('finish',onfinish);

function unpipe(){
debug('unpipe');
src.unpipe(dest);
}// tell the dest that it's being piped to


dest.emit('pipe',src);// start the flow if it hasn't been started already.

if(!state.flowing){
debug('pipe resume');
src.resume();
}

return dest;
};

function pipeOnDrain(src){
return function pipeOnDrainFunctionResult(){
var state=src._readableState;
debug('pipeOnDrain',state.awaitDrain);
if(state.awaitDrain)state.awaitDrain--;

if(state.awaitDrain===0&&EElistenerCount(src,'data')){
state.flowing=true;
flow(src);
}
};
}

Readable.prototype.unpipe=function(dest){
var state=this._readableState;
var unpipeInfo={
hasUnpiped:false};
// if we're not piping anywhere, then do nothing.

if(state.pipesCount===0)return this;// just one destination.  most common case.

if(state.pipesCount===1){
// passed in one, but it's not the right one.
if(dest&&dest!==state.pipes)return this;
if(!dest)dest=state.pipes;// got a match.

state.pipes=null;
state.pipesCount=0;
state.flowing=false;
if(dest)dest.emit('unpipe',this,unpipeInfo);
return this;
}// slow case. multiple pipe destinations.


if(!dest){
// remove all.
var dests=state.pipes;
var len=state.pipesCount;
state.pipes=null;
state.pipesCount=0;
state.flowing=false;

for(var i=0;i<len;i++){
dests[i].emit('unpipe',this,{
hasUnpiped:false});

}

return this;
}// try to find the right one.


var index=indexOf(state.pipes,dest);
if(index===-1)return this;
state.pipes.splice(index,1);
state.pipesCount-=1;
if(state.pipesCount===1)state.pipes=state.pipes[0];
dest.emit('unpipe',this,unpipeInfo);
return this;
};// set up data events if they are asked for
// Ensure readable listeners eventually get something


Readable.prototype.on=function(ev,fn){
var res=Stream.prototype.on.call(this,ev,fn);
var state=this._readableState;

if(ev==='data'){
// update readableListening so that resume() may be a no-op
// a few lines down. This is needed to support once('readable').
state.readableListening=this.listenerCount('readable')>0;// Try start flowing on next tick if stream isn't explicitly paused

if(state.flowing!==false)this.resume();
}else if(ev==='readable'){
if(!state.endEmitted&&!state.readableListening){
state.readableListening=state.needReadable=true;
state.flowing=false;
state.emittedReadable=false;
debug('on readable',state.length,state.reading);

if(state.length){
emitReadable(this);
}else if(!state.reading){
process.nextTick(nReadingNextTick,this);
}
}
}

return res;
};

Readable.prototype.addListener=Readable.prototype.on;

Readable.prototype.removeListener=function(ev,fn){
var res=Stream.prototype.removeListener.call(this,ev,fn);

if(ev==='readable'){
// We need to check if there is someone still listening to
// readable and reset the state. However this needs to happen
// after readable has been emitted but before I/O (nextTick) to
// support once('readable', fn) cycles. This means that calling
// resume within the same tick will have no
// effect.
process.nextTick(updateReadableListening,this);
}

return res;
};

Readable.prototype.removeAllListeners=function(ev){
var res=Stream.prototype.removeAllListeners.apply(this,arguments);

if(ev==='readable'||ev===undefined){
// We need to check if there is someone still listening to
// readable and reset the state. However this needs to happen
// after readable has been emitted but before I/O (nextTick) to
// support once('readable', fn) cycles. This means that calling
// resume within the same tick will have no
// effect.
process.nextTick(updateReadableListening,this);
}

return res;
};

function updateReadableListening(self){
var state=self._readableState;
state.readableListening=self.listenerCount('readable')>0;

if(state.resumeScheduled&&!state.paused){
// flowing needs to be set to true now, otherwise
// the upcoming resume will not flow.
state.flowing=true;// crude way to check if we should resume
}else if(self.listenerCount('data')>0){
self.resume();
}
}

function nReadingNextTick(self){
debug('readable nexttick read 0');
self.read(0);
}// pause() and resume() are remnants of the legacy readable stream API
// If the user uses them, then switch into old mode.


Readable.prototype.resume=function(){
var state=this._readableState;

if(!state.flowing){
debug('resume');// we flow only if there is no one listening
// for readable, but we still have to call
// resume()

state.flowing=!state.readableListening;
resume(this,state);
}

state.paused=false;
return this;
};

function resume(stream,state){
if(!state.resumeScheduled){
state.resumeScheduled=true;
process.nextTick(resume_,stream,state);
}
}

function resume_(stream,state){
debug('resume',state.reading);

if(!state.reading){
stream.read(0);
}

state.resumeScheduled=false;
stream.emit('resume');
flow(stream);
if(state.flowing&&!state.reading)stream.read(0);
}

Readable.prototype.pause=function(){
debug('call pause flowing=%j',this._readableState.flowing);

if(this._readableState.flowing!==false){
debug('pause');
this._readableState.flowing=false;
this.emit('pause');
}

this._readableState.paused=true;
return this;
};

function flow(stream){
var state=stream._readableState;
debug('flow',state.flowing);

while(state.flowing&&stream.read()!==null){
;
}
}// wrap an old-style stream as the async data source.
// This is *not* part of the readable stream interface.
// It is an ugly unfortunate mess of history.


Readable.prototype.wrap=function(stream){
var _this=this;

var state=this._readableState;
var paused=false;
stream.on('end',function(){
debug('wrapped end');

if(state.decoder&&!state.ended){
var chunk=state.decoder.end();
if(chunk&&chunk.length)_this.push(chunk);
}

_this.push(null);
});
stream.on('data',function(chunk){
debug('wrapped data');
if(state.decoder)chunk=state.decoder.write(chunk);// don't skip over falsy values in objectMode

if(state.objectMode&&(chunk===null||chunk===undefined))return;else if(!state.objectMode&&(!chunk||!chunk.length))return;

var ret=_this.push(chunk);

if(!ret){
paused=true;
stream.pause();
}
});// proxy all the other methods.
// important when wrapping filters and duplexes.

for(var i in stream){
if(this[i]===undefined&&typeof stream[i]==='function'){
this[i]=function methodWrap(method){
return function methodWrapReturnFunction(){
return stream[method].apply(stream,arguments);
};
}(i);
}
}// proxy certain important events.


for(var n=0;n<kProxyEvents.length;n++){
stream.on(kProxyEvents[n],this.emit.bind(this,kProxyEvents[n]));
}// when we try to consume some more bytes, simply unpause the
// underlying stream.


this._read=function(n){
debug('wrapped _read',n);

if(paused){
paused=false;
stream.resume();
}
};

return this;
};

if(typeof Symbol==='function'){
Readable.prototype[Symbol.asyncIterator]=function(){
if(createReadableStreamAsyncIterator===undefined){
createReadableStreamAsyncIterator=require('./internal/streams/async_iterator');
}

return createReadableStreamAsyncIterator(this);
};
}

Object.defineProperty(Readable.prototype,'readableHighWaterMark',{
// making it explicit this property is not enumerable
// because otherwise some prototype manipulation in
// userland will fail
enumerable:false,
get:function get(){
return this._readableState.highWaterMark;
}});

Object.defineProperty(Readable.prototype,'readableBuffer',{
// making it explicit this property is not enumerable
// because otherwise some prototype manipulation in
// userland will fail
enumerable:false,
get:function get(){
return this._readableState&&this._readableState.buffer;
}});

Object.defineProperty(Readable.prototype,'readableFlowing',{
// making it explicit this property is not enumerable
// because otherwise some prototype manipulation in
// userland will fail
enumerable:false,
get:function get(){
return this._readableState.flowing;
},
set:function set(state){
if(this._readableState){
this._readableState.flowing=state;
}
}});
// exposed for testing purposes only.

Readable._fromList=fromList;
Object.defineProperty(Readable.prototype,'readableLength',{
// making it explicit this property is not enumerable
// because otherwise some prototype manipulation in
// userland will fail
enumerable:false,
get:function get(){
return this._readableState.length;
}});
// Pluck off n bytes from an array of buffers.
// Length is the combined lengths of all the buffers in the list.
// This function is designed to be inlinable, so please take care when making
// changes to the function body.

function fromList(n,state){
// nothing buffered
if(state.length===0)return null;
var ret;
if(state.objectMode)ret=state.buffer.shift();else if(!n||n>=state.length){
// read it all, truncate the list
if(state.decoder)ret=state.buffer.join('');else if(state.buffer.length===1)ret=state.buffer.first();else ret=state.buffer.concat(state.length);
state.buffer.clear();
}else{
// read part of list
ret=state.buffer.consume(n,state.decoder);
}
return ret;
}

function endReadable(stream){
var state=stream._readableState;
debug('endReadable',state.endEmitted);

if(!state.endEmitted){
state.ended=true;
process.nextTick(endReadableNT,state,stream);
}
}

function endReadableNT(state,stream){
debug('endReadableNT',state.endEmitted,state.length);// Check that we didn't get one last unshift.

if(!state.endEmitted&&state.length===0){
state.endEmitted=true;
stream.readable=false;
stream.emit('end');

if(state.autoDestroy){
// In case of duplex streams we need a way to detect
// if the writable side is ready for autoDestroy as well
var wState=stream._writableState;

if(!wState||wState.autoDestroy&&wState.finished){
stream.destroy();
}
}
}
}

if(typeof Symbol==='function'){
Readable.from=function(iterable,opts){
if(from===undefined){
from=require('./internal/streams/from');
}

return from(Readable,iterable,opts);
};
}

function indexOf(xs,x){
for(var i=0,l=xs.length;i<l;i++){
if(xs[i]===x)return i;
}

return-1;
}
}).call(this,require('_process'),typeof global!=="undefined"?global:typeof self!=="undefined"?self:typeof window!=="undefined"?window:{});
},{"../errors":84,"./_stream_duplex":85,"./internal/streams/async_iterator":90,"./internal/streams/buffer_list":91,"./internal/streams/destroy":92,"./internal/streams/from":94,"./internal/streams/state":96,"./internal/streams/stream":97,"_process":392,"buffer":99,"events":296,"inherits":306,"string_decoder/":340,"util":79}],88:[function(require,module,exports){
// Copyright Joyent, Inc. and other Node contributors.
//
// Permission is hereby granted, free of charge, to any person obtaining a
// copy of this software and associated documentation files (the
// "Software"), to deal in the Software without restriction, including
// without limitation the rights to use, copy, modify, merge, publish,
// distribute, sublicense, and/or sell copies of the Software, and to permit
// persons to whom the Software is furnished to do so, subject to the
// following conditions:
//
// The above copyright notice and this permission notice shall be included
// in all copies or substantial portions of the Software.
//
// THE SOFTWARE IS PROVIDED "AS IS", WITHOUT WARRANTY OF ANY KIND, EXPRESS
// OR IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF
// MERCHANTABILITY, FITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN
// NO EVENT SHALL THE AUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM,
// DAMAGES OR OTHER LIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR
// OTHERWISE, ARISING FROM, OUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE
// USE OR OTHER DEALINGS IN THE SOFTWARE.
// a transform stream is a readable/writable stream where you do
// something with the data.  Sometimes it's called a "filter",
// but that's not a great name for it, since that implies a thing where
// some bits pass through, and others are simply ignored.  (That would
// be a valid example of a transform, of course.)
//
// While the output is causally related to the input, it's not a
// necessarily symmetric or synchronous transformation.  For example,
// a zlib stream might take multiple plain-text writes(), and then
// emit a single compressed chunk some time in the future.
//
// Here's how this works:
//
// The Transform stream has all the aspects of the readable and writable
// stream classes.  When you write(chunk), that calls _write(chunk,cb)
// internally, and returns false if there's a lot of pending writes
// buffered up.  When you call read(), that calls _read(n) until
// there's enough pending readable data buffered up.
//
// In a transform stream, the written data is placed in a buffer.  When
// _read(n) is called, it transforms the queued up data, calling the
// buffered _write cb's as it consumes chunks.  If consuming a single
// written chunk would result in multiple output chunks, then the first
// outputted bit calls the readcb, and subsequent chunks just go into
// the read buffer, and will cause it to emit 'readable' if necessary.
//
// This way, back-pressure is actually determined by the reading side,
// since _read has to be called to start processing a new chunk.  However,
// a pathological inflate type of transform can cause excessive buffering
// here.  For example, imagine a stream where every byte of input is
// interpreted as an integer from 0-255, and then results in that many
// bytes of output.  Writing the 4 bytes {ff,ff,ff,ff} would result in
// 1kb of data being output.  In this case, you could write a very small
// amount of input, and end up with a very large amount of output.  In
// such a pathological inflating mechanism, there'd be no way to tell
// the system to stop doing the transform.  A single 4MB write could
// cause the system to run out of memory.
//
// However, even in such a pathological case, only a single written chunk
// would be consumed, and then the rest would wait (un-transformed) until
// the results of the previous transformed chunk were consumed.
'use strict';

module.exports=Transform;

var _require$codes=require('../errors').codes,
ERR_METHOD_NOT_IMPLEMENTED=_require$codes.ERR_METHOD_NOT_IMPLEMENTED,
ERR_MULTIPLE_CALLBACK=_require$codes.ERR_MULTIPLE_CALLBACK,
ERR_TRANSFORM_ALREADY_TRANSFORMING=_require$codes.ERR_TRANSFORM_ALREADY_TRANSFORMING,
ERR_TRANSFORM_WITH_LENGTH_0=_require$codes.ERR_TRANSFORM_WITH_LENGTH_0;

var Duplex=require('./_stream_duplex');

require('inherits')(Transform,Duplex);

function afterTransform(er,data){
var ts=this._transformState;
ts.transforming=false;
var cb=ts.writecb;

if(cb===null){
return this.emit('error',new ERR_MULTIPLE_CALLBACK());
}

ts.writechunk=null;
ts.writecb=null;
if(data!=null)// single equals check for both `null` and `undefined`
this.push(data);
cb(er);
var rs=this._readableState;
rs.reading=false;

if(rs.needReadable||rs.length<rs.highWaterMark){
this._read(rs.highWaterMark);
}
}

function Transform(options){
if(!(this instanceof Transform))return new Transform(options);
Duplex.call(this,options);
this._transformState={
afterTransform:afterTransform.bind(this),
needTransform:false,
transforming:false,
writecb:null,
writechunk:null,
writeencoding:null};
// start out asking for a readable event once data is transformed.

this._readableState.needReadable=true;// we have implemented the _read method, and done the other things
// that Readable wants before the first _read call, so unset the
// sync guard flag.

this._readableState.sync=false;

if(options){
if(typeof options.transform==='function')this._transform=options.transform;
if(typeof options.flush==='function')this._flush=options.flush;
}// When the writable side finishes, then flush out anything remaining.


this.on('prefinish',prefinish);
}

function prefinish(){
var _this=this;

if(typeof this._flush==='function'&&!this._readableState.destroyed){
this._flush(function(er,data){
done(_this,er,data);
});
}else{
done(this,null,null);
}
}

Transform.prototype.push=function(chunk,encoding){
this._transformState.needTransform=false;
return Duplex.prototype.push.call(this,chunk,encoding);
};// This is the part where you do stuff!
// override this function in implementation classes.
// 'chunk' is an input chunk.
//
// Call `push(newChunk)` to pass along transformed output
// to the readable side.  You may call 'push' zero or more times.
//
// Call `cb(err)` when you are done with this chunk.  If you pass
// an error, then that'll put the hurt on the whole operation.  If you
// never call cb(), then you'll never get another chunk.


Transform.prototype._transform=function(chunk,encoding,cb){
cb(new ERR_METHOD_NOT_IMPLEMENTED('_transform()'));
};

Transform.prototype._write=function(chunk,encoding,cb){
var ts=this._transformState;
ts.writecb=cb;
ts.writechunk=chunk;
ts.writeencoding=encoding;

if(!ts.transforming){
var rs=this._readableState;
if(ts.needTransform||rs.needReadable||rs.length<rs.highWaterMark)this._read(rs.highWaterMark);
}
};// Doesn't matter what the args are here.
// _transform does all the work.
// That we got here means that the readable side wants more data.


Transform.prototype._read=function(n){
var ts=this._transformState;

if(ts.writechunk!==null&&!ts.transforming){
ts.transforming=true;

this._transform(ts.writechunk,ts.writeencoding,ts.afterTransform);
}else{
// mark that we need a transform, so that any data that comes in
// will get processed, now that we've asked for it.
ts.needTransform=true;
}
};

Transform.prototype._destroy=function(err,cb){
Duplex.prototype._destroy.call(this,err,function(err2){
cb(err2);
});
};

function done(stream,er,data){
if(er)return stream.emit('error',er);
if(data!=null)// single equals check for both `null` and `undefined`
stream.push(data);// TODO(BridgeAR): Write a test for these two error cases
// if there's nothing in the write buffer, then that means
// that nothing more will ever be provided

if(stream._writableState.length)throw new ERR_TRANSFORM_WITH_LENGTH_0();
if(stream._transformState.transforming)throw new ERR_TRANSFORM_ALREADY_TRANSFORMING();
return stream.push(null);
}
},{"../errors":84,"./_stream_duplex":85,"inherits":306}],89:[function(require,module,exports){
(function(process,global){
// Copyright Joyent, Inc. and other Node contributors.
//
// Permission is hereby granted, free of charge, to any person obtaining a
// copy of this software and associated documentation files (the
// "Software"), to deal in the Software without restriction, including
// without limitation the rights to use, copy, modify, merge, publish,
// distribute, sublicense, and/or sell copies of the Software, and to permit
// persons to whom the Software is furnished to do so, subject to the
// following conditions:
//
// The above copyright notice and this permission notice shall be included
// in all copies or substantial portions of the Software.
//
// THE SOFTWARE IS PROVIDED "AS IS", WITHOUT WARRANTY OF ANY KIND, EXPRESS
// OR IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF
// MERCHANTABILITY, FITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN
// NO EVENT SHALL THE AUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM,
// DAMAGES OR OTHER LIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR
// OTHERWISE, ARISING FROM, OUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE
// USE OR OTHER DEALINGS IN THE SOFTWARE.
// A bit simpler than readable streams.
// Implement an async ._write(chunk, encoding, cb), and it'll handle all
// the drain event emission and buffering.
'use strict';

module.exports=Writable;
/* <replacement> */

function WriteReq(chunk,encoding,cb){
this.chunk=chunk;
this.encoding=encoding;
this.callback=cb;
this.next=null;
}// It seems a linked list but it is not
// there will be only 2 of these for each stream


function CorkedRequest(state){
var _this=this;

this.next=null;
this.entry=null;

this.finish=function(){
onCorkedFinish(_this,state);
};
}
/* </replacement> */

/*<replacement>*/


var Duplex;
/*</replacement>*/

Writable.WritableState=WritableState;
/*<replacement>*/

var internalUtil={
deprecate:require('util-deprecate')};

/*</replacement>*/

/*<replacement>*/

var Stream=require('./internal/streams/stream');
/*</replacement>*/


var Buffer=require('buffer').Buffer;

var OurUint8Array=global.Uint8Array||function(){};

function _uint8ArrayToBuffer(chunk){
return Buffer.from(chunk);
}

function _isUint8Array(obj){
return Buffer.isBuffer(obj)||obj instanceof OurUint8Array;
}

var destroyImpl=require('./internal/streams/destroy');

var _require=require('./internal/streams/state'),
getHighWaterMark=_require.getHighWaterMark;

var _require$codes=require('../errors').codes,
ERR_INVALID_ARG_TYPE=_require$codes.ERR_INVALID_ARG_TYPE,
ERR_METHOD_NOT_IMPLEMENTED=_require$codes.ERR_METHOD_NOT_IMPLEMENTED,
ERR_MULTIPLE_CALLBACK=_require$codes.ERR_MULTIPLE_CALLBACK,
ERR_STREAM_CANNOT_PIPE=_require$codes.ERR_STREAM_CANNOT_PIPE,
ERR_STREAM_DESTROYED=_require$codes.ERR_STREAM_DESTROYED,
ERR_STREAM_NULL_VALUES=_require$codes.ERR_STREAM_NULL_VALUES,
ERR_STREAM_WRITE_AFTER_END=_require$codes.ERR_STREAM_WRITE_AFTER_END,
ERR_UNKNOWN_ENCODING=_require$codes.ERR_UNKNOWN_ENCODING;

var errorOrDestroy=destroyImpl.errorOrDestroy;

require('inherits')(Writable,Stream);

function nop(){}

function WritableState(options,stream,isDuplex){
Duplex=Duplex||require('./_stream_duplex');
options=options||{};// Duplex streams are both readable and writable, but share
// the same options object.
// However, some cases require setting options to different
// values for the readable and the writable sides of the duplex stream,
// e.g. options.readableObjectMode vs. options.writableObjectMode, etc.

if(typeof isDuplex!=='boolean')isDuplex=stream instanceof Duplex;// object stream flag to indicate whether or not this stream
// contains buffers or objects.

this.objectMode=!!options.objectMode;
if(isDuplex)this.objectMode=this.objectMode||!!options.writableObjectMode;// the point at which write() starts returning false
// Note: 0 is a valid value, means that we always return false if
// the entire buffer is not flushed immediately on write()

this.highWaterMark=getHighWaterMark(this,options,'writableHighWaterMark',isDuplex);// if _final has been called

this.finalCalled=false;// drain event flag.

this.needDrain=false;// at the start of calling end()

this.ending=false;// when end() has been called, and returned

this.ended=false;// when 'finish' is emitted

this.finished=false;// has it been destroyed

this.destroyed=false;// should we decode strings into buffers before passing to _write?
// this is here so that some node-core streams can optimize string
// handling at a lower level.

var noDecode=options.decodeStrings===false;
this.decodeStrings=!noDecode;// Crypto is kind of old and crusty.  Historically, its default string
// encoding is 'binary' so we have to make this configurable.
// Everything else in the universe uses 'utf8', though.

this.defaultEncoding=options.defaultEncoding||'utf8';// not an actual buffer we keep track of, but a measurement
// of how much we're waiting to get pushed to some underlying
// socket or file.

this.length=0;// a flag to see when we're in the middle of a write.

this.writing=false;// when true all writes will be buffered until .uncork() call

this.corked=0;// a flag to be able to tell if the onwrite cb is called immediately,
// or on a later tick.  We set this to true at first, because any
// actions that shouldn't happen until "later" should generally also
// not happen before the first write call.

this.sync=true;// a flag to know if we're processing previously buffered items, which
// may call the _write() callback in the same tick, so that we don't
// end up in an overlapped onwrite situation.

this.bufferProcessing=false;// the callback that's passed to _write(chunk,cb)

this.onwrite=function(er){
onwrite(stream,er);
};// the callback that the user supplies to write(chunk,encoding,cb)


this.writecb=null;// the amount that is being written when _write is called.

this.writelen=0;
this.bufferedRequest=null;
this.lastBufferedRequest=null;// number of pending user-supplied write callbacks
// this must be 0 before 'finish' can be emitted

this.pendingcb=0;// emit prefinish if the only thing we're waiting for is _write cbs
// This is relevant for synchronous Transform streams

this.prefinished=false;// True if the error was already emitted and should not be thrown again

this.errorEmitted=false;// Should close be emitted on destroy. Defaults to true.

this.emitClose=options.emitClose!==false;// Should .destroy() be called after 'finish' (and potentially 'end')

this.autoDestroy=!!options.autoDestroy;// count buffered requests

this.bufferedRequestCount=0;// allocate the first CorkedRequest, there is always
// one allocated and free to use, and we maintain at most two

this.corkedRequestsFree=new CorkedRequest(this);
}

WritableState.prototype.getBuffer=function getBuffer(){
var current=this.bufferedRequest;
var out=[];

while(current){
out.push(current);
current=current.next;
}

return out;
};

(function(){
try{
Object.defineProperty(WritableState.prototype,'buffer',{
get:internalUtil.deprecate(function writableStateBufferGetter(){
return this.getBuffer();
},'_writableState.buffer is deprecated. Use _writableState.getBuffer '+'instead.','DEP0003')});

}catch(_){}
})();// Test _writableState for inheritance to account for Duplex streams,
// whose prototype chain only points to Readable.


var realHasInstance;

if(typeof Symbol==='function'&&Symbol.hasInstance&&typeof Function.prototype[Symbol.hasInstance]==='function'){
realHasInstance=Function.prototype[Symbol.hasInstance];
Object.defineProperty(Writable,Symbol.hasInstance,{
value:function value(object){
if(realHasInstance.call(this,object))return true;
if(this!==Writable)return false;
return object&&object._writableState instanceof WritableState;
}});

}else{
realHasInstance=function realHasInstance(object){
return object instanceof this;
};
}

function Writable(options){
Duplex=Duplex||require('./_stream_duplex');// Writable ctor is applied to Duplexes, too.
// `realHasInstance` is necessary because using plain `instanceof`
// would return false, as no `_writableState` property is attached.
// Trying to use the custom `instanceof` for Writable here will also break the
// Node.js LazyTransform implementation, which has a non-trivial getter for
// `_writableState` that would lead to infinite recursion.
// Checking for a Stream.Duplex instance is faster here instead of inside
// the WritableState constructor, at least with V8 6.5

var isDuplex=this instanceof Duplex;
if(!isDuplex&&!realHasInstance.call(Writable,this))return new Writable(options);
this._writableState=new WritableState(options,this,isDuplex);// legacy.

this.writable=true;

if(options){
if(typeof options.write==='function')this._write=options.write;
if(typeof options.writev==='function')this._writev=options.writev;
if(typeof options.destroy==='function')this._destroy=options.destroy;
if(typeof options.final==='function')this._final=options.final;
}

Stream.call(this);
}// Otherwise people can pipe Writable streams, which is just wrong.


Writable.prototype.pipe=function(){
errorOrDestroy(this,new ERR_STREAM_CANNOT_PIPE());
};

function writeAfterEnd(stream,cb){
var er=new ERR_STREAM_WRITE_AFTER_END();// TODO: defer error events consistently everywhere, not just the cb

errorOrDestroy(stream,er);
process.nextTick(cb,er);
}// Checks that a user-supplied chunk is valid, especially for the particular
// mode the stream is in. Currently this means that `null` is never accepted
// and undefined/non-string values are only allowed in object mode.


function validChunk(stream,state,chunk,cb){
var er;

if(chunk===null){
er=new ERR_STREAM_NULL_VALUES();
}else if(typeof chunk!=='string'&&!state.objectMode){
er=new ERR_INVALID_ARG_TYPE('chunk',['string','Buffer'],chunk);
}

if(er){
errorOrDestroy(stream,er);
process.nextTick(cb,er);
return false;
}

return true;
}

Writable.prototype.write=function(chunk,encoding,cb){
var state=this._writableState;
var ret=false;

var isBuf=!state.objectMode&&_isUint8Array(chunk);

if(isBuf&&!Buffer.isBuffer(chunk)){
chunk=_uint8ArrayToBuffer(chunk);
}

if(typeof encoding==='function'){
cb=encoding;
encoding=null;
}

if(isBuf)encoding='buffer';else if(!encoding)encoding=state.defaultEncoding;
if(typeof cb!=='function')cb=nop;
if(state.ending)writeAfterEnd(this,cb);else if(isBuf||validChunk(this,state,chunk,cb)){
state.pendingcb++;
ret=writeOrBuffer(this,state,isBuf,chunk,encoding,cb);
}
return ret;
};

Writable.prototype.cork=function(){
this._writableState.corked++;
};

Writable.prototype.uncork=function(){
var state=this._writableState;

if(state.corked){
state.corked--;
if(!state.writing&&!state.corked&&!state.bufferProcessing&&state.bufferedRequest)clearBuffer(this,state);
}
};

Writable.prototype.setDefaultEncoding=function setDefaultEncoding(encoding){
// node::ParseEncoding() requires lower case.
if(typeof encoding==='string')encoding=encoding.toLowerCase();
if(!(['hex','utf8','utf-8','ascii','binary','base64','ucs2','ucs-2','utf16le','utf-16le','raw'].indexOf((encoding+'').toLowerCase())>-1))throw new ERR_UNKNOWN_ENCODING(encoding);
this._writableState.defaultEncoding=encoding;
return this;
};

Object.defineProperty(Writable.prototype,'writableBuffer',{
// making it explicit this property is not enumerable
// because otherwise some prototype manipulation in
// userland will fail
enumerable:false,
get:function get(){
return this._writableState&&this._writableState.getBuffer();
}});


function decodeChunk(state,chunk,encoding){
if(!state.objectMode&&state.decodeStrings!==false&&typeof chunk==='string'){
chunk=Buffer.from(chunk,encoding);
}

return chunk;
}

Object.defineProperty(Writable.prototype,'writableHighWaterMark',{
// making it explicit this property is not enumerable
// because otherwise some prototype manipulation in
// userland will fail
enumerable:false,
get:function get(){
return this._writableState.highWaterMark;
}});
// if we're already writing something, then just put this
// in the queue, and wait our turn.  Otherwise, call _write
// If we return false, then we need a drain event, so set that flag.

function writeOrBuffer(stream,state,isBuf,chunk,encoding,cb){
if(!isBuf){
var newChunk=decodeChunk(state,chunk,encoding);

if(chunk!==newChunk){
isBuf=true;
encoding='buffer';
chunk=newChunk;
}
}

var len=state.objectMode?1:chunk.length;
state.length+=len;
var ret=state.length<state.highWaterMark;// we must ensure that previous needDrain will not be reset to false.

if(!ret)state.needDrain=true;

if(state.writing||state.corked){
var last=state.lastBufferedRequest;
state.lastBufferedRequest={
chunk:chunk,
encoding:encoding,
isBuf:isBuf,
callback:cb,
next:null};


if(last){
last.next=state.lastBufferedRequest;
}else{
state.bufferedRequest=state.lastBufferedRequest;
}

state.bufferedRequestCount+=1;
}else{
doWrite(stream,state,false,len,chunk,encoding,cb);
}

return ret;
}

function doWrite(stream,state,writev,len,chunk,encoding,cb){
state.writelen=len;
state.writecb=cb;
state.writing=true;
state.sync=true;
if(state.destroyed)state.onwrite(new ERR_STREAM_DESTROYED('write'));else if(writev)stream._writev(chunk,state.onwrite);else stream._write(chunk,encoding,state.onwrite);
state.sync=false;
}

function onwriteError(stream,state,sync,er,cb){
--state.pendingcb;

if(sync){
// defer the callback if we are being called synchronously
// to avoid piling up things on the stack
process.nextTick(cb,er);// this can emit finish, and it will always happen
// after error

process.nextTick(finishMaybe,stream,state);
stream._writableState.errorEmitted=true;
errorOrDestroy(stream,er);
}else{
// the caller expect this to happen before if
// it is async
cb(er);
stream._writableState.errorEmitted=true;
errorOrDestroy(stream,er);// this can emit finish, but finish must
// always follow error

finishMaybe(stream,state);
}
}

function onwriteStateUpdate(state){
state.writing=false;
state.writecb=null;
state.length-=state.writelen;
state.writelen=0;
}

function onwrite(stream,er){
var state=stream._writableState;
var sync=state.sync;
var cb=state.writecb;
if(typeof cb!=='function')throw new ERR_MULTIPLE_CALLBACK();
onwriteStateUpdate(state);
if(er)onwriteError(stream,state,sync,er,cb);else{
// Check if we're actually ready to finish, but don't emit yet
var finished=needFinish(state)||stream.destroyed;

if(!finished&&!state.corked&&!state.bufferProcessing&&state.bufferedRequest){
clearBuffer(stream,state);
}

if(sync){
process.nextTick(afterWrite,stream,state,finished,cb);
}else{
afterWrite(stream,state,finished,cb);
}
}
}

function afterWrite(stream,state,finished,cb){
if(!finished)onwriteDrain(stream,state);
state.pendingcb--;
cb();
finishMaybe(stream,state);
}// Must force callback to be called on nextTick, so that we don't
// emit 'drain' before the write() consumer gets the 'false' return
// value, and has a chance to attach a 'drain' listener.


function onwriteDrain(stream,state){
if(state.length===0&&state.needDrain){
state.needDrain=false;
stream.emit('drain');
}
}// if there's something in the buffer waiting, then process it


function clearBuffer(stream,state){
state.bufferProcessing=true;
var entry=state.bufferedRequest;

if(stream._writev&&entry&&entry.next){
// Fast case, write everything using _writev()
var l=state.bufferedRequestCount;
var buffer=new Array(l);
var holder=state.corkedRequestsFree;
holder.entry=entry;
var count=0;
var allBuffers=true;

while(entry){
buffer[count]=entry;
if(!entry.isBuf)allBuffers=false;
entry=entry.next;
count+=1;
}

buffer.allBuffers=allBuffers;
doWrite(stream,state,true,state.length,buffer,'',holder.finish);// doWrite is almost always async, defer these to save a bit of time
// as the hot path ends with doWrite

state.pendingcb++;
state.lastBufferedRequest=null;

if(holder.next){
state.corkedRequestsFree=holder.next;
holder.next=null;
}else{
state.corkedRequestsFree=new CorkedRequest(state);
}

state.bufferedRequestCount=0;
}else{
// Slow case, write chunks one-by-one
while(entry){
var chunk=entry.chunk;
var encoding=entry.encoding;
var cb=entry.callback;
var len=state.objectMode?1:chunk.length;
doWrite(stream,state,false,len,chunk,encoding,cb);
entry=entry.next;
state.bufferedRequestCount--;// if we didn't call the onwrite immediately, then
// it means that we need to wait until it does.
// also, that means that the chunk and cb are currently
// being processed, so move the buffer counter past them.

if(state.writing){
break;
}
}

if(entry===null)state.lastBufferedRequest=null;
}

state.bufferedRequest=entry;
state.bufferProcessing=false;
}

Writable.prototype._write=function(chunk,encoding,cb){
cb(new ERR_METHOD_NOT_IMPLEMENTED('_write()'));
};

Writable.prototype._writev=null;

Writable.prototype.end=function(chunk,encoding,cb){
var state=this._writableState;

if(typeof chunk==='function'){
cb=chunk;
chunk=null;
encoding=null;
}else if(typeof encoding==='function'){
cb=encoding;
encoding=null;
}

if(chunk!==null&&chunk!==undefined)this.write(chunk,encoding);// .end() fully uncorks

if(state.corked){
state.corked=1;
this.uncork();
}// ignore unnecessary end() calls.


if(!state.ending)endWritable(this,state,cb);
return this;
};

Object.defineProperty(Writable.prototype,'writableLength',{
// making it explicit this property is not enumerable
// because otherwise some prototype manipulation in
// userland will fail
enumerable:false,
get:function get(){
return this._writableState.length;
}});


function needFinish(state){
return state.ending&&state.length===0&&state.bufferedRequest===null&&!state.finished&&!state.writing;
}

function callFinal(stream,state){
stream._final(function(err){
state.pendingcb--;

if(err){
errorOrDestroy(stream,err);
}

state.prefinished=true;
stream.emit('prefinish');
finishMaybe(stream,state);
});
}

function prefinish(stream,state){
if(!state.prefinished&&!state.finalCalled){
if(typeof stream._final==='function'&&!state.destroyed){
state.pendingcb++;
state.finalCalled=true;
process.nextTick(callFinal,stream,state);
}else{
state.prefinished=true;
stream.emit('prefinish');
}
}
}

function finishMaybe(stream,state){
var need=needFinish(state);

if(need){
prefinish(stream,state);

if(state.pendingcb===0){
state.finished=true;
stream.emit('finish');

if(state.autoDestroy){
// In case of duplex streams we need a way to detect
// if the readable side is ready for autoDestroy as well
var rState=stream._readableState;

if(!rState||rState.autoDestroy&&rState.endEmitted){
stream.destroy();
}
}
}
}

return need;
}

function endWritable(stream,state,cb){
state.ending=true;
finishMaybe(stream,state);

if(cb){
if(state.finished)process.nextTick(cb);else stream.once('finish',cb);
}

state.ended=true;
stream.writable=false;
}

function onCorkedFinish(corkReq,state,err){
var entry=corkReq.entry;
corkReq.entry=null;

while(entry){
var cb=entry.callback;
state.pendingcb--;
cb(err);
entry=entry.next;
}// reuse the free corkReq.


state.corkedRequestsFree.next=corkReq;
}

Object.defineProperty(Writable.prototype,'destroyed',{
// making it explicit this property is not enumerable
// because otherwise some prototype manipulation in
// userland will fail
enumerable:false,
get:function get(){
if(this._writableState===undefined){
return false;
}

return this._writableState.destroyed;
},
set:function set(value){
// we ignore the value if the stream
// has not been initialized yet
if(!this._writableState){
return;
}// backward compatibility, the user is explicitly
// managing destroyed


this._writableState.destroyed=value;
}});

Writable.prototype.destroy=destroyImpl.destroy;
Writable.prototype._undestroy=destroyImpl.undestroy;

Writable.prototype._destroy=function(err,cb){
cb(err);
};
}).call(this,require('_process'),typeof global!=="undefined"?global:typeof self!=="undefined"?self:typeof window!=="undefined"?window:{});
},{"../errors":84,"./_stream_duplex":85,"./internal/streams/destroy":92,"./internal/streams/state":96,"./internal/streams/stream":97,"_process":392,"buffer":99,"inherits":306,"util-deprecate":342}],90:[function(require,module,exports){
(function(process){
'use strict';

var _Object$setPrototypeO;

function _defineProperty(obj,key,value){if(key in obj){Object.defineProperty(obj,key,{value:value,enumerable:true,configurable:true,writable:true});}else{obj[key]=value;}return obj;}

var finished=require('./end-of-stream');

var kLastResolve=Symbol('lastResolve');
var kLastReject=Symbol('lastReject');
var kError=Symbol('error');
var kEnded=Symbol('ended');
var kLastPromise=Symbol('lastPromise');
var kHandlePromise=Symbol('handlePromise');
var kStream=Symbol('stream');

function createIterResult(value,done){
return{
value:value,
done:done};

}

function readAndResolve(iter){
var resolve=iter[kLastResolve];

if(resolve!==null){
var data=iter[kStream].read();// we defer if data is null
// we can be expecting either 'end' or
// 'error'

if(data!==null){
iter[kLastPromise]=null;
iter[kLastResolve]=null;
iter[kLastReject]=null;
resolve(createIterResult(data,false));
}
}
}

function onReadable(iter){
// we wait for the next tick, because it might
// emit an error with process.nextTick
process.nextTick(readAndResolve,iter);
}

function wrapForNext(lastPromise,iter){
return function(resolve,reject){
lastPromise.then(function(){
if(iter[kEnded]){
resolve(createIterResult(undefined,true));
return;
}

iter[kHandlePromise](resolve,reject);
},reject);
};
}

var AsyncIteratorPrototype=Object.getPrototypeOf(function(){});
var ReadableStreamAsyncIteratorPrototype=Object.setPrototypeOf((_Object$setPrototypeO={
get stream(){
return this[kStream];
},

next:function next(){
var _this=this;

// if we have detected an error in the meanwhile
// reject straight away
var error=this[kError];

if(error!==null){
return Promise.reject(error);
}

if(this[kEnded]){
return Promise.resolve(createIterResult(undefined,true));
}

if(this[kStream].destroyed){
// We need to defer via nextTick because if .destroy(err) is
// called, the error will be emitted via nextTick, and
// we cannot guarantee that there is no error lingering around
// waiting to be emitted.
return new Promise(function(resolve,reject){
process.nextTick(function(){
if(_this[kError]){
reject(_this[kError]);
}else{
resolve(createIterResult(undefined,true));
}
});
});
}// if we have multiple next() calls
// we will wait for the previous Promise to finish
// this logic is optimized to support for await loops,
// where next() is only called once at a time


var lastPromise=this[kLastPromise];
var promise;

if(lastPromise){
promise=new Promise(wrapForNext(lastPromise,this));
}else{
// fast path needed to support multiple this.push()
// without triggering the next() queue
var data=this[kStream].read();

if(data!==null){
return Promise.resolve(createIterResult(data,false));
}

promise=new Promise(this[kHandlePromise]);
}

this[kLastPromise]=promise;
return promise;
}},
_defineProperty(_Object$setPrototypeO,Symbol.asyncIterator,function(){
return this;
}),_defineProperty(_Object$setPrototypeO,"return",function _return(){
var _this2=this;

// destroy(err, cb) is a private API
// we can guarantee we have that here, because we control the
// Readable class this is attached to
return new Promise(function(resolve,reject){
_this2[kStream].destroy(null,function(err){
if(err){
reject(err);
return;
}

resolve(createIterResult(undefined,true));
});
});
}),_Object$setPrototypeO),AsyncIteratorPrototype);

var createReadableStreamAsyncIterator=function createReadableStreamAsyncIterator(stream){
var _Object$create;

var iterator=Object.create(ReadableStreamAsyncIteratorPrototype,(_Object$create={},_defineProperty(_Object$create,kStream,{
value:stream,
writable:true}),
_defineProperty(_Object$create,kLastResolve,{
value:null,
writable:true}),
_defineProperty(_Object$create,kLastReject,{
value:null,
writable:true}),
_defineProperty(_Object$create,kError,{
value:null,
writable:true}),
_defineProperty(_Object$create,kEnded,{
value:stream._readableState.endEmitted,
writable:true}),
_defineProperty(_Object$create,kHandlePromise,{
value:function value(resolve,reject){
var data=iterator[kStream].read();

if(data){
iterator[kLastPromise]=null;
iterator[kLastResolve]=null;
iterator[kLastReject]=null;
resolve(createIterResult(data,false));
}else{
iterator[kLastResolve]=resolve;
iterator[kLastReject]=reject;
}
},
writable:true}),
_Object$create));
iterator[kLastPromise]=null;
finished(stream,function(err){
if(err&&err.code!=='ERR_STREAM_PREMATURE_CLOSE'){
var reject=iterator[kLastReject];// reject if we are waiting for data in the Promise
// returned by next() and store the error

if(reject!==null){
iterator[kLastPromise]=null;
iterator[kLastResolve]=null;
iterator[kLastReject]=null;
reject(err);
}

iterator[kError]=err;
return;
}

var resolve=iterator[kLastResolve];

if(resolve!==null){
iterator[kLastPromise]=null;
iterator[kLastResolve]=null;
iterator[kLastReject]=null;
resolve(createIterResult(undefined,true));
}

iterator[kEnded]=true;
});
stream.on('readable',onReadable.bind(null,iterator));
return iterator;
};

module.exports=createReadableStreamAsyncIterator;
}).call(this,require('_process'));
},{"./end-of-stream":93,"_process":392}],91:[function(require,module,exports){
'use strict';

function ownKeys(object,enumerableOnly){var keys=Object.keys(object);if(Object.getOwnPropertySymbols){var symbols=Object.getOwnPropertySymbols(object);if(enumerableOnly)symbols=symbols.filter(function(sym){return Object.getOwnPropertyDescriptor(object,sym).enumerable;});keys.push.apply(keys,symbols);}return keys;}

function _objectSpread(target){for(var i=1;i<arguments.length;i++){var source=arguments[i]!=null?arguments[i]:{};if(i%2){ownKeys(Object(source),true).forEach(function(key){_defineProperty(target,key,source[key]);});}else if(Object.getOwnPropertyDescriptors){Object.defineProperties(target,Object.getOwnPropertyDescriptors(source));}else{ownKeys(Object(source)).forEach(function(key){Object.defineProperty(target,key,Object.getOwnPropertyDescriptor(source,key));});}}return target;}

function _defineProperty(obj,key,value){if(key in obj){Object.defineProperty(obj,key,{value:value,enumerable:true,configurable:true,writable:true});}else{obj[key]=value;}return obj;}

function _classCallCheck(instance,Constructor){if(!(instance instanceof Constructor)){throw new TypeError("Cannot call a class as a function");}}

function _defineProperties(target,props){for(var i=0;i<props.length;i++){var descriptor=props[i];descriptor.enumerable=descriptor.enumerable||false;descriptor.configurable=true;if("value"in descriptor)descriptor.writable=true;Object.defineProperty(target,descriptor.key,descriptor);}}

function _createClass(Constructor,protoProps,staticProps){if(protoProps)_defineProperties(Constructor.prototype,protoProps);if(staticProps)_defineProperties(Constructor,staticProps);return Constructor;}

var _require=require('buffer'),
Buffer=_require.Buffer;

var _require2=require('util'),
inspect=_require2.inspect;

var custom=inspect&&inspect.custom||'inspect';

function copyBuffer(src,target,offset){
Buffer.prototype.copy.call(src,target,offset);
}

module.exports=
/*#__PURE__*/
function(){
function BufferList(){
_classCallCheck(this,BufferList);

this.head=null;
this.tail=null;
this.length=0;
}

_createClass(BufferList,[{
key:"push",
value:function push(v){
var entry={
data:v,
next:null};

if(this.length>0)this.tail.next=entry;else this.head=entry;
this.tail=entry;
++this.length;
}},
{
key:"unshift",
value:function unshift(v){
var entry={
data:v,
next:this.head};

if(this.length===0)this.tail=entry;
this.head=entry;
++this.length;
}},
{
key:"shift",
value:function shift(){
if(this.length===0)return;
var ret=this.head.data;
if(this.length===1)this.head=this.tail=null;else this.head=this.head.next;
--this.length;
return ret;
}},
{
key:"clear",
value:function clear(){
this.head=this.tail=null;
this.length=0;
}},
{
key:"join",
value:function join(s){
if(this.length===0)return'';
var p=this.head;
var ret=''+p.data;

while(p=p.next){
ret+=s+p.data;
}

return ret;
}},
{
key:"concat",
value:function concat(n){
if(this.length===0)return Buffer.alloc(0);
var ret=Buffer.allocUnsafe(n>>>0);
var p=this.head;
var i=0;

while(p){
copyBuffer(p.data,ret,i);
i+=p.data.length;
p=p.next;
}

return ret;
}// Consumes a specified amount of bytes or characters from the buffered data.
},
{
key:"consume",
value:function consume(n,hasStrings){
var ret;

if(n<this.head.data.length){
// `slice` is the same for buffers and strings.
ret=this.head.data.slice(0,n);
this.head.data=this.head.data.slice(n);
}else if(n===this.head.data.length){
// First chunk is a perfect match.
ret=this.shift();
}else{
// Result spans more than one buffer.
ret=hasStrings?this._getString(n):this._getBuffer(n);
}

return ret;
}},
{
key:"first",
value:function first(){
return this.head.data;
}// Consumes a specified amount of characters from the buffered data.
},
{
key:"_getString",
value:function _getString(n){
var p=this.head;
var c=1;
var ret=p.data;
n-=ret.length;

while(p=p.next){
var str=p.data;
var nb=n>str.length?str.length:n;
if(nb===str.length)ret+=str;else ret+=str.slice(0,n);
n-=nb;

if(n===0){
if(nb===str.length){
++c;
if(p.next)this.head=p.next;else this.head=this.tail=null;
}else{
this.head=p;
p.data=str.slice(nb);
}

break;
}

++c;
}

this.length-=c;
return ret;
}// Consumes a specified amount of bytes from the buffered data.
},
{
key:"_getBuffer",
value:function _getBuffer(n){
var ret=Buffer.allocUnsafe(n);
var p=this.head;
var c=1;
p.data.copy(ret);
n-=p.data.length;

while(p=p.next){
var buf=p.data;
var nb=n>buf.length?buf.length:n;
buf.copy(ret,ret.length-n,0,nb);
n-=nb;

if(n===0){
if(nb===buf.length){
++c;
if(p.next)this.head=p.next;else this.head=this.tail=null;
}else{
this.head=p;
p.data=buf.slice(nb);
}

break;
}

++c;
}

this.length-=c;
return ret;
}// Make sure the linked list only shows the minimal necessary information.
},
{
key:custom,
value:function value(_,options){
return inspect(this,_objectSpread({},options,{
// Only inspect one level.
depth:0,
// It should not recurse.
customInspect:false}));

}}]);


return BufferList;
}();
},{"buffer":99,"util":79}],92:[function(require,module,exports){
(function(process){
'use strict';// undocumented cb() API, needed for core, not for public API

function destroy(err,cb){
var _this=this;

var readableDestroyed=this._readableState&&this._readableState.destroyed;
var writableDestroyed=this._writableState&&this._writableState.destroyed;

if(readableDestroyed||writableDestroyed){
if(cb){
cb(err);
}else if(err){
if(!this._writableState){
process.nextTick(emitErrorNT,this,err);
}else if(!this._writableState.errorEmitted){
this._writableState.errorEmitted=true;
process.nextTick(emitErrorNT,this,err);
}
}

return this;
}// we set destroyed to true before firing error callbacks in order
// to make it re-entrance safe in case destroy() is called within callbacks


if(this._readableState){
this._readableState.destroyed=true;
}// if this is a duplex stream mark the writable part as destroyed as well


if(this._writableState){
this._writableState.destroyed=true;
}

this._destroy(err||null,function(err){
if(!cb&&err){
if(!_this._writableState){
process.nextTick(emitErrorAndCloseNT,_this,err);
}else if(!_this._writableState.errorEmitted){
_this._writableState.errorEmitted=true;
process.nextTick(emitErrorAndCloseNT,_this,err);
}else{
process.nextTick(emitCloseNT,_this);
}
}else if(cb){
process.nextTick(emitCloseNT,_this);
cb(err);
}else{
process.nextTick(emitCloseNT,_this);
}
});

return this;
}

function emitErrorAndCloseNT(self,err){
emitErrorNT(self,err);
emitCloseNT(self);
}

function emitCloseNT(self){
if(self._writableState&&!self._writableState.emitClose)return;
if(self._readableState&&!self._readableState.emitClose)return;
self.emit('close');
}

function undestroy(){
if(this._readableState){
this._readableState.destroyed=false;
this._readableState.reading=false;
this._readableState.ended=false;
this._readableState.endEmitted=false;
}

if(this._writableState){
this._writableState.destroyed=false;
this._writableState.ended=false;
this._writableState.ending=false;
this._writableState.finalCalled=false;
this._writableState.prefinished=false;
this._writableState.finished=false;
this._writableState.errorEmitted=false;
}
}

function emitErrorNT(self,err){
self.emit('error',err);
}

function errorOrDestroy(stream,err){
// We have tests that rely on errors being emitted
// in the same tick, so changing this is semver major.
// For now when you opt-in to autoDestroy we allow
// the error to be emitted nextTick. In a future
// semver major update we should change the default to this.
var rState=stream._readableState;
var wState=stream._writableState;
if(rState&&rState.autoDestroy||wState&&wState.autoDestroy)stream.destroy(err);else stream.emit('error',err);
}

module.exports={
destroy:destroy,
undestroy:undestroy,
errorOrDestroy:errorOrDestroy};

}).call(this,require('_process'));
},{"_process":392}],93:[function(require,module,exports){
// Ported from https://github.com/mafintosh/end-of-stream with
// permission from the author, Mathias Buus (@mafintosh).
'use strict';

var ERR_STREAM_PREMATURE_CLOSE=require('../../../errors').codes.ERR_STREAM_PREMATURE_CLOSE;

function once(callback){
var called=false;
return function(){
if(called)return;
called=true;

for(var _len=arguments.length,args=new Array(_len),_key=0;_key<_len;_key++){
args[_key]=arguments[_key];
}

callback.apply(this,args);
};
}

function noop(){}

function isRequest(stream){
return stream.setHeader&&typeof stream.abort==='function';
}

function eos(stream,opts,callback){
if(typeof opts==='function')return eos(stream,null,opts);
if(!opts)opts={};
callback=once(callback||noop);
var readable=opts.readable||opts.readable!==false&&stream.readable;
var writable=opts.writable||opts.writable!==false&&stream.writable;

var onlegacyfinish=function onlegacyfinish(){
if(!stream.writable)onfinish();
};

var writableEnded=stream._writableState&&stream._writableState.finished;

var onfinish=function onfinish(){
writable=false;
writableEnded=true;
if(!readable)callback.call(stream);
};

var readableEnded=stream._readableState&&stream._readableState.endEmitted;

var onend=function onend(){
readable=false;
readableEnded=true;
if(!writable)callback.call(stream);
};

var onerror=function onerror(err){
callback.call(stream,err);
};

var onclose=function onclose(){
var err;

if(readable&&!readableEnded){
if(!stream._readableState||!stream._readableState.ended)err=new ERR_STREAM_PREMATURE_CLOSE();
return callback.call(stream,err);
}

if(writable&&!writableEnded){
if(!stream._writableState||!stream._writableState.ended)err=new ERR_STREAM_PREMATURE_CLOSE();
return callback.call(stream,err);
}
};

var onrequest=function onrequest(){
stream.req.on('finish',onfinish);
};

if(isRequest(stream)){
stream.on('complete',onfinish);
stream.on('abort',onclose);
if(stream.req)onrequest();else stream.on('request',onrequest);
}else if(writable&&!stream._writableState){
// legacy streams
stream.on('end',onlegacyfinish);
stream.on('close',onlegacyfinish);
}

stream.on('end',onend);
stream.on('finish',onfinish);
if(opts.error!==false)stream.on('error',onerror);
stream.on('close',onclose);
return function(){
stream.removeListener('complete',onfinish);
stream.removeListener('abort',onclose);
stream.removeListener('request',onrequest);
if(stream.req)stream.req.removeListener('finish',onfinish);
stream.removeListener('end',onlegacyfinish);
stream.removeListener('close',onlegacyfinish);
stream.removeListener('finish',onfinish);
stream.removeListener('end',onend);
stream.removeListener('error',onerror);
stream.removeListener('close',onclose);
};
}

module.exports=eos;
},{"../../../errors":84}],94:[function(require,module,exports){
module.exports=function(){
throw new Error('Readable.from is not available in the browser');
};

},{}],95:[function(require,module,exports){
// Ported from https://github.com/mafintosh/pump with
// permission from the author, Mathias Buus (@mafintosh).
'use strict';

var eos;

function once(callback){
var called=false;
return function(){
if(called)return;
called=true;
callback.apply(void 0,arguments);
};
}

var _require$codes=require('../../../errors').codes,
ERR_MISSING_ARGS=_require$codes.ERR_MISSING_ARGS,
ERR_STREAM_DESTROYED=_require$codes.ERR_STREAM_DESTROYED;

function noop(err){
// Rethrow the error if it exists to avoid swallowing it
if(err)throw err;
}

function isRequest(stream){
return stream.setHeader&&typeof stream.abort==='function';
}

function destroyer(stream,reading,writing,callback){
callback=once(callback);
var closed=false;
stream.on('close',function(){
closed=true;
});
if(eos===undefined)eos=require('./end-of-stream');
eos(stream,{
readable:reading,
writable:writing},
function(err){
if(err)return callback(err);
closed=true;
callback();
});
var destroyed=false;
return function(err){
if(closed)return;
if(destroyed)return;
destroyed=true;// request.destroy just do .end - .abort is what we want

if(isRequest(stream))return stream.abort();
if(typeof stream.destroy==='function')return stream.destroy();
callback(err||new ERR_STREAM_DESTROYED('pipe'));
};
}

function call(fn){
fn();
}

function pipe(from,to){
return from.pipe(to);
}

function popCallback(streams){
if(!streams.length)return noop;
if(typeof streams[streams.length-1]!=='function')return noop;
return streams.pop();
}

function pipeline(){
for(var _len=arguments.length,streams=new Array(_len),_key=0;_key<_len;_key++){
streams[_key]=arguments[_key];
}

var callback=popCallback(streams);
if(Array.isArray(streams[0]))streams=streams[0];

if(streams.length<2){
throw new ERR_MISSING_ARGS('streams');
}

var error;
var destroys=streams.map(function(stream,i){
var reading=i<streams.length-1;
var writing=i>0;
return destroyer(stream,reading,writing,function(err){
if(!error)error=err;
if(err)destroys.forEach(call);
if(reading)return;
destroys.forEach(call);
callback(error);
});
});
return streams.reduce(pipe);
}

module.exports=pipeline;
},{"../../../errors":84,"./end-of-stream":93}],96:[function(require,module,exports){
'use strict';

var ERR_INVALID_OPT_VALUE=require('../../../errors').codes.ERR_INVALID_OPT_VALUE;

function highWaterMarkFrom(options,isDuplex,duplexKey){
return options.highWaterMark!=null?options.highWaterMark:isDuplex?options[duplexKey]:null;
}

function getHighWaterMark(state,options,duplexKey,isDuplex){
var hwm=highWaterMarkFrom(options,isDuplex,duplexKey);

if(hwm!=null){
if(!(isFinite(hwm)&&Math.floor(hwm)===hwm)||hwm<0){
var name=isDuplex?duplexKey:'highWaterMark';
throw new ERR_INVALID_OPT_VALUE(name,hwm);
}

return Math.floor(hwm);
}// Default value


return state.objectMode?16:16*1024;
}

module.exports={
getHighWaterMark:getHighWaterMark};

},{"../../../errors":84}],97:[function(require,module,exports){
module.exports=require('events').EventEmitter;

},{"events":296}],98:[function(require,module,exports){
exports=module.exports=require('./lib/_stream_readable.js');
exports.Stream=exports;
exports.Readable=exports;
exports.Writable=require('./lib/_stream_writable.js');
exports.Duplex=require('./lib/_stream_duplex.js');
exports.Transform=require('./lib/_stream_transform.js');
exports.PassThrough=require('./lib/_stream_passthrough.js');
exports.finished=require('./lib/internal/streams/end-of-stream.js');
exports.pipeline=require('./lib/internal/streams/pipeline.js');

},{"./lib/_stream_duplex.js":85,"./lib/_stream_passthrough.js":86,"./lib/_stream_readable.js":87,"./lib/_stream_transform.js":88,"./lib/_stream_writable.js":89,"./lib/internal/streams/end-of-stream.js":93,"./lib/internal/streams/pipeline.js":95}],99:[function(require,module,exports){
(function(Buffer){
/*!
 * The buffer module from node.js, for the browser.
 *
 * @author   Feross Aboukhadijeh <https://feross.org>
 * @license  MIT
 */
/* eslint-disable no-proto */

'use strict';

var base64=require('base64-js');
var ieee754=require('ieee754');

exports.Buffer=Buffer;
exports.SlowBuffer=SlowBuffer;
exports.INSPECT_MAX_BYTES=50;

var K_MAX_LENGTH=0x7fffffff;
exports.kMaxLength=K_MAX_LENGTH;

/**
 * If `Buffer.TYPED_ARRAY_SUPPORT`:
 *   === true    Use Uint8Array implementation (fastest)
 *   === false   Print warning and recommend using `buffer` v4.x which has an Object
 *               implementation (most compatible, even IE6)
 *
 * Browsers that support typed arrays are IE 10+, Firefox 4+, Chrome 7+, Safari 5.1+,
 * Opera 11.6+, iOS 4.2+.
 *
 * We report that the browser does not support typed arrays if the are not subclassable
 * using __proto__. Firefox 4-29 lacks support for adding new properties to `Uint8Array`
 * (See: https://bugzilla.mozilla.org/show_bug.cgi?id=695438). IE 10 lacks support
 * for __proto__ and has a buggy typed array implementation.
 */
Buffer.TYPED_ARRAY_SUPPORT=typedArraySupport();

if(!Buffer.TYPED_ARRAY_SUPPORT&&typeof console!=='undefined'&&
typeof console.error==='function'){
console.error(
'This browser lacks typed array (Uint8Array) support which is required by '+
'`buffer` v5.x. Use `buffer` v4.x if you require old browser support.');

}

function typedArraySupport(){
// Can typed array instances can be augmented?
try{
var arr=new Uint8Array(1);
arr.__proto__={__proto__:Uint8Array.prototype,foo:function foo(){return 42;}};
return arr.foo()===42;
}catch(e){
return false;
}
}

Object.defineProperty(Buffer.prototype,'parent',{
enumerable:true,
get:function get(){
if(!Buffer.isBuffer(this))return undefined;
return this.buffer;
}});


Object.defineProperty(Buffer.prototype,'offset',{
enumerable:true,
get:function get(){
if(!Buffer.isBuffer(this))return undefined;
return this.byteOffset;
}});


function createBuffer(length){
if(length>K_MAX_LENGTH){
throw new RangeError('The value "'+length+'" is invalid for option "size"');
}
// Return an augmented `Uint8Array` instance
var buf=new Uint8Array(length);
buf.__proto__=Buffer.prototype;
return buf;
}

/**
 * The Buffer constructor returns instances of `Uint8Array` that have their
 * prototype changed to `Buffer.prototype`. Furthermore, `Buffer` is a subclass of
 * `Uint8Array`, so the returned instances will have all the node `Buffer` methods
 * and the `Uint8Array` methods. Square bracket notation works as expected -- it
 * returns a single octet.
 *
 * The `Uint8Array` prototype remains unmodified.
 */

function Buffer(arg,encodingOrOffset,length){
// Common case.
if(typeof arg==='number'){
if(typeof encodingOrOffset==='string'){
throw new TypeError(
'The "string" argument must be of type string. Received type number');

}
return allocUnsafe(arg);
}
return from(arg,encodingOrOffset,length);
}

// Fix subarray() in ES2016. See: https://github.com/feross/buffer/pull/97
if(typeof Symbol!=='undefined'&&Symbol.species!=null&&
Buffer[Symbol.species]===Buffer){
Object.defineProperty(Buffer,Symbol.species,{
value:null,
configurable:true,
enumerable:false,
writable:false});

}

Buffer.poolSize=8192;// not used by this implementation

function from(value,encodingOrOffset,length){
if(typeof value==='string'){
return fromString(value,encodingOrOffset);
}

if(ArrayBuffer.isView(value)){
return fromArrayLike(value);
}

if(value==null){
throw TypeError(
'The first argument must be one of type string, Buffer, ArrayBuffer, Array, '+
'or Array-like Object. Received type '+typeof value);

}

if(isInstance(value,ArrayBuffer)||
value&&isInstance(value.buffer,ArrayBuffer)){
return fromArrayBuffer(value,encodingOrOffset,length);
}

if(typeof value==='number'){
throw new TypeError(
'The "value" argument must not be of type number. Received type number');

}

var valueOf=value.valueOf&&value.valueOf();
if(valueOf!=null&&valueOf!==value){
return Buffer.from(valueOf,encodingOrOffset,length);
}

var b=fromObject(value);
if(b)return b;

if(typeof Symbol!=='undefined'&&Symbol.toPrimitive!=null&&
typeof value[Symbol.toPrimitive]==='function'){
return Buffer.from(
value[Symbol.toPrimitive]('string'),encodingOrOffset,length);

}

throw new TypeError(
'The first argument must be one of type string, Buffer, ArrayBuffer, Array, '+
'or Array-like Object. Received type '+typeof value);

}

/**
 * Functionally equivalent to Buffer(arg, encoding) but throws a TypeError
 * if value is a number.
 * Buffer.from(str[, encoding])
 * Buffer.from(array)
 * Buffer.from(buffer)
 * Buffer.from(arrayBuffer[, byteOffset[, length]])
 **/
Buffer.from=function(value,encodingOrOffset,length){
return from(value,encodingOrOffset,length);
};

// Note: Change prototype *after* Buffer.from is defined to workaround Chrome bug:
// https://github.com/feross/buffer/pull/148
Buffer.prototype.__proto__=Uint8Array.prototype;
Buffer.__proto__=Uint8Array;

function assertSize(size){
if(typeof size!=='number'){
throw new TypeError('"size" argument must be of type number');
}else if(size<0){
throw new RangeError('The value "'+size+'" is invalid for option "size"');
}
}

function alloc(size,fill,encoding){
assertSize(size);
if(size<=0){
return createBuffer(size);
}
if(fill!==undefined){
// Only pay attention to encoding if it's a string. This
// prevents accidentally sending in a number that would
// be interpretted as a start offset.
return typeof encoding==='string'?
createBuffer(size).fill(fill,encoding):
createBuffer(size).fill(fill);
}
return createBuffer(size);
}

/**
 * Creates a new filled Buffer instance.
 * alloc(size[, fill[, encoding]])
 **/
Buffer.alloc=function(size,fill,encoding){
return alloc(size,fill,encoding);
};

function allocUnsafe(size){
assertSize(size);
return createBuffer(size<0?0:checked(size)|0);
}

/**
 * Equivalent to Buffer(num), by default creates a non-zero-filled Buffer instance.
 * */
Buffer.allocUnsafe=function(size){
return allocUnsafe(size);
};
/**
 * Equivalent to SlowBuffer(num), by default creates a non-zero-filled Buffer instance.
 */
Buffer.allocUnsafeSlow=function(size){
return allocUnsafe(size);
};

function fromString(string,encoding){
if(typeof encoding!=='string'||encoding===''){
encoding='utf8';
}

if(!Buffer.isEncoding(encoding)){
throw new TypeError('Unknown encoding: '+encoding);
}

var length=byteLength(string,encoding)|0;
var buf=createBuffer(length);

var actual=buf.write(string,encoding);

if(actual!==length){
// Writing a hex string, for example, that contains invalid characters will
// cause everything after the first invalid character to be ignored. (e.g.
// 'abxxcd' will be treated as 'ab')
buf=buf.slice(0,actual);
}

return buf;
}

function fromArrayLike(array){
var length=array.length<0?0:checked(array.length)|0;
var buf=createBuffer(length);
for(var i=0;i<length;i+=1){
buf[i]=array[i]&255;
}
return buf;
}

function fromArrayBuffer(array,byteOffset,length){
if(byteOffset<0||array.byteLength<byteOffset){
throw new RangeError('"offset" is outside of buffer bounds');
}

if(array.byteLength<byteOffset+(length||0)){
throw new RangeError('"length" is outside of buffer bounds');
}

var buf;
if(byteOffset===undefined&&length===undefined){
buf=new Uint8Array(array);
}else if(length===undefined){
buf=new Uint8Array(array,byteOffset);
}else{
buf=new Uint8Array(array,byteOffset,length);
}

// Return an augmented `Uint8Array` instance
buf.__proto__=Buffer.prototype;
return buf;
}

function fromObject(obj){
if(Buffer.isBuffer(obj)){
var len=checked(obj.length)|0;
var buf=createBuffer(len);

if(buf.length===0){
return buf;
}

obj.copy(buf,0,0,len);
return buf;
}

if(obj.length!==undefined){
if(typeof obj.length!=='number'||numberIsNaN(obj.length)){
return createBuffer(0);
}
return fromArrayLike(obj);
}

if(obj.type==='Buffer'&&Array.isArray(obj.data)){
return fromArrayLike(obj.data);
}
}

function checked(length){
// Note: cannot use `length < K_MAX_LENGTH` here because that fails when
// length is NaN (which is otherwise coerced to zero.)
if(length>=K_MAX_LENGTH){
throw new RangeError('Attempt to allocate Buffer larger than maximum '+
'size: 0x'+K_MAX_LENGTH.toString(16)+' bytes');
}
return length|0;
}

function SlowBuffer(length){
if(+length!=length){// eslint-disable-line eqeqeq
length=0;
}
return Buffer.alloc(+length);
}

Buffer.isBuffer=function isBuffer(b){
return b!=null&&b._isBuffer===true&&
b!==Buffer.prototype;// so Buffer.isBuffer(Buffer.prototype) will be false
};

Buffer.compare=function compare(a,b){
if(isInstance(a,Uint8Array))a=Buffer.from(a,a.offset,a.byteLength);
if(isInstance(b,Uint8Array))b=Buffer.from(b,b.offset,b.byteLength);
if(!Buffer.isBuffer(a)||!Buffer.isBuffer(b)){
throw new TypeError(
'The "buf1", "buf2" arguments must be one of type Buffer or Uint8Array');

}

if(a===b)return 0;

var x=a.length;
var y=b.length;

for(var i=0,len=Math.min(x,y);i<len;++i){
if(a[i]!==b[i]){
x=a[i];
y=b[i];
break;
}
}

if(x<y)return-1;
if(y<x)return 1;
return 0;
};

Buffer.isEncoding=function isEncoding(encoding){
switch(String(encoding).toLowerCase()){
case'hex':
case'utf8':
case'utf-8':
case'ascii':
case'latin1':
case'binary':
case'base64':
case'ucs2':
case'ucs-2':
case'utf16le':
case'utf-16le':
return true;
default:
return false;}

};

Buffer.concat=function concat(list,length){
if(!Array.isArray(list)){
throw new TypeError('"list" argument must be an Array of Buffers');
}

if(list.length===0){
return Buffer.alloc(0);
}

var i;
if(length===undefined){
length=0;
for(i=0;i<list.length;++i){
length+=list[i].length;
}
}

var buffer=Buffer.allocUnsafe(length);
var pos=0;
for(i=0;i<list.length;++i){
var buf=list[i];
if(isInstance(buf,Uint8Array)){
buf=Buffer.from(buf);
}
if(!Buffer.isBuffer(buf)){
throw new TypeError('"list" argument must be an Array of Buffers');
}
buf.copy(buffer,pos);
pos+=buf.length;
}
return buffer;
};

function byteLength(string,encoding){
if(Buffer.isBuffer(string)){
return string.length;
}
if(ArrayBuffer.isView(string)||isInstance(string,ArrayBuffer)){
return string.byteLength;
}
if(typeof string!=='string'){
throw new TypeError(
'The "string" argument must be one of type string, Buffer, or ArrayBuffer. '+
'Received type '+typeof string);

}

var len=string.length;
var mustMatch=arguments.length>2&&arguments[2]===true;
if(!mustMatch&&len===0)return 0;

// Use a for loop to avoid recursion
var loweredCase=false;
for(;;){
switch(encoding){
case'ascii':
case'latin1':
case'binary':
return len;
case'utf8':
case'utf-8':
return utf8ToBytes(string).length;
case'ucs2':
case'ucs-2':
case'utf16le':
case'utf-16le':
return len*2;
case'hex':
return len>>>1;
case'base64':
return base64ToBytes(string).length;
default:
if(loweredCase){
return mustMatch?-1:utf8ToBytes(string).length;// assume utf8
}
encoding=(''+encoding).toLowerCase();
loweredCase=true;}

}
}
Buffer.byteLength=byteLength;

function slowToString(encoding,start,end){
var loweredCase=false;

// No need to verify that "this.length <= MAX_UINT32" since it's a read-only
// property of a typed array.

// This behaves neither like String nor Uint8Array in that we set start/end
// to their upper/lower bounds if the value passed is out of range.
// undefined is handled specially as per ECMA-262 6th Edition,
// Section 13.3.3.7 Runtime Semantics: KeyedBindingInitialization.
if(start===undefined||start<0){
start=0;
}
// Return early if start > this.length. Done here to prevent potential uint32
// coercion fail below.
if(start>this.length){
return'';
}

if(end===undefined||end>this.length){
end=this.length;
}

if(end<=0){
return'';
}

// Force coersion to uint32. This will also coerce falsey/NaN values to 0.
end>>>=0;
start>>>=0;

if(end<=start){
return'';
}

if(!encoding)encoding='utf8';

while(true){
switch(encoding){
case'hex':
return hexSlice(this,start,end);

case'utf8':
case'utf-8':
return utf8Slice(this,start,end);

case'ascii':
return asciiSlice(this,start,end);

case'latin1':
case'binary':
return latin1Slice(this,start,end);

case'base64':
return base64Slice(this,start,end);

case'ucs2':
case'ucs-2':
case'utf16le':
case'utf-16le':
return utf16leSlice(this,start,end);

default:
if(loweredCase)throw new TypeError('Unknown encoding: '+encoding);
encoding=(encoding+'').toLowerCase();
loweredCase=true;}

}
}

// This property is used by `Buffer.isBuffer` (and the `is-buffer` npm package)
// to detect a Buffer instance. It's not possible to use `instanceof Buffer`
// reliably in a browserify context because there could be multiple different
// copies of the 'buffer' package in use. This method works even for Buffer
// instances that were created from another copy of the `buffer` package.
// See: https://github.com/feross/buffer/issues/154
Buffer.prototype._isBuffer=true;

function swap(b,n,m){
var i=b[n];
b[n]=b[m];
b[m]=i;
}

Buffer.prototype.swap16=function swap16(){
var len=this.length;
if(len%2!==0){
throw new RangeError('Buffer size must be a multiple of 16-bits');
}
for(var i=0;i<len;i+=2){
swap(this,i,i+1);
}
return this;
};

Buffer.prototype.swap32=function swap32(){
var len=this.length;
if(len%4!==0){
throw new RangeError('Buffer size must be a multiple of 32-bits');
}
for(var i=0;i<len;i+=4){
swap(this,i,i+3);
swap(this,i+1,i+2);
}
return this;
};

Buffer.prototype.swap64=function swap64(){
var len=this.length;
if(len%8!==0){
throw new RangeError('Buffer size must be a multiple of 64-bits');
}
for(var i=0;i<len;i+=8){
swap(this,i,i+7);
swap(this,i+1,i+6);
swap(this,i+2,i+5);
swap(this,i+3,i+4);
}
return this;
};

Buffer.prototype.toString=function toString(){
var length=this.length;
if(length===0)return'';
if(arguments.length===0)return utf8Slice(this,0,length);
return slowToString.apply(this,arguments);
};

Buffer.prototype.toLocaleString=Buffer.prototype.toString;

Buffer.prototype.equals=function equals(b){
if(!Buffer.isBuffer(b))throw new TypeError('Argument must be a Buffer');
if(this===b)return true;
return Buffer.compare(this,b)===0;
};

Buffer.prototype.inspect=function inspect(){
var str='';
var max=exports.INSPECT_MAX_BYTES;
str=this.toString('hex',0,max).replace(/(.{2})/g,'$1 ').trim();
if(this.length>max)str+=' ... ';
return'<Buffer '+str+'>';
};

Buffer.prototype.compare=function compare(target,start,end,thisStart,thisEnd){
if(isInstance(target,Uint8Array)){
target=Buffer.from(target,target.offset,target.byteLength);
}
if(!Buffer.isBuffer(target)){
throw new TypeError(
'The "target" argument must be one of type Buffer or Uint8Array. '+
'Received type '+typeof target);

}

if(start===undefined){
start=0;
}
if(end===undefined){
end=target?target.length:0;
}
if(thisStart===undefined){
thisStart=0;
}
if(thisEnd===undefined){
thisEnd=this.length;
}

if(start<0||end>target.length||thisStart<0||thisEnd>this.length){
throw new RangeError('out of range index');
}

if(thisStart>=thisEnd&&start>=end){
return 0;
}
if(thisStart>=thisEnd){
return-1;
}
if(start>=end){
return 1;
}

start>>>=0;
end>>>=0;
thisStart>>>=0;
thisEnd>>>=0;

if(this===target)return 0;

var x=thisEnd-thisStart;
var y=end-start;
var len=Math.min(x,y);

var thisCopy=this.slice(thisStart,thisEnd);
var targetCopy=target.slice(start,end);

for(var i=0;i<len;++i){
if(thisCopy[i]!==targetCopy[i]){
x=thisCopy[i];
y=targetCopy[i];
break;
}
}

if(x<y)return-1;
if(y<x)return 1;
return 0;
};

// Finds either the first index of `val` in `buffer` at offset >= `byteOffset`,
// OR the last index of `val` in `buffer` at offset <= `byteOffset`.
//
// Arguments:
// - buffer - a Buffer to search
// - val - a string, Buffer, or number
// - byteOffset - an index into `buffer`; will be clamped to an int32
// - encoding - an optional encoding, relevant is val is a string
// - dir - true for indexOf, false for lastIndexOf
function bidirectionalIndexOf(buffer,val,byteOffset,encoding,dir){
// Empty buffer means no match
if(buffer.length===0)return-1;

// Normalize byteOffset
if(typeof byteOffset==='string'){
encoding=byteOffset;
byteOffset=0;
}else if(byteOffset>0x7fffffff){
byteOffset=0x7fffffff;
}else if(byteOffset<-0x80000000){
byteOffset=-0x80000000;
}
byteOffset=+byteOffset;// Coerce to Number.
if(numberIsNaN(byteOffset)){
// byteOffset: it it's undefined, null, NaN, "foo", etc, search whole buffer
byteOffset=dir?0:buffer.length-1;
}

// Normalize byteOffset: negative offsets start from the end of the buffer
if(byteOffset<0)byteOffset=buffer.length+byteOffset;
if(byteOffset>=buffer.length){
if(dir)return-1;else
byteOffset=buffer.length-1;
}else if(byteOffset<0){
if(dir)byteOffset=0;else
return-1;
}

// Normalize val
if(typeof val==='string'){
val=Buffer.from(val,encoding);
}

// Finally, search either indexOf (if dir is true) or lastIndexOf
if(Buffer.isBuffer(val)){
// Special case: looking for empty string/buffer always fails
if(val.length===0){
return-1;
}
return arrayIndexOf(buffer,val,byteOffset,encoding,dir);
}else if(typeof val==='number'){
val=val&0xFF;// Search for a byte value [0-255]
if(typeof Uint8Array.prototype.indexOf==='function'){
if(dir){
return Uint8Array.prototype.indexOf.call(buffer,val,byteOffset);
}else{
return Uint8Array.prototype.lastIndexOf.call(buffer,val,byteOffset);
}
}
return arrayIndexOf(buffer,[val],byteOffset,encoding,dir);
}

throw new TypeError('val must be string, number or Buffer');
}

function arrayIndexOf(arr,val,byteOffset,encoding,dir){
var indexSize=1;
var arrLength=arr.length;
var valLength=val.length;

if(encoding!==undefined){
encoding=String(encoding).toLowerCase();
if(encoding==='ucs2'||encoding==='ucs-2'||
encoding==='utf16le'||encoding==='utf-16le'){
if(arr.length<2||val.length<2){
return-1;
}
indexSize=2;
arrLength/=2;
valLength/=2;
byteOffset/=2;
}
}

function read(buf,i){
if(indexSize===1){
return buf[i];
}else{
return buf.readUInt16BE(i*indexSize);
}
}

var i;
if(dir){
var foundIndex=-1;
for(i=byteOffset;i<arrLength;i++){
if(read(arr,i)===read(val,foundIndex===-1?0:i-foundIndex)){
if(foundIndex===-1)foundIndex=i;
if(i-foundIndex+1===valLength)return foundIndex*indexSize;
}else{
if(foundIndex!==-1)i-=i-foundIndex;
foundIndex=-1;
}
}
}else{
if(byteOffset+valLength>arrLength)byteOffset=arrLength-valLength;
for(i=byteOffset;i>=0;i--){
var found=true;
for(var j=0;j<valLength;j++){
if(read(arr,i+j)!==read(val,j)){
found=false;
break;
}
}
if(found)return i;
}
}

return-1;
}

Buffer.prototype.includes=function includes(val,byteOffset,encoding){
return this.indexOf(val,byteOffset,encoding)!==-1;
};

Buffer.prototype.indexOf=function indexOf(val,byteOffset,encoding){
return bidirectionalIndexOf(this,val,byteOffset,encoding,true);
};

Buffer.prototype.lastIndexOf=function lastIndexOf(val,byteOffset,encoding){
return bidirectionalIndexOf(this,val,byteOffset,encoding,false);
};

function hexWrite(buf,string,offset,length){
offset=Number(offset)||0;
var remaining=buf.length-offset;
if(!length){
length=remaining;
}else{
length=Number(length);
if(length>remaining){
length=remaining;
}
}

var strLen=string.length;

if(length>strLen/2){
length=strLen/2;
}
for(var i=0;i<length;++i){
var parsed=parseInt(string.substr(i*2,2),16);
if(numberIsNaN(parsed))return i;
buf[offset+i]=parsed;
}
return i;
}

function utf8Write(buf,string,offset,length){
return blitBuffer(utf8ToBytes(string,buf.length-offset),buf,offset,length);
}

function asciiWrite(buf,string,offset,length){
return blitBuffer(asciiToBytes(string),buf,offset,length);
}

function latin1Write(buf,string,offset,length){
return asciiWrite(buf,string,offset,length);
}

function base64Write(buf,string,offset,length){
return blitBuffer(base64ToBytes(string),buf,offset,length);
}

function ucs2Write(buf,string,offset,length){
return blitBuffer(utf16leToBytes(string,buf.length-offset),buf,offset,length);
}

Buffer.prototype.write=function write(string,offset,length,encoding){
// Buffer#write(string)
if(offset===undefined){
encoding='utf8';
length=this.length;
offset=0;
// Buffer#write(string, encoding)
}else if(length===undefined&&typeof offset==='string'){
encoding=offset;
length=this.length;
offset=0;
// Buffer#write(string, offset[, length][, encoding])
}else if(isFinite(offset)){
offset=offset>>>0;
if(isFinite(length)){
length=length>>>0;
if(encoding===undefined)encoding='utf8';
}else{
encoding=length;
length=undefined;
}
}else{
throw new Error(
'Buffer.write(string, encoding, offset[, length]) is no longer supported');

}

var remaining=this.length-offset;
if(length===undefined||length>remaining)length=remaining;

if(string.length>0&&(length<0||offset<0)||offset>this.length){
throw new RangeError('Attempt to write outside buffer bounds');
}

if(!encoding)encoding='utf8';

var loweredCase=false;
for(;;){
switch(encoding){
case'hex':
return hexWrite(this,string,offset,length);

case'utf8':
case'utf-8':
return utf8Write(this,string,offset,length);

case'ascii':
return asciiWrite(this,string,offset,length);

case'latin1':
case'binary':
return latin1Write(this,string,offset,length);

case'base64':
// Warning: maxLength not taken into account in base64Write
return base64Write(this,string,offset,length);

case'ucs2':
case'ucs-2':
case'utf16le':
case'utf-16le':
return ucs2Write(this,string,offset,length);

default:
if(loweredCase)throw new TypeError('Unknown encoding: '+encoding);
encoding=(''+encoding).toLowerCase();
loweredCase=true;}

}
};

Buffer.prototype.toJSON=function toJSON(){
return{
type:'Buffer',
data:Array.prototype.slice.call(this._arr||this,0)};

};

function base64Slice(buf,start,end){
if(start===0&&end===buf.length){
return base64.fromByteArray(buf);
}else{
return base64.fromByteArray(buf.slice(start,end));
}
}

function utf8Slice(buf,start,end){
end=Math.min(buf.length,end);
var res=[];

var i=start;
while(i<end){
var firstByte=buf[i];
var codePoint=null;
var bytesPerSequence=firstByte>0xEF?4:
firstByte>0xDF?3:
firstByte>0xBF?2:
1;

if(i+bytesPerSequence<=end){
var secondByte,thirdByte,fourthByte,tempCodePoint;

switch(bytesPerSequence){
case 1:
if(firstByte<0x80){
codePoint=firstByte;
}
break;
case 2:
secondByte=buf[i+1];
if((secondByte&0xC0)===0x80){
tempCodePoint=(firstByte&0x1F)<<0x6|secondByte&0x3F;
if(tempCodePoint>0x7F){
codePoint=tempCodePoint;
}
}
break;
case 3:
secondByte=buf[i+1];
thirdByte=buf[i+2];
if((secondByte&0xC0)===0x80&&(thirdByte&0xC0)===0x80){
tempCodePoint=(firstByte&0xF)<<0xC|(secondByte&0x3F)<<0x6|thirdByte&0x3F;
if(tempCodePoint>0x7FF&&(tempCodePoint<0xD800||tempCodePoint>0xDFFF)){
codePoint=tempCodePoint;
}
}
break;
case 4:
secondByte=buf[i+1];
thirdByte=buf[i+2];
fourthByte=buf[i+3];
if((secondByte&0xC0)===0x80&&(thirdByte&0xC0)===0x80&&(fourthByte&0xC0)===0x80){
tempCodePoint=(firstByte&0xF)<<0x12|(secondByte&0x3F)<<0xC|(thirdByte&0x3F)<<0x6|fourthByte&0x3F;
if(tempCodePoint>0xFFFF&&tempCodePoint<0x110000){
codePoint=tempCodePoint;
}
}}

}

if(codePoint===null){
// we did not generate a valid codePoint so insert a
// replacement char (U+FFFD) and advance only 1 byte
codePoint=0xFFFD;
bytesPerSequence=1;
}else if(codePoint>0xFFFF){
// encode to utf16 (surrogate pair dance)
codePoint-=0x10000;
res.push(codePoint>>>10&0x3FF|0xD800);
codePoint=0xDC00|codePoint&0x3FF;
}

res.push(codePoint);
i+=bytesPerSequence;
}

return decodeCodePointsArray(res);
}

// Based on http://stackoverflow.com/a/22747272/680742, the browser with
// the lowest limit is Chrome, with 0x10000 args.
// We go 1 magnitude less, for safety
var MAX_ARGUMENTS_LENGTH=0x1000;

function decodeCodePointsArray(codePoints){
var len=codePoints.length;
if(len<=MAX_ARGUMENTS_LENGTH){
return String.fromCharCode.apply(String,codePoints);// avoid extra slice()
}

// Decode in chunks to avoid "call stack size exceeded".
var res='';
var i=0;
while(i<len){
res+=String.fromCharCode.apply(
String,
codePoints.slice(i,i+=MAX_ARGUMENTS_LENGTH));

}
return res;
}

function asciiSlice(buf,start,end){
var ret='';
end=Math.min(buf.length,end);

for(var i=start;i<end;++i){
ret+=String.fromCharCode(buf[i]&0x7F);
}
return ret;
}

function latin1Slice(buf,start,end){
var ret='';
end=Math.min(buf.length,end);

for(var i=start;i<end;++i){
ret+=String.fromCharCode(buf[i]);
}
return ret;
}

function hexSlice(buf,start,end){
var len=buf.length;

if(!start||start<0)start=0;
if(!end||end<0||end>len)end=len;

var out='';
for(var i=start;i<end;++i){
out+=toHex(buf[i]);
}
return out;
}

function utf16leSlice(buf,start,end){
var bytes=buf.slice(start,end);
var res='';
for(var i=0;i<bytes.length;i+=2){
res+=String.fromCharCode(bytes[i]+bytes[i+1]*256);
}
return res;
}

Buffer.prototype.slice=function slice(start,end){
var len=this.length;
start=~~start;
end=end===undefined?len:~~end;

if(start<0){
start+=len;
if(start<0)start=0;
}else if(start>len){
start=len;
}

if(end<0){
end+=len;
if(end<0)end=0;
}else if(end>len){
end=len;
}

if(end<start)end=start;

var newBuf=this.subarray(start,end);
// Return an augmented `Uint8Array` instance
newBuf.__proto__=Buffer.prototype;
return newBuf;
};

/*
 * Need to make sure that buffer isn't trying to write out of bounds.
 */
function checkOffset(offset,ext,length){
if(offset%1!==0||offset<0)throw new RangeError('offset is not uint');
if(offset+ext>length)throw new RangeError('Trying to access beyond buffer length');
}

Buffer.prototype.readUIntLE=function readUIntLE(offset,byteLength,noAssert){
offset=offset>>>0;
byteLength=byteLength>>>0;
if(!noAssert)checkOffset(offset,byteLength,this.length);

var val=this[offset];
var mul=1;
var i=0;
while(++i<byteLength&&(mul*=0x100)){
val+=this[offset+i]*mul;
}

return val;
};

Buffer.prototype.readUIntBE=function readUIntBE(offset,byteLength,noAssert){
offset=offset>>>0;
byteLength=byteLength>>>0;
if(!noAssert){
checkOffset(offset,byteLength,this.length);
}

var val=this[offset+--byteLength];
var mul=1;
while(byteLength>0&&(mul*=0x100)){
val+=this[offset+--byteLength]*mul;
}

return val;
};

Buffer.prototype.readUInt8=function readUInt8(offset,noAssert){
offset=offset>>>0;
if(!noAssert)checkOffset(offset,1,this.length);
return this[offset];
};

Buffer.prototype.readUInt16LE=function readUInt16LE(offset,noAssert){
offset=offset>>>0;
if(!noAssert)checkOffset(offset,2,this.length);
return this[offset]|this[offset+1]<<8;
};

Buffer.prototype.readUInt16BE=function readUInt16BE(offset,noAssert){
offset=offset>>>0;
if(!noAssert)checkOffset(offset,2,this.length);
return this[offset]<<8|this[offset+1];
};

Buffer.prototype.readUInt32LE=function readUInt32LE(offset,noAssert){
offset=offset>>>0;
if(!noAssert)checkOffset(offset,4,this.length);

return(this[offset]|
this[offset+1]<<8|
this[offset+2]<<16)+
this[offset+3]*0x1000000;
};

Buffer.prototype.readUInt32BE=function readUInt32BE(offset,noAssert){
offset=offset>>>0;
if(!noAssert)checkOffset(offset,4,this.length);

return this[offset]*0x1000000+(
this[offset+1]<<16|
this[offset+2]<<8|
this[offset+3]);
};

Buffer.prototype.readIntLE=function readIntLE(offset,byteLength,noAssert){
offset=offset>>>0;
byteLength=byteLength>>>0;
if(!noAssert)checkOffset(offset,byteLength,this.length);

var val=this[offset];
var mul=1;
var i=0;
while(++i<byteLength&&(mul*=0x100)){
val+=this[offset+i]*mul;
}
mul*=0x80;

if(val>=mul)val-=Math.pow(2,8*byteLength);

return val;
};

Buffer.prototype.readIntBE=function readIntBE(offset,byteLength,noAssert){
offset=offset>>>0;
byteLength=byteLength>>>0;
if(!noAssert)checkOffset(offset,byteLength,this.length);

var i=byteLength;
var mul=1;
var val=this[offset+--i];
while(i>0&&(mul*=0x100)){
val+=this[offset+--i]*mul;
}
mul*=0x80;

if(val>=mul)val-=Math.pow(2,8*byteLength);

return val;
};

Buffer.prototype.readInt8=function readInt8(offset,noAssert){
offset=offset>>>0;
if(!noAssert)checkOffset(offset,1,this.length);
if(!(this[offset]&0x80))return this[offset];
return(0xff-this[offset]+1)*-1;
};

Buffer.prototype.readInt16LE=function readInt16LE(offset,noAssert){
offset=offset>>>0;
if(!noAssert)checkOffset(offset,2,this.length);
var val=this[offset]|this[offset+1]<<8;
return val&0x8000?val|0xFFFF0000:val;
};

Buffer.prototype.readInt16BE=function readInt16BE(offset,noAssert){
offset=offset>>>0;
if(!noAssert)checkOffset(offset,2,this.length);
var val=this[offset+1]|this[offset]<<8;
return val&0x8000?val|0xFFFF0000:val;
};

Buffer.prototype.readInt32LE=function readInt32LE(offset,noAssert){
offset=offset>>>0;
if(!noAssert)checkOffset(offset,4,this.length);

return this[offset]|
this[offset+1]<<8|
this[offset+2]<<16|
this[offset+3]<<24;
};

Buffer.prototype.readInt32BE=function readInt32BE(offset,noAssert){
offset=offset>>>0;
if(!noAssert)checkOffset(offset,4,this.length);

return this[offset]<<24|
this[offset+1]<<16|
this[offset+2]<<8|
this[offset+3];
};

Buffer.prototype.readFloatLE=function readFloatLE(offset,noAssert){
offset=offset>>>0;
if(!noAssert)checkOffset(offset,4,this.length);
return ieee754.read(this,offset,true,23,4);
};

Buffer.prototype.readFloatBE=function readFloatBE(offset,noAssert){
offset=offset>>>0;
if(!noAssert)checkOffset(offset,4,this.length);
return ieee754.read(this,offset,false,23,4);
};

Buffer.prototype.readDoubleLE=function readDoubleLE(offset,noAssert){
offset=offset>>>0;
if(!noAssert)checkOffset(offset,8,this.length);
return ieee754.read(this,offset,true,52,8);
};

Buffer.prototype.readDoubleBE=function readDoubleBE(offset,noAssert){
offset=offset>>>0;
if(!noAssert)checkOffset(offset,8,this.length);
return ieee754.read(this,offset,false,52,8);
};

function checkInt(buf,value,offset,ext,max,min){
if(!Buffer.isBuffer(buf))throw new TypeError('"buffer" argument must be a Buffer instance');
if(value>max||value<min)throw new RangeError('"value" argument is out of bounds');
if(offset+ext>buf.length)throw new RangeError('Index out of range');
}

Buffer.prototype.writeUIntLE=function writeUIntLE(value,offset,byteLength,noAssert){
value=+value;
offset=offset>>>0;
byteLength=byteLength>>>0;
if(!noAssert){
var maxBytes=Math.pow(2,8*byteLength)-1;
checkInt(this,value,offset,byteLength,maxBytes,0);
}

var mul=1;
var i=0;
this[offset]=value&0xFF;
while(++i<byteLength&&(mul*=0x100)){
this[offset+i]=value/mul&0xFF;
}

return offset+byteLength;
};

Buffer.prototype.writeUIntBE=function writeUIntBE(value,offset,byteLength,noAssert){
value=+value;
offset=offset>>>0;
byteLength=byteLength>>>0;
if(!noAssert){
var maxBytes=Math.pow(2,8*byteLength)-1;
checkInt(this,value,offset,byteLength,maxBytes,0);
}

var i=byteLength-1;
var mul=1;
this[offset+i]=value&0xFF;
while(--i>=0&&(mul*=0x100)){
this[offset+i]=value/mul&0xFF;
}

return offset+byteLength;
};

Buffer.prototype.writeUInt8=function writeUInt8(value,offset,noAssert){
value=+value;
offset=offset>>>0;
if(!noAssert)checkInt(this,value,offset,1,0xff,0);
this[offset]=value&0xff;
return offset+1;
};

Buffer.prototype.writeUInt16LE=function writeUInt16LE(value,offset,noAssert){
value=+value;
offset=offset>>>0;
if(!noAssert)checkInt(this,value,offset,2,0xffff,0);
this[offset]=value&0xff;
this[offset+1]=value>>>8;
return offset+2;
};

Buffer.prototype.writeUInt16BE=function writeUInt16BE(value,offset,noAssert){
value=+value;
offset=offset>>>0;
if(!noAssert)checkInt(this,value,offset,2,0xffff,0);
this[offset]=value>>>8;
this[offset+1]=value&0xff;
return offset+2;
};

Buffer.prototype.writeUInt32LE=function writeUInt32LE(value,offset,noAssert){
value=+value;
offset=offset>>>0;
if(!noAssert)checkInt(this,value,offset,4,0xffffffff,0);
this[offset+3]=value>>>24;
this[offset+2]=value>>>16;
this[offset+1]=value>>>8;
this[offset]=value&0xff;
return offset+4;
};

Buffer.prototype.writeUInt32BE=function writeUInt32BE(value,offset,noAssert){
value=+value;
offset=offset>>>0;
if(!noAssert)checkInt(this,value,offset,4,0xffffffff,0);
this[offset]=value>>>24;
this[offset+1]=value>>>16;
this[offset+2]=value>>>8;
this[offset+3]=value&0xff;
return offset+4;
};

Buffer.prototype.writeIntLE=function writeIntLE(value,offset,byteLength,noAssert){
value=+value;
offset=offset>>>0;
if(!noAssert){
var limit=Math.pow(2,8*byteLength-1);

checkInt(this,value,offset,byteLength,limit-1,-limit);
}

var i=0;
var mul=1;
var sub=0;
this[offset]=value&0xFF;
while(++i<byteLength&&(mul*=0x100)){
if(value<0&&sub===0&&this[offset+i-1]!==0){
sub=1;
}
this[offset+i]=(value/mul>>0)-sub&0xFF;
}

return offset+byteLength;
};

Buffer.prototype.writeIntBE=function writeIntBE(value,offset,byteLength,noAssert){
value=+value;
offset=offset>>>0;
if(!noAssert){
var limit=Math.pow(2,8*byteLength-1);

checkInt(this,value,offset,byteLength,limit-1,-limit);
}

var i=byteLength-1;
var mul=1;
var sub=0;
this[offset+i]=value&0xFF;
while(--i>=0&&(mul*=0x100)){
if(value<0&&sub===0&&this[offset+i+1]!==0){
sub=1;
}
this[offset+i]=(value/mul>>0)-sub&0xFF;
}

return offset+byteLength;
};

Buffer.prototype.writeInt8=function writeInt8(value,offset,noAssert){
value=+value;
offset=offset>>>0;
if(!noAssert)checkInt(this,value,offset,1,0x7f,-0x80);
if(value<0)value=0xff+value+1;
this[offset]=value&0xff;
return offset+1;
};

Buffer.prototype.writeInt16LE=function writeInt16LE(value,offset,noAssert){
value=+value;
offset=offset>>>0;
if(!noAssert)checkInt(this,value,offset,2,0x7fff,-0x8000);
this[offset]=value&0xff;
this[offset+1]=value>>>8;
return offset+2;
};

Buffer.prototype.writeInt16BE=function writeInt16BE(value,offset,noAssert){
value=+value;
offset=offset>>>0;
if(!noAssert)checkInt(this,value,offset,2,0x7fff,-0x8000);
this[offset]=value>>>8;
this[offset+1]=value&0xff;
return offset+2;
};

Buffer.prototype.writeInt32LE=function writeInt32LE(value,offset,noAssert){
value=+value;
offset=offset>>>0;
if(!noAssert)checkInt(this,value,offset,4,0x7fffffff,-0x80000000);
this[offset]=value&0xff;
this[offset+1]=value>>>8;
this[offset+2]=value>>>16;
this[offset+3]=value>>>24;
return offset+4;
};

Buffer.prototype.writeInt32BE=function writeInt32BE(value,offset,noAssert){
value=+value;
offset=offset>>>0;
if(!noAssert)checkInt(this,value,offset,4,0x7fffffff,-0x80000000);
if(value<0)value=0xffffffff+value+1;
this[offset]=value>>>24;
this[offset+1]=value>>>16;
this[offset+2]=value>>>8;
this[offset+3]=value&0xff;
return offset+4;
};

function checkIEEE754(buf,value,offset,ext,max,min){
if(offset+ext>buf.length)throw new RangeError('Index out of range');
if(offset<0)throw new RangeError('Index out of range');
}

function writeFloat(buf,value,offset,littleEndian,noAssert){
value=+value;
offset=offset>>>0;
if(!noAssert){
checkIEEE754(buf,value,offset,4,3.4028234663852886e+38,-3.4028234663852886e+38);
}
ieee754.write(buf,value,offset,littleEndian,23,4);
return offset+4;
}

Buffer.prototype.writeFloatLE=function writeFloatLE(value,offset,noAssert){
return writeFloat(this,value,offset,true,noAssert);
};

Buffer.prototype.writeFloatBE=function writeFloatBE(value,offset,noAssert){
return writeFloat(this,value,offset,false,noAssert);
};

function writeDouble(buf,value,offset,littleEndian,noAssert){
value=+value;
offset=offset>>>0;
if(!noAssert){
checkIEEE754(buf,value,offset,8,1.7976931348623157E+308,-1.7976931348623157E+308);
}
ieee754.write(buf,value,offset,littleEndian,52,8);
return offset+8;
}

Buffer.prototype.writeDoubleLE=function writeDoubleLE(value,offset,noAssert){
return writeDouble(this,value,offset,true,noAssert);
};

Buffer.prototype.writeDoubleBE=function writeDoubleBE(value,offset,noAssert){
return writeDouble(this,value,offset,false,noAssert);
};

// copy(targetBuffer, targetStart=0, sourceStart=0, sourceEnd=buffer.length)
Buffer.prototype.copy=function copy(target,targetStart,start,end){
if(!Buffer.isBuffer(target))throw new TypeError('argument should be a Buffer');
if(!start)start=0;
if(!end&&end!==0)end=this.length;
if(targetStart>=target.length)targetStart=target.length;
if(!targetStart)targetStart=0;
if(end>0&&end<start)end=start;

// Copy 0 bytes; we're done
if(end===start)return 0;
if(target.length===0||this.length===0)return 0;

// Fatal error conditions
if(targetStart<0){
throw new RangeError('targetStart out of bounds');
}
if(start<0||start>=this.length)throw new RangeError('Index out of range');
if(end<0)throw new RangeError('sourceEnd out of bounds');

// Are we oob?
if(end>this.length)end=this.length;
if(target.length-targetStart<end-start){
end=target.length-targetStart+start;
}

var len=end-start;

if(this===target&&typeof Uint8Array.prototype.copyWithin==='function'){
// Use built-in when available, missing from IE11
this.copyWithin(targetStart,start,end);
}else if(this===target&&start<targetStart&&targetStart<end){
// descending copy from end
for(var i=len-1;i>=0;--i){
target[i+targetStart]=this[i+start];
}
}else{
Uint8Array.prototype.set.call(
target,
this.subarray(start,end),
targetStart);

}

return len;
};

// Usage:
//    buffer.fill(number[, offset[, end]])
//    buffer.fill(buffer[, offset[, end]])
//    buffer.fill(string[, offset[, end]][, encoding])
Buffer.prototype.fill=function fill(val,start,end,encoding){
// Handle string cases:
if(typeof val==='string'){
if(typeof start==='string'){
encoding=start;
start=0;
end=this.length;
}else if(typeof end==='string'){
encoding=end;
end=this.length;
}
if(encoding!==undefined&&typeof encoding!=='string'){
throw new TypeError('encoding must be a string');
}
if(typeof encoding==='string'&&!Buffer.isEncoding(encoding)){
throw new TypeError('Unknown encoding: '+encoding);
}
if(val.length===1){
var code=val.charCodeAt(0);
if(encoding==='utf8'&&code<128||
encoding==='latin1'){
// Fast path: If `val` fits into a single byte, use that numeric value.
val=code;
}
}
}else if(typeof val==='number'){
val=val&255;
}

// Invalid ranges are not set to a default, so can range check early.
if(start<0||this.length<start||this.length<end){
throw new RangeError('Out of range index');
}

if(end<=start){
return this;
}

start=start>>>0;
end=end===undefined?this.length:end>>>0;

if(!val)val=0;

var i;
if(typeof val==='number'){
for(i=start;i<end;++i){
this[i]=val;
}
}else{
var bytes=Buffer.isBuffer(val)?
val:
Buffer.from(val,encoding);
var len=bytes.length;
if(len===0){
throw new TypeError('The value "'+val+
'" is invalid for argument "value"');
}
for(i=0;i<end-start;++i){
this[i+start]=bytes[i%len];
}
}

return this;
};

// HELPER FUNCTIONS
// ================

var INVALID_BASE64_RE=/[^+/0-9A-Za-z-_]/g;

function base64clean(str){
// Node takes equal signs as end of the Base64 encoding
str=str.split('=')[0];
// Node strips out invalid characters like \n and \t from the string, base64-js does not
str=str.trim().replace(INVALID_BASE64_RE,'');
// Node converts strings with length < 2 to ''
if(str.length<2)return'';
// Node allows for non-padded base64 strings (missing trailing ===), base64-js does not
while(str.length%4!==0){
str=str+'=';
}
return str;
}

function toHex(n){
if(n<16)return'0'+n.toString(16);
return n.toString(16);
}

function utf8ToBytes(string,units){
units=units||Infinity;
var codePoint;
var length=string.length;
var leadSurrogate=null;
var bytes=[];

for(var i=0;i<length;++i){
codePoint=string.charCodeAt(i);

// is surrogate component
if(codePoint>0xD7FF&&codePoint<0xE000){
// last char was a lead
if(!leadSurrogate){
// no lead yet
if(codePoint>0xDBFF){
// unexpected trail
if((units-=3)>-1)bytes.push(0xEF,0xBF,0xBD);
continue;
}else if(i+1===length){
// unpaired lead
if((units-=3)>-1)bytes.push(0xEF,0xBF,0xBD);
continue;
}

// valid lead
leadSurrogate=codePoint;

continue;
}

// 2 leads in a row
if(codePoint<0xDC00){
if((units-=3)>-1)bytes.push(0xEF,0xBF,0xBD);
leadSurrogate=codePoint;
continue;
}

// valid surrogate pair
codePoint=(leadSurrogate-0xD800<<10|codePoint-0xDC00)+0x10000;
}else if(leadSurrogate){
// valid bmp char, but last char was a lead
if((units-=3)>-1)bytes.push(0xEF,0xBF,0xBD);
}

leadSurrogate=null;

// encode utf8
if(codePoint<0x80){
if((units-=1)<0)break;
bytes.push(codePoint);
}else if(codePoint<0x800){
if((units-=2)<0)break;
bytes.push(
codePoint>>0x6|0xC0,
codePoint&0x3F|0x80);

}else if(codePoint<0x10000){
if((units-=3)<0)break;
bytes.push(
codePoint>>0xC|0xE0,
codePoint>>0x6&0x3F|0x80,
codePoint&0x3F|0x80);

}else if(codePoint<0x110000){
if((units-=4)<0)break;
bytes.push(
codePoint>>0x12|0xF0,
codePoint>>0xC&0x3F|0x80,
codePoint>>0x6&0x3F|0x80,
codePoint&0x3F|0x80);

}else{
throw new Error('Invalid code point');
}
}

return bytes;
}

function asciiToBytes(str){
var byteArray=[];
for(var i=0;i<str.length;++i){
// Node's code seems to be doing this and not & 0x7F..
byteArray.push(str.charCodeAt(i)&0xFF);
}
return byteArray;
}

function utf16leToBytes(str,units){
var c,hi,lo;
var byteArray=[];
for(var i=0;i<str.length;++i){
if((units-=2)<0)break;

c=str.charCodeAt(i);
hi=c>>8;
lo=c%256;
byteArray.push(lo);
byteArray.push(hi);
}

return byteArray;
}

function base64ToBytes(str){
return base64.toByteArray(base64clean(str));
}

function blitBuffer(src,dst,offset,length){
for(var i=0;i<length;++i){
if(i+offset>=dst.length||i>=src.length)break;
dst[i+offset]=src[i];
}
return i;
}

// ArrayBuffer or Uint8Array objects from other contexts (i.e. iframes) do not pass
// the `instanceof` check but they should be treated as of that type.
// See: https://github.com/feross/buffer/issues/166
function isInstance(obj,type){
return obj instanceof type||
obj!=null&&obj.constructor!=null&&obj.constructor.name!=null&&
obj.constructor.name===type.name;
}
function numberIsNaN(obj){
// For IE11 support
return obj!==obj;// eslint-disable-line no-self-compare
}

}).call(this,require("buffer").Buffer);
},{"base64-js":77,"buffer":99,"ieee754":299}],100:[function(require,module,exports){
module.exports={
"100":"Continue",
"101":"Switching Protocols",
"102":"Processing",
"200":"OK",
"201":"Created",
"202":"Accepted",
"203":"Non-Authoritative Information",
"204":"No Content",
"205":"Reset Content",
"206":"Partial Content",
"207":"Multi-Status",
"208":"Already Reported",
"226":"IM Used",
"300":"Multiple Choices",
"301":"Moved Permanently",
"302":"Found",
"303":"See Other",
"304":"Not Modified",
"305":"Use Proxy",
"307":"Temporary Redirect",
"308":"Permanent Redirect",
"400":"Bad Request",
"401":"Unauthorized",
"402":"Payment Required",
"403":"Forbidden",
"404":"Not Found",
"405":"Method Not Allowed",
"406":"Not Acceptable",
"407":"Proxy Authentication Required",
"408":"Request Timeout",
"409":"Conflict",
"410":"Gone",
"411":"Length Required",
"412":"Precondition Failed",
"413":"Payload Too Large",
"414":"URI Too Long",
"415":"Unsupported Media Type",
"416":"Range Not Satisfiable",
"417":"Expectation Failed",
"418":"I'm a teapot",
"421":"Misdirected Request",
"422":"Unprocessable Entity",
"423":"Locked",
"424":"Failed Dependency",
"425":"Unordered Collection",
"426":"Upgrade Required",
"428":"Precondition Required",
"429":"Too Many Requests",
"431":"Request Header Fields Too Large",
"451":"Unavailable For Legal Reasons",
"500":"Internal Server Error",
"501":"Not Implemented",
"502":"Bad Gateway",
"503":"Service Unavailable",
"504":"Gateway Timeout",
"505":"HTTP Version Not Supported",
"506":"Variant Also Negotiates",
"507":"Insufficient Storage",
"508":"Loop Detected",
"509":"Bandwidth Limit Exceeded",
"510":"Not Extended",
"511":"Network Authentication Required"};


},{}],101:[function(require,module,exports){
/*!
 * copy-to - index.js
 * Copyright(c) 2014 dead_horse <dead_horse@qq.com>
 * MIT Licensed
 */

'use strict';

/**
 * slice() reference.
 */

var slice=Array.prototype.slice;

/**
 * Expose copy
 *
 * ```
 * copy({foo: 'nar', hello: 'copy'}).to({hello: 'world'});
 * copy({foo: 'nar', hello: 'copy'}).toCover({hello: 'world'});
 * ```
 *
 * @param {Object} src
 * @return {Copy}
 */

module.exports=Copy;


/**
 * Copy
 * @param {Object} src
 * @param {Boolean} withAccess
 */

function Copy(src,withAccess){
if(!(this instanceof Copy))return new Copy(src,withAccess);
this.src=src;
this._withAccess=withAccess;
}

/**
 * copy properties include getter and setter
 * @param {[type]} val [description]
 * @return {[type]} [description]
 */

Copy.prototype.withAccess=function(w){
this._withAccess=w!==false;
return this;
};

/**
 * pick keys in src
 *
 * @api: public
 */

Copy.prototype.pick=function(keys){
if(!Array.isArray(keys)){
keys=slice.call(arguments);
}
if(keys.length){
this.keys=keys;
}
return this;
};

/**
 * copy src to target,
 * do not cover any property target has
 * @param {Object} to
 *
 * @api: public
 */

Copy.prototype.to=function(to){
to=to||{};

if(!this.src)return to;
var keys=this.keys||Object.keys(this.src);

if(!this._withAccess){
for(var i=0;i<keys.length;i++){
key=keys[i];
if(to[key]!==undefined)continue;
to[key]=this.src[key];
}
return to;
}

for(var i=0;i<keys.length;i++){
var key=keys[i];
if(!notDefined(to,key))continue;
var getter=this.src.__lookupGetter__(key);
var setter=this.src.__lookupSetter__(key);
if(getter)to.__defineGetter__(key,getter);
if(setter)to.__defineSetter__(key,setter);

if(!getter&&!setter){
to[key]=this.src[key];
}
}
return to;
};

/**
 * copy src to target,
 * override any property target has
 * @param {Object} to
 *
 * @api: public
 */

Copy.prototype.toCover=function(to){
var keys=this.keys||Object.keys(this.src);

for(var i=0;i<keys.length;i++){
var key=keys[i];
delete to[key];
var getter=this.src.__lookupGetter__(key);
var setter=this.src.__lookupSetter__(key);
if(getter)to.__defineGetter__(key,getter);
if(setter)to.__defineSetter__(key,setter);

if(!getter&&!setter){
to[key]=this.src[key];
}
}
};

Copy.prototype.override=Copy.prototype.toCover;

/**
 * append another object to src
 * @param {Obj} obj
 * @return {Copy}
 */

Copy.prototype.and=function(obj){
var src={};
this.to(src);
this.src=obj;
this.to(src);
this.src=src;

return this;
};

/**
 * check obj[key] if not defiend
 * @param {Object} obj
 * @param {String} key
 * @return {Boolean}
 */

function notDefined(obj,key){
return obj[key]===undefined&&
obj.__lookupGetter__(key)===undefined&&
obj.__lookupSetter__(key)===undefined;
}

},{}],102:[function(require,module,exports){
module.exports=function(it){
if(typeof it!='function'){
throw TypeError(String(it)+' is not a function');
}return it;
};

},{}],103:[function(require,module,exports){
var isObject=require('../internals/is-object');

module.exports=function(it){
if(!isObject(it)&&it!==null){
throw TypeError("Can't set "+String(it)+' as a prototype');
}return it;
};

},{"../internals/is-object":164}],104:[function(require,module,exports){
var wellKnownSymbol=require('../internals/well-known-symbol');
var create=require('../internals/object-create');
var definePropertyModule=require('../internals/object-define-property');

var UNSCOPABLES=wellKnownSymbol('unscopables');
var ArrayPrototype=Array.prototype;

// Array.prototype[@@unscopables]
// https://tc39.github.io/ecma262/#sec-array.prototype-@@unscopables
if(ArrayPrototype[UNSCOPABLES]==undefined){
definePropertyModule.f(ArrayPrototype,UNSCOPABLES,{
configurable:true,
value:create(null)});

}

// add a key to Array.prototype[@@unscopables]
module.exports=function(key){
ArrayPrototype[UNSCOPABLES][key]=true;
};

},{"../internals/object-create":178,"../internals/object-define-property":180,"../internals/well-known-symbol":231}],105:[function(require,module,exports){
'use strict';
var charAt=require('../internals/string-multibyte').charAt;

// `AdvanceStringIndex` abstract operation
// https://tc39.github.io/ecma262/#sec-advancestringindex
module.exports=function(S,index,unicode){
return index+(unicode?charAt(S,index).length:1);
};

},{"../internals/string-multibyte":211}],106:[function(require,module,exports){
module.exports=function(it,Constructor,name){
if(!(it instanceof Constructor)){
throw TypeError('Incorrect '+(name?name+' ':'')+'invocation');
}return it;
};

},{}],107:[function(require,module,exports){
var isObject=require('../internals/is-object');

module.exports=function(it){
if(!isObject(it)){
throw TypeError(String(it)+' is not an object');
}return it;
};

},{"../internals/is-object":164}],108:[function(require,module,exports){
module.exports=typeof ArrayBuffer!=='undefined'&&typeof DataView!=='undefined';

},{}],109:[function(require,module,exports){
'use strict';
var NATIVE_ARRAY_BUFFER=require('../internals/array-buffer-native');
var DESCRIPTORS=require('../internals/descriptors');
var global=require('../internals/global');
var isObject=require('../internals/is-object');
var has=require('../internals/has');
var classof=require('../internals/classof');
var createNonEnumerableProperty=require('../internals/create-non-enumerable-property');
var redefine=require('../internals/redefine');
var defineProperty=require('../internals/object-define-property').f;
var getPrototypeOf=require('../internals/object-get-prototype-of');
var setPrototypeOf=require('../internals/object-set-prototype-of');
var wellKnownSymbol=require('../internals/well-known-symbol');
var uid=require('../internals/uid');

var Int8Array=global.Int8Array;
var Int8ArrayPrototype=Int8Array&&Int8Array.prototype;
var Uint8ClampedArray=global.Uint8ClampedArray;
var Uint8ClampedArrayPrototype=Uint8ClampedArray&&Uint8ClampedArray.prototype;
var TypedArray=Int8Array&&getPrototypeOf(Int8Array);
var TypedArrayPrototype=Int8ArrayPrototype&&getPrototypeOf(Int8ArrayPrototype);
var ObjectPrototype=Object.prototype;
var isPrototypeOf=ObjectPrototype.isPrototypeOf;

var TO_STRING_TAG=wellKnownSymbol('toStringTag');
var TYPED_ARRAY_TAG=uid('TYPED_ARRAY_TAG');
// Fixing native typed arrays in Opera Presto crashes the browser, see #595
var NATIVE_ARRAY_BUFFER_VIEWS=NATIVE_ARRAY_BUFFER&&!!setPrototypeOf&&classof(global.opera)!=='Opera';
var TYPED_ARRAY_TAG_REQIRED=false;
var NAME;

var TypedArrayConstructorsList={
Int8Array:1,
Uint8Array:1,
Uint8ClampedArray:1,
Int16Array:2,
Uint16Array:2,
Int32Array:4,
Uint32Array:4,
Float32Array:4,
Float64Array:8};


var isView=function isView(it){
var klass=classof(it);
return klass==='DataView'||has(TypedArrayConstructorsList,klass);
};

var isTypedArray=function isTypedArray(it){
return isObject(it)&&has(TypedArrayConstructorsList,classof(it));
};

var aTypedArray=function aTypedArray(it){
if(isTypedArray(it))return it;
throw TypeError('Target is not a typed array');
};

var aTypedArrayConstructor=function aTypedArrayConstructor(C){
if(setPrototypeOf){
if(isPrototypeOf.call(TypedArray,C))return C;
}else for(var ARRAY in TypedArrayConstructorsList){if(has(TypedArrayConstructorsList,NAME)){
var TypedArrayConstructor=global[ARRAY];
if(TypedArrayConstructor&&(C===TypedArrayConstructor||isPrototypeOf.call(TypedArrayConstructor,C))){
return C;
}
}}throw TypeError('Target is not a typed array constructor');
};

var exportTypedArrayMethod=function exportTypedArrayMethod(KEY,property,forced){
if(!DESCRIPTORS)return;
if(forced)for(var ARRAY in TypedArrayConstructorsList){
var TypedArrayConstructor=global[ARRAY];
if(TypedArrayConstructor&&has(TypedArrayConstructor.prototype,KEY)){
delete TypedArrayConstructor.prototype[KEY];
}
}
if(!TypedArrayPrototype[KEY]||forced){
redefine(TypedArrayPrototype,KEY,forced?property:
NATIVE_ARRAY_BUFFER_VIEWS&&Int8ArrayPrototype[KEY]||property);
}
};

var exportTypedArrayStaticMethod=function exportTypedArrayStaticMethod(KEY,property,forced){
var ARRAY,TypedArrayConstructor;
if(!DESCRIPTORS)return;
if(setPrototypeOf){
if(forced)for(ARRAY in TypedArrayConstructorsList){
TypedArrayConstructor=global[ARRAY];
if(TypedArrayConstructor&&has(TypedArrayConstructor,KEY)){
delete TypedArrayConstructor[KEY];
}
}
if(!TypedArray[KEY]||forced){
// V8 ~ Chrome 49-50 `%TypedArray%` methods are non-writable non-configurable
try{
return redefine(TypedArray,KEY,forced?property:NATIVE_ARRAY_BUFFER_VIEWS&&Int8Array[KEY]||property);
}catch(error){/* empty */}
}else return;
}
for(ARRAY in TypedArrayConstructorsList){
TypedArrayConstructor=global[ARRAY];
if(TypedArrayConstructor&&(!TypedArrayConstructor[KEY]||forced)){
redefine(TypedArrayConstructor,KEY,property);
}
}
};

for(NAME in TypedArrayConstructorsList){
if(!global[NAME])NATIVE_ARRAY_BUFFER_VIEWS=false;
}

// WebKit bug - typed arrays constructors prototype is Object.prototype
if(!NATIVE_ARRAY_BUFFER_VIEWS||typeof TypedArray!='function'||TypedArray===Function.prototype){
// eslint-disable-next-line no-shadow
TypedArray=function TypedArray(){
throw TypeError('Incorrect invocation');
};
if(NATIVE_ARRAY_BUFFER_VIEWS)for(NAME in TypedArrayConstructorsList){
if(global[NAME])setPrototypeOf(global[NAME],TypedArray);
}
}

if(!NATIVE_ARRAY_BUFFER_VIEWS||!TypedArrayPrototype||TypedArrayPrototype===ObjectPrototype){
TypedArrayPrototype=TypedArray.prototype;
if(NATIVE_ARRAY_BUFFER_VIEWS)for(NAME in TypedArrayConstructorsList){
if(global[NAME])setPrototypeOf(global[NAME].prototype,TypedArrayPrototype);
}
}

// WebKit bug - one more object in Uint8ClampedArray prototype chain
if(NATIVE_ARRAY_BUFFER_VIEWS&&getPrototypeOf(Uint8ClampedArrayPrototype)!==TypedArrayPrototype){
setPrototypeOf(Uint8ClampedArrayPrototype,TypedArrayPrototype);
}

if(DESCRIPTORS&&!has(TypedArrayPrototype,TO_STRING_TAG)){
TYPED_ARRAY_TAG_REQIRED=true;
defineProperty(TypedArrayPrototype,TO_STRING_TAG,{get:function get(){
return isObject(this)?this[TYPED_ARRAY_TAG]:undefined;
}});
for(NAME in TypedArrayConstructorsList){if(global[NAME]){
createNonEnumerableProperty(global[NAME],TYPED_ARRAY_TAG,NAME);
}}
}

module.exports={
NATIVE_ARRAY_BUFFER_VIEWS:NATIVE_ARRAY_BUFFER_VIEWS,
TYPED_ARRAY_TAG:TYPED_ARRAY_TAG_REQIRED&&TYPED_ARRAY_TAG,
aTypedArray:aTypedArray,
aTypedArrayConstructor:aTypedArrayConstructor,
exportTypedArrayMethod:exportTypedArrayMethod,
exportTypedArrayStaticMethod:exportTypedArrayStaticMethod,
isView:isView,
isTypedArray:isTypedArray,
TypedArray:TypedArray,
TypedArrayPrototype:TypedArrayPrototype};


},{"../internals/array-buffer-native":108,"../internals/classof":126,"../internals/create-non-enumerable-property":131,"../internals/descriptors":136,"../internals/global":150,"../internals/has":151,"../internals/is-object":164,"../internals/object-define-property":180,"../internals/object-get-prototype-of":185,"../internals/object-set-prototype-of":189,"../internals/redefine":197,"../internals/uid":228,"../internals/well-known-symbol":231}],110:[function(require,module,exports){
'use strict';
var global=require('../internals/global');
var DESCRIPTORS=require('../internals/descriptors');
var NATIVE_ARRAY_BUFFER=require('../internals/array-buffer-native');
var createNonEnumerableProperty=require('../internals/create-non-enumerable-property');
var redefineAll=require('../internals/redefine-all');
var fails=require('../internals/fails');
var anInstance=require('../internals/an-instance');
var toInteger=require('../internals/to-integer');
var toLength=require('../internals/to-length');
var toIndex=require('../internals/to-index');
var IEEE754=require('../internals/ieee754');
var getPrototypeOf=require('../internals/object-get-prototype-of');
var setPrototypeOf=require('../internals/object-set-prototype-of');
var getOwnPropertyNames=require('../internals/object-get-own-property-names').f;
var defineProperty=require('../internals/object-define-property').f;
var arrayFill=require('../internals/array-fill');
var setToStringTag=require('../internals/set-to-string-tag');
var InternalStateModule=require('../internals/internal-state');

var getInternalState=InternalStateModule.get;
var setInternalState=InternalStateModule.set;
var ARRAY_BUFFER='ArrayBuffer';
var DATA_VIEW='DataView';
var PROTOTYPE='prototype';
var WRONG_LENGTH='Wrong length';
var WRONG_INDEX='Wrong index';
var NativeArrayBuffer=global[ARRAY_BUFFER];
var $ArrayBuffer=NativeArrayBuffer;
var $DataView=global[DATA_VIEW];
var $DataViewPrototype=$DataView&&$DataView[PROTOTYPE];
var ObjectPrototype=Object.prototype;
var RangeError=global.RangeError;

var packIEEE754=IEEE754.pack;
var unpackIEEE754=IEEE754.unpack;

var packInt8=function packInt8(number){
return[number&0xFF];
};

var packInt16=function packInt16(number){
return[number&0xFF,number>>8&0xFF];
};

var packInt32=function packInt32(number){
return[number&0xFF,number>>8&0xFF,number>>16&0xFF,number>>24&0xFF];
};

var unpackInt32=function unpackInt32(buffer){
return buffer[3]<<24|buffer[2]<<16|buffer[1]<<8|buffer[0];
};

var packFloat32=function packFloat32(number){
return packIEEE754(number,23,4);
};

var packFloat64=function packFloat64(number){
return packIEEE754(number,52,8);
};

var addGetter=function addGetter(Constructor,key){
defineProperty(Constructor[PROTOTYPE],key,{get:function get(){return getInternalState(this)[key];}});
};

var get=function get(view,count,index,isLittleEndian){
var intIndex=toIndex(index);
var store=getInternalState(view);
if(intIndex+count>store.byteLength)throw RangeError(WRONG_INDEX);
var bytes=getInternalState(store.buffer).bytes;
var start=intIndex+store.byteOffset;
var pack=bytes.slice(start,start+count);
return isLittleEndian?pack:pack.reverse();
};

var set=function set(view,count,index,conversion,value,isLittleEndian){
var intIndex=toIndex(index);
var store=getInternalState(view);
if(intIndex+count>store.byteLength)throw RangeError(WRONG_INDEX);
var bytes=getInternalState(store.buffer).bytes;
var start=intIndex+store.byteOffset;
var pack=conversion(+value);
for(var i=0;i<count;i++){bytes[start+i]=pack[isLittleEndian?i:count-i-1];}
};

if(!NATIVE_ARRAY_BUFFER){
$ArrayBuffer=function ArrayBuffer(length){
anInstance(this,$ArrayBuffer,ARRAY_BUFFER);
var byteLength=toIndex(length);
setInternalState(this,{
bytes:arrayFill.call(new Array(byteLength),0),
byteLength:byteLength});

if(!DESCRIPTORS)this.byteLength=byteLength;
};

$DataView=function DataView(buffer,byteOffset,byteLength){
anInstance(this,$DataView,DATA_VIEW);
anInstance(buffer,$ArrayBuffer,DATA_VIEW);
var bufferLength=getInternalState(buffer).byteLength;
var offset=toInteger(byteOffset);
if(offset<0||offset>bufferLength)throw RangeError('Wrong offset');
byteLength=byteLength===undefined?bufferLength-offset:toLength(byteLength);
if(offset+byteLength>bufferLength)throw RangeError(WRONG_LENGTH);
setInternalState(this,{
buffer:buffer,
byteLength:byteLength,
byteOffset:offset});

if(!DESCRIPTORS){
this.buffer=buffer;
this.byteLength=byteLength;
this.byteOffset=offset;
}
};

if(DESCRIPTORS){
addGetter($ArrayBuffer,'byteLength');
addGetter($DataView,'buffer');
addGetter($DataView,'byteLength');
addGetter($DataView,'byteOffset');
}

redefineAll($DataView[PROTOTYPE],{
getInt8:function getInt8(byteOffset){
return get(this,1,byteOffset)[0]<<24>>24;
},
getUint8:function getUint8(byteOffset){
return get(this,1,byteOffset)[0];
},
getInt16:function getInt16(byteOffset/* , littleEndian */){
var bytes=get(this,2,byteOffset,arguments.length>1?arguments[1]:undefined);
return(bytes[1]<<8|bytes[0])<<16>>16;
},
getUint16:function getUint16(byteOffset/* , littleEndian */){
var bytes=get(this,2,byteOffset,arguments.length>1?arguments[1]:undefined);
return bytes[1]<<8|bytes[0];
},
getInt32:function getInt32(byteOffset/* , littleEndian */){
return unpackInt32(get(this,4,byteOffset,arguments.length>1?arguments[1]:undefined));
},
getUint32:function getUint32(byteOffset/* , littleEndian */){
return unpackInt32(get(this,4,byteOffset,arguments.length>1?arguments[1]:undefined))>>>0;
},
getFloat32:function getFloat32(byteOffset/* , littleEndian */){
return unpackIEEE754(get(this,4,byteOffset,arguments.length>1?arguments[1]:undefined),23);
},
getFloat64:function getFloat64(byteOffset/* , littleEndian */){
return unpackIEEE754(get(this,8,byteOffset,arguments.length>1?arguments[1]:undefined),52);
},
setInt8:function setInt8(byteOffset,value){
set(this,1,byteOffset,packInt8,value);
},
setUint8:function setUint8(byteOffset,value){
set(this,1,byteOffset,packInt8,value);
},
setInt16:function setInt16(byteOffset,value/* , littleEndian */){
set(this,2,byteOffset,packInt16,value,arguments.length>2?arguments[2]:undefined);
},
setUint16:function setUint16(byteOffset,value/* , littleEndian */){
set(this,2,byteOffset,packInt16,value,arguments.length>2?arguments[2]:undefined);
},
setInt32:function setInt32(byteOffset,value/* , littleEndian */){
set(this,4,byteOffset,packInt32,value,arguments.length>2?arguments[2]:undefined);
},
setUint32:function setUint32(byteOffset,value/* , littleEndian */){
set(this,4,byteOffset,packInt32,value,arguments.length>2?arguments[2]:undefined);
},
setFloat32:function setFloat32(byteOffset,value/* , littleEndian */){
set(this,4,byteOffset,packFloat32,value,arguments.length>2?arguments[2]:undefined);
},
setFloat64:function setFloat64(byteOffset,value/* , littleEndian */){
set(this,8,byteOffset,packFloat64,value,arguments.length>2?arguments[2]:undefined);
}});

}else{
if(!fails(function(){
NativeArrayBuffer(1);
})||!fails(function(){
new NativeArrayBuffer(-1);// eslint-disable-line no-new
})||fails(function(){
new NativeArrayBuffer();// eslint-disable-line no-new
new NativeArrayBuffer(1.5);// eslint-disable-line no-new
new NativeArrayBuffer(NaN);// eslint-disable-line no-new
return NativeArrayBuffer.name!=ARRAY_BUFFER;
})){
$ArrayBuffer=function ArrayBuffer(length){
anInstance(this,$ArrayBuffer);
return new NativeArrayBuffer(toIndex(length));
};
var ArrayBufferPrototype=$ArrayBuffer[PROTOTYPE]=NativeArrayBuffer[PROTOTYPE];
for(var keys=getOwnPropertyNames(NativeArrayBuffer),j=0,key;keys.length>j;){
if(!((key=keys[j++])in $ArrayBuffer)){
createNonEnumerableProperty($ArrayBuffer,key,NativeArrayBuffer[key]);
}
}
ArrayBufferPrototype.constructor=$ArrayBuffer;
}

// WebKit bug - the same parent prototype for typed arrays and data view
if(setPrototypeOf&&getPrototypeOf($DataViewPrototype)!==ObjectPrototype){
setPrototypeOf($DataViewPrototype,ObjectPrototype);
}

// iOS Safari 7.x bug
var testView=new $DataView(new $ArrayBuffer(2));
var nativeSetInt8=$DataViewPrototype.setInt8;
testView.setInt8(0,2147483648);
testView.setInt8(1,2147483649);
if(testView.getInt8(0)||!testView.getInt8(1))redefineAll($DataViewPrototype,{
setInt8:function setInt8(byteOffset,value){
nativeSetInt8.call(this,byteOffset,value<<24>>24);
},
setUint8:function setUint8(byteOffset,value){
nativeSetInt8.call(this,byteOffset,value<<24>>24);
}},
{unsafe:true});
}

setToStringTag($ArrayBuffer,ARRAY_BUFFER);
setToStringTag($DataView,DATA_VIEW);

module.exports={
ArrayBuffer:$ArrayBuffer,
DataView:$DataView};


},{"../internals/an-instance":106,"../internals/array-buffer-native":108,"../internals/array-fill":112,"../internals/create-non-enumerable-property":131,"../internals/descriptors":136,"../internals/fails":145,"../internals/global":150,"../internals/ieee754":156,"../internals/internal-state":160,"../internals/object-define-property":180,"../internals/object-get-own-property-names":183,"../internals/object-get-prototype-of":185,"../internals/object-set-prototype-of":189,"../internals/redefine-all":196,"../internals/set-to-string-tag":206,"../internals/to-index":216,"../internals/to-integer":218,"../internals/to-length":219}],111:[function(require,module,exports){
'use strict';
var toObject=require('../internals/to-object');
var toAbsoluteIndex=require('../internals/to-absolute-index');
var toLength=require('../internals/to-length');

var min=Math.min;

// `Array.prototype.copyWithin` method implementation
// https://tc39.github.io/ecma262/#sec-array.prototype.copywithin
module.exports=[].copyWithin||function copyWithin(target/* = 0 */,start/* = 0, end = @length */){
var O=toObject(this);
var len=toLength(O.length);
var to=toAbsoluteIndex(target,len);
var from=toAbsoluteIndex(start,len);
var end=arguments.length>2?arguments[2]:undefined;
var count=min((end===undefined?len:toAbsoluteIndex(end,len))-from,len-to);
var inc=1;
if(from<to&&to<from+count){
inc=-1;
from+=count-1;
to+=count-1;
}
while(count-->0){
if(from in O)O[to]=O[from];else
delete O[to];
to+=inc;
from+=inc;
}return O;
};

},{"../internals/to-absolute-index":215,"../internals/to-length":219,"../internals/to-object":220}],112:[function(require,module,exports){
'use strict';
var toObject=require('../internals/to-object');
var toAbsoluteIndex=require('../internals/to-absolute-index');
var toLength=require('../internals/to-length');

// `Array.prototype.fill` method implementation
// https://tc39.github.io/ecma262/#sec-array.prototype.fill
module.exports=function fill(value/* , start = 0, end = @length */){
var O=toObject(this);
var length=toLength(O.length);
var argumentsLength=arguments.length;
var index=toAbsoluteIndex(argumentsLength>1?arguments[1]:undefined,length);
var end=argumentsLength>2?arguments[2]:undefined;
var endPos=end===undefined?length:toAbsoluteIndex(end,length);
while(endPos>index){O[index++]=value;}
return O;
};

},{"../internals/to-absolute-index":215,"../internals/to-length":219,"../internals/to-object":220}],113:[function(require,module,exports){
'use strict';
var $forEach=require('../internals/array-iteration').forEach;
var arrayMethodIsStrict=require('../internals/array-method-is-strict');
var arrayMethodUsesToLength=require('../internals/array-method-uses-to-length');

var STRICT_METHOD=arrayMethodIsStrict('forEach');
var USES_TO_LENGTH=arrayMethodUsesToLength('forEach');

// `Array.prototype.forEach` method implementation
// https://tc39.github.io/ecma262/#sec-array.prototype.foreach
module.exports=!STRICT_METHOD||!USES_TO_LENGTH?function forEach(callbackfn/* , thisArg */){
return $forEach(this,callbackfn,arguments.length>1?arguments[1]:undefined);
}:[].forEach;

},{"../internals/array-iteration":116,"../internals/array-method-is-strict":119,"../internals/array-method-uses-to-length":120}],114:[function(require,module,exports){
'use strict';
var bind=require('../internals/function-bind-context');
var toObject=require('../internals/to-object');
var callWithSafeIterationClosing=require('../internals/call-with-safe-iteration-closing');
var isArrayIteratorMethod=require('../internals/is-array-iterator-method');
var toLength=require('../internals/to-length');
var createProperty=require('../internals/create-property');
var getIteratorMethod=require('../internals/get-iterator-method');

// `Array.from` method implementation
// https://tc39.github.io/ecma262/#sec-array.from
module.exports=function from(arrayLike/* , mapfn = undefined, thisArg = undefined */){
var O=toObject(arrayLike);
var C=typeof this=='function'?this:Array;
var argumentsLength=arguments.length;
var mapfn=argumentsLength>1?arguments[1]:undefined;
var mapping=mapfn!==undefined;
var iteratorMethod=getIteratorMethod(O);
var index=0;
var length,result,step,iterator,next,value;
if(mapping)mapfn=bind(mapfn,argumentsLength>2?arguments[2]:undefined,2);
// if the target is not iterable or it's an array with the default iterator - use a simple case
if(iteratorMethod!=undefined&&!(C==Array&&isArrayIteratorMethod(iteratorMethod))){
iterator=iteratorMethod.call(O);
next=iterator.next;
result=new C();
for(;!(step=next.call(iterator)).done;index++){
value=mapping?callWithSafeIterationClosing(iterator,mapfn,[step.value,index],true):step.value;
createProperty(result,index,value);
}
}else{
length=toLength(O.length);
result=new C(length);
for(;length>index;index++){
value=mapping?mapfn(O[index],index):O[index];
createProperty(result,index,value);
}
}
result.length=index;
return result;
};

},{"../internals/call-with-safe-iteration-closing":123,"../internals/create-property":133,"../internals/function-bind-context":147,"../internals/get-iterator-method":149,"../internals/is-array-iterator-method":161,"../internals/to-length":219,"../internals/to-object":220}],115:[function(require,module,exports){
var toIndexedObject=require('../internals/to-indexed-object');
var toLength=require('../internals/to-length');
var toAbsoluteIndex=require('../internals/to-absolute-index');

// `Array.prototype.{ indexOf, includes }` methods implementation
var createMethod=function createMethod(IS_INCLUDES){
return function($this,el,fromIndex){
var O=toIndexedObject($this);
var length=toLength(O.length);
var index=toAbsoluteIndex(fromIndex,length);
var value;
// Array#includes uses SameValueZero equality algorithm
// eslint-disable-next-line no-self-compare
if(IS_INCLUDES&&el!=el)while(length>index){
value=O[index++];
// eslint-disable-next-line no-self-compare
if(value!=value)return true;
// Array#indexOf ignores holes, Array#includes - not
}else for(;length>index;index++){
if((IS_INCLUDES||index in O)&&O[index]===el)return IS_INCLUDES||index||0;
}return!IS_INCLUDES&&-1;
};
};

module.exports={
// `Array.prototype.includes` method
// https://tc39.github.io/ecma262/#sec-array.prototype.includes
includes:createMethod(true),
// `Array.prototype.indexOf` method
// https://tc39.github.io/ecma262/#sec-array.prototype.indexof
indexOf:createMethod(false)};


},{"../internals/to-absolute-index":215,"../internals/to-indexed-object":217,"../internals/to-length":219}],116:[function(require,module,exports){
var bind=require('../internals/function-bind-context');
var IndexedObject=require('../internals/indexed-object');
var toObject=require('../internals/to-object');
var toLength=require('../internals/to-length');
var arraySpeciesCreate=require('../internals/array-species-create');

var push=[].push;

// `Array.prototype.{ forEach, map, filter, some, every, find, findIndex }` methods implementation
var createMethod=function createMethod(TYPE){
var IS_MAP=TYPE==1;
var IS_FILTER=TYPE==2;
var IS_SOME=TYPE==3;
var IS_EVERY=TYPE==4;
var IS_FIND_INDEX=TYPE==6;
var NO_HOLES=TYPE==5||IS_FIND_INDEX;
return function($this,callbackfn,that,specificCreate){
var O=toObject($this);
var self=IndexedObject(O);
var boundFunction=bind(callbackfn,that,3);
var length=toLength(self.length);
var index=0;
var create=specificCreate||arraySpeciesCreate;
var target=IS_MAP?create($this,length):IS_FILTER?create($this,0):undefined;
var value,result;
for(;length>index;index++){if(NO_HOLES||index in self){
value=self[index];
result=boundFunction(value,index,O);
if(TYPE){
if(IS_MAP)target[index]=result;// map
else if(result)switch(TYPE){
case 3:return true;// some
case 5:return value;// find
case 6:return index;// findIndex
case 2:push.call(target,value);// filter
}else if(IS_EVERY)return false;// every
}
}}
return IS_FIND_INDEX?-1:IS_SOME||IS_EVERY?IS_EVERY:target;
};
};

module.exports={
// `Array.prototype.forEach` method
// https://tc39.github.io/ecma262/#sec-array.prototype.foreach
forEach:createMethod(0),
// `Array.prototype.map` method
// https://tc39.github.io/ecma262/#sec-array.prototype.map
map:createMethod(1),
// `Array.prototype.filter` method
// https://tc39.github.io/ecma262/#sec-array.prototype.filter
filter:createMethod(2),
// `Array.prototype.some` method
// https://tc39.github.io/ecma262/#sec-array.prototype.some
some:createMethod(3),
// `Array.prototype.every` method
// https://tc39.github.io/ecma262/#sec-array.prototype.every
every:createMethod(4),
// `Array.prototype.find` method
// https://tc39.github.io/ecma262/#sec-array.prototype.find
find:createMethod(5),
// `Array.prototype.findIndex` method
// https://tc39.github.io/ecma262/#sec-array.prototype.findIndex
findIndex:createMethod(6)};


},{"../internals/array-species-create":122,"../internals/function-bind-context":147,"../internals/indexed-object":157,"../internals/to-length":219,"../internals/to-object":220}],117:[function(require,module,exports){
'use strict';
var toIndexedObject=require('../internals/to-indexed-object');
var toInteger=require('../internals/to-integer');
var toLength=require('../internals/to-length');
var arrayMethodIsStrict=require('../internals/array-method-is-strict');
var arrayMethodUsesToLength=require('../internals/array-method-uses-to-length');

var min=Math.min;
var nativeLastIndexOf=[].lastIndexOf;
var NEGATIVE_ZERO=!!nativeLastIndexOf&&1/[1].lastIndexOf(1,-0)<0;
var STRICT_METHOD=arrayMethodIsStrict('lastIndexOf');
// For preventing possible almost infinite loop in non-standard implementations, test the forward version of the method
var USES_TO_LENGTH=arrayMethodUsesToLength('indexOf',{ACCESSORS:true,1:0});
var FORCED=NEGATIVE_ZERO||!STRICT_METHOD||!USES_TO_LENGTH;

// `Array.prototype.lastIndexOf` method implementation
// https://tc39.github.io/ecma262/#sec-array.prototype.lastindexof
module.exports=FORCED?function lastIndexOf(searchElement/* , fromIndex = @[*-1] */){
// convert -0 to +0
if(NEGATIVE_ZERO)return nativeLastIndexOf.apply(this,arguments)||0;
var O=toIndexedObject(this);
var length=toLength(O.length);
var index=length-1;
if(arguments.length>1)index=min(index,toInteger(arguments[1]));
if(index<0)index=length+index;
for(;index>=0;index--){if(index in O&&O[index]===searchElement)return index||0;}
return-1;
}:nativeLastIndexOf;

},{"../internals/array-method-is-strict":119,"../internals/array-method-uses-to-length":120,"../internals/to-indexed-object":217,"../internals/to-integer":218,"../internals/to-length":219}],118:[function(require,module,exports){
var fails=require('../internals/fails');
var wellKnownSymbol=require('../internals/well-known-symbol');
var V8_VERSION=require('../internals/engine-v8-version');

var SPECIES=wellKnownSymbol('species');

module.exports=function(METHOD_NAME){
// We can't use this feature detection in V8 since it causes
// deoptimization and serious performance degradation
// https://github.com/zloirock/core-js/issues/677
return V8_VERSION>=51||!fails(function(){
var array=[];
var constructor=array.constructor={};
constructor[SPECIES]=function(){
return{foo:1};
};
return array[METHOD_NAME](Boolean).foo!==1;
});
};

},{"../internals/engine-v8-version":142,"../internals/fails":145,"../internals/well-known-symbol":231}],119:[function(require,module,exports){
'use strict';
var fails=require('../internals/fails');

module.exports=function(METHOD_NAME,argument){
var method=[][METHOD_NAME];
return!!method&&fails(function(){
// eslint-disable-next-line no-useless-call,no-throw-literal
method.call(null,argument||function(){throw 1;},1);
});
};

},{"../internals/fails":145}],120:[function(require,module,exports){
var DESCRIPTORS=require('../internals/descriptors');
var fails=require('../internals/fails');
var has=require('../internals/has');

var defineProperty=Object.defineProperty;
var cache={};

var thrower=function thrower(it){throw it;};

module.exports=function(METHOD_NAME,options){
if(has(cache,METHOD_NAME))return cache[METHOD_NAME];
if(!options)options={};
var method=[][METHOD_NAME];
var ACCESSORS=has(options,'ACCESSORS')?options.ACCESSORS:false;
var argument0=has(options,0)?options[0]:thrower;
var argument1=has(options,1)?options[1]:undefined;

return cache[METHOD_NAME]=!!method&&!fails(function(){
if(ACCESSORS&&!DESCRIPTORS)return true;
var O={length:-1};

if(ACCESSORS)defineProperty(O,1,{enumerable:true,get:thrower});else
O[1]=1;

method.call(O,argument0,argument1);
});
};

},{"../internals/descriptors":136,"../internals/fails":145,"../internals/has":151}],121:[function(require,module,exports){
var aFunction=require('../internals/a-function');
var toObject=require('../internals/to-object');
var IndexedObject=require('../internals/indexed-object');
var toLength=require('../internals/to-length');

// `Array.prototype.{ reduce, reduceRight }` methods implementation
var createMethod=function createMethod(IS_RIGHT){
return function(that,callbackfn,argumentsLength,memo){
aFunction(callbackfn);
var O=toObject(that);
var self=IndexedObject(O);
var length=toLength(O.length);
var index=IS_RIGHT?length-1:0;
var i=IS_RIGHT?-1:1;
if(argumentsLength<2)while(true){
if(index in self){
memo=self[index];
index+=i;
break;
}
index+=i;
if(IS_RIGHT?index<0:length<=index){
throw TypeError('Reduce of empty array with no initial value');
}
}
for(;IS_RIGHT?index>=0:length>index;index+=i){if(index in self){
memo=callbackfn(memo,self[index],index,O);
}}
return memo;
};
};

module.exports={
// `Array.prototype.reduce` method
// https://tc39.github.io/ecma262/#sec-array.prototype.reduce
left:createMethod(false),
// `Array.prototype.reduceRight` method
// https://tc39.github.io/ecma262/#sec-array.prototype.reduceright
right:createMethod(true)};


},{"../internals/a-function":102,"../internals/indexed-object":157,"../internals/to-length":219,"../internals/to-object":220}],122:[function(require,module,exports){
var isObject=require('../internals/is-object');
var isArray=require('../internals/is-array');
var wellKnownSymbol=require('../internals/well-known-symbol');

var SPECIES=wellKnownSymbol('species');

// `ArraySpeciesCreate` abstract operation
// https://tc39.github.io/ecma262/#sec-arrayspeciescreate
module.exports=function(originalArray,length){
var C;
if(isArray(originalArray)){
C=originalArray.constructor;
// cross-realm fallback
if(typeof C=='function'&&(C===Array||isArray(C.prototype)))C=undefined;else
if(isObject(C)){
C=C[SPECIES];
if(C===null)C=undefined;
}
}return new(C===undefined?Array:C)(length===0?0:length);
};

},{"../internals/is-array":162,"../internals/is-object":164,"../internals/well-known-symbol":231}],123:[function(require,module,exports){
var anObject=require('../internals/an-object');
var iteratorClose=require('../internals/iterator-close');

// call something on iterator step with safe closing on error
module.exports=function(iterator,fn,value,ENTRIES){
try{
return ENTRIES?fn(anObject(value)[0],value[1]):fn(value);
// 7.4.6 IteratorClose(iterator, completion)
}catch(error){
iteratorClose(iterator);
throw error;
}
};

},{"../internals/an-object":107,"../internals/iterator-close":168}],124:[function(require,module,exports){
var wellKnownSymbol=require('../internals/well-known-symbol');

var ITERATOR=wellKnownSymbol('iterator');
var SAFE_CLOSING=false;

try{
var called=0;
var iteratorWithReturn={
next:function next(){
return{done:!!called++};
},
'return':function _return(){
SAFE_CLOSING=true;
}};

iteratorWithReturn[ITERATOR]=function(){
return this;
};
// eslint-disable-next-line no-throw-literal
Array.from(iteratorWithReturn,function(){throw 2;});
}catch(error){/* empty */}

module.exports=function(exec,SKIP_CLOSING){
if(!SKIP_CLOSING&&!SAFE_CLOSING)return false;
var ITERATION_SUPPORT=false;
try{
var object={};
object[ITERATOR]=function(){
return{
next:function next(){
return{done:ITERATION_SUPPORT=true};
}};

};
exec(object);
}catch(error){/* empty */}
return ITERATION_SUPPORT;
};

},{"../internals/well-known-symbol":231}],125:[function(require,module,exports){
var toString={}.toString;

module.exports=function(it){
return toString.call(it).slice(8,-1);
};

},{}],126:[function(require,module,exports){
var TO_STRING_TAG_SUPPORT=require('../internals/to-string-tag-support');
var classofRaw=require('../internals/classof-raw');
var wellKnownSymbol=require('../internals/well-known-symbol');

var TO_STRING_TAG=wellKnownSymbol('toStringTag');
// ES3 wrong here
var CORRECT_ARGUMENTS=classofRaw(function(){return arguments;}())=='Arguments';

// fallback for IE11 Script Access Denied error
var tryGet=function tryGet(it,key){
try{
return it[key];
}catch(error){/* empty */}
};

// getting tag from ES6+ `Object.prototype.toString`
module.exports=TO_STRING_TAG_SUPPORT?classofRaw:function(it){
var O,tag,result;
return it===undefined?'Undefined':it===null?'Null'
// @@toStringTag case
:typeof(tag=tryGet(O=Object(it),TO_STRING_TAG))=='string'?tag
// builtinTag case
:CORRECT_ARGUMENTS?classofRaw(O)
// ES3 arguments fallback
:(result=classofRaw(O))=='Object'&&typeof O.callee=='function'?'Arguments':result;
};

},{"../internals/classof-raw":125,"../internals/to-string-tag-support":224,"../internals/well-known-symbol":231}],127:[function(require,module,exports){
var has=require('../internals/has');
var ownKeys=require('../internals/own-keys');
var getOwnPropertyDescriptorModule=require('../internals/object-get-own-property-descriptor');
var definePropertyModule=require('../internals/object-define-property');

module.exports=function(target,source){
var keys=ownKeys(source);
var defineProperty=definePropertyModule.f;
var getOwnPropertyDescriptor=getOwnPropertyDescriptorModule.f;
for(var i=0;i<keys.length;i++){
var key=keys[i];
if(!has(target,key))defineProperty(target,key,getOwnPropertyDescriptor(source,key));
}
};

},{"../internals/has":151,"../internals/object-define-property":180,"../internals/object-get-own-property-descriptor":181,"../internals/own-keys":192}],128:[function(require,module,exports){
var wellKnownSymbol=require('../internals/well-known-symbol');

var MATCH=wellKnownSymbol('match');

module.exports=function(METHOD_NAME){
var regexp=/./;
try{
'/./'[METHOD_NAME](regexp);
}catch(error1){
try{
regexp[MATCH]=false;
return'/./'[METHOD_NAME](regexp);
}catch(error2){/* empty */}
}return false;
};

},{"../internals/well-known-symbol":231}],129:[function(require,module,exports){
var fails=require('../internals/fails');

module.exports=!fails(function(){
function F(){/* empty */}
F.prototype.constructor=null;
return Object.getPrototypeOf(new F())!==F.prototype;
});

},{"../internals/fails":145}],130:[function(require,module,exports){
'use strict';
var IteratorPrototype=require('../internals/iterators-core').IteratorPrototype;
var create=require('../internals/object-create');
var createPropertyDescriptor=require('../internals/create-property-descriptor');
var setToStringTag=require('../internals/set-to-string-tag');
var Iterators=require('../internals/iterators');

var returnThis=function returnThis(){return this;};

module.exports=function(IteratorConstructor,NAME,next){
var TO_STRING_TAG=NAME+' Iterator';
IteratorConstructor.prototype=create(IteratorPrototype,{next:createPropertyDescriptor(1,next)});
setToStringTag(IteratorConstructor,TO_STRING_TAG,false,true);
Iterators[TO_STRING_TAG]=returnThis;
return IteratorConstructor;
};

},{"../internals/create-property-descriptor":132,"../internals/iterators":170,"../internals/iterators-core":169,"../internals/object-create":178,"../internals/set-to-string-tag":206}],131:[function(require,module,exports){
var DESCRIPTORS=require('../internals/descriptors');
var definePropertyModule=require('../internals/object-define-property');
var createPropertyDescriptor=require('../internals/create-property-descriptor');

module.exports=DESCRIPTORS?function(object,key,value){
return definePropertyModule.f(object,key,createPropertyDescriptor(1,value));
}:function(object,key,value){
object[key]=value;
return object;
};

},{"../internals/create-property-descriptor":132,"../internals/descriptors":136,"../internals/object-define-property":180}],132:[function(require,module,exports){
module.exports=function(bitmap,value){
return{
enumerable:!(bitmap&1),
configurable:!(bitmap&2),
writable:!(bitmap&4),
value:value};

};

},{}],133:[function(require,module,exports){
'use strict';
var toPrimitive=require('../internals/to-primitive');
var definePropertyModule=require('../internals/object-define-property');
var createPropertyDescriptor=require('../internals/create-property-descriptor');

module.exports=function(object,key,value){
var propertyKey=toPrimitive(key);
if(propertyKey in object)definePropertyModule.f(object,propertyKey,createPropertyDescriptor(0,value));else
object[propertyKey]=value;
};

},{"../internals/create-property-descriptor":132,"../internals/object-define-property":180,"../internals/to-primitive":223}],134:[function(require,module,exports){
'use strict';
var $=require('../internals/export');
var createIteratorConstructor=require('../internals/create-iterator-constructor');
var getPrototypeOf=require('../internals/object-get-prototype-of');
var setPrototypeOf=require('../internals/object-set-prototype-of');
var setToStringTag=require('../internals/set-to-string-tag');
var createNonEnumerableProperty=require('../internals/create-non-enumerable-property');
var redefine=require('../internals/redefine');
var wellKnownSymbol=require('../internals/well-known-symbol');
var IS_PURE=require('../internals/is-pure');
var Iterators=require('../internals/iterators');
var IteratorsCore=require('../internals/iterators-core');

var IteratorPrototype=IteratorsCore.IteratorPrototype;
var BUGGY_SAFARI_ITERATORS=IteratorsCore.BUGGY_SAFARI_ITERATORS;
var ITERATOR=wellKnownSymbol('iterator');
var KEYS='keys';
var VALUES='values';
var ENTRIES='entries';

var returnThis=function returnThis(){return this;};

module.exports=function(Iterable,NAME,IteratorConstructor,next,DEFAULT,IS_SET,FORCED){
createIteratorConstructor(IteratorConstructor,NAME,next);

var getIterationMethod=function getIterationMethod(KIND){
if(KIND===DEFAULT&&defaultIterator)return defaultIterator;
if(!BUGGY_SAFARI_ITERATORS&&KIND in IterablePrototype)return IterablePrototype[KIND];
switch(KIND){
case KEYS:return function keys(){return new IteratorConstructor(this,KIND);};
case VALUES:return function values(){return new IteratorConstructor(this,KIND);};
case ENTRIES:return function entries(){return new IteratorConstructor(this,KIND);};}
return function(){return new IteratorConstructor(this);};
};

var TO_STRING_TAG=NAME+' Iterator';
var INCORRECT_VALUES_NAME=false;
var IterablePrototype=Iterable.prototype;
var nativeIterator=IterablePrototype[ITERATOR]||
IterablePrototype['@@iterator']||
DEFAULT&&IterablePrototype[DEFAULT];
var defaultIterator=!BUGGY_SAFARI_ITERATORS&&nativeIterator||getIterationMethod(DEFAULT);
var anyNativeIterator=NAME=='Array'?IterablePrototype.entries||nativeIterator:nativeIterator;
var CurrentIteratorPrototype,methods,KEY;

// fix native
if(anyNativeIterator){
CurrentIteratorPrototype=getPrototypeOf(anyNativeIterator.call(new Iterable()));
if(IteratorPrototype!==Object.prototype&&CurrentIteratorPrototype.next){
if(!IS_PURE&&getPrototypeOf(CurrentIteratorPrototype)!==IteratorPrototype){
if(setPrototypeOf){
setPrototypeOf(CurrentIteratorPrototype,IteratorPrototype);
}else if(typeof CurrentIteratorPrototype[ITERATOR]!='function'){
createNonEnumerableProperty(CurrentIteratorPrototype,ITERATOR,returnThis);
}
}
// Set @@toStringTag to native iterators
setToStringTag(CurrentIteratorPrototype,TO_STRING_TAG,true,true);
if(IS_PURE)Iterators[TO_STRING_TAG]=returnThis;
}
}

// fix Array#{values, @@iterator}.name in V8 / FF
if(DEFAULT==VALUES&&nativeIterator&&nativeIterator.name!==VALUES){
INCORRECT_VALUES_NAME=true;
defaultIterator=function values(){return nativeIterator.call(this);};
}

// define iterator
if((!IS_PURE||FORCED)&&IterablePrototype[ITERATOR]!==defaultIterator){
createNonEnumerableProperty(IterablePrototype,ITERATOR,defaultIterator);
}
Iterators[NAME]=defaultIterator;

// export additional methods
if(DEFAULT){
methods={
values:getIterationMethod(VALUES),
keys:IS_SET?defaultIterator:getIterationMethod(KEYS),
entries:getIterationMethod(ENTRIES)};

if(FORCED)for(KEY in methods){
if(BUGGY_SAFARI_ITERATORS||INCORRECT_VALUES_NAME||!(KEY in IterablePrototype)){
redefine(IterablePrototype,KEY,methods[KEY]);
}
}else $({target:NAME,proto:true,forced:BUGGY_SAFARI_ITERATORS||INCORRECT_VALUES_NAME},methods);
}

return methods;
};

},{"../internals/create-iterator-constructor":130,"../internals/create-non-enumerable-property":131,"../internals/export":144,"../internals/is-pure":165,"../internals/iterators":170,"../internals/iterators-core":169,"../internals/object-get-prototype-of":185,"../internals/object-set-prototype-of":189,"../internals/redefine":197,"../internals/set-to-string-tag":206,"../internals/well-known-symbol":231}],135:[function(require,module,exports){
var path=require('../internals/path');
var has=require('../internals/has');
var wrappedWellKnownSymbolModule=require('../internals/well-known-symbol-wrapped');
var defineProperty=require('../internals/object-define-property').f;

module.exports=function(NAME){
var Symbol=path.Symbol||(path.Symbol={});
if(!has(Symbol,NAME))defineProperty(Symbol,NAME,{
value:wrappedWellKnownSymbolModule.f(NAME)});

};

},{"../internals/has":151,"../internals/object-define-property":180,"../internals/path":193,"../internals/well-known-symbol-wrapped":230}],136:[function(require,module,exports){
var fails=require('../internals/fails');

// Thank's IE8 for his funny defineProperty
module.exports=!fails(function(){
return Object.defineProperty({},1,{get:function get(){return 7;}})[1]!=7;
});

},{"../internals/fails":145}],137:[function(require,module,exports){
var global=require('../internals/global');
var isObject=require('../internals/is-object');

var document=global.document;
// typeof document.createElement is 'object' in old IE
var EXISTS=isObject(document)&&isObject(document.createElement);

module.exports=function(it){
return EXISTS?document.createElement(it):{};
};

},{"../internals/global":150,"../internals/is-object":164}],138:[function(require,module,exports){
// iterable DOM collections
// flag - `iterable` interface - 'entries', 'keys', 'values', 'forEach' methods
module.exports={
CSSRuleList:0,
CSSStyleDeclaration:0,
CSSValueList:0,
ClientRectList:0,
DOMRectList:0,
DOMStringList:0,
DOMTokenList:1,
DataTransferItemList:0,
FileList:0,
HTMLAllCollection:0,
HTMLCollection:0,
HTMLFormElement:0,
HTMLSelectElement:0,
MediaList:0,
MimeTypeArray:0,
NamedNodeMap:0,
NodeList:1,
PaintRequestList:0,
Plugin:0,
PluginArray:0,
SVGLengthList:0,
SVGNumberList:0,
SVGPathSegList:0,
SVGPointList:0,
SVGStringList:0,
SVGTransformList:0,
SourceBufferList:0,
StyleSheetList:0,
TextTrackCueList:0,
TextTrackList:0,
TouchList:0};


},{}],139:[function(require,module,exports){
var userAgent=require('../internals/engine-user-agent');

module.exports=/(iphone|ipod|ipad).*applewebkit/i.test(userAgent);

},{"../internals/engine-user-agent":141}],140:[function(require,module,exports){
var classof=require('../internals/classof-raw');
var global=require('../internals/global');

module.exports=classof(global.process)=='process';

},{"../internals/classof-raw":125,"../internals/global":150}],141:[function(require,module,exports){
var getBuiltIn=require('../internals/get-built-in');

module.exports=getBuiltIn('navigator','userAgent')||'';

},{"../internals/get-built-in":148}],142:[function(require,module,exports){
var global=require('../internals/global');
var userAgent=require('../internals/engine-user-agent');

var process=global.process;
var versions=process&&process.versions;
var v8=versions&&versions.v8;
var match,version;

if(v8){
match=v8.split('.');
version=match[0]+match[1];
}else if(userAgent){
match=userAgent.match(/Edge\/(\d+)/);
if(!match||match[1]>=74){
match=userAgent.match(/Chrome\/(\d+)/);
if(match)version=match[1];
}
}

module.exports=version&&+version;

},{"../internals/engine-user-agent":141,"../internals/global":150}],143:[function(require,module,exports){
// IE8- don't enum bug keys
module.exports=[
'constructor',
'hasOwnProperty',
'isPrototypeOf',
'propertyIsEnumerable',
'toLocaleString',
'toString',
'valueOf'];


},{}],144:[function(require,module,exports){
var global=require('../internals/global');
var getOwnPropertyDescriptor=require('../internals/object-get-own-property-descriptor').f;
var createNonEnumerableProperty=require('../internals/create-non-enumerable-property');
var redefine=require('../internals/redefine');
var setGlobal=require('../internals/set-global');
var copyConstructorProperties=require('../internals/copy-constructor-properties');
var isForced=require('../internals/is-forced');

/*
  options.target      - name of the target object
  options.global      - target is the global object
  options.stat        - export as static methods of target
  options.proto       - export as prototype methods of target
  options.real        - real prototype method for the `pure` version
  options.forced      - export even if the native feature is available
  options.bind        - bind methods to the target, required for the `pure` version
  options.wrap        - wrap constructors to preventing global pollution, required for the `pure` version
  options.unsafe      - use the simple assignment of property instead of delete + defineProperty
  options.sham        - add a flag to not completely full polyfills
  options.enumerable  - export as enumerable property
  options.noTargetGet - prevent calling a getter on target
*/
module.exports=function(options,source){
var TARGET=options.target;
var GLOBAL=options.global;
var STATIC=options.stat;
var FORCED,target,key,targetProperty,sourceProperty,descriptor;
if(GLOBAL){
target=global;
}else if(STATIC){
target=global[TARGET]||setGlobal(TARGET,{});
}else{
target=(global[TARGET]||{}).prototype;
}
if(target)for(key in source){
sourceProperty=source[key];
if(options.noTargetGet){
descriptor=getOwnPropertyDescriptor(target,key);
targetProperty=descriptor&&descriptor.value;
}else targetProperty=target[key];
FORCED=isForced(GLOBAL?key:TARGET+(STATIC?'.':'#')+key,options.forced);
// contained in target
if(!FORCED&&targetProperty!==undefined){
if(typeof sourceProperty===typeof targetProperty)continue;
copyConstructorProperties(sourceProperty,targetProperty);
}
// add a flag to not completely full polyfills
if(options.sham||targetProperty&&targetProperty.sham){
createNonEnumerableProperty(sourceProperty,'sham',true);
}
// extend global
redefine(target,key,sourceProperty,options);
}
};

},{"../internals/copy-constructor-properties":127,"../internals/create-non-enumerable-property":131,"../internals/global":150,"../internals/is-forced":163,"../internals/object-get-own-property-descriptor":181,"../internals/redefine":197,"../internals/set-global":204}],145:[function(require,module,exports){
module.exports=function(exec){
try{
return!!exec();
}catch(error){
return true;
}
};

},{}],146:[function(require,module,exports){
'use strict';
// TODO: Remove from `core-js@4` since it's moved to entry points
require('../modules/es.regexp.exec');
var redefine=require('../internals/redefine');
var fails=require('../internals/fails');
var wellKnownSymbol=require('../internals/well-known-symbol');
var regexpExec=require('../internals/regexp-exec');
var createNonEnumerableProperty=require('../internals/create-non-enumerable-property');

var SPECIES=wellKnownSymbol('species');

var REPLACE_SUPPORTS_NAMED_GROUPS=!fails(function(){
// #replace needs built-in support for named groups.
// #match works fine because it just return the exec results, even if it has
// a "grops" property.
var re=/./;
re.exec=function(){
var result=[];
result.groups={a:'7'};
return result;
};
return''.replace(re,'$<a>')!=='7';
});

// IE <= 11 replaces $0 with the whole match, as if it was $&
// https://stackoverflow.com/questions/6024666/getting-ie-to-replace-a-regex-with-the-literal-string-0
var REPLACE_KEEPS_$0=function(){
return'a'.replace(/./,'$0')==='$0';
}();

var REPLACE=wellKnownSymbol('replace');
// Safari <= 13.0.3(?) substitutes nth capture where n>m with an empty string
var REGEXP_REPLACE_SUBSTITUTES_UNDEFINED_CAPTURE=function(){
if(/./[REPLACE]){
return /./[REPLACE]('a','$0')==='';
}
return false;
}();

// Chrome 51 has a buggy "split" implementation when RegExp#exec !== nativeExec
// Weex JS has frozen built-in prototypes, so use try / catch wrapper
var SPLIT_WORKS_WITH_OVERWRITTEN_EXEC=!fails(function(){
var re=/(?:)/;
var originalExec=re.exec;
re.exec=function(){return originalExec.apply(this,arguments);};
var result='ab'.split(re);
return result.length!==2||result[0]!=='a'||result[1]!=='b';
});

module.exports=function(KEY,length,exec,sham){
var SYMBOL=wellKnownSymbol(KEY);

var DELEGATES_TO_SYMBOL=!fails(function(){
// String methods call symbol-named RegEp methods
var O={};
O[SYMBOL]=function(){return 7;};
return''[KEY](O)!=7;
});

var DELEGATES_TO_EXEC=DELEGATES_TO_SYMBOL&&!fails(function(){
// Symbol-named RegExp methods call .exec
var execCalled=false;
var re=/a/;

if(KEY==='split'){
// We can't use real regex here since it causes deoptimization
// and serious performance degradation in V8
// https://github.com/zloirock/core-js/issues/306
re={};
// RegExp[@@split] doesn't call the regex's exec method, but first creates
// a new one. We need to return the patched regex when creating the new one.
re.constructor={};
re.constructor[SPECIES]=function(){return re;};
re.flags='';
re[SYMBOL]=/./[SYMBOL];
}

re.exec=function(){execCalled=true;return null;};

re[SYMBOL]('');
return!execCalled;
});

if(
!DELEGATES_TO_SYMBOL||
!DELEGATES_TO_EXEC||
KEY==='replace'&&!(
REPLACE_SUPPORTS_NAMED_GROUPS&&
REPLACE_KEEPS_$0&&
!REGEXP_REPLACE_SUBSTITUTES_UNDEFINED_CAPTURE)||

KEY==='split'&&!SPLIT_WORKS_WITH_OVERWRITTEN_EXEC)
{
var nativeRegExpMethod=/./[SYMBOL];
var methods=exec(SYMBOL,''[KEY],function(nativeMethod,regexp,str,arg2,forceStringMethod){
if(regexp.exec===regexpExec){
if(DELEGATES_TO_SYMBOL&&!forceStringMethod){
// The native String method already delegates to @@method (this
// polyfilled function), leasing to infinite recursion.
// We avoid it by directly calling the native @@method method.
return{done:true,value:nativeRegExpMethod.call(regexp,str,arg2)};
}
return{done:true,value:nativeMethod.call(str,regexp,arg2)};
}
return{done:false};
},{
REPLACE_KEEPS_$0:REPLACE_KEEPS_$0,
REGEXP_REPLACE_SUBSTITUTES_UNDEFINED_CAPTURE:REGEXP_REPLACE_SUBSTITUTES_UNDEFINED_CAPTURE});

var stringMethod=methods[0];
var regexMethod=methods[1];

redefine(String.prototype,KEY,stringMethod);
redefine(RegExp.prototype,SYMBOL,length==2
// 21.2.5.8 RegExp.prototype[@@replace](string, replaceValue)
// 21.2.5.11 RegExp.prototype[@@split](string, limit)
?function(string,arg){return regexMethod.call(string,this,arg);}
// 21.2.5.6 RegExp.prototype[@@match](string)
// 21.2.5.9 RegExp.prototype[@@search](string)
:function(string){return regexMethod.call(string,this);});

}

if(sham)createNonEnumerableProperty(RegExp.prototype[SYMBOL],'sham',true);
};

},{"../internals/create-non-enumerable-property":131,"../internals/fails":145,"../internals/redefine":197,"../internals/regexp-exec":199,"../internals/well-known-symbol":231,"../modules/es.regexp.exec":256}],147:[function(require,module,exports){
var aFunction=require('../internals/a-function');

// optional / simple context binding
module.exports=function(fn,that,length){
aFunction(fn);
if(that===undefined)return fn;
switch(length){
case 0:return function(){
return fn.call(that);
};
case 1:return function(a){
return fn.call(that,a);
};
case 2:return function(a,b){
return fn.call(that,a,b);
};
case 3:return function(a,b,c){
return fn.call(that,a,b,c);
};}

return function()/* ...args */{
return fn.apply(that,arguments);
};
};

},{"../internals/a-function":102}],148:[function(require,module,exports){
var path=require('../internals/path');
var global=require('../internals/global');

var aFunction=function aFunction(variable){
return typeof variable=='function'?variable:undefined;
};

module.exports=function(namespace,method){
return arguments.length<2?aFunction(path[namespace])||aFunction(global[namespace]):
path[namespace]&&path[namespace][method]||global[namespace]&&global[namespace][method];
};

},{"../internals/global":150,"../internals/path":193}],149:[function(require,module,exports){
var classof=require('../internals/classof');
var Iterators=require('../internals/iterators');
var wellKnownSymbol=require('../internals/well-known-symbol');

var ITERATOR=wellKnownSymbol('iterator');

module.exports=function(it){
if(it!=undefined)return it[ITERATOR]||
it['@@iterator']||
Iterators[classof(it)];
};

},{"../internals/classof":126,"../internals/iterators":170,"../internals/well-known-symbol":231}],150:[function(require,module,exports){
(function(global){
var check=function check(it){
return it&&it.Math==Math&&it;
};

// https://github.com/zloirock/core-js/issues/86#issuecomment-115759028
module.exports=
// eslint-disable-next-line no-undef
check(typeof globalThis=='object'&&globalThis)||
check(typeof window=='object'&&window)||
check(typeof self=='object'&&self)||
check(typeof global=='object'&&global)||
// eslint-disable-next-line no-new-func
function(){return this;}()||Function('return this')();

}).call(this,typeof global!=="undefined"?global:typeof self!=="undefined"?self:typeof window!=="undefined"?window:{});
},{}],151:[function(require,module,exports){
var hasOwnProperty={}.hasOwnProperty;

module.exports=function(it,key){
return hasOwnProperty.call(it,key);
};

},{}],152:[function(require,module,exports){
module.exports={};

},{}],153:[function(require,module,exports){
var global=require('../internals/global');

module.exports=function(a,b){
var console=global.console;
if(console&&console.error){
arguments.length===1?console.error(a):console.error(a,b);
}
};

},{"../internals/global":150}],154:[function(require,module,exports){
var getBuiltIn=require('../internals/get-built-in');

module.exports=getBuiltIn('document','documentElement');

},{"../internals/get-built-in":148}],155:[function(require,module,exports){
var DESCRIPTORS=require('../internals/descriptors');
var fails=require('../internals/fails');
var createElement=require('../internals/document-create-element');

// Thank's IE8 for his funny defineProperty
module.exports=!DESCRIPTORS&&!fails(function(){
return Object.defineProperty(createElement('div'),'a',{
get:function get(){return 7;}}).
a!=7;
});

},{"../internals/descriptors":136,"../internals/document-create-element":137,"../internals/fails":145}],156:[function(require,module,exports){
// IEEE754 conversions based on https://github.com/feross/ieee754
// eslint-disable-next-line no-shadow-restricted-names
var Infinity=1/0;
var abs=Math.abs;
var pow=Math.pow;
var floor=Math.floor;
var log=Math.log;
var LN2=Math.LN2;

var pack=function pack(number,mantissaLength,bytes){
var buffer=new Array(bytes);
var exponentLength=bytes*8-mantissaLength-1;
var eMax=(1<<exponentLength)-1;
var eBias=eMax>>1;
var rt=mantissaLength===23?pow(2,-24)-pow(2,-77):0;
var sign=number<0||number===0&&1/number<0?1:0;
var index=0;
var exponent,mantissa,c;
number=abs(number);
// eslint-disable-next-line no-self-compare
if(number!=number||number===Infinity){
// eslint-disable-next-line no-self-compare
mantissa=number!=number?1:0;
exponent=eMax;
}else{
exponent=floor(log(number)/LN2);
if(number*(c=pow(2,-exponent))<1){
exponent--;
c*=2;
}
if(exponent+eBias>=1){
number+=rt/c;
}else{
number+=rt*pow(2,1-eBias);
}
if(number*c>=2){
exponent++;
c/=2;
}
if(exponent+eBias>=eMax){
mantissa=0;
exponent=eMax;
}else if(exponent+eBias>=1){
mantissa=(number*c-1)*pow(2,mantissaLength);
exponent=exponent+eBias;
}else{
mantissa=number*pow(2,eBias-1)*pow(2,mantissaLength);
exponent=0;
}
}
for(;mantissaLength>=8;buffer[index++]=mantissa&255,mantissa/=256,mantissaLength-=8){;}
exponent=exponent<<mantissaLength|mantissa;
exponentLength+=mantissaLength;
for(;exponentLength>0;buffer[index++]=exponent&255,exponent/=256,exponentLength-=8){;}
buffer[--index]|=sign*128;
return buffer;
};

var unpack=function unpack(buffer,mantissaLength){
var bytes=buffer.length;
var exponentLength=bytes*8-mantissaLength-1;
var eMax=(1<<exponentLength)-1;
var eBias=eMax>>1;
var nBits=exponentLength-7;
var index=bytes-1;
var sign=buffer[index--];
var exponent=sign&127;
var mantissa;
sign>>=7;
for(;nBits>0;exponent=exponent*256+buffer[index],index--,nBits-=8){;}
mantissa=exponent&(1<<-nBits)-1;
exponent>>=-nBits;
nBits+=mantissaLength;
for(;nBits>0;mantissa=mantissa*256+buffer[index],index--,nBits-=8){;}
if(exponent===0){
exponent=1-eBias;
}else if(exponent===eMax){
return mantissa?NaN:sign?-Infinity:Infinity;
}else{
mantissa=mantissa+pow(2,mantissaLength);
exponent=exponent-eBias;
}return(sign?-1:1)*mantissa*pow(2,exponent-mantissaLength);
};

module.exports={
pack:pack,
unpack:unpack};


},{}],157:[function(require,module,exports){
var fails=require('../internals/fails');
var classof=require('../internals/classof-raw');

var split=''.split;

// fallback for non-array-like ES3 and non-enumerable old V8 strings
module.exports=fails(function(){
// throws an error in rhino, see https://github.com/mozilla/rhino/issues/346
// eslint-disable-next-line no-prototype-builtins
return!Object('z').propertyIsEnumerable(0);
})?function(it){
return classof(it)=='String'?split.call(it,''):Object(it);
}:Object;

},{"../internals/classof-raw":125,"../internals/fails":145}],158:[function(require,module,exports){
var isObject=require('../internals/is-object');
var setPrototypeOf=require('../internals/object-set-prototype-of');

// makes subclassing work correct for wrapped built-ins
module.exports=function($this,dummy,Wrapper){
var NewTarget,NewTargetPrototype;
if(
// it can work only with native `setPrototypeOf`
setPrototypeOf&&
// we haven't completely correct pre-ES6 way for getting `new.target`, so use this
typeof(NewTarget=dummy.constructor)=='function'&&
NewTarget!==Wrapper&&
isObject(NewTargetPrototype=NewTarget.prototype)&&
NewTargetPrototype!==Wrapper.prototype)
setPrototypeOf($this,NewTargetPrototype);
return $this;
};

},{"../internals/is-object":164,"../internals/object-set-prototype-of":189}],159:[function(require,module,exports){
var store=require('../internals/shared-store');

var functionToString=Function.toString;

// this helper broken in `3.4.1-3.4.4`, so we can't use `shared` helper
if(typeof store.inspectSource!='function'){
store.inspectSource=function(it){
return functionToString.call(it);
};
}

module.exports=store.inspectSource;

},{"../internals/shared-store":208}],160:[function(require,module,exports){
var NATIVE_WEAK_MAP=require('../internals/native-weak-map');
var global=require('../internals/global');
var isObject=require('../internals/is-object');
var createNonEnumerableProperty=require('../internals/create-non-enumerable-property');
var objectHas=require('../internals/has');
var shared=require('../internals/shared-store');
var sharedKey=require('../internals/shared-key');
var hiddenKeys=require('../internals/hidden-keys');

var WeakMap=global.WeakMap;
var set,get,has;

var enforce=function enforce(it){
return has(it)?get(it):set(it,{});
};

var getterFor=function getterFor(TYPE){
return function(it){
var state;
if(!isObject(it)||(state=get(it)).type!==TYPE){
throw TypeError('Incompatible receiver, '+TYPE+' required');
}return state;
};
};

if(NATIVE_WEAK_MAP){
var store=shared.state||(shared.state=new WeakMap());
var wmget=store.get;
var wmhas=store.has;
var wmset=store.set;
set=function set(it,metadata){
metadata.facade=it;
wmset.call(store,it,metadata);
return metadata;
};
get=function get(it){
return wmget.call(store,it)||{};
};
has=function has(it){
return wmhas.call(store,it);
};
}else{
var STATE=sharedKey('state');
hiddenKeys[STATE]=true;
set=function set(it,metadata){
metadata.facade=it;
createNonEnumerableProperty(it,STATE,metadata);
return metadata;
};
get=function get(it){
return objectHas(it,STATE)?it[STATE]:{};
};
has=function has(it){
return objectHas(it,STATE);
};
}

module.exports={
set:set,
get:get,
has:has,
enforce:enforce,
getterFor:getterFor};


},{"../internals/create-non-enumerable-property":131,"../internals/global":150,"../internals/has":151,"../internals/hidden-keys":152,"../internals/is-object":164,"../internals/native-weak-map":174,"../internals/shared-key":207,"../internals/shared-store":208}],161:[function(require,module,exports){
var wellKnownSymbol=require('../internals/well-known-symbol');
var Iterators=require('../internals/iterators');

var ITERATOR=wellKnownSymbol('iterator');
var ArrayPrototype=Array.prototype;

// check on default Array iterator
module.exports=function(it){
return it!==undefined&&(Iterators.Array===it||ArrayPrototype[ITERATOR]===it);
};

},{"../internals/iterators":170,"../internals/well-known-symbol":231}],162:[function(require,module,exports){
var classof=require('../internals/classof-raw');

// `IsArray` abstract operation
// https://tc39.github.io/ecma262/#sec-isarray
module.exports=Array.isArray||function isArray(arg){
return classof(arg)=='Array';
};

},{"../internals/classof-raw":125}],163:[function(require,module,exports){
var fails=require('../internals/fails');

var replacement=/#|\.prototype\./;

var isForced=function isForced(feature,detection){
var value=data[normalize(feature)];
return value==POLYFILL?true:
value==NATIVE?false:
typeof detection=='function'?fails(detection):
!!detection;
};

var normalize=isForced.normalize=function(string){
return String(string).replace(replacement,'.').toLowerCase();
};

var data=isForced.data={};
var NATIVE=isForced.NATIVE='N';
var POLYFILL=isForced.POLYFILL='P';

module.exports=isForced;

},{"../internals/fails":145}],164:[function(require,module,exports){
module.exports=function(it){
return typeof it==='object'?it!==null:typeof it==='function';
};

},{}],165:[function(require,module,exports){
module.exports=false;

},{}],166:[function(require,module,exports){
var isObject=require('../internals/is-object');
var classof=require('../internals/classof-raw');
var wellKnownSymbol=require('../internals/well-known-symbol');

var MATCH=wellKnownSymbol('match');

// `IsRegExp` abstract operation
// https://tc39.github.io/ecma262/#sec-isregexp
module.exports=function(it){
var isRegExp;
return isObject(it)&&((isRegExp=it[MATCH])!==undefined?!!isRegExp:classof(it)=='RegExp');
};

},{"../internals/classof-raw":125,"../internals/is-object":164,"../internals/well-known-symbol":231}],167:[function(require,module,exports){
var anObject=require('../internals/an-object');
var isArrayIteratorMethod=require('../internals/is-array-iterator-method');
var toLength=require('../internals/to-length');
var bind=require('../internals/function-bind-context');
var getIteratorMethod=require('../internals/get-iterator-method');
var iteratorClose=require('../internals/iterator-close');

var Result=function Result(stopped,result){
this.stopped=stopped;
this.result=result;
};

module.exports=function(iterable,unboundFunction,options){
var that=options&&options.that;
var AS_ENTRIES=!!(options&&options.AS_ENTRIES);
var IS_ITERATOR=!!(options&&options.IS_ITERATOR);
var INTERRUPTED=!!(options&&options.INTERRUPTED);
var fn=bind(unboundFunction,that,1+AS_ENTRIES+INTERRUPTED);
var iterator,iterFn,index,length,result,next,step;

var stop=function stop(condition){
if(iterator)iteratorClose(iterator);
return new Result(true,condition);
};

var callFn=function callFn(value){
if(AS_ENTRIES){
anObject(value);
return INTERRUPTED?fn(value[0],value[1],stop):fn(value[0],value[1]);
}return INTERRUPTED?fn(value,stop):fn(value);
};

if(IS_ITERATOR){
iterator=iterable;
}else{
iterFn=getIteratorMethod(iterable);
if(typeof iterFn!='function')throw TypeError('Target is not iterable');
// optimisation for array iterators
if(isArrayIteratorMethod(iterFn)){
for(index=0,length=toLength(iterable.length);length>index;index++){
result=callFn(iterable[index]);
if(result&&result instanceof Result)return result;
}return new Result(false);
}
iterator=iterFn.call(iterable);
}

next=iterator.next;
while(!(step=next.call(iterator)).done){
try{
result=callFn(step.value);
}catch(error){
iteratorClose(iterator);
throw error;
}
if(typeof result=='object'&&result&&result instanceof Result)return result;
}return new Result(false);
};

},{"../internals/an-object":107,"../internals/function-bind-context":147,"../internals/get-iterator-method":149,"../internals/is-array-iterator-method":161,"../internals/iterator-close":168,"../internals/to-length":219}],168:[function(require,module,exports){
var anObject=require('../internals/an-object');

module.exports=function(iterator){
var returnMethod=iterator['return'];
if(returnMethod!==undefined){
return anObject(returnMethod.call(iterator)).value;
}
};

},{"../internals/an-object":107}],169:[function(require,module,exports){
'use strict';
var getPrototypeOf=require('../internals/object-get-prototype-of');
var createNonEnumerableProperty=require('../internals/create-non-enumerable-property');
var has=require('../internals/has');
var wellKnownSymbol=require('../internals/well-known-symbol');
var IS_PURE=require('../internals/is-pure');

var ITERATOR=wellKnownSymbol('iterator');
var BUGGY_SAFARI_ITERATORS=false;

var returnThis=function returnThis(){return this;};

// `%IteratorPrototype%` object
// https://tc39.github.io/ecma262/#sec-%iteratorprototype%-object
var IteratorPrototype,PrototypeOfArrayIteratorPrototype,arrayIterator;

if([].keys){
arrayIterator=[].keys();
// Safari 8 has buggy iterators w/o `next`
if(!('next'in arrayIterator))BUGGY_SAFARI_ITERATORS=true;else
{
PrototypeOfArrayIteratorPrototype=getPrototypeOf(getPrototypeOf(arrayIterator));
if(PrototypeOfArrayIteratorPrototype!==Object.prototype)IteratorPrototype=PrototypeOfArrayIteratorPrototype;
}
}

if(IteratorPrototype==undefined)IteratorPrototype={};

// 25.1.2.1.1 %IteratorPrototype%[@@iterator]()
if(!IS_PURE&&!has(IteratorPrototype,ITERATOR)){
createNonEnumerableProperty(IteratorPrototype,ITERATOR,returnThis);
}

module.exports={
IteratorPrototype:IteratorPrototype,
BUGGY_SAFARI_ITERATORS:BUGGY_SAFARI_ITERATORS};


},{"../internals/create-non-enumerable-property":131,"../internals/has":151,"../internals/is-pure":165,"../internals/object-get-prototype-of":185,"../internals/well-known-symbol":231}],170:[function(require,module,exports){
arguments[4][152][0].apply(exports,arguments);
},{"dup":152}],171:[function(require,module,exports){
var global=require('../internals/global');
var getOwnPropertyDescriptor=require('../internals/object-get-own-property-descriptor').f;
var macrotask=require('../internals/task').set;
var IS_IOS=require('../internals/engine-is-ios');
var IS_NODE=require('../internals/engine-is-node');

var MutationObserver=global.MutationObserver||global.WebKitMutationObserver;
var document=global.document;
var process=global.process;
var Promise=global.Promise;
// Node.js 11 shows ExperimentalWarning on getting `queueMicrotask`
var queueMicrotaskDescriptor=getOwnPropertyDescriptor(global,'queueMicrotask');
var queueMicrotask=queueMicrotaskDescriptor&&queueMicrotaskDescriptor.value;

var flush,head,last,notify,toggle,node,promise,then;

// modern engines have queueMicrotask method
if(!queueMicrotask){
flush=function flush(){
var parent,fn;
if(IS_NODE&&(parent=process.domain))parent.exit();
while(head){
fn=head.fn;
head=head.next;
try{
fn();
}catch(error){
if(head)notify();else
last=undefined;
throw error;
}
}last=undefined;
if(parent)parent.enter();
};

// browsers with MutationObserver, except iOS - https://github.com/zloirock/core-js/issues/339
if(!IS_IOS&&!IS_NODE&&MutationObserver&&document){
toggle=true;
node=document.createTextNode('');
new MutationObserver(flush).observe(node,{characterData:true});
notify=function notify(){
node.data=toggle=!toggle;
};
// environments with maybe non-completely correct, but existent Promise
}else if(Promise&&Promise.resolve){
// Promise.resolve without an argument throws an error in LG WebOS 2
promise=Promise.resolve(undefined);
then=promise.then;
notify=function notify(){
then.call(promise,flush);
};
// Node.js without promises
}else if(IS_NODE){
notify=function notify(){
process.nextTick(flush);
};
// for other environments - macrotask based on:
// - setImmediate
// - MessageChannel
// - window.postMessag
// - onreadystatechange
// - setTimeout
}else{
notify=function notify(){
// strange IE + webpack dev server bug - use .call(global)
macrotask.call(global,flush);
};
}
}

module.exports=queueMicrotask||function(fn){
var task={fn:fn,next:undefined};
if(last)last.next=task;
if(!head){
head=task;
notify();
}last=task;
};

},{"../internals/engine-is-ios":139,"../internals/engine-is-node":140,"../internals/global":150,"../internals/object-get-own-property-descriptor":181,"../internals/task":214}],172:[function(require,module,exports){
var global=require('../internals/global');

module.exports=global.Promise;

},{"../internals/global":150}],173:[function(require,module,exports){
var fails=require('../internals/fails');

module.exports=!!Object.getOwnPropertySymbols&&!fails(function(){
// Chrome 38 Symbol has incorrect toString conversion
// eslint-disable-next-line no-undef
return!String(Symbol());
});

},{"../internals/fails":145}],174:[function(require,module,exports){
var global=require('../internals/global');
var inspectSource=require('../internals/inspect-source');

var WeakMap=global.WeakMap;

module.exports=typeof WeakMap==='function'&&/native code/.test(inspectSource(WeakMap));

},{"../internals/global":150,"../internals/inspect-source":159}],175:[function(require,module,exports){
'use strict';
var aFunction=require('../internals/a-function');

var PromiseCapability=function PromiseCapability(C){
var resolve,reject;
this.promise=new C(function($$resolve,$$reject){
if(resolve!==undefined||reject!==undefined)throw TypeError('Bad Promise constructor');
resolve=$$resolve;
reject=$$reject;
});
this.resolve=aFunction(resolve);
this.reject=aFunction(reject);
};

// 25.4.1.5 NewPromiseCapability(C)
module.exports.f=function(C){
return new PromiseCapability(C);
};

},{"../internals/a-function":102}],176:[function(require,module,exports){
var isRegExp=require('../internals/is-regexp');

module.exports=function(it){
if(isRegExp(it)){
throw TypeError("The method doesn't accept regular expressions");
}return it;
};

},{"../internals/is-regexp":166}],177:[function(require,module,exports){
'use strict';
var DESCRIPTORS=require('../internals/descriptors');
var fails=require('../internals/fails');
var objectKeys=require('../internals/object-keys');
var getOwnPropertySymbolsModule=require('../internals/object-get-own-property-symbols');
var propertyIsEnumerableModule=require('../internals/object-property-is-enumerable');
var toObject=require('../internals/to-object');
var IndexedObject=require('../internals/indexed-object');

var nativeAssign=Object.assign;
var defineProperty=Object.defineProperty;

// `Object.assign` method
// https://tc39.github.io/ecma262/#sec-object.assign
module.exports=!nativeAssign||fails(function(){
// should have correct order of operations (Edge bug)
if(DESCRIPTORS&&nativeAssign({b:1},nativeAssign(defineProperty({},'a',{
enumerable:true,
get:function get(){
defineProperty(this,'b',{
value:3,
enumerable:false});

}}),
{b:2})).b!==1)return true;
// should work with symbols and should have deterministic property order (V8 bug)
var A={};
var B={};
// eslint-disable-next-line no-undef
var symbol=Symbol();
var alphabet='abcdefghijklmnopqrst';
A[symbol]=7;
alphabet.split('').forEach(function(chr){B[chr]=chr;});
return nativeAssign({},A)[symbol]!=7||objectKeys(nativeAssign({},B)).join('')!=alphabet;
})?function assign(target,source){// eslint-disable-line no-unused-vars
var T=toObject(target);
var argumentsLength=arguments.length;
var index=1;
var getOwnPropertySymbols=getOwnPropertySymbolsModule.f;
var propertyIsEnumerable=propertyIsEnumerableModule.f;
while(argumentsLength>index){
var S=IndexedObject(arguments[index++]);
var keys=getOwnPropertySymbols?objectKeys(S).concat(getOwnPropertySymbols(S)):objectKeys(S);
var length=keys.length;
var j=0;
var key;
while(length>j){
key=keys[j++];
if(!DESCRIPTORS||propertyIsEnumerable.call(S,key))T[key]=S[key];
}
}return T;
}:nativeAssign;

},{"../internals/descriptors":136,"../internals/fails":145,"../internals/indexed-object":157,"../internals/object-get-own-property-symbols":184,"../internals/object-keys":187,"../internals/object-property-is-enumerable":188,"../internals/to-object":220}],178:[function(require,module,exports){
var anObject=require('../internals/an-object');
var defineProperties=require('../internals/object-define-properties');
var enumBugKeys=require('../internals/enum-bug-keys');
var hiddenKeys=require('../internals/hidden-keys');
var html=require('../internals/html');
var documentCreateElement=require('../internals/document-create-element');
var sharedKey=require('../internals/shared-key');

var GT='>';
var LT='<';
var PROTOTYPE='prototype';
var SCRIPT='script';
var IE_PROTO=sharedKey('IE_PROTO');

var EmptyConstructor=function EmptyConstructor(){/* empty */};

var scriptTag=function scriptTag(content){
return LT+SCRIPT+GT+content+LT+'/'+SCRIPT+GT;
};

// Create object with fake `null` prototype: use ActiveX Object with cleared prototype
var NullProtoObjectViaActiveX=function NullProtoObjectViaActiveX(activeXDocument){
activeXDocument.write(scriptTag(''));
activeXDocument.close();
var temp=activeXDocument.parentWindow.Object;
activeXDocument=null;// avoid memory leak
return temp;
};

// Create object with fake `null` prototype: use iframe Object with cleared prototype
var NullProtoObjectViaIFrame=function NullProtoObjectViaIFrame(){
// Thrash, waste and sodomy: IE GC bug
var iframe=documentCreateElement('iframe');
var JS='java'+SCRIPT+':';
var iframeDocument;
iframe.style.display='none';
html.appendChild(iframe);
// https://github.com/zloirock/core-js/issues/475
iframe.src=String(JS);
iframeDocument=iframe.contentWindow.document;
iframeDocument.open();
iframeDocument.write(scriptTag('document.F=Object'));
iframeDocument.close();
return iframeDocument.F;
};

// Check for document.domain and active x support
// No need to use active x approach when document.domain is not set
// see https://github.com/es-shims/es5-shim/issues/150
// variation of https://github.com/kitcambridge/es5-shim/commit/4f738ac066346
// avoid IE GC bug
var activeXDocument;
var _NullProtoObject=function NullProtoObject(){
try{
/* global ActiveXObject */
activeXDocument=document.domain&&new ActiveXObject('htmlfile');
}catch(error){/* ignore */}
_NullProtoObject=activeXDocument?NullProtoObjectViaActiveX(activeXDocument):NullProtoObjectViaIFrame();
var length=enumBugKeys.length;
while(length--){delete _NullProtoObject[PROTOTYPE][enumBugKeys[length]];}
return _NullProtoObject();
};

hiddenKeys[IE_PROTO]=true;

// `Object.create` method
// https://tc39.github.io/ecma262/#sec-object.create
module.exports=Object.create||function create(O,Properties){
var result;
if(O!==null){
EmptyConstructor[PROTOTYPE]=anObject(O);
result=new EmptyConstructor();
EmptyConstructor[PROTOTYPE]=null;
// add "__proto__" for Object.getPrototypeOf polyfill
result[IE_PROTO]=O;
}else result=_NullProtoObject();
return Properties===undefined?result:defineProperties(result,Properties);
};

},{"../internals/an-object":107,"../internals/document-create-element":137,"../internals/enum-bug-keys":143,"../internals/hidden-keys":152,"../internals/html":154,"../internals/object-define-properties":179,"../internals/shared-key":207}],179:[function(require,module,exports){
var DESCRIPTORS=require('../internals/descriptors');
var definePropertyModule=require('../internals/object-define-property');
var anObject=require('../internals/an-object');
var objectKeys=require('../internals/object-keys');

// `Object.defineProperties` method
// https://tc39.github.io/ecma262/#sec-object.defineproperties
module.exports=DESCRIPTORS?Object.defineProperties:function defineProperties(O,Properties){
anObject(O);
var keys=objectKeys(Properties);
var length=keys.length;
var index=0;
var key;
while(length>index){definePropertyModule.f(O,key=keys[index++],Properties[key]);}
return O;
};

},{"../internals/an-object":107,"../internals/descriptors":136,"../internals/object-define-property":180,"../internals/object-keys":187}],180:[function(require,module,exports){
var DESCRIPTORS=require('../internals/descriptors');
var IE8_DOM_DEFINE=require('../internals/ie8-dom-define');
var anObject=require('../internals/an-object');
var toPrimitive=require('../internals/to-primitive');

var nativeDefineProperty=Object.defineProperty;

// `Object.defineProperty` method
// https://tc39.github.io/ecma262/#sec-object.defineproperty
exports.f=DESCRIPTORS?nativeDefineProperty:function defineProperty(O,P,Attributes){
anObject(O);
P=toPrimitive(P,true);
anObject(Attributes);
if(IE8_DOM_DEFINE)try{
return nativeDefineProperty(O,P,Attributes);
}catch(error){/* empty */}
if('get'in Attributes||'set'in Attributes)throw TypeError('Accessors not supported');
if('value'in Attributes)O[P]=Attributes.value;
return O;
};

},{"../internals/an-object":107,"../internals/descriptors":136,"../internals/ie8-dom-define":155,"../internals/to-primitive":223}],181:[function(require,module,exports){
var DESCRIPTORS=require('../internals/descriptors');
var propertyIsEnumerableModule=require('../internals/object-property-is-enumerable');
var createPropertyDescriptor=require('../internals/create-property-descriptor');
var toIndexedObject=require('../internals/to-indexed-object');
var toPrimitive=require('../internals/to-primitive');
var has=require('../internals/has');
var IE8_DOM_DEFINE=require('../internals/ie8-dom-define');

var nativeGetOwnPropertyDescriptor=Object.getOwnPropertyDescriptor;

// `Object.getOwnPropertyDescriptor` method
// https://tc39.github.io/ecma262/#sec-object.getownpropertydescriptor
exports.f=DESCRIPTORS?nativeGetOwnPropertyDescriptor:function getOwnPropertyDescriptor(O,P){
O=toIndexedObject(O);
P=toPrimitive(P,true);
if(IE8_DOM_DEFINE)try{
return nativeGetOwnPropertyDescriptor(O,P);
}catch(error){/* empty */}
if(has(O,P))return createPropertyDescriptor(!propertyIsEnumerableModule.f.call(O,P),O[P]);
};

},{"../internals/create-property-descriptor":132,"../internals/descriptors":136,"../internals/has":151,"../internals/ie8-dom-define":155,"../internals/object-property-is-enumerable":188,"../internals/to-indexed-object":217,"../internals/to-primitive":223}],182:[function(require,module,exports){
var toIndexedObject=require('../internals/to-indexed-object');
var nativeGetOwnPropertyNames=require('../internals/object-get-own-property-names').f;

var toString={}.toString;

var windowNames=typeof window=='object'&&window&&Object.getOwnPropertyNames?
Object.getOwnPropertyNames(window):[];

var getWindowNames=function getWindowNames(it){
try{
return nativeGetOwnPropertyNames(it);
}catch(error){
return windowNames.slice();
}
};

// fallback for IE11 buggy Object.getOwnPropertyNames with iframe and window
module.exports.f=function getOwnPropertyNames(it){
return windowNames&&toString.call(it)=='[object Window]'?
getWindowNames(it):
nativeGetOwnPropertyNames(toIndexedObject(it));
};

},{"../internals/object-get-own-property-names":183,"../internals/to-indexed-object":217}],183:[function(require,module,exports){
var internalObjectKeys=require('../internals/object-keys-internal');
var enumBugKeys=require('../internals/enum-bug-keys');

var hiddenKeys=enumBugKeys.concat('length','prototype');

// `Object.getOwnPropertyNames` method
// https://tc39.github.io/ecma262/#sec-object.getownpropertynames
exports.f=Object.getOwnPropertyNames||function getOwnPropertyNames(O){
return internalObjectKeys(O,hiddenKeys);
};

},{"../internals/enum-bug-keys":143,"../internals/object-keys-internal":186}],184:[function(require,module,exports){
exports.f=Object.getOwnPropertySymbols;

},{}],185:[function(require,module,exports){
var has=require('../internals/has');
var toObject=require('../internals/to-object');
var sharedKey=require('../internals/shared-key');
var CORRECT_PROTOTYPE_GETTER=require('../internals/correct-prototype-getter');

var IE_PROTO=sharedKey('IE_PROTO');
var ObjectPrototype=Object.prototype;

// `Object.getPrototypeOf` method
// https://tc39.github.io/ecma262/#sec-object.getprototypeof
module.exports=CORRECT_PROTOTYPE_GETTER?Object.getPrototypeOf:function(O){
O=toObject(O);
if(has(O,IE_PROTO))return O[IE_PROTO];
if(typeof O.constructor=='function'&&O instanceof O.constructor){
return O.constructor.prototype;
}return O instanceof Object?ObjectPrototype:null;
};

},{"../internals/correct-prototype-getter":129,"../internals/has":151,"../internals/shared-key":207,"../internals/to-object":220}],186:[function(require,module,exports){
var has=require('../internals/has');
var toIndexedObject=require('../internals/to-indexed-object');
var indexOf=require('../internals/array-includes').indexOf;
var hiddenKeys=require('../internals/hidden-keys');

module.exports=function(object,names){
var O=toIndexedObject(object);
var i=0;
var result=[];
var key;
for(key in O){!has(hiddenKeys,key)&&has(O,key)&&result.push(key);}
// Don't enum bug & hidden keys
while(names.length>i){if(has(O,key=names[i++])){
~indexOf(result,key)||result.push(key);
}}
return result;
};

},{"../internals/array-includes":115,"../internals/has":151,"../internals/hidden-keys":152,"../internals/to-indexed-object":217}],187:[function(require,module,exports){
var internalObjectKeys=require('../internals/object-keys-internal');
var enumBugKeys=require('../internals/enum-bug-keys');

// `Object.keys` method
// https://tc39.github.io/ecma262/#sec-object.keys
module.exports=Object.keys||function keys(O){
return internalObjectKeys(O,enumBugKeys);
};

},{"../internals/enum-bug-keys":143,"../internals/object-keys-internal":186}],188:[function(require,module,exports){
'use strict';
var nativePropertyIsEnumerable={}.propertyIsEnumerable;
var getOwnPropertyDescriptor=Object.getOwnPropertyDescriptor;

// Nashorn ~ JDK8 bug
var NASHORN_BUG=getOwnPropertyDescriptor&&!nativePropertyIsEnumerable.call({1:2},1);

// `Object.prototype.propertyIsEnumerable` method implementation
// https://tc39.github.io/ecma262/#sec-object.prototype.propertyisenumerable
exports.f=NASHORN_BUG?function propertyIsEnumerable(V){
var descriptor=getOwnPropertyDescriptor(this,V);
return!!descriptor&&descriptor.enumerable;
}:nativePropertyIsEnumerable;

},{}],189:[function(require,module,exports){
var anObject=require('../internals/an-object');
var aPossiblePrototype=require('../internals/a-possible-prototype');

// `Object.setPrototypeOf` method
// https://tc39.github.io/ecma262/#sec-object.setprototypeof
// Works with __proto__ only. Old v8 can't work with null proto objects.
/* eslint-disable no-proto */
module.exports=Object.setPrototypeOf||('__proto__'in{}?function(){
var CORRECT_SETTER=false;
var test={};
var setter;
try{
setter=Object.getOwnPropertyDescriptor(Object.prototype,'__proto__').set;
setter.call(test,[]);
CORRECT_SETTER=test instanceof Array;
}catch(error){/* empty */}
return function setPrototypeOf(O,proto){
anObject(O);
aPossiblePrototype(proto);
if(CORRECT_SETTER)setter.call(O,proto);else
O.__proto__=proto;
return O;
};
}():undefined);

},{"../internals/a-possible-prototype":103,"../internals/an-object":107}],190:[function(require,module,exports){
var DESCRIPTORS=require('../internals/descriptors');
var objectKeys=require('../internals/object-keys');
var toIndexedObject=require('../internals/to-indexed-object');
var propertyIsEnumerable=require('../internals/object-property-is-enumerable').f;

// `Object.{ entries, values }` methods implementation
var createMethod=function createMethod(TO_ENTRIES){
return function(it){
var O=toIndexedObject(it);
var keys=objectKeys(O);
var length=keys.length;
var i=0;
var result=[];
var key;
while(length>i){
key=keys[i++];
if(!DESCRIPTORS||propertyIsEnumerable.call(O,key)){
result.push(TO_ENTRIES?[key,O[key]]:O[key]);
}
}
return result;
};
};

module.exports={
// `Object.entries` method
// https://tc39.github.io/ecma262/#sec-object.entries
entries:createMethod(true),
// `Object.values` method
// https://tc39.github.io/ecma262/#sec-object.values
values:createMethod(false)};


},{"../internals/descriptors":136,"../internals/object-keys":187,"../internals/object-property-is-enumerable":188,"../internals/to-indexed-object":217}],191:[function(require,module,exports){
'use strict';
var TO_STRING_TAG_SUPPORT=require('../internals/to-string-tag-support');
var classof=require('../internals/classof');

// `Object.prototype.toString` method implementation
// https://tc39.github.io/ecma262/#sec-object.prototype.tostring
module.exports=TO_STRING_TAG_SUPPORT?{}.toString:function toString(){
return'[object '+classof(this)+']';
};

},{"../internals/classof":126,"../internals/to-string-tag-support":224}],192:[function(require,module,exports){
var getBuiltIn=require('../internals/get-built-in');
var getOwnPropertyNamesModule=require('../internals/object-get-own-property-names');
var getOwnPropertySymbolsModule=require('../internals/object-get-own-property-symbols');
var anObject=require('../internals/an-object');

// all object keys, includes non-enumerable and symbols
module.exports=getBuiltIn('Reflect','ownKeys')||function ownKeys(it){
var keys=getOwnPropertyNamesModule.f(anObject(it));
var getOwnPropertySymbols=getOwnPropertySymbolsModule.f;
return getOwnPropertySymbols?keys.concat(getOwnPropertySymbols(it)):keys;
};

},{"../internals/an-object":107,"../internals/get-built-in":148,"../internals/object-get-own-property-names":183,"../internals/object-get-own-property-symbols":184}],193:[function(require,module,exports){
var global=require('../internals/global');

module.exports=global;

},{"../internals/global":150}],194:[function(require,module,exports){
module.exports=function(exec){
try{
return{error:false,value:exec()};
}catch(error){
return{error:true,value:error};
}
};

},{}],195:[function(require,module,exports){
var anObject=require('../internals/an-object');
var isObject=require('../internals/is-object');
var newPromiseCapability=require('../internals/new-promise-capability');

module.exports=function(C,x){
anObject(C);
if(isObject(x)&&x.constructor===C)return x;
var promiseCapability=newPromiseCapability.f(C);
var resolve=promiseCapability.resolve;
resolve(x);
return promiseCapability.promise;
};

},{"../internals/an-object":107,"../internals/is-object":164,"../internals/new-promise-capability":175}],196:[function(require,module,exports){
var redefine=require('../internals/redefine');

module.exports=function(target,src,options){
for(var key in src){redefine(target,key,src[key],options);}
return target;
};

},{"../internals/redefine":197}],197:[function(require,module,exports){
var global=require('../internals/global');
var createNonEnumerableProperty=require('../internals/create-non-enumerable-property');
var has=require('../internals/has');
var setGlobal=require('../internals/set-global');
var inspectSource=require('../internals/inspect-source');
var InternalStateModule=require('../internals/internal-state');

var getInternalState=InternalStateModule.get;
var enforceInternalState=InternalStateModule.enforce;
var TEMPLATE=String(String).split('String');

(module.exports=function(O,key,value,options){
var unsafe=options?!!options.unsafe:false;
var simple=options?!!options.enumerable:false;
var noTargetGet=options?!!options.noTargetGet:false;
var state;
if(typeof value=='function'){
if(typeof key=='string'&&!has(value,'name')){
createNonEnumerableProperty(value,'name',key);
}
state=enforceInternalState(value);
if(!state.source){
state.source=TEMPLATE.join(typeof key=='string'?key:'');
}
}
if(O===global){
if(simple)O[key]=value;else
setGlobal(key,value);
return;
}else if(!unsafe){
delete O[key];
}else if(!noTargetGet&&O[key]){
simple=true;
}
if(simple)O[key]=value;else
createNonEnumerableProperty(O,key,value);
// add fake Function#toString for correct work wrapped methods / constructors with methods like LoDash isNative
})(Function.prototype,'toString',function toString(){
return typeof this=='function'&&getInternalState(this).source||inspectSource(this);
});

},{"../internals/create-non-enumerable-property":131,"../internals/global":150,"../internals/has":151,"../internals/inspect-source":159,"../internals/internal-state":160,"../internals/set-global":204}],198:[function(require,module,exports){
var classof=require('./classof-raw');
var regexpExec=require('./regexp-exec');

// `RegExpExec` abstract operation
// https://tc39.github.io/ecma262/#sec-regexpexec
module.exports=function(R,S){
var exec=R.exec;
if(typeof exec==='function'){
var result=exec.call(R,S);
if(typeof result!=='object'){
throw TypeError('RegExp exec method returned something other than an Object or null');
}
return result;
}

if(classof(R)!=='RegExp'){
throw TypeError('RegExp#exec called on incompatible receiver');
}

return regexpExec.call(R,S);
};


},{"./classof-raw":125,"./regexp-exec":199}],199:[function(require,module,exports){
'use strict';
var regexpFlags=require('./regexp-flags');
var stickyHelpers=require('./regexp-sticky-helpers');

var nativeExec=RegExp.prototype.exec;
// This always refers to the native implementation, because the
// String#replace polyfill uses ./fix-regexp-well-known-symbol-logic.js,
// which loads this file before patching the method.
var nativeReplace=String.prototype.replace;

var patchedExec=nativeExec;

var UPDATES_LAST_INDEX_WRONG=function(){
var re1=/a/;
var re2=/b*/g;
nativeExec.call(re1,'a');
nativeExec.call(re2,'a');
return re1.lastIndex!==0||re2.lastIndex!==0;
}();

var UNSUPPORTED_Y=stickyHelpers.UNSUPPORTED_Y||stickyHelpers.BROKEN_CARET;

// nonparticipating capturing group, copied from es5-shim's String#split patch.
var NPCG_INCLUDED=/()??/.exec('')[1]!==undefined;

var PATCH=UPDATES_LAST_INDEX_WRONG||NPCG_INCLUDED||UNSUPPORTED_Y;

if(PATCH){
patchedExec=function exec(str){
var re=this;
var lastIndex,reCopy,match,i;
var sticky=UNSUPPORTED_Y&&re.sticky;
var flags=regexpFlags.call(re);
var source=re.source;
var charsAdded=0;
var strCopy=str;

if(sticky){
flags=flags.replace('y','');
if(flags.indexOf('g')===-1){
flags+='g';
}

strCopy=String(str).slice(re.lastIndex);
// Support anchored sticky behavior.
if(re.lastIndex>0&&(!re.multiline||re.multiline&&str[re.lastIndex-1]!=='\n')){
source='(?: '+source+')';
strCopy=' '+strCopy;
charsAdded++;
}
// ^(? + rx + ) is needed, in combination with some str slicing, to
// simulate the 'y' flag.
reCopy=new RegExp('^(?:'+source+')',flags);
}

if(NPCG_INCLUDED){
reCopy=new RegExp('^'+source+'$(?!\\s)',flags);
}
if(UPDATES_LAST_INDEX_WRONG)lastIndex=re.lastIndex;

match=nativeExec.call(sticky?reCopy:re,strCopy);

if(sticky){
if(match){
match.input=match.input.slice(charsAdded);
match[0]=match[0].slice(charsAdded);
match.index=re.lastIndex;
re.lastIndex+=match[0].length;
}else re.lastIndex=0;
}else if(UPDATES_LAST_INDEX_WRONG&&match){
re.lastIndex=re.global?match.index+match[0].length:lastIndex;
}
if(NPCG_INCLUDED&&match&&match.length>1){
// Fix browsers whose `exec` methods don't consistently return `undefined`
// for NPCG, like IE8. NOTE: This doesn' work for /(.?)?/
nativeReplace.call(match[0],reCopy,function(){
for(i=1;i<arguments.length-2;i++){
if(arguments[i]===undefined)match[i]=undefined;
}
});
}

return match;
};
}

module.exports=patchedExec;

},{"./regexp-flags":200,"./regexp-sticky-helpers":201}],200:[function(require,module,exports){
'use strict';
var anObject=require('../internals/an-object');

// `RegExp.prototype.flags` getter implementation
// https://tc39.github.io/ecma262/#sec-get-regexp.prototype.flags
module.exports=function(){
var that=anObject(this);
var result='';
if(that.global)result+='g';
if(that.ignoreCase)result+='i';
if(that.multiline)result+='m';
if(that.dotAll)result+='s';
if(that.unicode)result+='u';
if(that.sticky)result+='y';
return result;
};

},{"../internals/an-object":107}],201:[function(require,module,exports){
'use strict';

var fails=require('./fails');

// babel-minify transpiles RegExp('a', 'y') -> /a/y and it causes SyntaxError,
// so we use an intermediate function.
function RE(s,f){
return RegExp(s,f);
}

exports.UNSUPPORTED_Y=fails(function(){
// babel-minify transpiles RegExp('a', 'y') -> /a/y and it causes SyntaxError
var re=RE('a','y');
re.lastIndex=2;
return re.exec('abcd')!=null;
});

exports.BROKEN_CARET=fails(function(){
// https://bugzilla.mozilla.org/show_bug.cgi?id=773687
var re=RE('^r','gy');
re.lastIndex=2;
return re.exec('str')!=null;
});

},{"./fails":145}],202:[function(require,module,exports){
// `RequireObjectCoercible` abstract operation
// https://tc39.github.io/ecma262/#sec-requireobjectcoercible
module.exports=function(it){
if(it==undefined)throw TypeError("Can't call method on "+it);
return it;
};

},{}],203:[function(require,module,exports){
// `SameValue` abstract operation
// https://tc39.github.io/ecma262/#sec-samevalue
module.exports=Object.is||function is(x,y){
// eslint-disable-next-line no-self-compare
return x===y?x!==0||1/x===1/y:x!=x&&y!=y;
};

},{}],204:[function(require,module,exports){
var global=require('../internals/global');
var createNonEnumerableProperty=require('../internals/create-non-enumerable-property');

module.exports=function(key,value){
try{
createNonEnumerableProperty(global,key,value);
}catch(error){
global[key]=value;
}return value;
};

},{"../internals/create-non-enumerable-property":131,"../internals/global":150}],205:[function(require,module,exports){
'use strict';
var getBuiltIn=require('../internals/get-built-in');
var definePropertyModule=require('../internals/object-define-property');
var wellKnownSymbol=require('../internals/well-known-symbol');
var DESCRIPTORS=require('../internals/descriptors');

var SPECIES=wellKnownSymbol('species');

module.exports=function(CONSTRUCTOR_NAME){
var Constructor=getBuiltIn(CONSTRUCTOR_NAME);
var defineProperty=definePropertyModule.f;

if(DESCRIPTORS&&Constructor&&!Constructor[SPECIES]){
defineProperty(Constructor,SPECIES,{
configurable:true,
get:function get(){return this;}});

}
};

},{"../internals/descriptors":136,"../internals/get-built-in":148,"../internals/object-define-property":180,"../internals/well-known-symbol":231}],206:[function(require,module,exports){
var defineProperty=require('../internals/object-define-property').f;
var has=require('../internals/has');
var wellKnownSymbol=require('../internals/well-known-symbol');

var TO_STRING_TAG=wellKnownSymbol('toStringTag');

module.exports=function(it,TAG,STATIC){
if(it&&!has(it=STATIC?it:it.prototype,TO_STRING_TAG)){
defineProperty(it,TO_STRING_TAG,{configurable:true,value:TAG});
}
};

},{"../internals/has":151,"../internals/object-define-property":180,"../internals/well-known-symbol":231}],207:[function(require,module,exports){
var shared=require('../internals/shared');
var uid=require('../internals/uid');

var keys=shared('keys');

module.exports=function(key){
return keys[key]||(keys[key]=uid(key));
};

},{"../internals/shared":209,"../internals/uid":228}],208:[function(require,module,exports){
var global=require('../internals/global');
var setGlobal=require('../internals/set-global');

var SHARED='__core-js_shared__';
var store=global[SHARED]||setGlobal(SHARED,{});

module.exports=store;

},{"../internals/global":150,"../internals/set-global":204}],209:[function(require,module,exports){
var IS_PURE=require('../internals/is-pure');
var store=require('../internals/shared-store');

(module.exports=function(key,value){
return store[key]||(store[key]=value!==undefined?value:{});
})('versions',[]).push({
version:'3.7.0',
mode:IS_PURE?'pure':'global',
copyright:'© 2020 Denis Pushkarev (zloirock.ru)'});


},{"../internals/is-pure":165,"../internals/shared-store":208}],210:[function(require,module,exports){
var anObject=require('../internals/an-object');
var aFunction=require('../internals/a-function');
var wellKnownSymbol=require('../internals/well-known-symbol');

var SPECIES=wellKnownSymbol('species');

// `SpeciesConstructor` abstract operation
// https://tc39.github.io/ecma262/#sec-speciesconstructor
module.exports=function(O,defaultConstructor){
var C=anObject(O).constructor;
var S;
return C===undefined||(S=anObject(C)[SPECIES])==undefined?defaultConstructor:aFunction(S);
};

},{"../internals/a-function":102,"../internals/an-object":107,"../internals/well-known-symbol":231}],211:[function(require,module,exports){
var toInteger=require('../internals/to-integer');
var requireObjectCoercible=require('../internals/require-object-coercible');

// `String.prototype.{ codePointAt, at }` methods implementation
var createMethod=function createMethod(CONVERT_TO_STRING){
return function($this,pos){
var S=String(requireObjectCoercible($this));
var position=toInteger(pos);
var size=S.length;
var first,second;
if(position<0||position>=size)return CONVERT_TO_STRING?'':undefined;
first=S.charCodeAt(position);
return first<0xD800||first>0xDBFF||position+1===size||
(second=S.charCodeAt(position+1))<0xDC00||second>0xDFFF?
CONVERT_TO_STRING?S.charAt(position):first:
CONVERT_TO_STRING?S.slice(position,position+2):(first-0xD800<<10)+(second-0xDC00)+0x10000;
};
};

module.exports={
// `String.prototype.codePointAt` method
// https://tc39.github.io/ecma262/#sec-string.prototype.codepointat
codeAt:createMethod(false),
// `String.prototype.at` method
// https://github.com/mathiasbynens/String.prototype.at
charAt:createMethod(true)};


},{"../internals/require-object-coercible":202,"../internals/to-integer":218}],212:[function(require,module,exports){
var fails=require('../internals/fails');
var whitespaces=require('../internals/whitespaces');

var non="\u200B\x85\u180E";

// check that a method works with the correct list
// of whitespaces and has a correct name
module.exports=function(METHOD_NAME){
return fails(function(){
return!!whitespaces[METHOD_NAME]()||non[METHOD_NAME]()!=non||whitespaces[METHOD_NAME].name!==METHOD_NAME;
});
};

},{"../internals/fails":145,"../internals/whitespaces":232}],213:[function(require,module,exports){
var requireObjectCoercible=require('../internals/require-object-coercible');
var whitespaces=require('../internals/whitespaces');

var whitespace='['+whitespaces+']';
var ltrim=RegExp('^'+whitespace+whitespace+'*');
var rtrim=RegExp(whitespace+whitespace+'*$');

// `String.prototype.{ trim, trimStart, trimEnd, trimLeft, trimRight }` methods implementation
var createMethod=function createMethod(TYPE){
return function($this){
var string=String(requireObjectCoercible($this));
if(TYPE&1)string=string.replace(ltrim,'');
if(TYPE&2)string=string.replace(rtrim,'');
return string;
};
};

module.exports={
// `String.prototype.{ trimLeft, trimStart }` methods
// https://tc39.github.io/ecma262/#sec-string.prototype.trimstart
start:createMethod(1),
// `String.prototype.{ trimRight, trimEnd }` methods
// https://tc39.github.io/ecma262/#sec-string.prototype.trimend
end:createMethod(2),
// `String.prototype.trim` method
// https://tc39.github.io/ecma262/#sec-string.prototype.trim
trim:createMethod(3)};


},{"../internals/require-object-coercible":202,"../internals/whitespaces":232}],214:[function(require,module,exports){
var global=require('../internals/global');
var fails=require('../internals/fails');
var bind=require('../internals/function-bind-context');
var html=require('../internals/html');
var createElement=require('../internals/document-create-element');
var IS_IOS=require('../internals/engine-is-ios');
var IS_NODE=require('../internals/engine-is-node');

var location=global.location;
var set=global.setImmediate;
var clear=global.clearImmediate;
var process=global.process;
var MessageChannel=global.MessageChannel;
var Dispatch=global.Dispatch;
var counter=0;
var queue={};
var ONREADYSTATECHANGE='onreadystatechange';
var defer,channel,port;

var run=function run(id){
// eslint-disable-next-line no-prototype-builtins
if(queue.hasOwnProperty(id)){
var fn=queue[id];
delete queue[id];
fn();
}
};

var runner=function runner(id){
return function(){
run(id);
};
};

var listener=function listener(event){
run(event.data);
};

var post=function post(id){
// old engines have not location.origin
global.postMessage(id+'',location.protocol+'//'+location.host);
};

// Node.js 0.9+ & IE10+ has setImmediate, otherwise:
if(!set||!clear){
set=function setImmediate(fn){
var args=[];
var i=1;
while(arguments.length>i){args.push(arguments[i++]);}
queue[++counter]=function(){
// eslint-disable-next-line no-new-func
(typeof fn=='function'?fn:Function(fn)).apply(undefined,args);
};
defer(counter);
return counter;
};
clear=function clearImmediate(id){
delete queue[id];
};
// Node.js 0.8-
if(IS_NODE){
defer=function defer(id){
process.nextTick(runner(id));
};
// Sphere (JS game engine) Dispatch API
}else if(Dispatch&&Dispatch.now){
defer=function defer(id){
Dispatch.now(runner(id));
};
// Browsers with MessageChannel, includes WebWorkers
// except iOS - https://github.com/zloirock/core-js/issues/624
}else if(MessageChannel&&!IS_IOS){
channel=new MessageChannel();
port=channel.port2;
channel.port1.onmessage=listener;
defer=bind(port.postMessage,port,1);
// Browsers with postMessage, skip WebWorkers
// IE8 has postMessage, but it's sync & typeof its postMessage is 'object'
}else if(
global.addEventListener&&
typeof postMessage=='function'&&
!global.importScripts&&
location&&location.protocol!=='file:'&&
!fails(post))
{
defer=post;
global.addEventListener('message',listener,false);
// IE8-
}else if(ONREADYSTATECHANGE in createElement('script')){
defer=function defer(id){
html.appendChild(createElement('script'))[ONREADYSTATECHANGE]=function(){
html.removeChild(this);
run(id);
};
};
// Rest old browsers
}else{
defer=function defer(id){
setTimeout(runner(id),0);
};
}
}

module.exports={
set:set,
clear:clear};


},{"../internals/document-create-element":137,"../internals/engine-is-ios":139,"../internals/engine-is-node":140,"../internals/fails":145,"../internals/function-bind-context":147,"../internals/global":150,"../internals/html":154}],215:[function(require,module,exports){
var toInteger=require('../internals/to-integer');

var max=Math.max;
var min=Math.min;

// Helper for a popular repeating case of the spec:
// Let integer be ? ToInteger(index).
// If integer < 0, let result be max((length + integer), 0); else let result be min(integer, length).
module.exports=function(index,length){
var integer=toInteger(index);
return integer<0?max(integer+length,0):min(integer,length);
};

},{"../internals/to-integer":218}],216:[function(require,module,exports){
var toInteger=require('../internals/to-integer');
var toLength=require('../internals/to-length');

// `ToIndex` abstract operation
// https://tc39.github.io/ecma262/#sec-toindex
module.exports=function(it){
if(it===undefined)return 0;
var number=toInteger(it);
var length=toLength(number);
if(number!==length)throw RangeError('Wrong length or index');
return length;
};

},{"../internals/to-integer":218,"../internals/to-length":219}],217:[function(require,module,exports){
// toObject with fallback for non-array-like ES3 strings
var IndexedObject=require('../internals/indexed-object');
var requireObjectCoercible=require('../internals/require-object-coercible');

module.exports=function(it){
return IndexedObject(requireObjectCoercible(it));
};

},{"../internals/indexed-object":157,"../internals/require-object-coercible":202}],218:[function(require,module,exports){
var ceil=Math.ceil;
var floor=Math.floor;

// `ToInteger` abstract operation
// https://tc39.github.io/ecma262/#sec-tointeger
module.exports=function(argument){
return isNaN(argument=+argument)?0:(argument>0?floor:ceil)(argument);
};

},{}],219:[function(require,module,exports){
var toInteger=require('../internals/to-integer');

var min=Math.min;

// `ToLength` abstract operation
// https://tc39.github.io/ecma262/#sec-tolength
module.exports=function(argument){
return argument>0?min(toInteger(argument),0x1FFFFFFFFFFFFF):0;// 2 ** 53 - 1 == 9007199254740991
};

},{"../internals/to-integer":218}],220:[function(require,module,exports){
var requireObjectCoercible=require('../internals/require-object-coercible');

// `ToObject` abstract operation
// https://tc39.github.io/ecma262/#sec-toobject
module.exports=function(argument){
return Object(requireObjectCoercible(argument));
};

},{"../internals/require-object-coercible":202}],221:[function(require,module,exports){
var toPositiveInteger=require('../internals/to-positive-integer');

module.exports=function(it,BYTES){
var offset=toPositiveInteger(it);
if(offset%BYTES)throw RangeError('Wrong offset');
return offset;
};

},{"../internals/to-positive-integer":222}],222:[function(require,module,exports){
var toInteger=require('../internals/to-integer');

module.exports=function(it){
var result=toInteger(it);
if(result<0)throw RangeError("The argument can't be less than 0");
return result;
};

},{"../internals/to-integer":218}],223:[function(require,module,exports){
var isObject=require('../internals/is-object');

// `ToPrimitive` abstract operation
// https://tc39.github.io/ecma262/#sec-toprimitive
// instead of the ES6 spec version, we didn't implement @@toPrimitive case
// and the second argument - flag - preferred type is a string
module.exports=function(input,PREFERRED_STRING){
if(!isObject(input))return input;
var fn,val;
if(PREFERRED_STRING&&typeof(fn=input.toString)=='function'&&!isObject(val=fn.call(input)))return val;
if(typeof(fn=input.valueOf)=='function'&&!isObject(val=fn.call(input)))return val;
if(!PREFERRED_STRING&&typeof(fn=input.toString)=='function'&&!isObject(val=fn.call(input)))return val;
throw TypeError("Can't convert object to primitive value");
};

},{"../internals/is-object":164}],224:[function(require,module,exports){
var wellKnownSymbol=require('../internals/well-known-symbol');

var TO_STRING_TAG=wellKnownSymbol('toStringTag');
var test={};

test[TO_STRING_TAG]='z';

module.exports=String(test)==='[object z]';

},{"../internals/well-known-symbol":231}],225:[function(require,module,exports){
'use strict';
var $=require('../internals/export');
var global=require('../internals/global');
var DESCRIPTORS=require('../internals/descriptors');
var TYPED_ARRAYS_CONSTRUCTORS_REQUIRES_WRAPPERS=require('../internals/typed-array-constructors-require-wrappers');
var ArrayBufferViewCore=require('../internals/array-buffer-view-core');
var ArrayBufferModule=require('../internals/array-buffer');
var anInstance=require('../internals/an-instance');
var createPropertyDescriptor=require('../internals/create-property-descriptor');
var createNonEnumerableProperty=require('../internals/create-non-enumerable-property');
var toLength=require('../internals/to-length');
var toIndex=require('../internals/to-index');
var toOffset=require('../internals/to-offset');
var toPrimitive=require('../internals/to-primitive');
var has=require('../internals/has');
var classof=require('../internals/classof');
var isObject=require('../internals/is-object');
var create=require('../internals/object-create');
var setPrototypeOf=require('../internals/object-set-prototype-of');
var getOwnPropertyNames=require('../internals/object-get-own-property-names').f;
var typedArrayFrom=require('../internals/typed-array-from');
var forEach=require('../internals/array-iteration').forEach;
var setSpecies=require('../internals/set-species');
var definePropertyModule=require('../internals/object-define-property');
var getOwnPropertyDescriptorModule=require('../internals/object-get-own-property-descriptor');
var InternalStateModule=require('../internals/internal-state');
var inheritIfRequired=require('../internals/inherit-if-required');

var getInternalState=InternalStateModule.get;
var setInternalState=InternalStateModule.set;
var nativeDefineProperty=definePropertyModule.f;
var nativeGetOwnPropertyDescriptor=getOwnPropertyDescriptorModule.f;
var round=Math.round;
var RangeError=global.RangeError;
var ArrayBuffer=ArrayBufferModule.ArrayBuffer;
var DataView=ArrayBufferModule.DataView;
var NATIVE_ARRAY_BUFFER_VIEWS=ArrayBufferViewCore.NATIVE_ARRAY_BUFFER_VIEWS;
var TYPED_ARRAY_TAG=ArrayBufferViewCore.TYPED_ARRAY_TAG;
var TypedArray=ArrayBufferViewCore.TypedArray;
var TypedArrayPrototype=ArrayBufferViewCore.TypedArrayPrototype;
var aTypedArrayConstructor=ArrayBufferViewCore.aTypedArrayConstructor;
var isTypedArray=ArrayBufferViewCore.isTypedArray;
var BYTES_PER_ELEMENT='BYTES_PER_ELEMENT';
var WRONG_LENGTH='Wrong length';

var fromList=function fromList(C,list){
var index=0;
var length=list.length;
var result=new(aTypedArrayConstructor(C))(length);
while(length>index){result[index]=list[index++];}
return result;
};

var addGetter=function addGetter(it,key){
nativeDefineProperty(it,key,{get:function get(){
return getInternalState(this)[key];
}});
};

var isArrayBuffer=function isArrayBuffer(it){
var klass;
return it instanceof ArrayBuffer||(klass=classof(it))=='ArrayBuffer'||klass=='SharedArrayBuffer';
};

var isTypedArrayIndex=function isTypedArrayIndex(target,key){
return isTypedArray(target)&&
typeof key!='symbol'&&
key in target&&
String(+key)==String(key);
};

var wrappedGetOwnPropertyDescriptor=function getOwnPropertyDescriptor(target,key){
return isTypedArrayIndex(target,key=toPrimitive(key,true))?
createPropertyDescriptor(2,target[key]):
nativeGetOwnPropertyDescriptor(target,key);
};

var wrappedDefineProperty=function defineProperty(target,key,descriptor){
if(isTypedArrayIndex(target,key=toPrimitive(key,true))&&
isObject(descriptor)&&
has(descriptor,'value')&&
!has(descriptor,'get')&&
!has(descriptor,'set')
// TODO: add validation descriptor w/o calling accessors
&&!descriptor.configurable&&(
!has(descriptor,'writable')||descriptor.writable)&&(
!has(descriptor,'enumerable')||descriptor.enumerable))
{
target[key]=descriptor.value;
return target;
}return nativeDefineProperty(target,key,descriptor);
};

if(DESCRIPTORS){
if(!NATIVE_ARRAY_BUFFER_VIEWS){
getOwnPropertyDescriptorModule.f=wrappedGetOwnPropertyDescriptor;
definePropertyModule.f=wrappedDefineProperty;
addGetter(TypedArrayPrototype,'buffer');
addGetter(TypedArrayPrototype,'byteOffset');
addGetter(TypedArrayPrototype,'byteLength');
addGetter(TypedArrayPrototype,'length');
}

$({target:'Object',stat:true,forced:!NATIVE_ARRAY_BUFFER_VIEWS},{
getOwnPropertyDescriptor:wrappedGetOwnPropertyDescriptor,
defineProperty:wrappedDefineProperty});


module.exports=function(TYPE,wrapper,CLAMPED){
var BYTES=TYPE.match(/\d+$/)[0]/8;
var CONSTRUCTOR_NAME=TYPE+(CLAMPED?'Clamped':'')+'Array';
var GETTER='get'+TYPE;
var SETTER='set'+TYPE;
var NativeTypedArrayConstructor=global[CONSTRUCTOR_NAME];
var TypedArrayConstructor=NativeTypedArrayConstructor;
var TypedArrayConstructorPrototype=TypedArrayConstructor&&TypedArrayConstructor.prototype;
var exported={};

var getter=function getter(that,index){
var data=getInternalState(that);
return data.view[GETTER](index*BYTES+data.byteOffset,true);
};

var setter=function setter(that,index,value){
var data=getInternalState(that);
if(CLAMPED)value=(value=round(value))<0?0:value>0xFF?0xFF:value&0xFF;
data.view[SETTER](index*BYTES+data.byteOffset,value,true);
};

var addElement=function addElement(that,index){
nativeDefineProperty(that,index,{
get:function get(){
return getter(this,index);
},
set:function set(value){
return setter(this,index,value);
},
enumerable:true});

};

if(!NATIVE_ARRAY_BUFFER_VIEWS){
TypedArrayConstructor=wrapper(function(that,data,offset,$length){
anInstance(that,TypedArrayConstructor,CONSTRUCTOR_NAME);
var index=0;
var byteOffset=0;
var buffer,byteLength,length;
if(!isObject(data)){
length=toIndex(data);
byteLength=length*BYTES;
buffer=new ArrayBuffer(byteLength);
}else if(isArrayBuffer(data)){
buffer=data;
byteOffset=toOffset(offset,BYTES);
var $len=data.byteLength;
if($length===undefined){
if($len%BYTES)throw RangeError(WRONG_LENGTH);
byteLength=$len-byteOffset;
if(byteLength<0)throw RangeError(WRONG_LENGTH);
}else{
byteLength=toLength($length)*BYTES;
if(byteLength+byteOffset>$len)throw RangeError(WRONG_LENGTH);
}
length=byteLength/BYTES;
}else if(isTypedArray(data)){
return fromList(TypedArrayConstructor,data);
}else{
return typedArrayFrom.call(TypedArrayConstructor,data);
}
setInternalState(that,{
buffer:buffer,
byteOffset:byteOffset,
byteLength:byteLength,
length:length,
view:new DataView(buffer)});

while(index<length){addElement(that,index++);}
});

if(setPrototypeOf)setPrototypeOf(TypedArrayConstructor,TypedArray);
TypedArrayConstructorPrototype=TypedArrayConstructor.prototype=create(TypedArrayPrototype);
}else if(TYPED_ARRAYS_CONSTRUCTORS_REQUIRES_WRAPPERS){
TypedArrayConstructor=wrapper(function(dummy,data,typedArrayOffset,$length){
anInstance(dummy,TypedArrayConstructor,CONSTRUCTOR_NAME);
return inheritIfRequired(function(){
if(!isObject(data))return new NativeTypedArrayConstructor(toIndex(data));
if(isArrayBuffer(data))return $length!==undefined?
new NativeTypedArrayConstructor(data,toOffset(typedArrayOffset,BYTES),$length):
typedArrayOffset!==undefined?
new NativeTypedArrayConstructor(data,toOffset(typedArrayOffset,BYTES)):
new NativeTypedArrayConstructor(data);
if(isTypedArray(data))return fromList(TypedArrayConstructor,data);
return typedArrayFrom.call(TypedArrayConstructor,data);
}(),dummy,TypedArrayConstructor);
});

if(setPrototypeOf)setPrototypeOf(TypedArrayConstructor,TypedArray);
forEach(getOwnPropertyNames(NativeTypedArrayConstructor),function(key){
if(!(key in TypedArrayConstructor)){
createNonEnumerableProperty(TypedArrayConstructor,key,NativeTypedArrayConstructor[key]);
}
});
TypedArrayConstructor.prototype=TypedArrayConstructorPrototype;
}

if(TypedArrayConstructorPrototype.constructor!==TypedArrayConstructor){
createNonEnumerableProperty(TypedArrayConstructorPrototype,'constructor',TypedArrayConstructor);
}

if(TYPED_ARRAY_TAG){
createNonEnumerableProperty(TypedArrayConstructorPrototype,TYPED_ARRAY_TAG,CONSTRUCTOR_NAME);
}

exported[CONSTRUCTOR_NAME]=TypedArrayConstructor;

$({
global:true,forced:TypedArrayConstructor!=NativeTypedArrayConstructor,sham:!NATIVE_ARRAY_BUFFER_VIEWS},
exported);

if(!(BYTES_PER_ELEMENT in TypedArrayConstructor)){
createNonEnumerableProperty(TypedArrayConstructor,BYTES_PER_ELEMENT,BYTES);
}

if(!(BYTES_PER_ELEMENT in TypedArrayConstructorPrototype)){
createNonEnumerableProperty(TypedArrayConstructorPrototype,BYTES_PER_ELEMENT,BYTES);
}

setSpecies(CONSTRUCTOR_NAME);
};
}else module.exports=function(){/* empty */};

},{"../internals/an-instance":106,"../internals/array-buffer":110,"../internals/array-buffer-view-core":109,"../internals/array-iteration":116,"../internals/classof":126,"../internals/create-non-enumerable-property":131,"../internals/create-property-descriptor":132,"../internals/descriptors":136,"../internals/export":144,"../internals/global":150,"../internals/has":151,"../internals/inherit-if-required":158,"../internals/internal-state":160,"../internals/is-object":164,"../internals/object-create":178,"../internals/object-define-property":180,"../internals/object-get-own-property-descriptor":181,"../internals/object-get-own-property-names":183,"../internals/object-set-prototype-of":189,"../internals/set-species":205,"../internals/to-index":216,"../internals/to-length":219,"../internals/to-offset":221,"../internals/to-primitive":223,"../internals/typed-array-constructors-require-wrappers":226,"../internals/typed-array-from":227}],226:[function(require,module,exports){
/* eslint-disable no-new */
var global=require('../internals/global');
var fails=require('../internals/fails');
var checkCorrectnessOfIteration=require('../internals/check-correctness-of-iteration');
var NATIVE_ARRAY_BUFFER_VIEWS=require('../internals/array-buffer-view-core').NATIVE_ARRAY_BUFFER_VIEWS;

var ArrayBuffer=global.ArrayBuffer;
var Int8Array=global.Int8Array;

module.exports=!NATIVE_ARRAY_BUFFER_VIEWS||!fails(function(){
Int8Array(1);
})||!fails(function(){
new Int8Array(-1);
})||!checkCorrectnessOfIteration(function(iterable){
new Int8Array();
new Int8Array(null);
new Int8Array(1.5);
new Int8Array(iterable);
},true)||fails(function(){
// Safari (11+) bug - a reason why even Safari 13 should load a typed array polyfill
return new Int8Array(new ArrayBuffer(2),1,undefined).length!==1;
});

},{"../internals/array-buffer-view-core":109,"../internals/check-correctness-of-iteration":124,"../internals/fails":145,"../internals/global":150}],227:[function(require,module,exports){
var toObject=require('../internals/to-object');
var toLength=require('../internals/to-length');
var getIteratorMethod=require('../internals/get-iterator-method');
var isArrayIteratorMethod=require('../internals/is-array-iterator-method');
var bind=require('../internals/function-bind-context');
var aTypedArrayConstructor=require('../internals/array-buffer-view-core').aTypedArrayConstructor;

module.exports=function from(source/* , mapfn, thisArg */){
var O=toObject(source);
var argumentsLength=arguments.length;
var mapfn=argumentsLength>1?arguments[1]:undefined;
var mapping=mapfn!==undefined;
var iteratorMethod=getIteratorMethod(O);
var i,length,result,step,iterator,next;
if(iteratorMethod!=undefined&&!isArrayIteratorMethod(iteratorMethod)){
iterator=iteratorMethod.call(O);
next=iterator.next;
O=[];
while(!(step=next.call(iterator)).done){
O.push(step.value);
}
}
if(mapping&&argumentsLength>2){
mapfn=bind(mapfn,arguments[2],2);
}
length=toLength(O.length);
result=new(aTypedArrayConstructor(this))(length);
for(i=0;length>i;i++){
result[i]=mapping?mapfn(O[i],i):O[i];
}
return result;
};

},{"../internals/array-buffer-view-core":109,"../internals/function-bind-context":147,"../internals/get-iterator-method":149,"../internals/is-array-iterator-method":161,"../internals/to-length":219,"../internals/to-object":220}],228:[function(require,module,exports){
var id=0;
var postfix=Math.random();

module.exports=function(key){
return'Symbol('+String(key===undefined?'':key)+')_'+(++id+postfix).toString(36);
};

},{}],229:[function(require,module,exports){
var NATIVE_SYMBOL=require('../internals/native-symbol');

module.exports=NATIVE_SYMBOL
// eslint-disable-next-line no-undef
&&!Symbol.sham
// eslint-disable-next-line no-undef
&&typeof Symbol.iterator=='symbol';

},{"../internals/native-symbol":173}],230:[function(require,module,exports){
var wellKnownSymbol=require('../internals/well-known-symbol');

exports.f=wellKnownSymbol;

},{"../internals/well-known-symbol":231}],231:[function(require,module,exports){
var global=require('../internals/global');
var shared=require('../internals/shared');
var has=require('../internals/has');
var uid=require('../internals/uid');
var NATIVE_SYMBOL=require('../internals/native-symbol');
var USE_SYMBOL_AS_UID=require('../internals/use-symbol-as-uid');

var WellKnownSymbolsStore=shared('wks');
var Symbol=global.Symbol;
var createWellKnownSymbol=USE_SYMBOL_AS_UID?Symbol:Symbol&&Symbol.withoutSetter||uid;

module.exports=function(name){
if(!has(WellKnownSymbolsStore,name)){
if(NATIVE_SYMBOL&&has(Symbol,name))WellKnownSymbolsStore[name]=Symbol[name];else
WellKnownSymbolsStore[name]=createWellKnownSymbol('Symbol.'+name);
}return WellKnownSymbolsStore[name];
};

},{"../internals/global":150,"../internals/has":151,"../internals/native-symbol":173,"../internals/shared":209,"../internals/uid":228,"../internals/use-symbol-as-uid":229}],232:[function(require,module,exports){
// a string of all valid unicode whitespaces
// eslint-disable-next-line max-len
module.exports="\t\n\x0B\f\r \xA0\u1680\u2000\u2001\u2002\u2003\u2004\u2005\u2006\u2007\u2008\u2009\u200A\u202F\u205F\u3000\u2028\u2029\uFEFF";

},{}],233:[function(require,module,exports){
'use strict';
var $=require('../internals/export');
var fails=require('../internals/fails');
var ArrayBufferModule=require('../internals/array-buffer');
var anObject=require('../internals/an-object');
var toAbsoluteIndex=require('../internals/to-absolute-index');
var toLength=require('../internals/to-length');
var speciesConstructor=require('../internals/species-constructor');

var ArrayBuffer=ArrayBufferModule.ArrayBuffer;
var DataView=ArrayBufferModule.DataView;
var nativeArrayBufferSlice=ArrayBuffer.prototype.slice;

var INCORRECT_SLICE=fails(function(){
return!new ArrayBuffer(2).slice(1,undefined).byteLength;
});

// `ArrayBuffer.prototype.slice` method
// https://tc39.github.io/ecma262/#sec-arraybuffer.prototype.slice
$({target:'ArrayBuffer',proto:true,unsafe:true,forced:INCORRECT_SLICE},{
slice:function slice(start,end){
if(nativeArrayBufferSlice!==undefined&&end===undefined){
return nativeArrayBufferSlice.call(anObject(this),start);// FF fix
}
var length=anObject(this).byteLength;
var first=toAbsoluteIndex(start,length);
var fin=toAbsoluteIndex(end===undefined?length:end,length);
var result=new(speciesConstructor(this,ArrayBuffer))(toLength(fin-first));
var viewSource=new DataView(this);
var viewTarget=new DataView(result);
var index=0;
while(first<fin){
viewTarget.setUint8(index++,viewSource.getUint8(first++));
}return result;
}});


},{"../internals/an-object":107,"../internals/array-buffer":110,"../internals/export":144,"../internals/fails":145,"../internals/species-constructor":210,"../internals/to-absolute-index":215,"../internals/to-length":219}],234:[function(require,module,exports){
'use strict';
var $=require('../internals/export');
var fails=require('../internals/fails');
var isArray=require('../internals/is-array');
var isObject=require('../internals/is-object');
var toObject=require('../internals/to-object');
var toLength=require('../internals/to-length');
var createProperty=require('../internals/create-property');
var arraySpeciesCreate=require('../internals/array-species-create');
var arrayMethodHasSpeciesSupport=require('../internals/array-method-has-species-support');
var wellKnownSymbol=require('../internals/well-known-symbol');
var V8_VERSION=require('../internals/engine-v8-version');

var IS_CONCAT_SPREADABLE=wellKnownSymbol('isConcatSpreadable');
var MAX_SAFE_INTEGER=0x1FFFFFFFFFFFFF;
var MAXIMUM_ALLOWED_INDEX_EXCEEDED='Maximum allowed index exceeded';

// We can't use this feature detection in V8 since it causes
// deoptimization and serious performance degradation
// https://github.com/zloirock/core-js/issues/679
var IS_CONCAT_SPREADABLE_SUPPORT=V8_VERSION>=51||!fails(function(){
var array=[];
array[IS_CONCAT_SPREADABLE]=false;
return array.concat()[0]!==array;
});

var SPECIES_SUPPORT=arrayMethodHasSpeciesSupport('concat');

var isConcatSpreadable=function isConcatSpreadable(O){
if(!isObject(O))return false;
var spreadable=O[IS_CONCAT_SPREADABLE];
return spreadable!==undefined?!!spreadable:isArray(O);
};

var FORCED=!IS_CONCAT_SPREADABLE_SUPPORT||!SPECIES_SUPPORT;

// `Array.prototype.concat` method
// https://tc39.github.io/ecma262/#sec-array.prototype.concat
// with adding support of @@isConcatSpreadable and @@species
$({target:'Array',proto:true,forced:FORCED},{
concat:function concat(arg){// eslint-disable-line no-unused-vars
var O=toObject(this);
var A=arraySpeciesCreate(O,0);
var n=0;
var i,k,length,len,E;
for(i=-1,length=arguments.length;i<length;i++){
E=i===-1?O:arguments[i];
if(isConcatSpreadable(E)){
len=toLength(E.length);
if(n+len>MAX_SAFE_INTEGER)throw TypeError(MAXIMUM_ALLOWED_INDEX_EXCEEDED);
for(k=0;k<len;k++,n++){if(k in E)createProperty(A,n,E[k]);}
}else{
if(n>=MAX_SAFE_INTEGER)throw TypeError(MAXIMUM_ALLOWED_INDEX_EXCEEDED);
createProperty(A,n++,E);
}
}
A.length=n;
return A;
}});


},{"../internals/array-method-has-species-support":118,"../internals/array-species-create":122,"../internals/create-property":133,"../internals/engine-v8-version":142,"../internals/export":144,"../internals/fails":145,"../internals/is-array":162,"../internals/is-object":164,"../internals/to-length":219,"../internals/to-object":220,"../internals/well-known-symbol":231}],235:[function(require,module,exports){
var $=require('../internals/export');
var fill=require('../internals/array-fill');
var addToUnscopables=require('../internals/add-to-unscopables');

// `Array.prototype.fill` method
// https://tc39.github.io/ecma262/#sec-array.prototype.fill
$({target:'Array',proto:true},{
fill:fill});


// https://tc39.github.io/ecma262/#sec-array.prototype-@@unscopables
addToUnscopables('fill');

},{"../internals/add-to-unscopables":104,"../internals/array-fill":112,"../internals/export":144}],236:[function(require,module,exports){
'use strict';
var $=require('../internals/export');
var $filter=require('../internals/array-iteration').filter;
var arrayMethodHasSpeciesSupport=require('../internals/array-method-has-species-support');
var arrayMethodUsesToLength=require('../internals/array-method-uses-to-length');

var HAS_SPECIES_SUPPORT=arrayMethodHasSpeciesSupport('filter');
// Edge 14- issue
var USES_TO_LENGTH=arrayMethodUsesToLength('filter');

// `Array.prototype.filter` method
// https://tc39.github.io/ecma262/#sec-array.prototype.filter
// with adding support of @@species
$({target:'Array',proto:true,forced:!HAS_SPECIES_SUPPORT||!USES_TO_LENGTH},{
filter:function filter(callbackfn/* , thisArg */){
return $filter(this,callbackfn,arguments.length>1?arguments[1]:undefined);
}});


},{"../internals/array-iteration":116,"../internals/array-method-has-species-support":118,"../internals/array-method-uses-to-length":120,"../internals/export":144}],237:[function(require,module,exports){
'use strict';
var $=require('../internals/export');
var $find=require('../internals/array-iteration').find;
var addToUnscopables=require('../internals/add-to-unscopables');
var arrayMethodUsesToLength=require('../internals/array-method-uses-to-length');

var FIND='find';
var SKIPS_HOLES=true;

var USES_TO_LENGTH=arrayMethodUsesToLength(FIND);

// Shouldn't skip holes
if(FIND in[])Array(1)[FIND](function(){SKIPS_HOLES=false;});

// `Array.prototype.find` method
// https://tc39.github.io/ecma262/#sec-array.prototype.find
$({target:'Array',proto:true,forced:SKIPS_HOLES||!USES_TO_LENGTH},{
find:function find(callbackfn/* , that = undefined */){
return $find(this,callbackfn,arguments.length>1?arguments[1]:undefined);
}});


// https://tc39.github.io/ecma262/#sec-array.prototype-@@unscopables
addToUnscopables(FIND);

},{"../internals/add-to-unscopables":104,"../internals/array-iteration":116,"../internals/array-method-uses-to-length":120,"../internals/export":144}],238:[function(require,module,exports){
'use strict';
var $=require('../internals/export');
var forEach=require('../internals/array-for-each');

// `Array.prototype.forEach` method
// https://tc39.github.io/ecma262/#sec-array.prototype.foreach
$({target:'Array',proto:true,forced:[].forEach!=forEach},{
forEach:forEach});


},{"../internals/array-for-each":113,"../internals/export":144}],239:[function(require,module,exports){
var $=require('../internals/export');
var from=require('../internals/array-from');
var checkCorrectnessOfIteration=require('../internals/check-correctness-of-iteration');

var INCORRECT_ITERATION=!checkCorrectnessOfIteration(function(iterable){
Array.from(iterable);
});

// `Array.from` method
// https://tc39.github.io/ecma262/#sec-array.from
$({target:'Array',stat:true,forced:INCORRECT_ITERATION},{
from:from});


},{"../internals/array-from":114,"../internals/check-correctness-of-iteration":124,"../internals/export":144}],240:[function(require,module,exports){
'use strict';
var $=require('../internals/export');
var $includes=require('../internals/array-includes').includes;
var addToUnscopables=require('../internals/add-to-unscopables');
var arrayMethodUsesToLength=require('../internals/array-method-uses-to-length');

var USES_TO_LENGTH=arrayMethodUsesToLength('indexOf',{ACCESSORS:true,1:0});

// `Array.prototype.includes` method
// https://tc39.github.io/ecma262/#sec-array.prototype.includes
$({target:'Array',proto:true,forced:!USES_TO_LENGTH},{
includes:function includes(el/* , fromIndex = 0 */){
return $includes(this,el,arguments.length>1?arguments[1]:undefined);
}});


// https://tc39.github.io/ecma262/#sec-array.prototype-@@unscopables
addToUnscopables('includes');

},{"../internals/add-to-unscopables":104,"../internals/array-includes":115,"../internals/array-method-uses-to-length":120,"../internals/export":144}],241:[function(require,module,exports){
'use strict';
var $=require('../internals/export');
var $indexOf=require('../internals/array-includes').indexOf;
var arrayMethodIsStrict=require('../internals/array-method-is-strict');
var arrayMethodUsesToLength=require('../internals/array-method-uses-to-length');

var nativeIndexOf=[].indexOf;

var NEGATIVE_ZERO=!!nativeIndexOf&&1/[1].indexOf(1,-0)<0;
var STRICT_METHOD=arrayMethodIsStrict('indexOf');
var USES_TO_LENGTH=arrayMethodUsesToLength('indexOf',{ACCESSORS:true,1:0});

// `Array.prototype.indexOf` method
// https://tc39.github.io/ecma262/#sec-array.prototype.indexof
$({target:'Array',proto:true,forced:NEGATIVE_ZERO||!STRICT_METHOD||!USES_TO_LENGTH},{
indexOf:function indexOf(searchElement/* , fromIndex = 0 */){
return NEGATIVE_ZERO
// convert -0 to +0
?nativeIndexOf.apply(this,arguments)||0:
$indexOf(this,searchElement,arguments.length>1?arguments[1]:undefined);
}});


},{"../internals/array-includes":115,"../internals/array-method-is-strict":119,"../internals/array-method-uses-to-length":120,"../internals/export":144}],242:[function(require,module,exports){
'use strict';
var toIndexedObject=require('../internals/to-indexed-object');
var addToUnscopables=require('../internals/add-to-unscopables');
var Iterators=require('../internals/iterators');
var InternalStateModule=require('../internals/internal-state');
var defineIterator=require('../internals/define-iterator');

var ARRAY_ITERATOR='Array Iterator';
var setInternalState=InternalStateModule.set;
var getInternalState=InternalStateModule.getterFor(ARRAY_ITERATOR);

// `Array.prototype.entries` method
// https://tc39.github.io/ecma262/#sec-array.prototype.entries
// `Array.prototype.keys` method
// https://tc39.github.io/ecma262/#sec-array.prototype.keys
// `Array.prototype.values` method
// https://tc39.github.io/ecma262/#sec-array.prototype.values
// `Array.prototype[@@iterator]` method
// https://tc39.github.io/ecma262/#sec-array.prototype-@@iterator
// `CreateArrayIterator` internal method
// https://tc39.github.io/ecma262/#sec-createarrayiterator
module.exports=defineIterator(Array,'Array',function(iterated,kind){
setInternalState(this,{
type:ARRAY_ITERATOR,
target:toIndexedObject(iterated),// target
index:0,// next index
kind:kind// kind
});
// `%ArrayIteratorPrototype%.next` method
// https://tc39.github.io/ecma262/#sec-%arrayiteratorprototype%.next
},function(){
var state=getInternalState(this);
var target=state.target;
var kind=state.kind;
var index=state.index++;
if(!target||index>=target.length){
state.target=undefined;
return{value:undefined,done:true};
}
if(kind=='keys')return{value:index,done:false};
if(kind=='values')return{value:target[index],done:false};
return{value:[index,target[index]],done:false};
},'values');

// argumentsList[@@iterator] is %ArrayProto_values%
// https://tc39.github.io/ecma262/#sec-createunmappedargumentsobject
// https://tc39.github.io/ecma262/#sec-createmappedargumentsobject
Iterators.Arguments=Iterators.Array;

// https://tc39.github.io/ecma262/#sec-array.prototype-@@unscopables
addToUnscopables('keys');
addToUnscopables('values');
addToUnscopables('entries');

},{"../internals/add-to-unscopables":104,"../internals/define-iterator":134,"../internals/internal-state":160,"../internals/iterators":170,"../internals/to-indexed-object":217}],243:[function(require,module,exports){
'use strict';
var $=require('../internals/export');
var IndexedObject=require('../internals/indexed-object');
var toIndexedObject=require('../internals/to-indexed-object');
var arrayMethodIsStrict=require('../internals/array-method-is-strict');

var nativeJoin=[].join;

var ES3_STRINGS=IndexedObject!=Object;
var STRICT_METHOD=arrayMethodIsStrict('join',',');

// `Array.prototype.join` method
// https://tc39.github.io/ecma262/#sec-array.prototype.join
$({target:'Array',proto:true,forced:ES3_STRINGS||!STRICT_METHOD},{
join:function join(separator){
return nativeJoin.call(toIndexedObject(this),separator===undefined?',':separator);
}});


},{"../internals/array-method-is-strict":119,"../internals/export":144,"../internals/indexed-object":157,"../internals/to-indexed-object":217}],244:[function(require,module,exports){
var $=require('../internals/export');
var lastIndexOf=require('../internals/array-last-index-of');

// `Array.prototype.lastIndexOf` method
// https://tc39.github.io/ecma262/#sec-array.prototype.lastindexof
$({target:'Array',proto:true,forced:lastIndexOf!==[].lastIndexOf},{
lastIndexOf:lastIndexOf});


},{"../internals/array-last-index-of":117,"../internals/export":144}],245:[function(require,module,exports){
'use strict';
var $=require('../internals/export');
var $map=require('../internals/array-iteration').map;
var arrayMethodHasSpeciesSupport=require('../internals/array-method-has-species-support');
var arrayMethodUsesToLength=require('../internals/array-method-uses-to-length');

var HAS_SPECIES_SUPPORT=arrayMethodHasSpeciesSupport('map');
// FF49- issue
var USES_TO_LENGTH=arrayMethodUsesToLength('map');

// `Array.prototype.map` method
// https://tc39.github.io/ecma262/#sec-array.prototype.map
// with adding support of @@species
$({target:'Array',proto:true,forced:!HAS_SPECIES_SUPPORT||!USES_TO_LENGTH},{
map:function map(callbackfn/* , thisArg */){
return $map(this,callbackfn,arguments.length>1?arguments[1]:undefined);
}});


},{"../internals/array-iteration":116,"../internals/array-method-has-species-support":118,"../internals/array-method-uses-to-length":120,"../internals/export":144}],246:[function(require,module,exports){
'use strict';
var $=require('../internals/export');
var isObject=require('../internals/is-object');
var isArray=require('../internals/is-array');
var toAbsoluteIndex=require('../internals/to-absolute-index');
var toLength=require('../internals/to-length');
var toIndexedObject=require('../internals/to-indexed-object');
var createProperty=require('../internals/create-property');
var wellKnownSymbol=require('../internals/well-known-symbol');
var arrayMethodHasSpeciesSupport=require('../internals/array-method-has-species-support');
var arrayMethodUsesToLength=require('../internals/array-method-uses-to-length');

var HAS_SPECIES_SUPPORT=arrayMethodHasSpeciesSupport('slice');
var USES_TO_LENGTH=arrayMethodUsesToLength('slice',{ACCESSORS:true,0:0,1:2});

var SPECIES=wellKnownSymbol('species');
var nativeSlice=[].slice;
var max=Math.max;

// `Array.prototype.slice` method
// https://tc39.github.io/ecma262/#sec-array.prototype.slice
// fallback for not array-like ES3 strings and DOM objects
$({target:'Array',proto:true,forced:!HAS_SPECIES_SUPPORT||!USES_TO_LENGTH},{
slice:function slice(start,end){
var O=toIndexedObject(this);
var length=toLength(O.length);
var k=toAbsoluteIndex(start,length);
var fin=toAbsoluteIndex(end===undefined?length:end,length);
// inline `ArraySpeciesCreate` for usage native `Array#slice` where it's possible
var Constructor,result,n;
if(isArray(O)){
Constructor=O.constructor;
// cross-realm fallback
if(typeof Constructor=='function'&&(Constructor===Array||isArray(Constructor.prototype))){
Constructor=undefined;
}else if(isObject(Constructor)){
Constructor=Constructor[SPECIES];
if(Constructor===null)Constructor=undefined;
}
if(Constructor===Array||Constructor===undefined){
return nativeSlice.call(O,k,fin);
}
}
result=new(Constructor===undefined?Array:Constructor)(max(fin-k,0));
for(n=0;k<fin;k++,n++){if(k in O)createProperty(result,n,O[k]);}
result.length=n;
return result;
}});


},{"../internals/array-method-has-species-support":118,"../internals/array-method-uses-to-length":120,"../internals/create-property":133,"../internals/export":144,"../internals/is-array":162,"../internals/is-object":164,"../internals/to-absolute-index":215,"../internals/to-indexed-object":217,"../internals/to-length":219,"../internals/well-known-symbol":231}],247:[function(require,module,exports){
'use strict';
var $=require('../internals/export');
var aFunction=require('../internals/a-function');
var toObject=require('../internals/to-object');
var fails=require('../internals/fails');
var arrayMethodIsStrict=require('../internals/array-method-is-strict');

var test=[];
var nativeSort=test.sort;

// IE8-
var FAILS_ON_UNDEFINED=fails(function(){
test.sort(undefined);
});
// V8 bug
var FAILS_ON_NULL=fails(function(){
test.sort(null);
});
// Old WebKit
var STRICT_METHOD=arrayMethodIsStrict('sort');

var FORCED=FAILS_ON_UNDEFINED||!FAILS_ON_NULL||!STRICT_METHOD;

// `Array.prototype.sort` method
// https://tc39.github.io/ecma262/#sec-array.prototype.sort
$({target:'Array',proto:true,forced:FORCED},{
sort:function sort(comparefn){
return comparefn===undefined?
nativeSort.call(toObject(this)):
nativeSort.call(toObject(this),aFunction(comparefn));
}});


},{"../internals/a-function":102,"../internals/array-method-is-strict":119,"../internals/export":144,"../internals/fails":145,"../internals/to-object":220}],248:[function(require,module,exports){
'use strict';
var $=require('../internals/export');
var toAbsoluteIndex=require('../internals/to-absolute-index');
var toInteger=require('../internals/to-integer');
var toLength=require('../internals/to-length');
var toObject=require('../internals/to-object');
var arraySpeciesCreate=require('../internals/array-species-create');
var createProperty=require('../internals/create-property');
var arrayMethodHasSpeciesSupport=require('../internals/array-method-has-species-support');
var arrayMethodUsesToLength=require('../internals/array-method-uses-to-length');

var HAS_SPECIES_SUPPORT=arrayMethodHasSpeciesSupport('splice');
var USES_TO_LENGTH=arrayMethodUsesToLength('splice',{ACCESSORS:true,0:0,1:2});

var max=Math.max;
var min=Math.min;
var MAX_SAFE_INTEGER=0x1FFFFFFFFFFFFF;
var MAXIMUM_ALLOWED_LENGTH_EXCEEDED='Maximum allowed length exceeded';

// `Array.prototype.splice` method
// https://tc39.github.io/ecma262/#sec-array.prototype.splice
// with adding support of @@species
$({target:'Array',proto:true,forced:!HAS_SPECIES_SUPPORT||!USES_TO_LENGTH},{
splice:function splice(start,deleteCount/* , ...items */){
var O=toObject(this);
var len=toLength(O.length);
var actualStart=toAbsoluteIndex(start,len);
var argumentsLength=arguments.length;
var insertCount,actualDeleteCount,A,k,from,to;
if(argumentsLength===0){
insertCount=actualDeleteCount=0;
}else if(argumentsLength===1){
insertCount=0;
actualDeleteCount=len-actualStart;
}else{
insertCount=argumentsLength-2;
actualDeleteCount=min(max(toInteger(deleteCount),0),len-actualStart);
}
if(len+insertCount-actualDeleteCount>MAX_SAFE_INTEGER){
throw TypeError(MAXIMUM_ALLOWED_LENGTH_EXCEEDED);
}
A=arraySpeciesCreate(O,actualDeleteCount);
for(k=0;k<actualDeleteCount;k++){
from=actualStart+k;
if(from in O)createProperty(A,k,O[from]);
}
A.length=actualDeleteCount;
if(insertCount<actualDeleteCount){
for(k=actualStart;k<len-actualDeleteCount;k++){
from=k+actualDeleteCount;
to=k+insertCount;
if(from in O)O[to]=O[from];else
delete O[to];
}
for(k=len;k>len-actualDeleteCount+insertCount;k--){delete O[k-1];}
}else if(insertCount>actualDeleteCount){
for(k=len-actualDeleteCount;k>actualStart;k--){
from=k+actualDeleteCount-1;
to=k+insertCount-1;
if(from in O)O[to]=O[from];else
delete O[to];
}
}
for(k=0;k<insertCount;k++){
O[k+actualStart]=arguments[k+2];
}
O.length=len-actualDeleteCount+insertCount;
return A;
}});


},{"../internals/array-method-has-species-support":118,"../internals/array-method-uses-to-length":120,"../internals/array-species-create":122,"../internals/create-property":133,"../internals/export":144,"../internals/to-absolute-index":215,"../internals/to-integer":218,"../internals/to-length":219,"../internals/to-object":220}],249:[function(require,module,exports){
var DESCRIPTORS=require('../internals/descriptors');
var defineProperty=require('../internals/object-define-property').f;

var FunctionPrototype=Function.prototype;
var FunctionPrototypeToString=FunctionPrototype.toString;
var nameRE=/^\s*function ([^ (]*)/;
var NAME='name';

// Function instances `.name` property
// https://tc39.github.io/ecma262/#sec-function-instances-name
if(DESCRIPTORS&&!(NAME in FunctionPrototype)){
defineProperty(FunctionPrototype,NAME,{
configurable:true,
get:function get(){
try{
return FunctionPrototypeToString.call(this).match(nameRE)[1];
}catch(error){
return'';
}
}});

}

},{"../internals/descriptors":136,"../internals/object-define-property":180}],250:[function(require,module,exports){
'use strict';
var DESCRIPTORS=require('../internals/descriptors');
var global=require('../internals/global');
var isForced=require('../internals/is-forced');
var redefine=require('../internals/redefine');
var has=require('../internals/has');
var classof=require('../internals/classof-raw');
var inheritIfRequired=require('../internals/inherit-if-required');
var toPrimitive=require('../internals/to-primitive');
var fails=require('../internals/fails');
var create=require('../internals/object-create');
var getOwnPropertyNames=require('../internals/object-get-own-property-names').f;
var getOwnPropertyDescriptor=require('../internals/object-get-own-property-descriptor').f;
var defineProperty=require('../internals/object-define-property').f;
var trim=require('../internals/string-trim').trim;

var NUMBER='Number';
var NativeNumber=global[NUMBER];
var NumberPrototype=NativeNumber.prototype;

// Opera ~12 has broken Object#toString
var BROKEN_CLASSOF=classof(create(NumberPrototype))==NUMBER;

// `ToNumber` abstract operation
// https://tc39.github.io/ecma262/#sec-tonumber
var toNumber=function toNumber(argument){
var it=toPrimitive(argument,false);
var first,third,radix,maxCode,digits,length,index,code;
if(typeof it=='string'&&it.length>2){
it=trim(it);
first=it.charCodeAt(0);
if(first===43||first===45){
third=it.charCodeAt(2);
if(third===88||third===120)return NaN;// Number('+0x1') should be NaN, old V8 fix
}else if(first===48){
switch(it.charCodeAt(1)){
case 66:case 98:radix=2;maxCode=49;break;// fast equal of /^0b[01]+$/i
case 79:case 111:radix=8;maxCode=55;break;// fast equal of /^0o[0-7]+$/i
default:return+it;}

digits=it.slice(2);
length=digits.length;
for(index=0;index<length;index++){
code=digits.charCodeAt(index);
// parseInt parses a string to a first unavailable symbol
// but ToNumber should return NaN if a string contains unavailable symbols
if(code<48||code>maxCode)return NaN;
}return parseInt(digits,radix);
}
}return+it;
};

// `Number` constructor
// https://tc39.github.io/ecma262/#sec-number-constructor
if(isForced(NUMBER,!NativeNumber(' 0o1')||!NativeNumber('0b1')||NativeNumber('+0x1'))){
var NumberWrapper=function Number(value){
var it=arguments.length<1?0:value;
var dummy=this;
return dummy instanceof NumberWrapper
// check on 1..constructor(foo) case
&&(BROKEN_CLASSOF?fails(function(){NumberPrototype.valueOf.call(dummy);}):classof(dummy)!=NUMBER)?
inheritIfRequired(new NativeNumber(toNumber(it)),dummy,NumberWrapper):toNumber(it);
};
for(var keys=DESCRIPTORS?getOwnPropertyNames(NativeNumber):(
// ES3:
'MAX_VALUE,MIN_VALUE,NaN,NEGATIVE_INFINITY,POSITIVE_INFINITY,'+
// ES2015 (in case, if modules with ES2015 Number statics required before):
'EPSILON,isFinite,isInteger,isNaN,isSafeInteger,MAX_SAFE_INTEGER,'+
'MIN_SAFE_INTEGER,parseFloat,parseInt,isInteger').
split(','),j=0,key;keys.length>j;j++){
if(has(NativeNumber,key=keys[j])&&!has(NumberWrapper,key)){
defineProperty(NumberWrapper,key,getOwnPropertyDescriptor(NativeNumber,key));
}
}
NumberWrapper.prototype=NumberPrototype;
NumberPrototype.constructor=NumberWrapper;
redefine(global,NUMBER,NumberWrapper);
}

},{"../internals/classof-raw":125,"../internals/descriptors":136,"../internals/fails":145,"../internals/global":150,"../internals/has":151,"../internals/inherit-if-required":158,"../internals/is-forced":163,"../internals/object-create":178,"../internals/object-define-property":180,"../internals/object-get-own-property-descriptor":181,"../internals/object-get-own-property-names":183,"../internals/redefine":197,"../internals/string-trim":213,"../internals/to-primitive":223}],251:[function(require,module,exports){
var $=require('../internals/export');
var assign=require('../internals/object-assign');

// `Object.assign` method
// https://tc39.github.io/ecma262/#sec-object.assign
$({target:'Object',stat:true,forced:Object.assign!==assign},{
assign:assign});


},{"../internals/export":144,"../internals/object-assign":177}],252:[function(require,module,exports){
var $=require('../internals/export');
var $entries=require('../internals/object-to-array').entries;

// `Object.entries` method
// https://tc39.github.io/ecma262/#sec-object.entries
$({target:'Object',stat:true},{
entries:function entries(O){
return $entries(O);
}});


},{"../internals/export":144,"../internals/object-to-array":190}],253:[function(require,module,exports){
var $=require('../internals/export');
var toObject=require('../internals/to-object');
var nativeKeys=require('../internals/object-keys');
var fails=require('../internals/fails');

var FAILS_ON_PRIMITIVES=fails(function(){nativeKeys(1);});

// `Object.keys` method
// https://tc39.github.io/ecma262/#sec-object.keys
$({target:'Object',stat:true,forced:FAILS_ON_PRIMITIVES},{
keys:function keys(it){
return nativeKeys(toObject(it));
}});


},{"../internals/export":144,"../internals/fails":145,"../internals/object-keys":187,"../internals/to-object":220}],254:[function(require,module,exports){
var TO_STRING_TAG_SUPPORT=require('../internals/to-string-tag-support');
var redefine=require('../internals/redefine');
var toString=require('../internals/object-to-string');

// `Object.prototype.toString` method
// https://tc39.github.io/ecma262/#sec-object.prototype.tostring
if(!TO_STRING_TAG_SUPPORT){
redefine(Object.prototype,'toString',toString,{unsafe:true});
}

},{"../internals/object-to-string":191,"../internals/redefine":197,"../internals/to-string-tag-support":224}],255:[function(require,module,exports){
'use strict';
var $=require('../internals/export');
var IS_PURE=require('../internals/is-pure');
var global=require('../internals/global');
var getBuiltIn=require('../internals/get-built-in');
var NativePromise=require('../internals/native-promise-constructor');
var redefine=require('../internals/redefine');
var redefineAll=require('../internals/redefine-all');
var setToStringTag=require('../internals/set-to-string-tag');
var setSpecies=require('../internals/set-species');
var isObject=require('../internals/is-object');
var aFunction=require('../internals/a-function');
var anInstance=require('../internals/an-instance');
var inspectSource=require('../internals/inspect-source');
var iterate=require('../internals/iterate');
var checkCorrectnessOfIteration=require('../internals/check-correctness-of-iteration');
var speciesConstructor=require('../internals/species-constructor');
var task=require('../internals/task').set;
var microtask=require('../internals/microtask');
var promiseResolve=require('../internals/promise-resolve');
var hostReportErrors=require('../internals/host-report-errors');
var newPromiseCapabilityModule=require('../internals/new-promise-capability');
var perform=require('../internals/perform');
var InternalStateModule=require('../internals/internal-state');
var isForced=require('../internals/is-forced');
var wellKnownSymbol=require('../internals/well-known-symbol');
var IS_NODE=require('../internals/engine-is-node');
var V8_VERSION=require('../internals/engine-v8-version');

var SPECIES=wellKnownSymbol('species');
var PROMISE='Promise';
var getInternalState=InternalStateModule.get;
var setInternalState=InternalStateModule.set;
var getInternalPromiseState=InternalStateModule.getterFor(PROMISE);
var PromiseConstructor=NativePromise;
var TypeError=global.TypeError;
var document=global.document;
var process=global.process;
var $fetch=getBuiltIn('fetch');
var newPromiseCapability=newPromiseCapabilityModule.f;
var newGenericPromiseCapability=newPromiseCapability;
var DISPATCH_EVENT=!!(document&&document.createEvent&&global.dispatchEvent);
var NATIVE_REJECTION_EVENT=typeof PromiseRejectionEvent=='function';
var UNHANDLED_REJECTION='unhandledrejection';
var REJECTION_HANDLED='rejectionhandled';
var PENDING=0;
var FULFILLED=1;
var REJECTED=2;
var HANDLED=1;
var UNHANDLED=2;
var Internal,OwnPromiseCapability,PromiseWrapper,nativeThen;

var FORCED=isForced(PROMISE,function(){
var GLOBAL_CORE_JS_PROMISE=inspectSource(PromiseConstructor)!==String(PromiseConstructor);
if(!GLOBAL_CORE_JS_PROMISE){
// V8 6.6 (Node 10 and Chrome 66) have a bug with resolving custom thenables
// https://bugs.chromium.org/p/chromium/issues/detail?id=830565
// We can't detect it synchronously, so just check versions
if(V8_VERSION===66)return true;
// Unhandled rejections tracking support, NodeJS Promise without it fails @@species test
if(!IS_NODE&&!NATIVE_REJECTION_EVENT)return true;
}
// We need Promise#finally in the pure version for preventing prototype pollution
if(IS_PURE&&!PromiseConstructor.prototype['finally'])return true;
// We can't use @@species feature detection in V8 since it causes
// deoptimization and performance degradation
// https://github.com/zloirock/core-js/issues/679
if(V8_VERSION>=51&&/native code/.test(PromiseConstructor))return false;
// Detect correctness of subclassing with @@species support
var promise=PromiseConstructor.resolve(1);
var FakePromise=function FakePromise(exec){
exec(function(){/* empty */},function(){/* empty */});
};
var constructor=promise.constructor={};
constructor[SPECIES]=FakePromise;
return!(promise.then(function(){/* empty */})instanceof FakePromise);
});

var INCORRECT_ITERATION=FORCED||!checkCorrectnessOfIteration(function(iterable){
PromiseConstructor.all(iterable)['catch'](function(){/* empty */});
});

// helpers
var isThenable=function isThenable(it){
var then;
return isObject(it)&&typeof(then=it.then)=='function'?then:false;
};

var notify=function notify(state,isReject){
if(state.notified)return;
state.notified=true;
var chain=state.reactions;
microtask(function(){
var value=state.value;
var ok=state.state==FULFILLED;
var index=0;
// variable length - can't use forEach
while(chain.length>index){
var reaction=chain[index++];
var handler=ok?reaction.ok:reaction.fail;
var resolve=reaction.resolve;
var reject=reaction.reject;
var domain=reaction.domain;
var result,then,exited;
try{
if(handler){
if(!ok){
if(state.rejection===UNHANDLED)onHandleUnhandled(state);
state.rejection=HANDLED;
}
if(handler===true)result=value;else
{
if(domain)domain.enter();
result=handler(value);// can throw
if(domain){
domain.exit();
exited=true;
}
}
if(result===reaction.promise){
reject(TypeError('Promise-chain cycle'));
}else if(then=isThenable(result)){
then.call(result,resolve,reject);
}else resolve(result);
}else reject(value);
}catch(error){
if(domain&&!exited)domain.exit();
reject(error);
}
}
state.reactions=[];
state.notified=false;
if(isReject&&!state.rejection)onUnhandled(state);
});
};

var dispatchEvent=function dispatchEvent(name,promise,reason){
var event,handler;
if(DISPATCH_EVENT){
event=document.createEvent('Event');
event.promise=promise;
event.reason=reason;
event.initEvent(name,false,true);
global.dispatchEvent(event);
}else event={promise:promise,reason:reason};
if(!NATIVE_REJECTION_EVENT&&(handler=global['on'+name]))handler(event);else
if(name===UNHANDLED_REJECTION)hostReportErrors('Unhandled promise rejection',reason);
};

var onUnhandled=function onUnhandled(state){
task.call(global,function(){
var promise=state.facade;
var value=state.value;
var IS_UNHANDLED=isUnhandled(state);
var result;
if(IS_UNHANDLED){
result=perform(function(){
if(IS_NODE){
process.emit('unhandledRejection',value,promise);
}else dispatchEvent(UNHANDLED_REJECTION,promise,value);
});
// Browsers should not trigger `rejectionHandled` event if it was handled here, NodeJS - should
state.rejection=IS_NODE||isUnhandled(state)?UNHANDLED:HANDLED;
if(result.error)throw result.value;
}
});
};

var isUnhandled=function isUnhandled(state){
return state.rejection!==HANDLED&&!state.parent;
};

var onHandleUnhandled=function onHandleUnhandled(state){
task.call(global,function(){
var promise=state.facade;
if(IS_NODE){
process.emit('rejectionHandled',promise);
}else dispatchEvent(REJECTION_HANDLED,promise,state.value);
});
};

var bind=function bind(fn,state,unwrap){
return function(value){
fn(state,value,unwrap);
};
};

var internalReject=function internalReject(state,value,unwrap){
if(state.done)return;
state.done=true;
if(unwrap)state=unwrap;
state.value=value;
state.state=REJECTED;
notify(state,true);
};

var internalResolve=function internalResolve(state,value,unwrap){
if(state.done)return;
state.done=true;
if(unwrap)state=unwrap;
try{
if(state.facade===value)throw TypeError("Promise can't be resolved itself");
var then=isThenable(value);
if(then){
microtask(function(){
var wrapper={done:false};
try{
then.call(value,
bind(internalResolve,wrapper,state),
bind(internalReject,wrapper,state));

}catch(error){
internalReject(wrapper,error,state);
}
});
}else{
state.value=value;
state.state=FULFILLED;
notify(state,false);
}
}catch(error){
internalReject({done:false},error,state);
}
};

// constructor polyfill
if(FORCED){
// 25.4.3.1 Promise(executor)
PromiseConstructor=function Promise(executor){
anInstance(this,PromiseConstructor,PROMISE);
aFunction(executor);
Internal.call(this);
var state=getInternalState(this);
try{
executor(bind(internalResolve,state),bind(internalReject,state));
}catch(error){
internalReject(state,error);
}
};
// eslint-disable-next-line no-unused-vars
Internal=function Promise(executor){
setInternalState(this,{
type:PROMISE,
done:false,
notified:false,
parent:false,
reactions:[],
rejection:false,
state:PENDING,
value:undefined});

};
Internal.prototype=redefineAll(PromiseConstructor.prototype,{
// `Promise.prototype.then` method
// https://tc39.github.io/ecma262/#sec-promise.prototype.then
then:function then(onFulfilled,onRejected){
var state=getInternalPromiseState(this);
var reaction=newPromiseCapability(speciesConstructor(this,PromiseConstructor));
reaction.ok=typeof onFulfilled=='function'?onFulfilled:true;
reaction.fail=typeof onRejected=='function'&&onRejected;
reaction.domain=IS_NODE?process.domain:undefined;
state.parent=true;
state.reactions.push(reaction);
if(state.state!=PENDING)notify(state,false);
return reaction.promise;
},
// `Promise.prototype.catch` method
// https://tc39.github.io/ecma262/#sec-promise.prototype.catch
'catch':function _catch(onRejected){
return this.then(undefined,onRejected);
}});

OwnPromiseCapability=function OwnPromiseCapability(){
var promise=new Internal();
var state=getInternalState(promise);
this.promise=promise;
this.resolve=bind(internalResolve,state);
this.reject=bind(internalReject,state);
};
newPromiseCapabilityModule.f=newPromiseCapability=function newPromiseCapability(C){
return C===PromiseConstructor||C===PromiseWrapper?
new OwnPromiseCapability(C):
newGenericPromiseCapability(C);
};

if(!IS_PURE&&typeof NativePromise=='function'){
nativeThen=NativePromise.prototype.then;

// wrap native Promise#then for native async functions
redefine(NativePromise.prototype,'then',function then(onFulfilled,onRejected){
var that=this;
return new PromiseConstructor(function(resolve,reject){
nativeThen.call(that,resolve,reject);
}).then(onFulfilled,onRejected);
// https://github.com/zloirock/core-js/issues/640
},{unsafe:true});

// wrap fetch result
if(typeof $fetch=='function')$({global:true,enumerable:true,forced:true},{
// eslint-disable-next-line no-unused-vars
fetch:function fetch(input/* , init */){
return promiseResolve(PromiseConstructor,$fetch.apply(global,arguments));
}});

}
}

$({global:true,wrap:true,forced:FORCED},{
Promise:PromiseConstructor});


setToStringTag(PromiseConstructor,PROMISE,false,true);
setSpecies(PROMISE);

PromiseWrapper=getBuiltIn(PROMISE);

// statics
$({target:PROMISE,stat:true,forced:FORCED},{
// `Promise.reject` method
// https://tc39.github.io/ecma262/#sec-promise.reject
reject:function reject(r){
var capability=newPromiseCapability(this);
capability.reject.call(undefined,r);
return capability.promise;
}});


$({target:PROMISE,stat:true,forced:IS_PURE||FORCED},{
// `Promise.resolve` method
// https://tc39.github.io/ecma262/#sec-promise.resolve
resolve:function resolve(x){
return promiseResolve(IS_PURE&&this===PromiseWrapper?PromiseConstructor:this,x);
}});


$({target:PROMISE,stat:true,forced:INCORRECT_ITERATION},{
// `Promise.all` method
// https://tc39.github.io/ecma262/#sec-promise.all
all:function all(iterable){
var C=this;
var capability=newPromiseCapability(C);
var resolve=capability.resolve;
var reject=capability.reject;
var result=perform(function(){
var $promiseResolve=aFunction(C.resolve);
var values=[];
var counter=0;
var remaining=1;
iterate(iterable,function(promise){
var index=counter++;
var alreadyCalled=false;
values.push(undefined);
remaining++;
$promiseResolve.call(C,promise).then(function(value){
if(alreadyCalled)return;
alreadyCalled=true;
values[index]=value;
--remaining||resolve(values);
},reject);
});
--remaining||resolve(values);
});
if(result.error)reject(result.value);
return capability.promise;
},
// `Promise.race` method
// https://tc39.github.io/ecma262/#sec-promise.race
race:function race(iterable){
var C=this;
var capability=newPromiseCapability(C);
var reject=capability.reject;
var result=perform(function(){
var $promiseResolve=aFunction(C.resolve);
iterate(iterable,function(promise){
$promiseResolve.call(C,promise).then(capability.resolve,reject);
});
});
if(result.error)reject(result.value);
return capability.promise;
}});


},{"../internals/a-function":102,"../internals/an-instance":106,"../internals/check-correctness-of-iteration":124,"../internals/engine-is-node":140,"../internals/engine-v8-version":142,"../internals/export":144,"../internals/get-built-in":148,"../internals/global":150,"../internals/host-report-errors":153,"../internals/inspect-source":159,"../internals/internal-state":160,"../internals/is-forced":163,"../internals/is-object":164,"../internals/is-pure":165,"../internals/iterate":167,"../internals/microtask":171,"../internals/native-promise-constructor":172,"../internals/new-promise-capability":175,"../internals/perform":194,"../internals/promise-resolve":195,"../internals/redefine":197,"../internals/redefine-all":196,"../internals/set-species":205,"../internals/set-to-string-tag":206,"../internals/species-constructor":210,"../internals/task":214,"../internals/well-known-symbol":231}],256:[function(require,module,exports){
'use strict';
var $=require('../internals/export');
var exec=require('../internals/regexp-exec');

$({target:'RegExp',proto:true,forced:/./.exec!==exec},{
exec:exec});


},{"../internals/export":144,"../internals/regexp-exec":199}],257:[function(require,module,exports){
'use strict';
var redefine=require('../internals/redefine');
var anObject=require('../internals/an-object');
var fails=require('../internals/fails');
var flags=require('../internals/regexp-flags');

var TO_STRING='toString';
var RegExpPrototype=RegExp.prototype;
var nativeToString=RegExpPrototype[TO_STRING];

var NOT_GENERIC=fails(function(){return nativeToString.call({source:'a',flags:'b'})!='/a/b';});
// FF44- RegExp#toString has a wrong name
var INCORRECT_NAME=nativeToString.name!=TO_STRING;

// `RegExp.prototype.toString` method
// https://tc39.github.io/ecma262/#sec-regexp.prototype.tostring
if(NOT_GENERIC||INCORRECT_NAME){
redefine(RegExp.prototype,TO_STRING,function toString(){
var R=anObject(this);
var p=String(R.source);
var rf=R.flags;
var f=String(rf===undefined&&R instanceof RegExp&&!('flags'in RegExpPrototype)?flags.call(R):rf);
return'/'+p+'/'+f;
},{unsafe:true});
}

},{"../internals/an-object":107,"../internals/fails":145,"../internals/redefine":197,"../internals/regexp-flags":200}],258:[function(require,module,exports){
'use strict';
var $=require('../internals/export');
var notARegExp=require('../internals/not-a-regexp');
var requireObjectCoercible=require('../internals/require-object-coercible');
var correctIsRegExpLogic=require('../internals/correct-is-regexp-logic');

// `String.prototype.includes` method
// https://tc39.github.io/ecma262/#sec-string.prototype.includes
$({target:'String',proto:true,forced:!correctIsRegExpLogic('includes')},{
includes:function includes(searchString/* , position = 0 */){
return!!~String(requireObjectCoercible(this)).
indexOf(notARegExp(searchString),arguments.length>1?arguments[1]:undefined);
}});


},{"../internals/correct-is-regexp-logic":128,"../internals/export":144,"../internals/not-a-regexp":176,"../internals/require-object-coercible":202}],259:[function(require,module,exports){
'use strict';
var charAt=require('../internals/string-multibyte').charAt;
var InternalStateModule=require('../internals/internal-state');
var defineIterator=require('../internals/define-iterator');

var STRING_ITERATOR='String Iterator';
var setInternalState=InternalStateModule.set;
var getInternalState=InternalStateModule.getterFor(STRING_ITERATOR);

// `String.prototype[@@iterator]` method
// https://tc39.github.io/ecma262/#sec-string.prototype-@@iterator
defineIterator(String,'String',function(iterated){
setInternalState(this,{
type:STRING_ITERATOR,
string:String(iterated),
index:0});

// `%StringIteratorPrototype%.next` method
// https://tc39.github.io/ecma262/#sec-%stringiteratorprototype%.next
},function next(){
var state=getInternalState(this);
var string=state.string;
var index=state.index;
var point;
if(index>=string.length)return{value:undefined,done:true};
point=charAt(string,index);
state.index+=point.length;
return{value:point,done:false};
});

},{"../internals/define-iterator":134,"../internals/internal-state":160,"../internals/string-multibyte":211}],260:[function(require,module,exports){
'use strict';
var fixRegExpWellKnownSymbolLogic=require('../internals/fix-regexp-well-known-symbol-logic');
var anObject=require('../internals/an-object');
var toLength=require('../internals/to-length');
var requireObjectCoercible=require('../internals/require-object-coercible');
var advanceStringIndex=require('../internals/advance-string-index');
var regExpExec=require('../internals/regexp-exec-abstract');

// @@match logic
fixRegExpWellKnownSymbolLogic('match',1,function(MATCH,nativeMatch,maybeCallNative){
return[
// `String.prototype.match` method
// https://tc39.github.io/ecma262/#sec-string.prototype.match
function match(regexp){
var O=requireObjectCoercible(this);
var matcher=regexp==undefined?undefined:regexp[MATCH];
return matcher!==undefined?matcher.call(regexp,O):new RegExp(regexp)[MATCH](String(O));
},
// `RegExp.prototype[@@match]` method
// https://tc39.github.io/ecma262/#sec-regexp.prototype-@@match
function(regexp){
var res=maybeCallNative(nativeMatch,regexp,this);
if(res.done)return res.value;

var rx=anObject(regexp);
var S=String(this);

if(!rx.global)return regExpExec(rx,S);

var fullUnicode=rx.unicode;
rx.lastIndex=0;
var A=[];
var n=0;
var result;
while((result=regExpExec(rx,S))!==null){
var matchStr=String(result[0]);
A[n]=matchStr;
if(matchStr==='')rx.lastIndex=advanceStringIndex(S,toLength(rx.lastIndex),fullUnicode);
n++;
}
return n===0?null:A;
}];

});

},{"../internals/advance-string-index":105,"../internals/an-object":107,"../internals/fix-regexp-well-known-symbol-logic":146,"../internals/regexp-exec-abstract":198,"../internals/require-object-coercible":202,"../internals/to-length":219}],261:[function(require,module,exports){
'use strict';
var fixRegExpWellKnownSymbolLogic=require('../internals/fix-regexp-well-known-symbol-logic');
var anObject=require('../internals/an-object');
var toObject=require('../internals/to-object');
var toLength=require('../internals/to-length');
var toInteger=require('../internals/to-integer');
var requireObjectCoercible=require('../internals/require-object-coercible');
var advanceStringIndex=require('../internals/advance-string-index');
var regExpExec=require('../internals/regexp-exec-abstract');

var max=Math.max;
var min=Math.min;
var floor=Math.floor;
var SUBSTITUTION_SYMBOLS=/\$([$&'`]|\d\d?|<[^>]*>)/g;
var SUBSTITUTION_SYMBOLS_NO_NAMED=/\$([$&'`]|\d\d?)/g;

var maybeToString=function maybeToString(it){
return it===undefined?it:String(it);
};

// @@replace logic
fixRegExpWellKnownSymbolLogic('replace',2,function(REPLACE,nativeReplace,maybeCallNative,reason){
var REGEXP_REPLACE_SUBSTITUTES_UNDEFINED_CAPTURE=reason.REGEXP_REPLACE_SUBSTITUTES_UNDEFINED_CAPTURE;
var REPLACE_KEEPS_$0=reason.REPLACE_KEEPS_$0;
var UNSAFE_SUBSTITUTE=REGEXP_REPLACE_SUBSTITUTES_UNDEFINED_CAPTURE?'$':'$0';

return[
// `String.prototype.replace` method
// https://tc39.github.io/ecma262/#sec-string.prototype.replace
function replace(searchValue,replaceValue){
var O=requireObjectCoercible(this);
var replacer=searchValue==undefined?undefined:searchValue[REPLACE];
return replacer!==undefined?
replacer.call(searchValue,O,replaceValue):
nativeReplace.call(String(O),searchValue,replaceValue);
},
// `RegExp.prototype[@@replace]` method
// https://tc39.github.io/ecma262/#sec-regexp.prototype-@@replace
function(regexp,replaceValue){
if(
!REGEXP_REPLACE_SUBSTITUTES_UNDEFINED_CAPTURE&&REPLACE_KEEPS_$0||
typeof replaceValue==='string'&&replaceValue.indexOf(UNSAFE_SUBSTITUTE)===-1)
{
var res=maybeCallNative(nativeReplace,regexp,this,replaceValue);
if(res.done)return res.value;
}

var rx=anObject(regexp);
var S=String(this);

var functionalReplace=typeof replaceValue==='function';
if(!functionalReplace)replaceValue=String(replaceValue);

var global=rx.global;
if(global){
var fullUnicode=rx.unicode;
rx.lastIndex=0;
}
var results=[];
while(true){
var result=regExpExec(rx,S);
if(result===null)break;

results.push(result);
if(!global)break;

var matchStr=String(result[0]);
if(matchStr==='')rx.lastIndex=advanceStringIndex(S,toLength(rx.lastIndex),fullUnicode);
}

var accumulatedResult='';
var nextSourcePosition=0;
for(var i=0;i<results.length;i++){
result=results[i];

var matched=String(result[0]);
var position=max(min(toInteger(result.index),S.length),0);
var captures=[];
// NOTE: This is equivalent to
//   captures = result.slice(1).map(maybeToString)
// but for some reason `nativeSlice.call(result, 1, result.length)` (called in
// the slice polyfill when slicing native arrays) "doesn't work" in safari 9 and
// causes a crash (https://pastebin.com/N21QzeQA) when trying to debug it.
for(var j=1;j<result.length;j++){captures.push(maybeToString(result[j]));}
var namedCaptures=result.groups;
if(functionalReplace){
var replacerArgs=[matched].concat(captures,position,S);
if(namedCaptures!==undefined)replacerArgs.push(namedCaptures);
var replacement=String(replaceValue.apply(undefined,replacerArgs));
}else{
replacement=getSubstitution(matched,S,position,captures,namedCaptures,replaceValue);
}
if(position>=nextSourcePosition){
accumulatedResult+=S.slice(nextSourcePosition,position)+replacement;
nextSourcePosition=position+matched.length;
}
}
return accumulatedResult+S.slice(nextSourcePosition);
}];


// https://tc39.github.io/ecma262/#sec-getsubstitution
function getSubstitution(matched,str,position,captures,namedCaptures,replacement){
var tailPos=position+matched.length;
var m=captures.length;
var symbols=SUBSTITUTION_SYMBOLS_NO_NAMED;
if(namedCaptures!==undefined){
namedCaptures=toObject(namedCaptures);
symbols=SUBSTITUTION_SYMBOLS;
}
return nativeReplace.call(replacement,symbols,function(match,ch){
var capture;
switch(ch.charAt(0)){
case'$':return'$';
case'&':return matched;
case'`':return str.slice(0,position);
case"'":return str.slice(tailPos);
case'<':
capture=namedCaptures[ch.slice(1,-1)];
break;
default:// \d\d?
var n=+ch;
if(n===0)return match;
if(n>m){
var f=floor(n/10);
if(f===0)return match;
if(f<=m)return captures[f-1]===undefined?ch.charAt(1):captures[f-1]+ch.charAt(1);
return match;
}
capture=captures[n-1];}

return capture===undefined?'':capture;
});
}
});

},{"../internals/advance-string-index":105,"../internals/an-object":107,"../internals/fix-regexp-well-known-symbol-logic":146,"../internals/regexp-exec-abstract":198,"../internals/require-object-coercible":202,"../internals/to-integer":218,"../internals/to-length":219,"../internals/to-object":220}],262:[function(require,module,exports){
'use strict';
var fixRegExpWellKnownSymbolLogic=require('../internals/fix-regexp-well-known-symbol-logic');
var anObject=require('../internals/an-object');
var requireObjectCoercible=require('../internals/require-object-coercible');
var sameValue=require('../internals/same-value');
var regExpExec=require('../internals/regexp-exec-abstract');

// @@search logic
fixRegExpWellKnownSymbolLogic('search',1,function(SEARCH,nativeSearch,maybeCallNative){
return[
// `String.prototype.search` method
// https://tc39.github.io/ecma262/#sec-string.prototype.search
function search(regexp){
var O=requireObjectCoercible(this);
var searcher=regexp==undefined?undefined:regexp[SEARCH];
return searcher!==undefined?searcher.call(regexp,O):new RegExp(regexp)[SEARCH](String(O));
},
// `RegExp.prototype[@@search]` method
// https://tc39.github.io/ecma262/#sec-regexp.prototype-@@search
function(regexp){
var res=maybeCallNative(nativeSearch,regexp,this);
if(res.done)return res.value;

var rx=anObject(regexp);
var S=String(this);

var previousLastIndex=rx.lastIndex;
if(!sameValue(previousLastIndex,0))rx.lastIndex=0;
var result=regExpExec(rx,S);
if(!sameValue(rx.lastIndex,previousLastIndex))rx.lastIndex=previousLastIndex;
return result===null?-1:result.index;
}];

});

},{"../internals/an-object":107,"../internals/fix-regexp-well-known-symbol-logic":146,"../internals/regexp-exec-abstract":198,"../internals/require-object-coercible":202,"../internals/same-value":203}],263:[function(require,module,exports){
'use strict';
var fixRegExpWellKnownSymbolLogic=require('../internals/fix-regexp-well-known-symbol-logic');
var isRegExp=require('../internals/is-regexp');
var anObject=require('../internals/an-object');
var requireObjectCoercible=require('../internals/require-object-coercible');
var speciesConstructor=require('../internals/species-constructor');
var advanceStringIndex=require('../internals/advance-string-index');
var toLength=require('../internals/to-length');
var callRegExpExec=require('../internals/regexp-exec-abstract');
var regexpExec=require('../internals/regexp-exec');
var fails=require('../internals/fails');

var arrayPush=[].push;
var min=Math.min;
var MAX_UINT32=0xFFFFFFFF;

// babel-minify transpiles RegExp('x', 'y') -> /x/y and it causes SyntaxError
var SUPPORTS_Y=!fails(function(){return!RegExp(MAX_UINT32,'y');});

// @@split logic
fixRegExpWellKnownSymbolLogic('split',2,function(SPLIT,nativeSplit,maybeCallNative){
var internalSplit;
if(
'abbc'.split(/(b)*/)[1]=='c'||
'test'.split(/(?:)/,-1).length!=4||
'ab'.split(/(?:ab)*/).length!=2||
'.'.split(/(.?)(.?)/).length!=4||
'.'.split(/()()/).length>1||
''.split(/.?/).length)
{
// based on es5-shim implementation, need to rework it
internalSplit=function internalSplit(separator,limit){
var string=String(requireObjectCoercible(this));
var lim=limit===undefined?MAX_UINT32:limit>>>0;
if(lim===0)return[];
if(separator===undefined)return[string];
// If `separator` is not a regex, use native split
if(!isRegExp(separator)){
return nativeSplit.call(string,separator,lim);
}
var output=[];
var flags=(separator.ignoreCase?'i':'')+(
separator.multiline?'m':'')+(
separator.unicode?'u':'')+(
separator.sticky?'y':'');
var lastLastIndex=0;
// Make `global` and avoid `lastIndex` issues by working with a copy
var separatorCopy=new RegExp(separator.source,flags+'g');
var match,lastIndex,lastLength;
while(match=regexpExec.call(separatorCopy,string)){
lastIndex=separatorCopy.lastIndex;
if(lastIndex>lastLastIndex){
output.push(string.slice(lastLastIndex,match.index));
if(match.length>1&&match.index<string.length)arrayPush.apply(output,match.slice(1));
lastLength=match[0].length;
lastLastIndex=lastIndex;
if(output.length>=lim)break;
}
if(separatorCopy.lastIndex===match.index)separatorCopy.lastIndex++;// Avoid an infinite loop
}
if(lastLastIndex===string.length){
if(lastLength||!separatorCopy.test(''))output.push('');
}else output.push(string.slice(lastLastIndex));
return output.length>lim?output.slice(0,lim):output;
};
// Chakra, V8
}else if('0'.split(undefined,0).length){
internalSplit=function internalSplit(separator,limit){
return separator===undefined&&limit===0?[]:nativeSplit.call(this,separator,limit);
};
}else internalSplit=nativeSplit;

return[
// `String.prototype.split` method
// https://tc39.github.io/ecma262/#sec-string.prototype.split
function split(separator,limit){
var O=requireObjectCoercible(this);
var splitter=separator==undefined?undefined:separator[SPLIT];
return splitter!==undefined?
splitter.call(separator,O,limit):
internalSplit.call(String(O),separator,limit);
},
// `RegExp.prototype[@@split]` method
// https://tc39.github.io/ecma262/#sec-regexp.prototype-@@split
//
// NOTE: This cannot be properly polyfilled in engines that don't support
// the 'y' flag.
function(regexp,limit){
var res=maybeCallNative(internalSplit,regexp,this,limit,internalSplit!==nativeSplit);
if(res.done)return res.value;

var rx=anObject(regexp);
var S=String(this);
var C=speciesConstructor(rx,RegExp);

var unicodeMatching=rx.unicode;
var flags=(rx.ignoreCase?'i':'')+(
rx.multiline?'m':'')+(
rx.unicode?'u':'')+(
SUPPORTS_Y?'y':'g');

// ^(? + rx + ) is needed, in combination with some S slicing, to
// simulate the 'y' flag.
var splitter=new C(SUPPORTS_Y?rx:'^(?:'+rx.source+')',flags);
var lim=limit===undefined?MAX_UINT32:limit>>>0;
if(lim===0)return[];
if(S.length===0)return callRegExpExec(splitter,S)===null?[S]:[];
var p=0;
var q=0;
var A=[];
while(q<S.length){
splitter.lastIndex=SUPPORTS_Y?q:0;
var z=callRegExpExec(splitter,SUPPORTS_Y?S:S.slice(q));
var e;
if(
z===null||
(e=min(toLength(splitter.lastIndex+(SUPPORTS_Y?0:q)),S.length))===p)
{
q=advanceStringIndex(S,q,unicodeMatching);
}else{
A.push(S.slice(p,q));
if(A.length===lim)return A;
for(var i=1;i<=z.length-1;i++){
A.push(z[i]);
if(A.length===lim)return A;
}
q=p=e;
}
}
A.push(S.slice(p));
return A;
}];

},!SUPPORTS_Y);

},{"../internals/advance-string-index":105,"../internals/an-object":107,"../internals/fails":145,"../internals/fix-regexp-well-known-symbol-logic":146,"../internals/is-regexp":166,"../internals/regexp-exec":199,"../internals/regexp-exec-abstract":198,"../internals/require-object-coercible":202,"../internals/species-constructor":210,"../internals/to-length":219}],264:[function(require,module,exports){
'use strict';
var $=require('../internals/export');
var $trim=require('../internals/string-trim').trim;
var forcedStringTrimMethod=require('../internals/string-trim-forced');

// `String.prototype.trim` method
// https://tc39.github.io/ecma262/#sec-string.prototype.trim
$({target:'String',proto:true,forced:forcedStringTrimMethod('trim')},{
trim:function trim(){
return $trim(this);
}});


},{"../internals/export":144,"../internals/string-trim":213,"../internals/string-trim-forced":212}],265:[function(require,module,exports){
// `Symbol.prototype.description` getter
// https://tc39.github.io/ecma262/#sec-symbol.prototype.description
'use strict';
var $=require('../internals/export');
var DESCRIPTORS=require('../internals/descriptors');
var global=require('../internals/global');
var has=require('../internals/has');
var isObject=require('../internals/is-object');
var defineProperty=require('../internals/object-define-property').f;
var copyConstructorProperties=require('../internals/copy-constructor-properties');

var NativeSymbol=global.Symbol;

if(DESCRIPTORS&&typeof NativeSymbol=='function'&&(!('description'in NativeSymbol.prototype)||
// Safari 12 bug
NativeSymbol().description!==undefined))
{
var EmptyStringDescriptionStore={};
// wrap Symbol constructor for correct work with undefined description
var SymbolWrapper=function Symbol(){
var description=arguments.length<1||arguments[0]===undefined?undefined:String(arguments[0]);
var result=this instanceof SymbolWrapper?
new NativeSymbol(description)
// in Edge 13, String(Symbol(undefined)) === 'Symbol(undefined)'
:description===undefined?NativeSymbol():NativeSymbol(description);
if(description==='')EmptyStringDescriptionStore[result]=true;
return result;
};
copyConstructorProperties(SymbolWrapper,NativeSymbol);
var symbolPrototype=SymbolWrapper.prototype=NativeSymbol.prototype;
symbolPrototype.constructor=SymbolWrapper;

var symbolToString=symbolPrototype.toString;
var native=String(NativeSymbol('test'))=='Symbol(test)';
var regexp=/^Symbol\((.*)\)[^)]+$/;
defineProperty(symbolPrototype,'description',{
configurable:true,
get:function description(){
var symbol=isObject(this)?this.valueOf():this;
var string=symbolToString.call(symbol);
if(has(EmptyStringDescriptionStore,symbol))return'';
var desc=native?string.slice(7,-1):string.replace(regexp,'$1');
return desc===''?undefined:desc;
}});


$({global:true,forced:true},{
Symbol:SymbolWrapper});

}

},{"../internals/copy-constructor-properties":127,"../internals/descriptors":136,"../internals/export":144,"../internals/global":150,"../internals/has":151,"../internals/is-object":164,"../internals/object-define-property":180}],266:[function(require,module,exports){
'use strict';
var $=require('../internals/export');
var global=require('../internals/global');
var getBuiltIn=require('../internals/get-built-in');
var IS_PURE=require('../internals/is-pure');
var DESCRIPTORS=require('../internals/descriptors');
var NATIVE_SYMBOL=require('../internals/native-symbol');
var USE_SYMBOL_AS_UID=require('../internals/use-symbol-as-uid');
var fails=require('../internals/fails');
var has=require('../internals/has');
var isArray=require('../internals/is-array');
var isObject=require('../internals/is-object');
var anObject=require('../internals/an-object');
var toObject=require('../internals/to-object');
var toIndexedObject=require('../internals/to-indexed-object');
var toPrimitive=require('../internals/to-primitive');
var createPropertyDescriptor=require('../internals/create-property-descriptor');
var nativeObjectCreate=require('../internals/object-create');
var objectKeys=require('../internals/object-keys');
var getOwnPropertyNamesModule=require('../internals/object-get-own-property-names');
var getOwnPropertyNamesExternal=require('../internals/object-get-own-property-names-external');
var getOwnPropertySymbolsModule=require('../internals/object-get-own-property-symbols');
var getOwnPropertyDescriptorModule=require('../internals/object-get-own-property-descriptor');
var definePropertyModule=require('../internals/object-define-property');
var propertyIsEnumerableModule=require('../internals/object-property-is-enumerable');
var createNonEnumerableProperty=require('../internals/create-non-enumerable-property');
var redefine=require('../internals/redefine');
var shared=require('../internals/shared');
var sharedKey=require('../internals/shared-key');
var hiddenKeys=require('../internals/hidden-keys');
var uid=require('../internals/uid');
var wellKnownSymbol=require('../internals/well-known-symbol');
var wrappedWellKnownSymbolModule=require('../internals/well-known-symbol-wrapped');
var defineWellKnownSymbol=require('../internals/define-well-known-symbol');
var setToStringTag=require('../internals/set-to-string-tag');
var InternalStateModule=require('../internals/internal-state');
var $forEach=require('../internals/array-iteration').forEach;

var HIDDEN=sharedKey('hidden');
var SYMBOL='Symbol';
var PROTOTYPE='prototype';
var TO_PRIMITIVE=wellKnownSymbol('toPrimitive');
var setInternalState=InternalStateModule.set;
var getInternalState=InternalStateModule.getterFor(SYMBOL);
var ObjectPrototype=Object[PROTOTYPE];
var $Symbol=global.Symbol;
var $stringify=getBuiltIn('JSON','stringify');
var nativeGetOwnPropertyDescriptor=getOwnPropertyDescriptorModule.f;
var nativeDefineProperty=definePropertyModule.f;
var nativeGetOwnPropertyNames=getOwnPropertyNamesExternal.f;
var nativePropertyIsEnumerable=propertyIsEnumerableModule.f;
var AllSymbols=shared('symbols');
var ObjectPrototypeSymbols=shared('op-symbols');
var StringToSymbolRegistry=shared('string-to-symbol-registry');
var SymbolToStringRegistry=shared('symbol-to-string-registry');
var WellKnownSymbolsStore=shared('wks');
var QObject=global.QObject;
// Don't use setters in Qt Script, https://github.com/zloirock/core-js/issues/173
var USE_SETTER=!QObject||!QObject[PROTOTYPE]||!QObject[PROTOTYPE].findChild;

// fallback for old Android, https://code.google.com/p/v8/issues/detail?id=687
var setSymbolDescriptor=DESCRIPTORS&&fails(function(){
return nativeObjectCreate(nativeDefineProperty({},'a',{
get:function get(){return nativeDefineProperty(this,'a',{value:7}).a;}})).
a!=7;
})?function(O,P,Attributes){
var ObjectPrototypeDescriptor=nativeGetOwnPropertyDescriptor(ObjectPrototype,P);
if(ObjectPrototypeDescriptor)delete ObjectPrototype[P];
nativeDefineProperty(O,P,Attributes);
if(ObjectPrototypeDescriptor&&O!==ObjectPrototype){
nativeDefineProperty(ObjectPrototype,P,ObjectPrototypeDescriptor);
}
}:nativeDefineProperty;

var wrap=function wrap(tag,description){
var symbol=AllSymbols[tag]=nativeObjectCreate($Symbol[PROTOTYPE]);
setInternalState(symbol,{
type:SYMBOL,
tag:tag,
description:description});

if(!DESCRIPTORS)symbol.description=description;
return symbol;
};

var isSymbol=USE_SYMBOL_AS_UID?function(it){
return typeof it=='symbol';
}:function(it){
return Object(it)instanceof $Symbol;
};

var $defineProperty=function defineProperty(O,P,Attributes){
if(O===ObjectPrototype)$defineProperty(ObjectPrototypeSymbols,P,Attributes);
anObject(O);
var key=toPrimitive(P,true);
anObject(Attributes);
if(has(AllSymbols,key)){
if(!Attributes.enumerable){
if(!has(O,HIDDEN))nativeDefineProperty(O,HIDDEN,createPropertyDescriptor(1,{}));
O[HIDDEN][key]=true;
}else{
if(has(O,HIDDEN)&&O[HIDDEN][key])O[HIDDEN][key]=false;
Attributes=nativeObjectCreate(Attributes,{enumerable:createPropertyDescriptor(0,false)});
}return setSymbolDescriptor(O,key,Attributes);
}return nativeDefineProperty(O,key,Attributes);
};

var $defineProperties=function defineProperties(O,Properties){
anObject(O);
var properties=toIndexedObject(Properties);
var keys=objectKeys(properties).concat($getOwnPropertySymbols(properties));
$forEach(keys,function(key){
if(!DESCRIPTORS||$propertyIsEnumerable.call(properties,key))$defineProperty(O,key,properties[key]);
});
return O;
};

var $create=function create(O,Properties){
return Properties===undefined?nativeObjectCreate(O):$defineProperties(nativeObjectCreate(O),Properties);
};

var $propertyIsEnumerable=function propertyIsEnumerable(V){
var P=toPrimitive(V,true);
var enumerable=nativePropertyIsEnumerable.call(this,P);
if(this===ObjectPrototype&&has(AllSymbols,P)&&!has(ObjectPrototypeSymbols,P))return false;
return enumerable||!has(this,P)||!has(AllSymbols,P)||has(this,HIDDEN)&&this[HIDDEN][P]?enumerable:true;
};

var $getOwnPropertyDescriptor=function getOwnPropertyDescriptor(O,P){
var it=toIndexedObject(O);
var key=toPrimitive(P,true);
if(it===ObjectPrototype&&has(AllSymbols,key)&&!has(ObjectPrototypeSymbols,key))return;
var descriptor=nativeGetOwnPropertyDescriptor(it,key);
if(descriptor&&has(AllSymbols,key)&&!(has(it,HIDDEN)&&it[HIDDEN][key])){
descriptor.enumerable=true;
}
return descriptor;
};

var $getOwnPropertyNames=function getOwnPropertyNames(O){
var names=nativeGetOwnPropertyNames(toIndexedObject(O));
var result=[];
$forEach(names,function(key){
if(!has(AllSymbols,key)&&!has(hiddenKeys,key))result.push(key);
});
return result;
};

var $getOwnPropertySymbols=function getOwnPropertySymbols(O){
var IS_OBJECT_PROTOTYPE=O===ObjectPrototype;
var names=nativeGetOwnPropertyNames(IS_OBJECT_PROTOTYPE?ObjectPrototypeSymbols:toIndexedObject(O));
var result=[];
$forEach(names,function(key){
if(has(AllSymbols,key)&&(!IS_OBJECT_PROTOTYPE||has(ObjectPrototype,key))){
result.push(AllSymbols[key]);
}
});
return result;
};

// `Symbol` constructor
// https://tc39.github.io/ecma262/#sec-symbol-constructor
if(!NATIVE_SYMBOL){
$Symbol=function Symbol(){
if(this instanceof $Symbol)throw TypeError('Symbol is not a constructor');
var description=!arguments.length||arguments[0]===undefined?undefined:String(arguments[0]);
var tag=uid(description);
var setter=function setter(value){
if(this===ObjectPrototype)setter.call(ObjectPrototypeSymbols,value);
if(has(this,HIDDEN)&&has(this[HIDDEN],tag))this[HIDDEN][tag]=false;
setSymbolDescriptor(this,tag,createPropertyDescriptor(1,value));
};
if(DESCRIPTORS&&USE_SETTER)setSymbolDescriptor(ObjectPrototype,tag,{configurable:true,set:setter});
return wrap(tag,description);
};

redefine($Symbol[PROTOTYPE],'toString',function toString(){
return getInternalState(this).tag;
});

redefine($Symbol,'withoutSetter',function(description){
return wrap(uid(description),description);
});

propertyIsEnumerableModule.f=$propertyIsEnumerable;
definePropertyModule.f=$defineProperty;
getOwnPropertyDescriptorModule.f=$getOwnPropertyDescriptor;
getOwnPropertyNamesModule.f=getOwnPropertyNamesExternal.f=$getOwnPropertyNames;
getOwnPropertySymbolsModule.f=$getOwnPropertySymbols;

wrappedWellKnownSymbolModule.f=function(name){
return wrap(wellKnownSymbol(name),name);
};

if(DESCRIPTORS){
// https://github.com/tc39/proposal-Symbol-description
nativeDefineProperty($Symbol[PROTOTYPE],'description',{
configurable:true,
get:function description(){
return getInternalState(this).description;
}});

if(!IS_PURE){
redefine(ObjectPrototype,'propertyIsEnumerable',$propertyIsEnumerable,{unsafe:true});
}
}
}

$({global:true,wrap:true,forced:!NATIVE_SYMBOL,sham:!NATIVE_SYMBOL},{
Symbol:$Symbol});


$forEach(objectKeys(WellKnownSymbolsStore),function(name){
defineWellKnownSymbol(name);
});

$({target:SYMBOL,stat:true,forced:!NATIVE_SYMBOL},{
// `Symbol.for` method
// https://tc39.github.io/ecma262/#sec-symbol.for
'for':function _for(key){
var string=String(key);
if(has(StringToSymbolRegistry,string))return StringToSymbolRegistry[string];
var symbol=$Symbol(string);
StringToSymbolRegistry[string]=symbol;
SymbolToStringRegistry[symbol]=string;
return symbol;
},
// `Symbol.keyFor` method
// https://tc39.github.io/ecma262/#sec-symbol.keyfor
keyFor:function keyFor(sym){
if(!isSymbol(sym))throw TypeError(sym+' is not a symbol');
if(has(SymbolToStringRegistry,sym))return SymbolToStringRegistry[sym];
},
useSetter:function useSetter(){USE_SETTER=true;},
useSimple:function useSimple(){USE_SETTER=false;}});


$({target:'Object',stat:true,forced:!NATIVE_SYMBOL,sham:!DESCRIPTORS},{
// `Object.create` method
// https://tc39.github.io/ecma262/#sec-object.create
create:$create,
// `Object.defineProperty` method
// https://tc39.github.io/ecma262/#sec-object.defineproperty
defineProperty:$defineProperty,
// `Object.defineProperties` method
// https://tc39.github.io/ecma262/#sec-object.defineproperties
defineProperties:$defineProperties,
// `Object.getOwnPropertyDescriptor` method
// https://tc39.github.io/ecma262/#sec-object.getownpropertydescriptors
getOwnPropertyDescriptor:$getOwnPropertyDescriptor});


$({target:'Object',stat:true,forced:!NATIVE_SYMBOL},{
// `Object.getOwnPropertyNames` method
// https://tc39.github.io/ecma262/#sec-object.getownpropertynames
getOwnPropertyNames:$getOwnPropertyNames,
// `Object.getOwnPropertySymbols` method
// https://tc39.github.io/ecma262/#sec-object.getownpropertysymbols
getOwnPropertySymbols:$getOwnPropertySymbols});


// Chrome 38 and 39 `Object.getOwnPropertySymbols` fails on primitives
// https://bugs.chromium.org/p/v8/issues/detail?id=3443
$({target:'Object',stat:true,forced:fails(function(){getOwnPropertySymbolsModule.f(1);})},{
getOwnPropertySymbols:function getOwnPropertySymbols(it){
return getOwnPropertySymbolsModule.f(toObject(it));
}});


// `JSON.stringify` method behavior with symbols
// https://tc39.github.io/ecma262/#sec-json.stringify
if($stringify){
var FORCED_JSON_STRINGIFY=!NATIVE_SYMBOL||fails(function(){
var symbol=$Symbol();
// MS Edge converts symbol values to JSON as {}
return $stringify([symbol])!='[null]'
// WebKit converts symbol values to JSON as null
||$stringify({a:symbol})!='{}'
// V8 throws on boxed symbols
||$stringify(Object(symbol))!='{}';
});

$({target:'JSON',stat:true,forced:FORCED_JSON_STRINGIFY},{
// eslint-disable-next-line no-unused-vars
stringify:function stringify(it,replacer,space){
var args=[it];
var index=1;
var $replacer;
while(arguments.length>index){args.push(arguments[index++]);}
$replacer=replacer;
if(!isObject(replacer)&&it===undefined||isSymbol(it))return;// IE8 returns string on undefined
if(!isArray(replacer))replacer=function replacer(key,value){
if(typeof $replacer=='function')value=$replacer.call(this,key,value);
if(!isSymbol(value))return value;
};
args[1]=replacer;
return $stringify.apply(null,args);
}});

}

// `Symbol.prototype[@@toPrimitive]` method
// https://tc39.github.io/ecma262/#sec-symbol.prototype-@@toprimitive
if(!$Symbol[PROTOTYPE][TO_PRIMITIVE]){
createNonEnumerableProperty($Symbol[PROTOTYPE],TO_PRIMITIVE,$Symbol[PROTOTYPE].valueOf);
}
// `Symbol.prototype[@@toStringTag]` property
// https://tc39.github.io/ecma262/#sec-symbol.prototype-@@tostringtag
setToStringTag($Symbol,SYMBOL);

hiddenKeys[HIDDEN]=true;

},{"../internals/an-object":107,"../internals/array-iteration":116,"../internals/create-non-enumerable-property":131,"../internals/create-property-descriptor":132,"../internals/define-well-known-symbol":135,"../internals/descriptors":136,"../internals/export":144,"../internals/fails":145,"../internals/get-built-in":148,"../internals/global":150,"../internals/has":151,"../internals/hidden-keys":152,"../internals/internal-state":160,"../internals/is-array":162,"../internals/is-object":164,"../internals/is-pure":165,"../internals/native-symbol":173,"../internals/object-create":178,"../internals/object-define-property":180,"../internals/object-get-own-property-descriptor":181,"../internals/object-get-own-property-names":183,"../internals/object-get-own-property-names-external":182,"../internals/object-get-own-property-symbols":184,"../internals/object-keys":187,"../internals/object-property-is-enumerable":188,"../internals/redefine":197,"../internals/set-to-string-tag":206,"../internals/shared":209,"../internals/shared-key":207,"../internals/to-indexed-object":217,"../internals/to-object":220,"../internals/to-primitive":223,"../internals/uid":228,"../internals/use-symbol-as-uid":229,"../internals/well-known-symbol":231,"../internals/well-known-symbol-wrapped":230}],267:[function(require,module,exports){
'use strict';
var ArrayBufferViewCore=require('../internals/array-buffer-view-core');
var $copyWithin=require('../internals/array-copy-within');

var aTypedArray=ArrayBufferViewCore.aTypedArray;
var exportTypedArrayMethod=ArrayBufferViewCore.exportTypedArrayMethod;

// `%TypedArray%.prototype.copyWithin` method
// https://tc39.github.io/ecma262/#sec-%typedarray%.prototype.copywithin
exportTypedArrayMethod('copyWithin',function copyWithin(target,start/* , end */){
return $copyWithin.call(aTypedArray(this),target,start,arguments.length>2?arguments[2]:undefined);
});

},{"../internals/array-buffer-view-core":109,"../internals/array-copy-within":111}],268:[function(require,module,exports){
'use strict';
var ArrayBufferViewCore=require('../internals/array-buffer-view-core');
var $every=require('../internals/array-iteration').every;

var aTypedArray=ArrayBufferViewCore.aTypedArray;
var exportTypedArrayMethod=ArrayBufferViewCore.exportTypedArrayMethod;

// `%TypedArray%.prototype.every` method
// https://tc39.github.io/ecma262/#sec-%typedarray%.prototype.every
exportTypedArrayMethod('every',function every(callbackfn/* , thisArg */){
return $every(aTypedArray(this),callbackfn,arguments.length>1?arguments[1]:undefined);
});

},{"../internals/array-buffer-view-core":109,"../internals/array-iteration":116}],269:[function(require,module,exports){
'use strict';
var ArrayBufferViewCore=require('../internals/array-buffer-view-core');
var $fill=require('../internals/array-fill');

var aTypedArray=ArrayBufferViewCore.aTypedArray;
var exportTypedArrayMethod=ArrayBufferViewCore.exportTypedArrayMethod;

// `%TypedArray%.prototype.fill` method
// https://tc39.github.io/ecma262/#sec-%typedarray%.prototype.fill
// eslint-disable-next-line no-unused-vars
exportTypedArrayMethod('fill',function fill(value/* , start, end */){
return $fill.apply(aTypedArray(this),arguments);
});

},{"../internals/array-buffer-view-core":109,"../internals/array-fill":112}],270:[function(require,module,exports){
'use strict';
var ArrayBufferViewCore=require('../internals/array-buffer-view-core');
var $filter=require('../internals/array-iteration').filter;
var speciesConstructor=require('../internals/species-constructor');

var aTypedArray=ArrayBufferViewCore.aTypedArray;
var aTypedArrayConstructor=ArrayBufferViewCore.aTypedArrayConstructor;
var exportTypedArrayMethod=ArrayBufferViewCore.exportTypedArrayMethod;

// `%TypedArray%.prototype.filter` method
// https://tc39.github.io/ecma262/#sec-%typedarray%.prototype.filter
exportTypedArrayMethod('filter',function filter(callbackfn/* , thisArg */){
var list=$filter(aTypedArray(this),callbackfn,arguments.length>1?arguments[1]:undefined);
var C=speciesConstructor(this,this.constructor);
var index=0;
var length=list.length;
var result=new(aTypedArrayConstructor(C))(length);
while(length>index){result[index]=list[index++];}
return result;
});

},{"../internals/array-buffer-view-core":109,"../internals/array-iteration":116,"../internals/species-constructor":210}],271:[function(require,module,exports){
'use strict';
var ArrayBufferViewCore=require('../internals/array-buffer-view-core');
var $findIndex=require('../internals/array-iteration').findIndex;

var aTypedArray=ArrayBufferViewCore.aTypedArray;
var exportTypedArrayMethod=ArrayBufferViewCore.exportTypedArrayMethod;

// `%TypedArray%.prototype.findIndex` method
// https://tc39.github.io/ecma262/#sec-%typedarray%.prototype.findindex
exportTypedArrayMethod('findIndex',function findIndex(predicate/* , thisArg */){
return $findIndex(aTypedArray(this),predicate,arguments.length>1?arguments[1]:undefined);
});

},{"../internals/array-buffer-view-core":109,"../internals/array-iteration":116}],272:[function(require,module,exports){
'use strict';
var ArrayBufferViewCore=require('../internals/array-buffer-view-core');
var $find=require('../internals/array-iteration').find;

var aTypedArray=ArrayBufferViewCore.aTypedArray;
var exportTypedArrayMethod=ArrayBufferViewCore.exportTypedArrayMethod;

// `%TypedArray%.prototype.find` method
// https://tc39.github.io/ecma262/#sec-%typedarray%.prototype.find
exportTypedArrayMethod('find',function find(predicate/* , thisArg */){
return $find(aTypedArray(this),predicate,arguments.length>1?arguments[1]:undefined);
});

},{"../internals/array-buffer-view-core":109,"../internals/array-iteration":116}],273:[function(require,module,exports){
'use strict';
var ArrayBufferViewCore=require('../internals/array-buffer-view-core');
var $forEach=require('../internals/array-iteration').forEach;

var aTypedArray=ArrayBufferViewCore.aTypedArray;
var exportTypedArrayMethod=ArrayBufferViewCore.exportTypedArrayMethod;

// `%TypedArray%.prototype.forEach` method
// https://tc39.github.io/ecma262/#sec-%typedarray%.prototype.foreach
exportTypedArrayMethod('forEach',function forEach(callbackfn/* , thisArg */){
$forEach(aTypedArray(this),callbackfn,arguments.length>1?arguments[1]:undefined);
});

},{"../internals/array-buffer-view-core":109,"../internals/array-iteration":116}],274:[function(require,module,exports){
'use strict';
var ArrayBufferViewCore=require('../internals/array-buffer-view-core');
var $includes=require('../internals/array-includes').includes;

var aTypedArray=ArrayBufferViewCore.aTypedArray;
var exportTypedArrayMethod=ArrayBufferViewCore.exportTypedArrayMethod;

// `%TypedArray%.prototype.includes` method
// https://tc39.github.io/ecma262/#sec-%typedarray%.prototype.includes
exportTypedArrayMethod('includes',function includes(searchElement/* , fromIndex */){
return $includes(aTypedArray(this),searchElement,arguments.length>1?arguments[1]:undefined);
});

},{"../internals/array-buffer-view-core":109,"../internals/array-includes":115}],275:[function(require,module,exports){
'use strict';
var ArrayBufferViewCore=require('../internals/array-buffer-view-core');
var $indexOf=require('../internals/array-includes').indexOf;

var aTypedArray=ArrayBufferViewCore.aTypedArray;
var exportTypedArrayMethod=ArrayBufferViewCore.exportTypedArrayMethod;

// `%TypedArray%.prototype.indexOf` method
// https://tc39.github.io/ecma262/#sec-%typedarray%.prototype.indexof
exportTypedArrayMethod('indexOf',function indexOf(searchElement/* , fromIndex */){
return $indexOf(aTypedArray(this),searchElement,arguments.length>1?arguments[1]:undefined);
});

},{"../internals/array-buffer-view-core":109,"../internals/array-includes":115}],276:[function(require,module,exports){
'use strict';
var global=require('../internals/global');
var ArrayBufferViewCore=require('../internals/array-buffer-view-core');
var ArrayIterators=require('../modules/es.array.iterator');
var wellKnownSymbol=require('../internals/well-known-symbol');

var ITERATOR=wellKnownSymbol('iterator');
var Uint8Array=global.Uint8Array;
var arrayValues=ArrayIterators.values;
var arrayKeys=ArrayIterators.keys;
var arrayEntries=ArrayIterators.entries;
var aTypedArray=ArrayBufferViewCore.aTypedArray;
var exportTypedArrayMethod=ArrayBufferViewCore.exportTypedArrayMethod;
var nativeTypedArrayIterator=Uint8Array&&Uint8Array.prototype[ITERATOR];

var CORRECT_ITER_NAME=!!nativeTypedArrayIterator&&(
nativeTypedArrayIterator.name=='values'||nativeTypedArrayIterator.name==undefined);

var typedArrayValues=function values(){
return arrayValues.call(aTypedArray(this));
};

// `%TypedArray%.prototype.entries` method
// https://tc39.github.io/ecma262/#sec-%typedarray%.prototype.entries
exportTypedArrayMethod('entries',function entries(){
return arrayEntries.call(aTypedArray(this));
});
// `%TypedArray%.prototype.keys` method
// https://tc39.github.io/ecma262/#sec-%typedarray%.prototype.keys
exportTypedArrayMethod('keys',function keys(){
return arrayKeys.call(aTypedArray(this));
});
// `%TypedArray%.prototype.values` method
// https://tc39.github.io/ecma262/#sec-%typedarray%.prototype.values
exportTypedArrayMethod('values',typedArrayValues,!CORRECT_ITER_NAME);
// `%TypedArray%.prototype[@@iterator]` method
// https://tc39.github.io/ecma262/#sec-%typedarray%.prototype-@@iterator
exportTypedArrayMethod(ITERATOR,typedArrayValues,!CORRECT_ITER_NAME);

},{"../internals/array-buffer-view-core":109,"../internals/global":150,"../internals/well-known-symbol":231,"../modules/es.array.iterator":242}],277:[function(require,module,exports){
'use strict';
var ArrayBufferViewCore=require('../internals/array-buffer-view-core');

var aTypedArray=ArrayBufferViewCore.aTypedArray;
var exportTypedArrayMethod=ArrayBufferViewCore.exportTypedArrayMethod;
var $join=[].join;

// `%TypedArray%.prototype.join` method
// https://tc39.github.io/ecma262/#sec-%typedarray%.prototype.join
// eslint-disable-next-line no-unused-vars
exportTypedArrayMethod('join',function join(separator){
return $join.apply(aTypedArray(this),arguments);
});

},{"../internals/array-buffer-view-core":109}],278:[function(require,module,exports){
'use strict';
var ArrayBufferViewCore=require('../internals/array-buffer-view-core');
var $lastIndexOf=require('../internals/array-last-index-of');

var aTypedArray=ArrayBufferViewCore.aTypedArray;
var exportTypedArrayMethod=ArrayBufferViewCore.exportTypedArrayMethod;

// `%TypedArray%.prototype.lastIndexOf` method
// https://tc39.github.io/ecma262/#sec-%typedarray%.prototype.lastindexof
// eslint-disable-next-line no-unused-vars
exportTypedArrayMethod('lastIndexOf',function lastIndexOf(searchElement/* , fromIndex */){
return $lastIndexOf.apply(aTypedArray(this),arguments);
});

},{"../internals/array-buffer-view-core":109,"../internals/array-last-index-of":117}],279:[function(require,module,exports){
'use strict';
var ArrayBufferViewCore=require('../internals/array-buffer-view-core');
var $map=require('../internals/array-iteration').map;
var speciesConstructor=require('../internals/species-constructor');

var aTypedArray=ArrayBufferViewCore.aTypedArray;
var aTypedArrayConstructor=ArrayBufferViewCore.aTypedArrayConstructor;
var exportTypedArrayMethod=ArrayBufferViewCore.exportTypedArrayMethod;

// `%TypedArray%.prototype.map` method
// https://tc39.github.io/ecma262/#sec-%typedarray%.prototype.map
exportTypedArrayMethod('map',function map(mapfn/* , thisArg */){
return $map(aTypedArray(this),mapfn,arguments.length>1?arguments[1]:undefined,function(O,length){
return new(aTypedArrayConstructor(speciesConstructor(O,O.constructor)))(length);
});
});

},{"../internals/array-buffer-view-core":109,"../internals/array-iteration":116,"../internals/species-constructor":210}],280:[function(require,module,exports){
'use strict';
var ArrayBufferViewCore=require('../internals/array-buffer-view-core');
var $reduceRight=require('../internals/array-reduce').right;

var aTypedArray=ArrayBufferViewCore.aTypedArray;
var exportTypedArrayMethod=ArrayBufferViewCore.exportTypedArrayMethod;

// `%TypedArray%.prototype.reduceRicht` method
// https://tc39.github.io/ecma262/#sec-%typedarray%.prototype.reduceright
exportTypedArrayMethod('reduceRight',function reduceRight(callbackfn/* , initialValue */){
return $reduceRight(aTypedArray(this),callbackfn,arguments.length,arguments.length>1?arguments[1]:undefined);
});

},{"../internals/array-buffer-view-core":109,"../internals/array-reduce":121}],281:[function(require,module,exports){
'use strict';
var ArrayBufferViewCore=require('../internals/array-buffer-view-core');
var $reduce=require('../internals/array-reduce').left;

var aTypedArray=ArrayBufferViewCore.aTypedArray;
var exportTypedArrayMethod=ArrayBufferViewCore.exportTypedArrayMethod;

// `%TypedArray%.prototype.reduce` method
// https://tc39.github.io/ecma262/#sec-%typedarray%.prototype.reduce
exportTypedArrayMethod('reduce',function reduce(callbackfn/* , initialValue */){
return $reduce(aTypedArray(this),callbackfn,arguments.length,arguments.length>1?arguments[1]:undefined);
});

},{"../internals/array-buffer-view-core":109,"../internals/array-reduce":121}],282:[function(require,module,exports){
'use strict';
var ArrayBufferViewCore=require('../internals/array-buffer-view-core');

var aTypedArray=ArrayBufferViewCore.aTypedArray;
var exportTypedArrayMethod=ArrayBufferViewCore.exportTypedArrayMethod;
var floor=Math.floor;

// `%TypedArray%.prototype.reverse` method
// https://tc39.github.io/ecma262/#sec-%typedarray%.prototype.reverse
exportTypedArrayMethod('reverse',function reverse(){
var that=this;
var length=aTypedArray(that).length;
var middle=floor(length/2);
var index=0;
var value;
while(index<middle){
value=that[index];
that[index++]=that[--length];
that[length]=value;
}return that;
});

},{"../internals/array-buffer-view-core":109}],283:[function(require,module,exports){
'use strict';
var ArrayBufferViewCore=require('../internals/array-buffer-view-core');
var toLength=require('../internals/to-length');
var toOffset=require('../internals/to-offset');
var toObject=require('../internals/to-object');
var fails=require('../internals/fails');

var aTypedArray=ArrayBufferViewCore.aTypedArray;
var exportTypedArrayMethod=ArrayBufferViewCore.exportTypedArrayMethod;

var FORCED=fails(function(){
// eslint-disable-next-line no-undef
new Int8Array(1).set({});
});

// `%TypedArray%.prototype.set` method
// https://tc39.github.io/ecma262/#sec-%typedarray%.prototype.set
exportTypedArrayMethod('set',function set(arrayLike/* , offset */){
aTypedArray(this);
var offset=toOffset(arguments.length>1?arguments[1]:undefined,1);
var length=this.length;
var src=toObject(arrayLike);
var len=toLength(src.length);
var index=0;
if(len+offset>length)throw RangeError('Wrong length');
while(index<len){this[offset+index]=src[index++];}
},FORCED);

},{"../internals/array-buffer-view-core":109,"../internals/fails":145,"../internals/to-length":219,"../internals/to-object":220,"../internals/to-offset":221}],284:[function(require,module,exports){
'use strict';
var ArrayBufferViewCore=require('../internals/array-buffer-view-core');
var speciesConstructor=require('../internals/species-constructor');
var fails=require('../internals/fails');

var aTypedArray=ArrayBufferViewCore.aTypedArray;
var aTypedArrayConstructor=ArrayBufferViewCore.aTypedArrayConstructor;
var exportTypedArrayMethod=ArrayBufferViewCore.exportTypedArrayMethod;
var $slice=[].slice;

var FORCED=fails(function(){
// eslint-disable-next-line no-undef
new Int8Array(1).slice();
});

// `%TypedArray%.prototype.slice` method
// https://tc39.github.io/ecma262/#sec-%typedarray%.prototype.slice
exportTypedArrayMethod('slice',function slice(start,end){
var list=$slice.call(aTypedArray(this),start,end);
var C=speciesConstructor(this,this.constructor);
var index=0;
var length=list.length;
var result=new(aTypedArrayConstructor(C))(length);
while(length>index){result[index]=list[index++];}
return result;
},FORCED);

},{"../internals/array-buffer-view-core":109,"../internals/fails":145,"../internals/species-constructor":210}],285:[function(require,module,exports){
'use strict';
var ArrayBufferViewCore=require('../internals/array-buffer-view-core');
var $some=require('../internals/array-iteration').some;

var aTypedArray=ArrayBufferViewCore.aTypedArray;
var exportTypedArrayMethod=ArrayBufferViewCore.exportTypedArrayMethod;

// `%TypedArray%.prototype.some` method
// https://tc39.github.io/ecma262/#sec-%typedarray%.prototype.some
exportTypedArrayMethod('some',function some(callbackfn/* , thisArg */){
return $some(aTypedArray(this),callbackfn,arguments.length>1?arguments[1]:undefined);
});

},{"../internals/array-buffer-view-core":109,"../internals/array-iteration":116}],286:[function(require,module,exports){
'use strict';
var ArrayBufferViewCore=require('../internals/array-buffer-view-core');

var aTypedArray=ArrayBufferViewCore.aTypedArray;
var exportTypedArrayMethod=ArrayBufferViewCore.exportTypedArrayMethod;
var $sort=[].sort;

// `%TypedArray%.prototype.sort` method
// https://tc39.github.io/ecma262/#sec-%typedarray%.prototype.sort
exportTypedArrayMethod('sort',function sort(comparefn){
return $sort.call(aTypedArray(this),comparefn);
});

},{"../internals/array-buffer-view-core":109}],287:[function(require,module,exports){
'use strict';
var ArrayBufferViewCore=require('../internals/array-buffer-view-core');
var toLength=require('../internals/to-length');
var toAbsoluteIndex=require('../internals/to-absolute-index');
var speciesConstructor=require('../internals/species-constructor');

var aTypedArray=ArrayBufferViewCore.aTypedArray;
var exportTypedArrayMethod=ArrayBufferViewCore.exportTypedArrayMethod;

// `%TypedArray%.prototype.subarray` method
// https://tc39.github.io/ecma262/#sec-%typedarray%.prototype.subarray
exportTypedArrayMethod('subarray',function subarray(begin,end){
var O=aTypedArray(this);
var length=O.length;
var beginIndex=toAbsoluteIndex(begin,length);
return new(speciesConstructor(O,O.constructor))(
O.buffer,
O.byteOffset+beginIndex*O.BYTES_PER_ELEMENT,
toLength((end===undefined?length:toAbsoluteIndex(end,length))-beginIndex));

});

},{"../internals/array-buffer-view-core":109,"../internals/species-constructor":210,"../internals/to-absolute-index":215,"../internals/to-length":219}],288:[function(require,module,exports){
'use strict';
var global=require('../internals/global');
var ArrayBufferViewCore=require('../internals/array-buffer-view-core');
var fails=require('../internals/fails');

var Int8Array=global.Int8Array;
var aTypedArray=ArrayBufferViewCore.aTypedArray;
var exportTypedArrayMethod=ArrayBufferViewCore.exportTypedArrayMethod;
var $toLocaleString=[].toLocaleString;
var $slice=[].slice;

// iOS Safari 6.x fails here
var TO_LOCALE_STRING_BUG=!!Int8Array&&fails(function(){
$toLocaleString.call(new Int8Array(1));
});

var FORCED=fails(function(){
return[1,2].toLocaleString()!=new Int8Array([1,2]).toLocaleString();
})||!fails(function(){
Int8Array.prototype.toLocaleString.call([1,2]);
});

// `%TypedArray%.prototype.toLocaleString` method
// https://tc39.github.io/ecma262/#sec-%typedarray%.prototype.tolocalestring
exportTypedArrayMethod('toLocaleString',function toLocaleString(){
return $toLocaleString.apply(TO_LOCALE_STRING_BUG?$slice.call(aTypedArray(this)):aTypedArray(this),arguments);
},FORCED);

},{"../internals/array-buffer-view-core":109,"../internals/fails":145,"../internals/global":150}],289:[function(require,module,exports){
'use strict';
var exportTypedArrayMethod=require('../internals/array-buffer-view-core').exportTypedArrayMethod;
var fails=require('../internals/fails');
var global=require('../internals/global');

var Uint8Array=global.Uint8Array;
var Uint8ArrayPrototype=Uint8Array&&Uint8Array.prototype||{};
var arrayToString=[].toString;
var arrayJoin=[].join;

if(fails(function(){arrayToString.call({});})){
arrayToString=function toString(){
return arrayJoin.call(this);
};
}

var IS_NOT_ARRAY_METHOD=Uint8ArrayPrototype.toString!=arrayToString;

// `%TypedArray%.prototype.toString` method
// https://tc39.github.io/ecma262/#sec-%typedarray%.prototype.tostring
exportTypedArrayMethod('toString',arrayToString,IS_NOT_ARRAY_METHOD);

},{"../internals/array-buffer-view-core":109,"../internals/fails":145,"../internals/global":150}],290:[function(require,module,exports){
var createTypedArrayConstructor=require('../internals/typed-array-constructor');

// `Uint8Array` constructor
// https://tc39.github.io/ecma262/#sec-typedarray-objects
createTypedArrayConstructor('Uint8',function(init){
return function Uint8Array(data,byteOffset,length){
return init(this,data,byteOffset,length);
};
});

},{"../internals/typed-array-constructor":225}],291:[function(require,module,exports){
var global=require('../internals/global');
var DOMIterables=require('../internals/dom-iterables');
var forEach=require('../internals/array-for-each');
var createNonEnumerableProperty=require('../internals/create-non-enumerable-property');

for(var COLLECTION_NAME in DOMIterables){
var Collection=global[COLLECTION_NAME];
var CollectionPrototype=Collection&&Collection.prototype;
// some Chrome versions have non-configurable methods on DOMTokenList
if(CollectionPrototype&&CollectionPrototype.forEach!==forEach)try{
createNonEnumerableProperty(CollectionPrototype,'forEach',forEach);
}catch(error){
CollectionPrototype.forEach=forEach;
}
}

},{"../internals/array-for-each":113,"../internals/create-non-enumerable-property":131,"../internals/dom-iterables":138,"../internals/global":150}],292:[function(require,module,exports){
var global=require('../internals/global');
var DOMIterables=require('../internals/dom-iterables');
var ArrayIteratorMethods=require('../modules/es.array.iterator');
var createNonEnumerableProperty=require('../internals/create-non-enumerable-property');
var wellKnownSymbol=require('../internals/well-known-symbol');

var ITERATOR=wellKnownSymbol('iterator');
var TO_STRING_TAG=wellKnownSymbol('toStringTag');
var ArrayValues=ArrayIteratorMethods.values;

for(var COLLECTION_NAME in DOMIterables){
var Collection=global[COLLECTION_NAME];
var CollectionPrototype=Collection&&Collection.prototype;
if(CollectionPrototype){
// some Chrome versions have non-configurable methods on DOMTokenList
if(CollectionPrototype[ITERATOR]!==ArrayValues)try{
createNonEnumerableProperty(CollectionPrototype,ITERATOR,ArrayValues);
}catch(error){
CollectionPrototype[ITERATOR]=ArrayValues;
}
if(!CollectionPrototype[TO_STRING_TAG]){
createNonEnumerableProperty(CollectionPrototype,TO_STRING_TAG,COLLECTION_NAME);
}
if(DOMIterables[COLLECTION_NAME])for(var METHOD_NAME in ArrayIteratorMethods){
// some Chrome versions have non-configurable methods on DOMTokenList
if(CollectionPrototype[METHOD_NAME]!==ArrayIteratorMethods[METHOD_NAME])try{
createNonEnumerableProperty(CollectionPrototype,METHOD_NAME,ArrayIteratorMethods[METHOD_NAME]);
}catch(error){
CollectionPrototype[METHOD_NAME]=ArrayIteratorMethods[METHOD_NAME];
}
}
}
}

},{"../internals/create-non-enumerable-property":131,"../internals/dom-iterables":138,"../internals/global":150,"../internals/well-known-symbol":231,"../modules/es.array.iterator":242}],293:[function(require,module,exports){
(function(Buffer){
// Copyright Joyent, Inc. and other Node contributors.
//
// Permission is hereby granted, free of charge, to any person obtaining a
// copy of this software and associated documentation files (the
// "Software"), to deal in the Software without restriction, including
// without limitation the rights to use, copy, modify, merge, publish,
// distribute, sublicense, and/or sell copies of the Software, and to permit
// persons to whom the Software is furnished to do so, subject to the
// following conditions:
//
// The above copyright notice and this permission notice shall be included
// in all copies or substantial portions of the Software.
//
// THE SOFTWARE IS PROVIDED "AS IS", WITHOUT WARRANTY OF ANY KIND, EXPRESS
// OR IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF
// MERCHANTABILITY, FITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN
// NO EVENT SHALL THE AUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM,
// DAMAGES OR OTHER LIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR
// OTHERWISE, ARISING FROM, OUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE
// USE OR OTHER DEALINGS IN THE SOFTWARE.

// NOTE: These type checking functions intentionally don't use `instanceof`
// because it is fragile and can be easily faked with `Object.create()`.

function isArray(arg){
if(Array.isArray){
return Array.isArray(arg);
}
return objectToString(arg)==='[object Array]';
}
exports.isArray=isArray;

function isBoolean(arg){
return typeof arg==='boolean';
}
exports.isBoolean=isBoolean;

function isNull(arg){
return arg===null;
}
exports.isNull=isNull;

function isNullOrUndefined(arg){
return arg==null;
}
exports.isNullOrUndefined=isNullOrUndefined;

function isNumber(arg){
return typeof arg==='number';
}
exports.isNumber=isNumber;

function isString(arg){
return typeof arg==='string';
}
exports.isString=isString;

function isSymbol(arg){
return typeof arg==='symbol';
}
exports.isSymbol=isSymbol;

function isUndefined(arg){
return arg===void 0;
}
exports.isUndefined=isUndefined;

function isRegExp(re){
return objectToString(re)==='[object RegExp]';
}
exports.isRegExp=isRegExp;

function isObject(arg){
return typeof arg==='object'&&arg!==null;
}
exports.isObject=isObject;

function isDate(d){
return objectToString(d)==='[object Date]';
}
exports.isDate=isDate;

function isError(e){
return objectToString(e)==='[object Error]'||e instanceof Error;
}
exports.isError=isError;

function isFunction(arg){
return typeof arg==='function';
}
exports.isFunction=isFunction;

function isPrimitive(arg){
return arg===null||
typeof arg==='boolean'||
typeof arg==='number'||
typeof arg==='string'||
typeof arg==='symbol'||// ES6 symbol
typeof arg==='undefined';
}
exports.isPrimitive=isPrimitive;

exports.isBuffer=Buffer.isBuffer;

function objectToString(o){
return Object.prototype.toString.call(o);
}

}).call(this,{"isBuffer":require("../../is-buffer/index.js")});
},{"../../is-buffer/index.js":307}],294:[function(require,module,exports){
/*
 * Date Format 1.2.3
 * (c) 2007-2009 Steven Levithan <stevenlevithan.com>
 * MIT license
 *
 * Includes enhancements by Scott Trenda <scott.trenda.net>
 * and Kris Kowal <cixar.com/~kris.kowal/>
 *
 * Accepts a date, a mask, or a date and a mask.
 * Returns a formatted version of the given date.
 * The date defaults to the current date/time.
 * The mask defaults to dateFormat.masks.default.
 */

(function(global){
'use strict';

var dateFormat=function(){
var token=/d{1,4}|m{1,4}|yy(?:yy)?|([HhMsTt])\1?|[LloSZWN]|'[^']*'|'[^']*'/g;
var timezone=/\b(?:[PMCEA][SDP]T|(?:Pacific|Mountain|Central|Eastern|Atlantic) (?:Standard|Daylight|Prevailing) Time|(?:GMT|UTC)(?:[-+]\d{4})?)\b/g;
var timezoneClip=/[^-+\dA-Z]/g;

// Regexes and supporting functions are cached through closure
return function(date,mask,utc,gmt){

// You can't provide utc if you skip other args (use the 'UTC:' mask prefix)
if(arguments.length===1&&kindOf(date)==='string'&&!/\d/.test(date)){
mask=date;
date=undefined;
}

date=date||new Date();

if(!(date instanceof Date)){
date=new Date(date);
}

if(isNaN(date)){
throw TypeError('Invalid date');
}

mask=String(dateFormat.masks[mask]||mask||dateFormat.masks['default']);

// Allow setting the utc/gmt argument via the mask
var maskSlice=mask.slice(0,4);
if(maskSlice==='UTC:'||maskSlice==='GMT:'){
mask=mask.slice(4);
utc=true;
if(maskSlice==='GMT:'){
gmt=true;
}
}

var _=utc?'getUTC':'get';
var d=date[_+'Date']();
var D=date[_+'Day']();
var m=date[_+'Month']();
var y=date[_+'FullYear']();
var H=date[_+'Hours']();
var M=date[_+'Minutes']();
var s=date[_+'Seconds']();
var L=date[_+'Milliseconds']();
var o=utc?0:date.getTimezoneOffset();
var W=getWeek(date);
var N=getDayOfWeek(date);
var flags={
d:d,
dd:pad(d),
ddd:dateFormat.i18n.dayNames[D],
dddd:dateFormat.i18n.dayNames[D+7],
m:m+1,
mm:pad(m+1),
mmm:dateFormat.i18n.monthNames[m],
mmmm:dateFormat.i18n.monthNames[m+12],
yy:String(y).slice(2),
yyyy:y,
h:H%12||12,
hh:pad(H%12||12),
H:H,
HH:pad(H),
M:M,
MM:pad(M),
s:s,
ss:pad(s),
l:pad(L,3),
L:pad(Math.round(L/10)),
t:H<12?'a':'p',
tt:H<12?'am':'pm',
T:H<12?'A':'P',
TT:H<12?'AM':'PM',
Z:gmt?'GMT':utc?'UTC':(String(date).match(timezone)||['']).pop().replace(timezoneClip,''),
o:(o>0?'-':'+')+pad(Math.floor(Math.abs(o)/60)*100+Math.abs(o)%60,4),
S:['th','st','nd','rd'][d%10>3?0:(d%100-d%10!=10)*d%10],
W:W,
N:N};


return mask.replace(token,function(match){
if(match in flags){
return flags[match];
}
return match.slice(1,match.length-1);
});
};
}();

dateFormat.masks={
'default':'ddd mmm dd yyyy HH:MM:ss',
'shortDate':'m/d/yy',
'mediumDate':'mmm d, yyyy',
'longDate':'mmmm d, yyyy',
'fullDate':'dddd, mmmm d, yyyy',
'shortTime':'h:MM TT',
'mediumTime':'h:MM:ss TT',
'longTime':'h:MM:ss TT Z',
'isoDate':'yyyy-mm-dd',
'isoTime':'HH:MM:ss',
'isoDateTime':'yyyy-mm-dd\'T\'HH:MM:sso',
'isoUtcDateTime':'UTC:yyyy-mm-dd\'T\'HH:MM:ss\'Z\'',
'expiresHeaderFormat':'ddd, dd mmm yyyy HH:MM:ss Z'};


// Internationalization strings
dateFormat.i18n={
dayNames:[
'Sun','Mon','Tue','Wed','Thu','Fri','Sat',
'Sunday','Monday','Tuesday','Wednesday','Thursday','Friday','Saturday'],

monthNames:[
'Jan','Feb','Mar','Apr','May','Jun','Jul','Aug','Sep','Oct','Nov','Dec',
'January','February','March','April','May','June','July','August','September','October','November','December']};



function pad(val,len){
val=String(val);
len=len||2;
while(val.length<len){
val='0'+val;
}
return val;
}

/**
 * Get the ISO 8601 week number
 * Based on comments from
 * http://techblog.procurios.nl/k/n618/news/view/33796/14863/Calculate-ISO-8601-week-and-year-in-javascript.html
 *
 * @param  {Object} `date`
 * @return {Number}
 */
function getWeek(date){
// Remove time components of date
var targetThursday=new Date(date.getFullYear(),date.getMonth(),date.getDate());

// Change date to Thursday same week
targetThursday.setDate(targetThursday.getDate()-(targetThursday.getDay()+6)%7+3);

// Take January 4th as it is always in week 1 (see ISO 8601)
var firstThursday=new Date(targetThursday.getFullYear(),0,4);

// Change date to Thursday same week
firstThursday.setDate(firstThursday.getDate()-(firstThursday.getDay()+6)%7+3);

// Check if daylight-saving-time-switch occurred and correct for it
var ds=targetThursday.getTimezoneOffset()-firstThursday.getTimezoneOffset();
targetThursday.setHours(targetThursday.getHours()-ds);

// Number of weeks between target Thursday and first Thursday
var weekDiff=(targetThursday-firstThursday)/(86400000*7);
return 1+Math.floor(weekDiff);
}

/**
 * Get ISO-8601 numeric representation of the day of the week
 * 1 (for Monday) through 7 (for Sunday)
 * 
 * @param  {Object} `date`
 * @return {Number}
 */
function getDayOfWeek(date){
var dow=date.getDay();
if(dow===0){
dow=7;
}
return dow;
}

/**
 * kind-of shortcut
 * @param  {*} val
 * @return {String}
 */
function kindOf(val){
if(val===null){
return'null';
}

if(val===undefined){
return'undefined';
}

if(typeof val!=='object'){
return typeof val;
}

if(Array.isArray(val)){
return'array';
}

return{}.toString.call(val).
slice(8,-1).toLowerCase();
};



if(typeof define==='function'&&define.amd){
define(function(){
return dateFormat;
});
}else if(typeof exports==='object'){
module.exports=dateFormat;
}else{
global.dateFormat=dateFormat;
}
})(this);

},{}],295:[function(require,module,exports){
/*!
 * escape-html
 * Copyright(c) 2012-2013 TJ Holowaychuk
 * Copyright(c) 2015 Andreas Lubbe
 * Copyright(c) 2015 Tiancheng "Timothy" Gu
 * MIT Licensed
 */

'use strict';

/**
 * Module variables.
 * @private
 */

var matchHtmlRegExp=/["'&<>]/;

/**
 * Module exports.
 * @public
 */

module.exports=escapeHtml;

/**
 * Escape special characters in the given string of html.
 *
 * @param  {string} string The string to escape for inserting into HTML
 * @return {string}
 * @public
 */

function escapeHtml(string){
var str=''+string;
var match=matchHtmlRegExp.exec(str);

if(!match){
return str;
}

var escape;
var html='';
var index=0;
var lastIndex=0;

for(index=match.index;index<str.length;index++){
switch(str.charCodeAt(index)){
case 34:// "
escape='&quot;';
break;
case 38:// &
escape='&amp;';
break;
case 39:// '
escape='&#39;';
break;
case 60:// <
escape='&lt;';
break;
case 62:// >
escape='&gt;';
break;
default:
continue;}


if(lastIndex!==index){
html+=str.substring(lastIndex,index);
}

lastIndex=index+1;
html+=escape;
}

return lastIndex!==index?
html+str.substring(lastIndex,index):
html;
}

},{}],296:[function(require,module,exports){
// Copyright Joyent, Inc. and other Node contributors.
//
// Permission is hereby granted, free of charge, to any person obtaining a
// copy of this software and associated documentation files (the
// "Software"), to deal in the Software without restriction, including
// without limitation the rights to use, copy, modify, merge, publish,
// distribute, sublicense, and/or sell copies of the Software, and to permit
// persons to whom the Software is furnished to do so, subject to the
// following conditions:
//
// The above copyright notice and this permission notice shall be included
// in all copies or substantial portions of the Software.
//
// THE SOFTWARE IS PROVIDED "AS IS", WITHOUT WARRANTY OF ANY KIND, EXPRESS
// OR IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF
// MERCHANTABILITY, FITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN
// NO EVENT SHALL THE AUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM,
// DAMAGES OR OTHER LIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR
// OTHERWISE, ARISING FROM, OUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE
// USE OR OTHER DEALINGS IN THE SOFTWARE.

var objectCreate=Object.create||objectCreatePolyfill;
var objectKeys=Object.keys||objectKeysPolyfill;
var bind=Function.prototype.bind||functionBindPolyfill;

function EventEmitter(){
if(!this._events||!Object.prototype.hasOwnProperty.call(this,'_events')){
this._events=objectCreate(null);
this._eventsCount=0;
}

this._maxListeners=this._maxListeners||undefined;
}
module.exports=EventEmitter;

// Backwards-compat with node 0.10.x
EventEmitter.EventEmitter=EventEmitter;

EventEmitter.prototype._events=undefined;
EventEmitter.prototype._maxListeners=undefined;

// By default EventEmitters will print a warning if more than 10 listeners are
// added to it. This is a useful default which helps finding memory leaks.
var defaultMaxListeners=10;

var hasDefineProperty;
try{
var o={};
if(Object.defineProperty)Object.defineProperty(o,'x',{value:0});
hasDefineProperty=o.x===0;
}catch(err){hasDefineProperty=false;}
if(hasDefineProperty){
Object.defineProperty(EventEmitter,'defaultMaxListeners',{
enumerable:true,
get:function get(){
return defaultMaxListeners;
},
set:function set(arg){
// check whether the input is a positive number (whose value is zero or
// greater and not a NaN).
if(typeof arg!=='number'||arg<0||arg!==arg)
throw new TypeError('"defaultMaxListeners" must be a positive number');
defaultMaxListeners=arg;
}});

}else{
EventEmitter.defaultMaxListeners=defaultMaxListeners;
}

// Obviously not all Emitters should be limited to 10. This function allows
// that to be increased. Set to zero for unlimited.
EventEmitter.prototype.setMaxListeners=function setMaxListeners(n){
if(typeof n!=='number'||n<0||isNaN(n))
throw new TypeError('"n" argument must be a positive number');
this._maxListeners=n;
return this;
};

function $getMaxListeners(that){
if(that._maxListeners===undefined)
return EventEmitter.defaultMaxListeners;
return that._maxListeners;
}

EventEmitter.prototype.getMaxListeners=function getMaxListeners(){
return $getMaxListeners(this);
};

// These standalone emit* functions are used to optimize calling of event
// handlers for fast cases because emit() itself often has a variable number of
// arguments and can be deoptimized because of that. These functions always have
// the same number of arguments and thus do not get deoptimized, so the code
// inside them can execute faster.
function emitNone(handler,isFn,self){
if(isFn)
handler.call(self);else
{
var len=handler.length;
var listeners=arrayClone(handler,len);
for(var i=0;i<len;++i){
listeners[i].call(self);}
}
}
function emitOne(handler,isFn,self,arg1){
if(isFn)
handler.call(self,arg1);else
{
var len=handler.length;
var listeners=arrayClone(handler,len);
for(var i=0;i<len;++i){
listeners[i].call(self,arg1);}
}
}
function emitTwo(handler,isFn,self,arg1,arg2){
if(isFn)
handler.call(self,arg1,arg2);else
{
var len=handler.length;
var listeners=arrayClone(handler,len);
for(var i=0;i<len;++i){
listeners[i].call(self,arg1,arg2);}
}
}
function emitThree(handler,isFn,self,arg1,arg2,arg3){
if(isFn)
handler.call(self,arg1,arg2,arg3);else
{
var len=handler.length;
var listeners=arrayClone(handler,len);
for(var i=0;i<len;++i){
listeners[i].call(self,arg1,arg2,arg3);}
}
}

function emitMany(handler,isFn,self,args){
if(isFn)
handler.apply(self,args);else
{
var len=handler.length;
var listeners=arrayClone(handler,len);
for(var i=0;i<len;++i){
listeners[i].apply(self,args);}
}
}

EventEmitter.prototype.emit=function emit(type){
var er,handler,len,args,i,events;
var doError=type==='error';

events=this._events;
if(events)
doError=doError&&events.error==null;else
if(!doError)
return false;

// If there is no 'error' event listener then throw.
if(doError){
if(arguments.length>1)
er=arguments[1];
if(er instanceof Error){
throw er;// Unhandled 'error' event
}else{
// At least give some kind of context to the user
var err=new Error('Unhandled "error" event. ('+er+')');
err.context=er;
throw err;
}
return false;
}

handler=events[type];

if(!handler)
return false;

var isFn=typeof handler==='function';
len=arguments.length;
switch(len){
// fast cases
case 1:
emitNone(handler,isFn,this);
break;
case 2:
emitOne(handler,isFn,this,arguments[1]);
break;
case 3:
emitTwo(handler,isFn,this,arguments[1],arguments[2]);
break;
case 4:
emitThree(handler,isFn,this,arguments[1],arguments[2],arguments[3]);
break;
// slower
default:
args=new Array(len-1);
for(i=1;i<len;i++){
args[i-1]=arguments[i];}
emitMany(handler,isFn,this,args);}


return true;
};

function _addListener(target,type,listener,prepend){
var m;
var events;
var existing;

if(typeof listener!=='function')
throw new TypeError('"listener" argument must be a function');

events=target._events;
if(!events){
events=target._events=objectCreate(null);
target._eventsCount=0;
}else{
// To avoid recursion in the case that type === "newListener"! Before
// adding it to the listeners, first emit "newListener".
if(events.newListener){
target.emit('newListener',type,
listener.listener?listener.listener:listener);

// Re-assign `events` because a newListener handler could have caused the
// this._events to be assigned to a new object
events=target._events;
}
existing=events[type];
}

if(!existing){
// Optimize the case of one listener. Don't need the extra array object.
existing=events[type]=listener;
++target._eventsCount;
}else{
if(typeof existing==='function'){
// Adding the second element, need to change to array.
existing=events[type]=
prepend?[listener,existing]:[existing,listener];
}else{
// If we've already got an array, just append.
if(prepend){
existing.unshift(listener);
}else{
existing.push(listener);
}
}

// Check for listener leak
if(!existing.warned){
m=$getMaxListeners(target);
if(m&&m>0&&existing.length>m){
existing.warned=true;
var w=new Error('Possible EventEmitter memory leak detected. '+
existing.length+' "'+String(type)+'" listeners '+
'added. Use emitter.setMaxListeners() to '+
'increase limit.');
w.name='MaxListenersExceededWarning';
w.emitter=target;
w.type=type;
w.count=existing.length;
if(typeof console==='object'&&console.warn){
console.warn('%s: %s',w.name,w.message);
}
}
}
}

return target;
}

EventEmitter.prototype.addListener=function addListener(type,listener){
return _addListener(this,type,listener,false);
};

EventEmitter.prototype.on=EventEmitter.prototype.addListener;

EventEmitter.prototype.prependListener=
function prependListener(type,listener){
return _addListener(this,type,listener,true);
};

function onceWrapper(){
if(!this.fired){
this.target.removeListener(this.type,this.wrapFn);
this.fired=true;
switch(arguments.length){
case 0:
return this.listener.call(this.target);
case 1:
return this.listener.call(this.target,arguments[0]);
case 2:
return this.listener.call(this.target,arguments[0],arguments[1]);
case 3:
return this.listener.call(this.target,arguments[0],arguments[1],
arguments[2]);
default:
var args=new Array(arguments.length);
for(var i=0;i<args.length;++i){
args[i]=arguments[i];}
this.listener.apply(this.target,args);}

}
}

function _onceWrap(target,type,listener){
var state={fired:false,wrapFn:undefined,target:target,type:type,listener:listener};
var wrapped=bind.call(onceWrapper,state);
wrapped.listener=listener;
state.wrapFn=wrapped;
return wrapped;
}

EventEmitter.prototype.once=function once(type,listener){
if(typeof listener!=='function')
throw new TypeError('"listener" argument must be a function');
this.on(type,_onceWrap(this,type,listener));
return this;
};

EventEmitter.prototype.prependOnceListener=
function prependOnceListener(type,listener){
if(typeof listener!=='function')
throw new TypeError('"listener" argument must be a function');
this.prependListener(type,_onceWrap(this,type,listener));
return this;
};

// Emits a 'removeListener' event if and only if the listener was removed.
EventEmitter.prototype.removeListener=
function removeListener(type,listener){
var list,events,position,i,originalListener;

if(typeof listener!=='function')
throw new TypeError('"listener" argument must be a function');

events=this._events;
if(!events)
return this;

list=events[type];
if(!list)
return this;

if(list===listener||list.listener===listener){
if(--this._eventsCount===0)
this._events=objectCreate(null);else
{
delete events[type];
if(events.removeListener)
this.emit('removeListener',type,list.listener||listener);
}
}else if(typeof list!=='function'){
position=-1;

for(i=list.length-1;i>=0;i--){
if(list[i]===listener||list[i].listener===listener){
originalListener=list[i].listener;
position=i;
break;
}
}

if(position<0)
return this;

if(position===0)
list.shift();else

spliceOne(list,position);

if(list.length===1)
events[type]=list[0];

if(events.removeListener)
this.emit('removeListener',type,originalListener||listener);
}

return this;
};

EventEmitter.prototype.removeAllListeners=
function removeAllListeners(type){
var listeners,events,i;

events=this._events;
if(!events)
return this;

// not listening for removeListener, no need to emit
if(!events.removeListener){
if(arguments.length===0){
this._events=objectCreate(null);
this._eventsCount=0;
}else if(events[type]){
if(--this._eventsCount===0)
this._events=objectCreate(null);else

delete events[type];
}
return this;
}

// emit removeListener for all listeners on all events
if(arguments.length===0){
var keys=objectKeys(events);
var key;
for(i=0;i<keys.length;++i){
key=keys[i];
if(key==='removeListener')continue;
this.removeAllListeners(key);
}
this.removeAllListeners('removeListener');
this._events=objectCreate(null);
this._eventsCount=0;
return this;
}

listeners=events[type];

if(typeof listeners==='function'){
this.removeListener(type,listeners);
}else if(listeners){
// LIFO order
for(i=listeners.length-1;i>=0;i--){
this.removeListener(type,listeners[i]);
}
}

return this;
};

function _listeners(target,type,unwrap){
var events=target._events;

if(!events)
return[];

var evlistener=events[type];
if(!evlistener)
return[];

if(typeof evlistener==='function')
return unwrap?[evlistener.listener||evlistener]:[evlistener];

return unwrap?unwrapListeners(evlistener):arrayClone(evlistener,evlistener.length);
}

EventEmitter.prototype.listeners=function listeners(type){
return _listeners(this,type,true);
};

EventEmitter.prototype.rawListeners=function rawListeners(type){
return _listeners(this,type,false);
};

EventEmitter.listenerCount=function(emitter,type){
if(typeof emitter.listenerCount==='function'){
return emitter.listenerCount(type);
}else{
return listenerCount.call(emitter,type);
}
};

EventEmitter.prototype.listenerCount=listenerCount;
function listenerCount(type){
var events=this._events;

if(events){
var evlistener=events[type];

if(typeof evlistener==='function'){
return 1;
}else if(evlistener){
return evlistener.length;
}
}

return 0;
}

EventEmitter.prototype.eventNames=function eventNames(){
return this._eventsCount>0?Reflect.ownKeys(this._events):[];
};

// About 1.5x faster than the two-arg version of Array#splice().
function spliceOne(list,index){
for(var i=index,k=i+1,n=list.length;k<n;i+=1,k+=1){
list[i]=list[k];}
list.pop();
}

function arrayClone(arr,n){
var copy=new Array(n);
for(var i=0;i<n;++i){
copy[i]=arr[i];}
return copy;
}

function unwrapListeners(arr){
var ret=new Array(arr.length);
for(var i=0;i<ret.length;++i){
ret[i]=arr[i].listener||arr[i];
}
return ret;
}

function objectCreatePolyfill(proto){
var F=function F(){};
F.prototype=proto;
return new F();
}
function objectKeysPolyfill(obj){
var keys=[];
for(var k in obj){if(Object.prototype.hasOwnProperty.call(obj,k)){
keys.push(k);
}}
return k;
}
function functionBindPolyfill(context){
var fn=this;
return function(){
return fn.apply(context,arguments);
};
}

},{}],297:[function(require,module,exports){
var http=require('http');
var url=require('url');

var https=module.exports;

for(var key in http){
if(http.hasOwnProperty(key))https[key]=http[key];
}

https.request=function(params,cb){
params=validateParams(params);
return http.request.call(this,params,cb);
};

https.get=function(params,cb){
params=validateParams(params);
return http.get.call(this,params,cb);
};

function validateParams(params){
if(typeof params==='string'){
params=url.parse(params);
}
if(!params.protocol){
params.protocol='https:';
}
if(params.protocol!=='https:'){
throw new Error('Protocol "'+params.protocol+'" not supported. Expected "https:"');
}
return params;
}

},{"http":80,"url":393}],298:[function(require,module,exports){
/*!
 * humanize-ms - index.js
 * Copyright(c) 2014 dead_horse <dead_horse@qq.com>
 * MIT Licensed
 */

'use strict';

/**
 * Module dependencies.
 */

var util=require('util');
var ms=require('ms');

module.exports=function(t){
if(typeof t==='number')return t;
var r=ms(t);
if(r===undefined){
var err=new Error(util.format('humanize-ms(%j) result undefined',t));
console.warn(err.stack);
}
return r;
};

},{"ms":314,"util":345}],299:[function(require,module,exports){
exports.read=function(buffer,offset,isLE,mLen,nBytes){
var e,m;
var eLen=nBytes*8-mLen-1;
var eMax=(1<<eLen)-1;
var eBias=eMax>>1;
var nBits=-7;
var i=isLE?nBytes-1:0;
var d=isLE?-1:1;
var s=buffer[offset+i];

i+=d;

e=s&(1<<-nBits)-1;
s>>=-nBits;
nBits+=eLen;
for(;nBits>0;e=e*256+buffer[offset+i],i+=d,nBits-=8){}

m=e&(1<<-nBits)-1;
e>>=-nBits;
nBits+=mLen;
for(;nBits>0;m=m*256+buffer[offset+i],i+=d,nBits-=8){}

if(e===0){
e=1-eBias;
}else if(e===eMax){
return m?NaN:(s?-1:1)*Infinity;
}else{
m=m+Math.pow(2,mLen);
e=e-eBias;
}
return(s?-1:1)*m*Math.pow(2,e-mLen);
};

exports.write=function(buffer,value,offset,isLE,mLen,nBytes){
var e,m,c;
var eLen=nBytes*8-mLen-1;
var eMax=(1<<eLen)-1;
var eBias=eMax>>1;
var rt=mLen===23?Math.pow(2,-24)-Math.pow(2,-77):0;
var i=isLE?0:nBytes-1;
var d=isLE?1:-1;
var s=value<0||value===0&&1/value<0?1:0;

value=Math.abs(value);

if(isNaN(value)||value===Infinity){
m=isNaN(value)?1:0;
e=eMax;
}else{
e=Math.floor(Math.log(value)/Math.LN2);
if(value*(c=Math.pow(2,-e))<1){
e--;
c*=2;
}
if(e+eBias>=1){
value+=rt/c;
}else{
value+=rt*Math.pow(2,1-eBias);
}
if(value*c>=2){
e++;
c/=2;
}

if(e+eBias>=eMax){
m=0;
e=eMax;
}else if(e+eBias>=1){
m=(value*c-1)*Math.pow(2,mLen);
e=e+eBias;
}else{
m=value*Math.pow(2,eBias-1)*Math.pow(2,mLen);
e=0;
}
}

for(;mLen>=8;buffer[offset+i]=m&0xff,i+=d,m/=256,mLen-=8){}

e=e<<mLen|m;
eLen+=mLen;
for(;eLen>0;buffer[offset+i]=e&0xff,i+=d,e/=256,eLen-=8){}

buffer[offset+i-d]|=s*128;
};

},{}],300:[function(require,module,exports){
'use strict';
var types=[
require('./nextTick'),
require('./queueMicrotask'),
require('./mutation.js'),
require('./messageChannel'),
require('./stateChange'),
require('./timeout')];

var draining;
var currentQueue;
var queueIndex=-1;
var queue=[];
var scheduled=false;
function cleanUpNextTick(){
if(!draining||!currentQueue){
return;
}
draining=false;
if(currentQueue.length){
queue=currentQueue.concat(queue);
}else{
queueIndex=-1;
}
if(queue.length){
nextTick();
}
}

//named nextTick for less confusing stack traces
function nextTick(){
if(draining){
return;
}
scheduled=false;
draining=true;
var len=queue.length;
var timeout=setTimeout(cleanUpNextTick);
while(len){
currentQueue=queue;
queue=[];
while(currentQueue&&++queueIndex<len){
currentQueue[queueIndex].run();
}
queueIndex=-1;
len=queue.length;
}
currentQueue=null;
queueIndex=-1;
draining=false;
clearTimeout(timeout);
}
var scheduleDrain;
var i=-1;
var len=types.length;
while(++i<len){
if(types[i]&&types[i].test&&types[i].test()){
scheduleDrain=types[i].install(nextTick);
break;
}
}
// v8 likes predictible objects
function Item(fun,array){
this.fun=fun;
this.array=array;
}
Item.prototype.run=function(){
var fun=this.fun;
var array=this.array;
switch(array.length){
case 0:
return fun();
case 1:
return fun(array[0]);
case 2:
return fun(array[0],array[1]);
case 3:
return fun(array[0],array[1],array[2]);
default:
return fun.apply(null,array);}


};
module.exports=immediate;
function immediate(task){
var args=new Array(arguments.length-1);
if(arguments.length>1){
for(var i=1;i<arguments.length;i++){
args[i-1]=arguments[i];
}
}
queue.push(new Item(task,args));
if(!scheduled&&!draining){
scheduled=true;
scheduleDrain();
}
}

},{"./messageChannel":301,"./mutation.js":302,"./nextTick":79,"./queueMicrotask":303,"./stateChange":304,"./timeout":305}],301:[function(require,module,exports){
(function(global){
'use strict';

exports.test=function(){
if(global.setImmediate){
// we can only get here in IE10
// which doesn't handel postMessage well
return false;
}
return typeof global.MessageChannel!=='undefined';
};

exports.install=function(func){
var channel=new global.MessageChannel();
channel.port1.onmessage=func;
return function(){
channel.port2.postMessage(0);
};
};
}).call(this,typeof global!=="undefined"?global:typeof self!=="undefined"?self:typeof window!=="undefined"?window:{});
},{}],302:[function(require,module,exports){
(function(global){
'use strict';
//based off rsvp https://github.com/tildeio/rsvp.js
//license https://github.com/tildeio/rsvp.js/blob/master/LICENSE
//https://github.com/tildeio/rsvp.js/blob/master/lib/rsvp/asap.js

var Mutation=global.MutationObserver||global.WebKitMutationObserver;

exports.test=function(){
return Mutation;
};

exports.install=function(handle){
var called=0;
var observer=new Mutation(handle);
var element=global.document.createTextNode('');
observer.observe(element,{
characterData:true});

return function(){
element.data=called=++called%2;
};
};
}).call(this,typeof global!=="undefined"?global:typeof self!=="undefined"?self:typeof window!=="undefined"?window:{});
},{}],303:[function(require,module,exports){
(function(global){
'use strict';
exports.test=function(){
return typeof global.queueMicrotask==='function';
};

exports.install=function(func){
return function(){
global.queueMicrotask(func);
};
};

}).call(this,typeof global!=="undefined"?global:typeof self!=="undefined"?self:typeof window!=="undefined"?window:{});
},{}],304:[function(require,module,exports){
(function(global){
'use strict';

exports.test=function(){
return'document'in global&&'onreadystatechange'in global.document.createElement('script');
};

exports.install=function(handle){
return function(){

// Create a <script> element; its readystatechange event will be fired asynchronously once it is inserted
// into the document. Do so, thus queuing up the task. Remember to clean up once it's been called.
var scriptEl=global.document.createElement('script');
scriptEl.onreadystatechange=function(){
handle();

scriptEl.onreadystatechange=null;
scriptEl.parentNode.removeChild(scriptEl);
scriptEl=null;
};
global.document.documentElement.appendChild(scriptEl);

return handle;
};
};
}).call(this,typeof global!=="undefined"?global:typeof self!=="undefined"?self:typeof window!=="undefined"?window:{});
},{}],305:[function(require,module,exports){
'use strict';
exports.test=function(){
return true;
};

exports.install=function(t){
return function(){
setTimeout(t,0);
};
};
},{}],306:[function(require,module,exports){
if(typeof Object.create==='function'){
// implementation from standard node.js 'util' module
module.exports=function inherits(ctor,superCtor){
if(superCtor){
ctor.super_=superCtor;
ctor.prototype=Object.create(superCtor.prototype,{
constructor:{
value:ctor,
enumerable:false,
writable:true,
configurable:true}});


}
};
}else{
// old school shim for old browsers
module.exports=function inherits(ctor,superCtor){
if(superCtor){
ctor.super_=superCtor;
var TempCtor=function TempCtor(){};
TempCtor.prototype=superCtor.prototype;
ctor.prototype=new TempCtor();
ctor.prototype.constructor=ctor;
}
};
}

},{}],307:[function(require,module,exports){
/*!
 * Determine if an object is a Buffer
 *
 * @author   Feross Aboukhadijeh <https://feross.org>
 * @license  MIT
 */

// The _isBuffer check is for Safari 5-7 support, because it's missing
// Object.prototype.constructor. Remove this eventually
module.exports=function(obj){
return obj!=null&&(isBuffer(obj)||isSlowBuffer(obj)||!!obj._isBuffer);
};

function isBuffer(obj){
return!!obj.constructor&&typeof obj.constructor.isBuffer==='function'&&obj.constructor.isBuffer(obj);
}

// For Node v0.10 support. Remove this eventually.
function isSlowBuffer(obj){
return typeof obj.readFloatLE==='function'&&typeof obj.slice==='function'&&isBuffer(obj.slice(0,0));
}

},{}],308:[function(require,module,exports){
var toString={}.toString;

module.exports=Array.isArray||function(arr){
return toString.call(arr)=='[object Array]';
};

},{}],309:[function(require,module,exports){
(function(global){
/*
 *  base64.js
 *
 *  Licensed under the BSD 3-Clause License.
 *    http://opensource.org/licenses/BSD-3-Clause
 *
 *  References:
 *    http://en.wikipedia.org/wiki/Base64
 */
;(function(global,factory){
typeof exports==='object'&&typeof module!=='undefined'?
module.exports=factory(global):
typeof define==='function'&&define.amd?
define(factory):factory(global);
})(
typeof self!=='undefined'?self:
typeof window!=='undefined'?window:
typeof global!=='undefined'?global:
this,
function(global){
'use strict';
// existing version for noConflict()
global=global||{};
var _Base64=global.Base64;
var version="2.5.2";
// if node.js and NOT React Native, we use Buffer
var buffer;
if(typeof module!=='undefined'&&module.exports){
try{
buffer=eval("require('buffer').Buffer");
}catch(err){
buffer=undefined;
}
}
// constants
var b64chars=
'ABCDEFGHIJKLMNOPQRSTUVWXYZabcdefghijklmnopqrstuvwxyz0123456789+/';
var b64tab=function(bin){
var t={};
for(var i=0,l=bin.length;i<l;i++){t[bin.charAt(i)]=i;}
return t;
}(b64chars);
var fromCharCode=String.fromCharCode;
// encoder stuff
var cb_utob=function cb_utob(c){
if(c.length<2){
var cc=c.charCodeAt(0);
return cc<0x80?c:
cc<0x800?fromCharCode(0xc0|cc>>>6)+
fromCharCode(0x80|cc&0x3f):
fromCharCode(0xe0|cc>>>12&0x0f)+
fromCharCode(0x80|cc>>>6&0x3f)+
fromCharCode(0x80|cc&0x3f);
}else{
var cc=0x10000+
(c.charCodeAt(0)-0xD800)*0x400+(
c.charCodeAt(1)-0xDC00);
return fromCharCode(0xf0|cc>>>18&0x07)+
fromCharCode(0x80|cc>>>12&0x3f)+
fromCharCode(0x80|cc>>>6&0x3f)+
fromCharCode(0x80|cc&0x3f);
}
};
var re_utob=/[\uD800-\uDBFF][\uDC00-\uDFFFF]|[^\x00-\x7F]/g;
var utob=function utob(u){
return u.replace(re_utob,cb_utob);
};
var cb_encode=function cb_encode(ccc){
var padlen=[0,2,1][ccc.length%3],
ord=ccc.charCodeAt(0)<<16|
(ccc.length>1?ccc.charCodeAt(1):0)<<8|(
ccc.length>2?ccc.charCodeAt(2):0),
chars=[
b64chars.charAt(ord>>>18),
b64chars.charAt(ord>>>12&63),
padlen>=2?'=':b64chars.charAt(ord>>>6&63),
padlen>=1?'=':b64chars.charAt(ord&63)];

return chars.join('');
};
var btoa=global.btoa?function(b){
return global.btoa(b);
}:function(b){
return b.replace(/[\s\S]{1,3}/g,cb_encode);
};
var _encode=function _encode(u){
var isUint8Array=Object.prototype.toString.call(u)==='[object Uint8Array]';
return isUint8Array?u.toString('base64'):
btoa(utob(String(u)));
};
var encode=function encode(u,urisafe){
return!urisafe?
_encode(u):
_encode(String(u)).replace(/[+\/]/g,function(m0){
return m0=='+'?'-':'_';
}).replace(/=/g,'');
};
var encodeURI=function encodeURI(u){return encode(u,true);};
// decoder stuff
var re_btou=/[\xC0-\xDF][\x80-\xBF]|[\xE0-\xEF][\x80-\xBF]{2}|[\xF0-\xF7][\x80-\xBF]{3}/g;
var cb_btou=function cb_btou(cccc){
switch(cccc.length){
case 4:
var cp=(0x07&cccc.charCodeAt(0))<<18|
(0x3f&cccc.charCodeAt(1))<<12|
(0x3f&cccc.charCodeAt(2))<<6|
0x3f&cccc.charCodeAt(3),
offset=cp-0x10000;
return fromCharCode((offset>>>10)+0xD800)+
fromCharCode((offset&0x3FF)+0xDC00);
case 3:
return fromCharCode(
(0x0f&cccc.charCodeAt(0))<<12|
(0x3f&cccc.charCodeAt(1))<<6|
0x3f&cccc.charCodeAt(2));

default:
return fromCharCode(
(0x1f&cccc.charCodeAt(0))<<6|
0x3f&cccc.charCodeAt(1));}


};
var btou=function btou(b){
return b.replace(re_btou,cb_btou);
};
var cb_decode=function cb_decode(cccc){
var len=cccc.length,
padlen=len%4,
n=(len>0?b64tab[cccc.charAt(0)]<<18:0)|(
len>1?b64tab[cccc.charAt(1)]<<12:0)|(
len>2?b64tab[cccc.charAt(2)]<<6:0)|(
len>3?b64tab[cccc.charAt(3)]:0),
chars=[
fromCharCode(n>>>16),
fromCharCode(n>>>8&0xff),
fromCharCode(n&0xff)];

chars.length-=[0,0,2,1][padlen];
return chars.join('');
};
var _atob=global.atob?function(a){
return global.atob(a);
}:function(a){
return a.replace(/\S{1,4}/g,cb_decode);
};
var atob=function atob(a){
return _atob(String(a).replace(/[^A-Za-z0-9\+\/]/g,''));
};
var _decode=buffer?
buffer.from&&Uint8Array&&buffer.from!==Uint8Array.from?
function(a){
return(a.constructor===buffer.constructor?
a:buffer.from(a,'base64')).toString();
}:
function(a){
return(a.constructor===buffer.constructor?
a:new buffer(a,'base64')).toString();
}:
function(a){return btou(_atob(a));};
var decode=function decode(a){
return _decode(
String(a).replace(/[-_]/g,function(m0){return m0=='-'?'+':'/';}).
replace(/[^A-Za-z0-9\+\/]/g,''));

};
var noConflict=function noConflict(){
var Base64=global.Base64;
global.Base64=_Base64;
return Base64;
};
// export Base64
global.Base64={
VERSION:version,
atob:atob,
btoa:btoa,
fromBase64:decode,
toBase64:encode,
utob:utob,
encode:encode,
encodeURI:encodeURI,
btou:btou,
decode:decode,
noConflict:noConflict,
__buffer__:buffer};

// if ES5 is available, make Base64.extendString() available
if(typeof Object.defineProperty==='function'){
var noEnum=function noEnum(v){
return{value:v,enumerable:false,writable:true,configurable:true};
};
global.Base64.extendString=function(){
Object.defineProperty(
String.prototype,'fromBase64',noEnum(function(){
return decode(this);
}));
Object.defineProperty(
String.prototype,'toBase64',noEnum(function(urisafe){
return encode(this,urisafe);
}));
Object.defineProperty(
String.prototype,'toBase64URI',noEnum(function(){
return encode(this,true);
}));
};
}
//
// export Base64 to the namespace
//
if(global['Meteor']){// Meteor.js
Base64=global.Base64;
}
// module.exports and AMD are mutually exclusive.
// module.exports has precedence.
if(typeof module!=='undefined'&&module.exports){
module.exports.Base64=global.Base64;
}else
if(typeof define==='function'&&define.amd){
// AMD. Register as an anonymous module.
define([],function(){return global.Base64;});
}
// that's it!
return{Base64:global.Base64};
});


}).call(this,typeof global!=="undefined"?global:typeof self!=="undefined"?self:typeof window!=="undefined"?window:{});
},{}],310:[function(require,module,exports){
/*!
 * merge-descriptors
 * Copyright(c) 2014 Jonathan Ong
 * Copyright(c) 2015 Douglas Christopher Wilson
 * MIT Licensed
 */

'use strict';

/**
 * Module exports.
 * @public
 */

module.exports=merge;

/**
 * Module variables.
 * @private
 */

var hasOwnProperty=Object.prototype.hasOwnProperty;

/**
 * Merge the property descriptors of `src` into `dest`
 *
 * @param {object} dest Object to add descriptors to
 * @param {object} src Object to clone descriptors from
 * @param {boolean} [redefine=true] Redefine `dest` properties with `src` properties
 * @returns {object} Reference to dest
 * @public
 */

function merge(dest,src,redefine){
if(!dest){
throw new TypeError('argument dest is required');
}

if(!src){
throw new TypeError('argument src is required');
}

if(redefine===undefined){
// Default to true
redefine=true;
}

Object.getOwnPropertyNames(src).forEach(function forEachOwnPropertyName(name){
if(!redefine&&hasOwnProperty.call(dest,name)){
// Skip desriptor
return;
}

// Copy descriptor
var descriptor=Object.getOwnPropertyDescriptor(src,name);
Object.defineProperty(dest,name,descriptor);
});

return dest;
}

},{}],311:[function(require,module,exports){
'use strict';

/**
 * @param typeMap [Object] Map of MIME type -> Array[extensions]
 * @param ...
 */
function Mime(){
this._types=Object.create(null);
this._extensions=Object.create(null);

for(var i=0;i<arguments.length;i++){
this.define(arguments[i]);
}

this.define=this.define.bind(this);
this.getType=this.getType.bind(this);
this.getExtension=this.getExtension.bind(this);
}

/**
 * Define mimetype -> extension mappings.  Each key is a mime-type that maps
 * to an array of extensions associated with the type.  The first extension is
 * used as the default extension for the type.
 *
 * e.g. mime.define({'audio/ogg', ['oga', 'ogg', 'spx']});
 *
 * If a type declares an extension that has already been defined, an error will
 * be thrown.  To suppress this error and force the extension to be associated
 * with the new type, pass `force`=true.  Alternatively, you may prefix the
 * extension with "*" to map the type to extension, without mapping the
 * extension to the type.
 *
 * e.g. mime.define({'audio/wav', ['wav']}, {'audio/x-wav', ['*wav']});
 *
 *
 * @param map (Object) type definitions
 * @param force (Boolean) if true, force overriding of existing definitions
 */
Mime.prototype.define=function(typeMap,force){
for(var type in typeMap){
var extensions=typeMap[type].map(function(t){return t.toLowerCase();});
type=type.toLowerCase();

for(var i=0;i<extensions.length;i++){
var ext=extensions[i];

// '*' prefix = not the preferred type for this extension.  So fixup the
// extension, and skip it.
if(ext[0]=='*'){
continue;
}

if(!force&&ext in this._types){
throw new Error(
'Attempt to change mapping for "'+ext+
'" extension from "'+this._types[ext]+'" to "'+type+
'". Pass `force=true` to allow this, otherwise remove "'+ext+
'" from the list of extensions for "'+type+'".');

}

this._types[ext]=type;
}

// Use first extension as default
if(force||!this._extensions[type]){
var ext=extensions[0];
this._extensions[type]=ext[0]!='*'?ext:ext.substr(1);
}
}
};

/**
 * Lookup a mime type based on extension
 */
Mime.prototype.getType=function(path){
path=String(path);
var last=path.replace(/^.*[/\\]/,'').toLowerCase();
var ext=last.replace(/^.*\./,'').toLowerCase();

var hasPath=last.length<path.length;
var hasDot=ext.length<last.length-1;

return(hasDot||!hasPath)&&this._types[ext]||null;
};

/**
 * Return file extension associated with a mime type
 */
Mime.prototype.getExtension=function(type){
type=/^\s*([^;\s]*)/.test(type)&&RegExp.$1;
return type&&this._extensions[type.toLowerCase()]||null;
};

module.exports=Mime;

},{}],312:[function(require,module,exports){
'use strict';

var Mime=require('./Mime');
module.exports=new Mime(require('./types/standard'));

},{"./Mime":311,"./types/standard":313}],313:[function(require,module,exports){
module.exports={"application/andrew-inset":["ez"],"application/applixware":["aw"],"application/atom+xml":["atom"],"application/atomcat+xml":["atomcat"],"application/atomdeleted+xml":["atomdeleted"],"application/atomsvc+xml":["atomsvc"],"application/atsc-dwd+xml":["dwd"],"application/atsc-held+xml":["held"],"application/atsc-rsat+xml":["rsat"],"application/bdoc":["bdoc"],"application/calendar+xml":["xcs"],"application/ccxml+xml":["ccxml"],"application/cdfx+xml":["cdfx"],"application/cdmi-capability":["cdmia"],"application/cdmi-container":["cdmic"],"application/cdmi-domain":["cdmid"],"application/cdmi-object":["cdmio"],"application/cdmi-queue":["cdmiq"],"application/cu-seeme":["cu"],"application/dash+xml":["mpd"],"application/davmount+xml":["davmount"],"application/docbook+xml":["dbk"],"application/dssc+der":["dssc"],"application/dssc+xml":["xdssc"],"application/ecmascript":["ecma","es"],"application/emma+xml":["emma"],"application/emotionml+xml":["emotionml"],"application/epub+zip":["epub"],"application/exi":["exi"],"application/fdt+xml":["fdt"],"application/font-tdpfr":["pfr"],"application/geo+json":["geojson"],"application/gml+xml":["gml"],"application/gpx+xml":["gpx"],"application/gxf":["gxf"],"application/gzip":["gz"],"application/hjson":["hjson"],"application/hyperstudio":["stk"],"application/inkml+xml":["ink","inkml"],"application/ipfix":["ipfix"],"application/its+xml":["its"],"application/java-archive":["jar","war","ear"],"application/java-serialized-object":["ser"],"application/java-vm":["class"],"application/javascript":["js","mjs"],"application/json":["json","map"],"application/json5":["json5"],"application/jsonml+json":["jsonml"],"application/ld+json":["jsonld"],"application/lgr+xml":["lgr"],"application/lost+xml":["lostxml"],"application/mac-binhex40":["hqx"],"application/mac-compactpro":["cpt"],"application/mads+xml":["mads"],"application/manifest+json":["webmanifest"],"application/marc":["mrc"],"application/marcxml+xml":["mrcx"],"application/mathematica":["ma","nb","mb"],"application/mathml+xml":["mathml"],"application/mbox":["mbox"],"application/mediaservercontrol+xml":["mscml"],"application/metalink+xml":["metalink"],"application/metalink4+xml":["meta4"],"application/mets+xml":["mets"],"application/mmt-aei+xml":["maei"],"application/mmt-usd+xml":["musd"],"application/mods+xml":["mods"],"application/mp21":["m21","mp21"],"application/mp4":["mp4s","m4p"],"application/mrb-consumer+xml":["*xdf"],"application/mrb-publish+xml":["*xdf"],"application/msword":["doc","dot"],"application/mxf":["mxf"],"application/n-quads":["nq"],"application/n-triples":["nt"],"application/node":["cjs"],"application/octet-stream":["bin","dms","lrf","mar","so","dist","distz","pkg","bpk","dump","elc","deploy","exe","dll","deb","dmg","iso","img","msi","msp","msm","buffer"],"application/oda":["oda"],"application/oebps-package+xml":["opf"],"application/ogg":["ogx"],"application/omdoc+xml":["omdoc"],"application/onenote":["onetoc","onetoc2","onetmp","onepkg"],"application/oxps":["oxps"],"application/p2p-overlay+xml":["relo"],"application/patch-ops-error+xml":["*xer"],"application/pdf":["pdf"],"application/pgp-encrypted":["pgp"],"application/pgp-signature":["asc","sig"],"application/pics-rules":["prf"],"application/pkcs10":["p10"],"application/pkcs7-mime":["p7m","p7c"],"application/pkcs7-signature":["p7s"],"application/pkcs8":["p8"],"application/pkix-attr-cert":["ac"],"application/pkix-cert":["cer"],"application/pkix-crl":["crl"],"application/pkix-pkipath":["pkipath"],"application/pkixcmp":["pki"],"application/pls+xml":["pls"],"application/postscript":["ai","eps","ps"],"application/provenance+xml":["provx"],"application/pskc+xml":["pskcxml"],"application/raml+yaml":["raml"],"application/rdf+xml":["rdf","owl"],"application/reginfo+xml":["rif"],"application/relax-ng-compact-syntax":["rnc"],"application/resource-lists+xml":["rl"],"application/resource-lists-diff+xml":["rld"],"application/rls-services+xml":["rs"],"application/route-apd+xml":["rapd"],"application/route-s-tsid+xml":["sls"],"application/route-usd+xml":["rusd"],"application/rpki-ghostbusters":["gbr"],"application/rpki-manifest":["mft"],"application/rpki-roa":["roa"],"application/rsd+xml":["rsd"],"application/rss+xml":["rss"],"application/rtf":["rtf"],"application/sbml+xml":["sbml"],"application/scvp-cv-request":["scq"],"application/scvp-cv-response":["scs"],"application/scvp-vp-request":["spq"],"application/scvp-vp-response":["spp"],"application/sdp":["sdp"],"application/senml+xml":["senmlx"],"application/sensml+xml":["sensmlx"],"application/set-payment-initiation":["setpay"],"application/set-registration-initiation":["setreg"],"application/shf+xml":["shf"],"application/sieve":["siv","sieve"],"application/smil+xml":["smi","smil"],"application/sparql-query":["rq"],"application/sparql-results+xml":["srx"],"application/srgs":["gram"],"application/srgs+xml":["grxml"],"application/sru+xml":["sru"],"application/ssdl+xml":["ssdl"],"application/ssml+xml":["ssml"],"application/swid+xml":["swidtag"],"application/tei+xml":["tei","teicorpus"],"application/thraud+xml":["tfi"],"application/timestamped-data":["tsd"],"application/toml":["toml"],"application/ttml+xml":["ttml"],"application/urc-ressheet+xml":["rsheet"],"application/voicexml+xml":["vxml"],"application/wasm":["wasm"],"application/widget":["wgt"],"application/winhlp":["hlp"],"application/wsdl+xml":["wsdl"],"application/wspolicy+xml":["wspolicy"],"application/xaml+xml":["xaml"],"application/xcap-att+xml":["xav"],"application/xcap-caps+xml":["xca"],"application/xcap-diff+xml":["xdf"],"application/xcap-el+xml":["xel"],"application/xcap-error+xml":["xer"],"application/xcap-ns+xml":["xns"],"application/xenc+xml":["xenc"],"application/xhtml+xml":["xhtml","xht"],"application/xliff+xml":["xlf"],"application/xml":["xml","xsl","xsd","rng"],"application/xml-dtd":["dtd"],"application/xop+xml":["xop"],"application/xproc+xml":["xpl"],"application/xslt+xml":["xslt"],"application/xspf+xml":["xspf"],"application/xv+xml":["mxml","xhvml","xvml","xvm"],"application/yang":["yang"],"application/yin+xml":["yin"],"application/zip":["zip"],"audio/3gpp":["*3gpp"],"audio/adpcm":["adp"],"audio/basic":["au","snd"],"audio/midi":["mid","midi","kar","rmi"],"audio/mobile-xmf":["mxmf"],"audio/mp3":["*mp3"],"audio/mp4":["m4a","mp4a"],"audio/mpeg":["mpga","mp2","mp2a","mp3","m2a","m3a"],"audio/ogg":["oga","ogg","spx"],"audio/s3m":["s3m"],"audio/silk":["sil"],"audio/wav":["wav"],"audio/wave":["*wav"],"audio/webm":["weba"],"audio/xm":["xm"],"font/collection":["ttc"],"font/otf":["otf"],"font/ttf":["ttf"],"font/woff":["woff"],"font/woff2":["woff2"],"image/aces":["exr"],"image/apng":["apng"],"image/bmp":["bmp"],"image/cgm":["cgm"],"image/dicom-rle":["drle"],"image/emf":["emf"],"image/fits":["fits"],"image/g3fax":["g3"],"image/gif":["gif"],"image/heic":["heic"],"image/heic-sequence":["heics"],"image/heif":["heif"],"image/heif-sequence":["heifs"],"image/hej2k":["hej2"],"image/hsj2":["hsj2"],"image/ief":["ief"],"image/jls":["jls"],"image/jp2":["jp2","jpg2"],"image/jpeg":["jpeg","jpg","jpe"],"image/jph":["jph"],"image/jphc":["jhc"],"image/jpm":["jpm"],"image/jpx":["jpx","jpf"],"image/jxr":["jxr"],"image/jxra":["jxra"],"image/jxrs":["jxrs"],"image/jxs":["jxs"],"image/jxsc":["jxsc"],"image/jxsi":["jxsi"],"image/jxss":["jxss"],"image/ktx":["ktx"],"image/png":["png"],"image/sgi":["sgi"],"image/svg+xml":["svg","svgz"],"image/t38":["t38"],"image/tiff":["tif","tiff"],"image/tiff-fx":["tfx"],"image/webp":["webp"],"image/wmf":["wmf"],"message/disposition-notification":["disposition-notification"],"message/global":["u8msg"],"message/global-delivery-status":["u8dsn"],"message/global-disposition-notification":["u8mdn"],"message/global-headers":["u8hdr"],"message/rfc822":["eml","mime"],"model/3mf":["3mf"],"model/gltf+json":["gltf"],"model/gltf-binary":["glb"],"model/iges":["igs","iges"],"model/mesh":["msh","mesh","silo"],"model/mtl":["mtl"],"model/obj":["obj"],"model/stl":["stl"],"model/vrml":["wrl","vrml"],"model/x3d+binary":["*x3db","x3dbz"],"model/x3d+fastinfoset":["x3db"],"model/x3d+vrml":["*x3dv","x3dvz"],"model/x3d+xml":["x3d","x3dz"],"model/x3d-vrml":["x3dv"],"text/cache-manifest":["appcache","manifest"],"text/calendar":["ics","ifb"],"text/coffeescript":["coffee","litcoffee"],"text/css":["css"],"text/csv":["csv"],"text/html":["html","htm","shtml"],"text/jade":["jade"],"text/jsx":["jsx"],"text/less":["less"],"text/markdown":["markdown","md"],"text/mathml":["mml"],"text/mdx":["mdx"],"text/n3":["n3"],"text/plain":["txt","text","conf","def","list","log","in","ini"],"text/richtext":["rtx"],"text/rtf":["*rtf"],"text/sgml":["sgml","sgm"],"text/shex":["shex"],"text/slim":["slim","slm"],"text/stylus":["stylus","styl"],"text/tab-separated-values":["tsv"],"text/troff":["t","tr","roff","man","me","ms"],"text/turtle":["ttl"],"text/uri-list":["uri","uris","urls"],"text/vcard":["vcard"],"text/vtt":["vtt"],"text/xml":["*xml"],"text/yaml":["yaml","yml"],"video/3gpp":["3gp","3gpp"],"video/3gpp2":["3g2"],"video/h261":["h261"],"video/h263":["h263"],"video/h264":["h264"],"video/jpeg":["jpgv"],"video/jpm":["*jpm","jpgm"],"video/mj2":["mj2","mjp2"],"video/mp2t":["ts"],"video/mp4":["mp4","mp4v","mpg4"],"video/mpeg":["mpeg","mpg","mpe","m1v","m2v"],"video/ogg":["ogv"],"video/quicktime":["qt","mov"],"video/webm":["webm"]};
},{}],314:[function(require,module,exports){
/**
 * Helpers.
 */

var s=1000;
var m=s*60;
var h=m*60;
var d=h*24;
var w=d*7;
var y=d*365.25;

/**
 * Parse or format the given `val`.
 *
 * Options:
 *
 *  - `long` verbose formatting [false]
 *
 * @param {String|Number} val
 * @param {Object} [options]
 * @throws {Error} throw an error if val is not a non-empty string or a number
 * @return {String|Number}
 * @api public
 */

module.exports=function(val,options){
options=options||{};
var type=typeof val;
if(type==='string'&&val.length>0){
return parse(val);
}else if(type==='number'&&isFinite(val)){
return options.long?fmtLong(val):fmtShort(val);
}
throw new Error(
'val is not a non-empty string or a valid number. val='+
JSON.stringify(val));

};

/**
 * Parse the given `str` and return milliseconds.
 *
 * @param {String} str
 * @return {Number}
 * @api private
 */

function parse(str){
str=String(str);
if(str.length>100){
return;
}
var match=/^(-?(?:\d+)?\.?\d+) *(milliseconds?|msecs?|ms|seconds?|secs?|s|minutes?|mins?|m|hours?|hrs?|h|days?|d|weeks?|w|years?|yrs?|y)?$/i.exec(
str);

if(!match){
return;
}
var n=parseFloat(match[1]);
var type=(match[2]||'ms').toLowerCase();
switch(type){
case'years':
case'year':
case'yrs':
case'yr':
case'y':
return n*y;
case'weeks':
case'week':
case'w':
return n*w;
case'days':
case'day':
case'd':
return n*d;
case'hours':
case'hour':
case'hrs':
case'hr':
case'h':
return n*h;
case'minutes':
case'minute':
case'mins':
case'min':
case'm':
return n*m;
case'seconds':
case'second':
case'secs':
case'sec':
case's':
return n*s;
case'milliseconds':
case'millisecond':
case'msecs':
case'msec':
case'ms':
return n;
default:
return undefined;}

}

/**
 * Short format for `ms`.
 *
 * @param {Number} ms
 * @return {String}
 * @api private
 */

function fmtShort(ms){
var msAbs=Math.abs(ms);
if(msAbs>=d){
return Math.round(ms/d)+'d';
}
if(msAbs>=h){
return Math.round(ms/h)+'h';
}
if(msAbs>=m){
return Math.round(ms/m)+'m';
}
if(msAbs>=s){
return Math.round(ms/s)+'s';
}
return ms+'ms';
}

/**
 * Long format for `ms`.
 *
 * @param {Number} ms
 * @return {String}
 * @api private
 */

function fmtLong(ms){
var msAbs=Math.abs(ms);
if(msAbs>=d){
return plural(ms,msAbs,d,'day');
}
if(msAbs>=h){
return plural(ms,msAbs,h,'hour');
}
if(msAbs>=m){
return plural(ms,msAbs,m,'minute');
}
if(msAbs>=s){
return plural(ms,msAbs,s,'second');
}
return ms+' ms';
}

/**
 * Pluralization helper.
 */

function plural(ms,msAbs,n,name){
var isPlural=msAbs>=n*1.5;
return Math.round(ms/n)+' '+name+(isPlural?'s':'');
}

},{}],315:[function(require,module,exports){
(function(process){
// .dirname, .basename, and .extname methods are extracted from Node.js v8.11.1,
// backported and transplited with Babel, with backwards-compat fixes

// Copyright Joyent, Inc. and other Node contributors.
//
// Permission is hereby granted, free of charge, to any person obtaining a
// copy of this software and associated documentation files (the
// "Software"), to deal in the Software without restriction, including
// without limitation the rights to use, copy, modify, merge, publish,
// distribute, sublicense, and/or sell copies of the Software, and to permit
// persons to whom the Software is furnished to do so, subject to the
// following conditions:
//
// The above copyright notice and this permission notice shall be included
// in all copies or substantial portions of the Software.
//
// THE SOFTWARE IS PROVIDED "AS IS", WITHOUT WARRANTY OF ANY KIND, EXPRESS
// OR IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF
// MERCHANTABILITY, FITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN
// NO EVENT SHALL THE AUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM,
// DAMAGES OR OTHER LIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR
// OTHERWISE, ARISING FROM, OUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE
// USE OR OTHER DEALINGS IN THE SOFTWARE.

// resolves . and .. elements in a path array with directory names there
// must be no slashes, empty elements, or device names (c:\) in the array
// (so also no leading and trailing slashes - it does not distinguish
// relative and absolute paths)
function normalizeArray(parts,allowAboveRoot){
// if the path tries to go above the root, `up` ends up > 0
var up=0;
for(var i=parts.length-1;i>=0;i--){
var last=parts[i];
if(last==='.'){
parts.splice(i,1);
}else if(last==='..'){
parts.splice(i,1);
up++;
}else if(up){
parts.splice(i,1);
up--;
}
}

// if the path is allowed to go above the root, restore leading ..s
if(allowAboveRoot){
for(;up--;up){
parts.unshift('..');
}
}

return parts;
}

// path.resolve([from ...], to)
// posix version
exports.resolve=function(){
var resolvedPath='',
resolvedAbsolute=false;

for(var i=arguments.length-1;i>=-1&&!resolvedAbsolute;i--){
var path=i>=0?arguments[i]:process.cwd();

// Skip empty and invalid entries
if(typeof path!=='string'){
throw new TypeError('Arguments to path.resolve must be strings');
}else if(!path){
continue;
}

resolvedPath=path+'/'+resolvedPath;
resolvedAbsolute=path.charAt(0)==='/';
}

// At this point the path should be resolved to a full absolute path, but
// handle relative paths to be safe (might happen when process.cwd() fails)

// Normalize the path
resolvedPath=normalizeArray(filter(resolvedPath.split('/'),function(p){
return!!p;
}),!resolvedAbsolute).join('/');

return(resolvedAbsolute?'/':'')+resolvedPath||'.';
};

// path.normalize(path)
// posix version
exports.normalize=function(path){
var isAbsolute=exports.isAbsolute(path),
trailingSlash=substr(path,-1)==='/';

// Normalize the path
path=normalizeArray(filter(path.split('/'),function(p){
return!!p;
}),!isAbsolute).join('/');

if(!path&&!isAbsolute){
path='.';
}
if(path&&trailingSlash){
path+='/';
}

return(isAbsolute?'/':'')+path;
};

// posix version
exports.isAbsolute=function(path){
return path.charAt(0)==='/';
};

// posix version
exports.join=function(){
var paths=Array.prototype.slice.call(arguments,0);
return exports.normalize(filter(paths,function(p,index){
if(typeof p!=='string'){
throw new TypeError('Arguments to path.join must be strings');
}
return p;
}).join('/'));
};


// path.relative(from, to)
// posix version
exports.relative=function(from,to){
from=exports.resolve(from).substr(1);
to=exports.resolve(to).substr(1);

function trim(arr){
var start=0;
for(;start<arr.length;start++){
if(arr[start]!=='')break;
}

var end=arr.length-1;
for(;end>=0;end--){
if(arr[end]!=='')break;
}

if(start>end)return[];
return arr.slice(start,end-start+1);
}

var fromParts=trim(from.split('/'));
var toParts=trim(to.split('/'));

var length=Math.min(fromParts.length,toParts.length);
var samePartsLength=length;
for(var i=0;i<length;i++){
if(fromParts[i]!==toParts[i]){
samePartsLength=i;
break;
}
}

var outputParts=[];
for(var i=samePartsLength;i<fromParts.length;i++){
outputParts.push('..');
}

outputParts=outputParts.concat(toParts.slice(samePartsLength));

return outputParts.join('/');
};

exports.sep='/';
exports.delimiter=':';

exports.dirname=function(path){
if(typeof path!=='string')path=path+'';
if(path.length===0)return'.';
var code=path.charCodeAt(0);
var hasRoot=code===47/*/*/;
var end=-1;
var matchedSlash=true;
for(var i=path.length-1;i>=1;--i){
code=path.charCodeAt(i);
if(code===47/*/*/){
if(!matchedSlash){
end=i;
break;
}
}else{
// We saw the first non-path separator
matchedSlash=false;
}
}

if(end===-1)return hasRoot?'/':'.';
if(hasRoot&&end===1){
// return '//';
// Backwards-compat fix:
return'/';
}
return path.slice(0,end);
};

function basename(path){
if(typeof path!=='string')path=path+'';

var start=0;
var end=-1;
var matchedSlash=true;
var i;

for(i=path.length-1;i>=0;--i){
if(path.charCodeAt(i)===47/*/*/){
// If we reached a path separator that was not part of a set of path
// separators at the end of the string, stop now
if(!matchedSlash){
start=i+1;
break;
}
}else if(end===-1){
// We saw the first non-path separator, mark this as the end of our
// path component
matchedSlash=false;
end=i+1;
}
}

if(end===-1)return'';
return path.slice(start,end);
}

// Uses a mixed approach for backwards-compatibility, as ext behavior changed
// in new Node.js versions, so only basename() above is backported here
exports.basename=function(path,ext){
var f=basename(path);
if(ext&&f.substr(-1*ext.length)===ext){
f=f.substr(0,f.length-ext.length);
}
return f;
};

exports.extname=function(path){
if(typeof path!=='string')path=path+'';
var startDot=-1;
var startPart=0;
var end=-1;
var matchedSlash=true;
// Track the state of characters (if any) we see before our first dot and
// after any path separator we find
var preDotState=0;
for(var i=path.length-1;i>=0;--i){
var code=path.charCodeAt(i);
if(code===47/*/*/){
// If we reached a path separator that was not part of a set of path
// separators at the end of the string, stop now
if(!matchedSlash){
startPart=i+1;
break;
}
continue;
}
if(end===-1){
// We saw the first non-path separator, mark this as the end of our
// extension
matchedSlash=false;
end=i+1;
}
if(code===46/*.*/){
// If this is our first dot, mark it as the start of our extension
if(startDot===-1)
startDot=i;else
if(preDotState!==1)
preDotState=1;
}else if(startDot!==-1){
// We saw a non-dot and non-path separator before our dot, so we should
// have a good chance at having a non-empty extension
preDotState=-1;
}
}

if(startDot===-1||end===-1||
// We saw a non-dot character immediately before the dot
preDotState===0||
// The (right-most) trimmed path component is exactly '..'
preDotState===1&&startDot===end-1&&startDot===startPart+1){
return'';
}
return path.slice(startDot,end);
};

function filter(xs,f){
if(xs.filter)return xs.filter(f);
var res=[];
for(var i=0;i<xs.length;i++){
if(f(xs[i],i,xs))res.push(xs[i]);
}
return res;
}

// String.prototype.substr - negative index don't work in IE8
var substr='ab'.substr(-1)==='b'?
function(str,start,len){return str.substr(start,len);}:
function(str,start,len){
if(start<0)start=str.length+start;
return str.substr(start,len);
};


}).call(this,require('_process'));
},{"_process":392}],316:[function(require,module,exports){
(function(global){
/*!
 * Platform.js <https://mths.be/platform>
 * Copyright 2014-2018 Benjamin Tan <https://bnjmnt4n.now.sh/>
 * Copyright 2011-2013 John-David Dalton <http://allyoucanleet.com/>
 * Available under MIT license <https://mths.be/mit>
 */
;(function(){
'use strict';

/** Used to determine if values are of the language type `Object`. */
var objectTypes={
'function':true,
'object':true};


/** Used as a reference to the global object. */
var root=objectTypes[typeof window]&&window||this;

/** Backup possible global object. */
var oldRoot=root;

/** Detect free variable `exports`. */
var freeExports=objectTypes[typeof exports]&&exports;

/** Detect free variable `module`. */
var freeModule=objectTypes[typeof module]&&module&&!module.nodeType&&module;

/** Detect free variable `global` from Node.js or Browserified code and use it as `root`. */
var freeGlobal=freeExports&&freeModule&&typeof global=='object'&&global;
if(freeGlobal&&(freeGlobal.global===freeGlobal||freeGlobal.window===freeGlobal||freeGlobal.self===freeGlobal)){
root=freeGlobal;
}

/**
   * Used as the maximum length of an array-like object.
   * See the [ES6 spec](http://people.mozilla.org/~jorendorff/es6-draft.html#sec-tolength)
   * for more details.
   */
var maxSafeInteger=Math.pow(2,53)-1;

/** Regular expression to detect Opera. */
var reOpera=/\bOpera/;

/** Possible global object. */
var thisBinding=this;

/** Used for native method references. */
var objectProto=Object.prototype;

/** Used to check for own properties of an object. */
var hasOwnProperty=objectProto.hasOwnProperty;

/** Used to resolve the internal `[[Class]]` of values. */
var toString=objectProto.toString;

/*--------------------------------------------------------------------------*/

/**
   * Capitalizes a string value.
   *
   * @private
   * @param {string} string The string to capitalize.
   * @returns {string} The capitalized string.
   */
function capitalize(string){
string=String(string);
return string.charAt(0).toUpperCase()+string.slice(1);
}

/**
   * A utility function to clean up the OS name.
   *
   * @private
   * @param {string} os The OS name to clean up.
   * @param {string} [pattern] A `RegExp` pattern matching the OS name.
   * @param {string} [label] A label for the OS.
   */
function cleanupOS(os,pattern,label){
// Platform tokens are defined at:
// http://msdn.microsoft.com/en-us/library/ms537503(VS.85).aspx
// http://web.archive.org/web/20081122053950/http://msdn.microsoft.com/en-us/library/ms537503(VS.85).aspx
var data={
'10.0':'10',
'6.4':'10 Technical Preview',
'6.3':'8.1',
'6.2':'8',
'6.1':'Server 2008 R2 / 7',
'6.0':'Server 2008 / Vista',
'5.2':'Server 2003 / XP 64-bit',
'5.1':'XP',
'5.01':'2000 SP1',
'5.0':'2000',
'4.0':'NT',
'4.90':'ME'};

// Detect Windows version from platform tokens.
if(pattern&&label&&/^Win/i.test(os)&&!/^Windows Phone /i.test(os)&&(
data=data[/[\d.]+$/.exec(os)])){
os='Windows '+data;
}
// Correct character case and cleanup string.
os=String(os);

if(pattern&&label){
os=os.replace(RegExp(pattern,'i'),label);
}

os=format(
os.replace(/ ce$/i,' CE').
replace(/\bhpw/i,'web').
replace(/\bMacintosh\b/,'Mac OS').
replace(/_PowerPC\b/i,' OS').
replace(/\b(OS X) [^ \d]+/i,'$1').
replace(/\bMac (OS X)\b/,'$1').
replace(/\/(\d)/,' $1').
replace(/_/g,'.').
replace(/(?: BePC|[ .]*fc[ \d.]+)$/i,'').
replace(/\bx86\.64\b/gi,'x86_64').
replace(/\b(Windows Phone) OS\b/,'$1').
replace(/\b(Chrome OS \w+) [\d.]+\b/,'$1').
split(' on ')[0]);


return os;
}

/**
   * An iteration utility for arrays and objects.
   *
   * @private
   * @param {Array|Object} object The object to iterate over.
   * @param {Function} callback The function called per iteration.
   */
function each(object,callback){
var index=-1,
length=object?object.length:0;

if(typeof length=='number'&&length>-1&&length<=maxSafeInteger){
while(++index<length){
callback(object[index],index,object);
}
}else{
forOwn(object,callback);
}
}

/**
   * Trim and conditionally capitalize string values.
   *
   * @private
   * @param {string} string The string to format.
   * @returns {string} The formatted string.
   */
function format(string){
string=trim(string);
return /^(?:webOS|i(?:OS|P))/.test(string)?
string:
capitalize(string);
}

/**
   * Iterates over an object's own properties, executing the `callback` for each.
   *
   * @private
   * @param {Object} object The object to iterate over.
   * @param {Function} callback The function executed per own property.
   */
function forOwn(object,callback){
for(var key in object){
if(hasOwnProperty.call(object,key)){
callback(object[key],key,object);
}
}
}

/**
   * Gets the internal `[[Class]]` of a value.
   *
   * @private
   * @param {*} value The value.
   * @returns {string} The `[[Class]]`.
   */
function getClassOf(value){
return value==null?
capitalize(value):
toString.call(value).slice(8,-1);
}

/**
   * Host objects can return type values that are different from their actual
   * data type. The objects we are concerned with usually return non-primitive
   * types of "object", "function", or "unknown".
   *
   * @private
   * @param {*} object The owner of the property.
   * @param {string} property The property to check.
   * @returns {boolean} Returns `true` if the property value is a non-primitive, else `false`.
   */
function isHostType(object,property){
var type=object!=null?typeof object[property]:'number';
return!/^(?:boolean|number|string|undefined)$/.test(type)&&(
type=='object'?!!object[property]:true);
}

/**
   * Prepares a string for use in a `RegExp` by making hyphens and spaces optional.
   *
   * @private
   * @param {string} string The string to qualify.
   * @returns {string} The qualified string.
   */
function qualify(string){
return String(string).replace(/([ -])(?!$)/g,'$1?');
}

/**
   * A bare-bones `Array#reduce` like utility function.
   *
   * @private
   * @param {Array} array The array to iterate over.
   * @param {Function} callback The function called per iteration.
   * @returns {*} The accumulated result.
   */
function reduce(array,callback){
var accumulator=null;
each(array,function(value,index){
accumulator=callback(accumulator,value,index,array);
});
return accumulator;
}

/**
   * Removes leading and trailing whitespace from a string.
   *
   * @private
   * @param {string} string The string to trim.
   * @returns {string} The trimmed string.
   */
function trim(string){
return String(string).replace(/^ +| +$/g,'');
}

/*--------------------------------------------------------------------------*/

/**
   * Creates a new platform object.
   *
   * @memberOf platform
   * @param {Object|string} [ua=navigator.userAgent] The user agent string or
   *  context object.
   * @returns {Object} A platform object.
   */
function parse(ua){

/** The environment context object. */
var context=root;

/** Used to flag when a custom context is provided. */
var isCustomContext=ua&&typeof ua=='object'&&getClassOf(ua)!='String';

// Juggle arguments.
if(isCustomContext){
context=ua;
ua=null;
}

/** Browser navigator object. */
var nav=context.navigator||{};

/** Browser user agent string. */
var userAgent=nav.userAgent||'';

ua||(ua=userAgent);

/** Used to flag when `thisBinding` is the [ModuleScope]. */
var isModuleScope=isCustomContext||thisBinding==oldRoot;

/** Used to detect if browser is like Chrome. */
var likeChrome=isCustomContext?
!!nav.likeChrome:
/\bChrome\b/.test(ua)&&!/internal|\n/i.test(toString.toString());

/** Internal `[[Class]]` value shortcuts. */
var objectClass='Object',
airRuntimeClass=isCustomContext?objectClass:'ScriptBridgingProxyObject',
enviroClass=isCustomContext?objectClass:'Environment',
javaClass=isCustomContext&&context.java?'JavaPackage':getClassOf(context.java),
phantomClass=isCustomContext?objectClass:'RuntimeObject';

/** Detect Java environments. */
var java=/\bJava/.test(javaClass)&&context.java;

/** Detect Rhino. */
var rhino=java&&getClassOf(context.environment)==enviroClass;

/** A character to represent alpha. */
var alpha=java?'a':"\u03B1";

/** A character to represent beta. */
var beta=java?'b':"\u03B2";

/** Browser document object. */
var doc=context.document||{};

/**
     * Detect Opera browser (Presto-based).
     * http://www.howtocreate.co.uk/operaStuff/operaObject.html
     * http://dev.opera.com/articles/view/opera-mini-web-content-authoring-guidelines/#operamini
     */
var opera=context.operamini||context.opera;

/** Opera `[[Class]]`. */
var operaClass=reOpera.test(operaClass=isCustomContext&&opera?opera['[[Class]]']:getClassOf(opera))?
operaClass:
opera=null;

/*------------------------------------------------------------------------*/

/** Temporary variable used over the script's lifetime. */
var data;

/** The CPU architecture. */
var arch=ua;

/** Platform description array. */
var description=[];

/** Platform alpha/beta indicator. */
var prerelease=null;

/** A flag to indicate that environment features should be used to resolve the platform. */
var useFeatures=ua==userAgent;

/** The browser/environment version. */
var version=useFeatures&&opera&&typeof opera.version=='function'&&opera.version();

/** A flag to indicate if the OS ends with "/ Version" */
var isSpecialCasedOS;

/* Detectable layout engines (order is important). */
var layout=getLayout([
{'label':'EdgeHTML','pattern':'Edge'},
'Trident',
{'label':'WebKit','pattern':'AppleWebKit'},
'iCab',
'Presto',
'NetFront',
'Tasman',
'KHTML',
'Gecko']);


/* Detectable browser names (order is important). */
var name=getName([
'Adobe AIR',
'Arora',
'Avant Browser',
'Breach',
'Camino',
'Electron',
'Epiphany',
'Fennec',
'Flock',
'Galeon',
'GreenBrowser',
'iCab',
'Iceweasel',
'K-Meleon',
'Konqueror',
'Lunascape',
'Maxthon',
{'label':'Microsoft Edge','pattern':'Edge'},
'Midori',
'Nook Browser',
'PaleMoon',
'PhantomJS',
'Raven',
'Rekonq',
'RockMelt',
{'label':'Samsung Internet','pattern':'SamsungBrowser'},
'SeaMonkey',
{'label':'Silk','pattern':'(?:Cloud9|Silk-Accelerated)'},
'Sleipnir',
'SlimBrowser',
{'label':'SRWare Iron','pattern':'Iron'},
'Sunrise',
'Swiftfox',
'Waterfox',
'WebPositive',
'Opera Mini',
{'label':'Opera Mini','pattern':'OPiOS'},
'Opera',
{'label':'Opera','pattern':'OPR'},
'Chrome',
{'label':'Chrome Mobile','pattern':'(?:CriOS|CrMo)'},
{'label':'Firefox','pattern':'(?:Firefox|Minefield)'},
{'label':'Firefox for iOS','pattern':'FxiOS'},
{'label':'IE','pattern':'IEMobile'},
{'label':'IE','pattern':'MSIE'},
'Safari']);


/* Detectable products (order is important). */
var product=getProduct([
{'label':'BlackBerry','pattern':'BB10'},
'BlackBerry',
{'label':'Galaxy S','pattern':'GT-I9000'},
{'label':'Galaxy S2','pattern':'GT-I9100'},
{'label':'Galaxy S3','pattern':'GT-I9300'},
{'label':'Galaxy S4','pattern':'GT-I9500'},
{'label':'Galaxy S5','pattern':'SM-G900'},
{'label':'Galaxy S6','pattern':'SM-G920'},
{'label':'Galaxy S6 Edge','pattern':'SM-G925'},
{'label':'Galaxy S7','pattern':'SM-G930'},
{'label':'Galaxy S7 Edge','pattern':'SM-G935'},
'Google TV',
'Lumia',
'iPad',
'iPod',
'iPhone',
'Kindle',
{'label':'Kindle Fire','pattern':'(?:Cloud9|Silk-Accelerated)'},
'Nexus',
'Nook',
'PlayBook',
'PlayStation Vita',
'PlayStation',
'TouchPad',
'Transformer',
{'label':'Wii U','pattern':'WiiU'},
'Wii',
'Xbox One',
{'label':'Xbox 360','pattern':'Xbox'},
'Xoom']);


/* Detectable manufacturers. */
var manufacturer=getManufacturer({
'Apple':{'iPad':1,'iPhone':1,'iPod':1},
'Archos':{},
'Amazon':{'Kindle':1,'Kindle Fire':1},
'Asus':{'Transformer':1},
'Barnes & Noble':{'Nook':1},
'BlackBerry':{'PlayBook':1},
'Google':{'Google TV':1,'Nexus':1},
'HP':{'TouchPad':1},
'HTC':{},
'LG':{},
'Microsoft':{'Xbox':1,'Xbox One':1},
'Motorola':{'Xoom':1},
'Nintendo':{'Wii U':1,'Wii':1},
'Nokia':{'Lumia':1},
'Samsung':{'Galaxy S':1,'Galaxy S2':1,'Galaxy S3':1,'Galaxy S4':1},
'Sony':{'PlayStation':1,'PlayStation Vita':1}});


/* Detectable operating systems (order is important). */
var os=getOS([
'Windows Phone',
'Android',
'CentOS',
{'label':'Chrome OS','pattern':'CrOS'},
'Debian',
'Fedora',
'FreeBSD',
'Gentoo',
'Haiku',
'Kubuntu',
'Linux Mint',
'OpenBSD',
'Red Hat',
'SuSE',
'Ubuntu',
'Xubuntu',
'Cygwin',
'Symbian OS',
'hpwOS',
'webOS ',
'webOS',
'Tablet OS',
'Tizen',
'Linux',
'Mac OS X',
'Macintosh',
'Mac',
'Windows 98;',
'Windows ']);


/*------------------------------------------------------------------------*/

/**
     * Picks the layout engine from an array of guesses.
     *
     * @private
     * @param {Array} guesses An array of guesses.
     * @returns {null|string} The detected layout engine.
     */
function getLayout(guesses){
return reduce(guesses,function(result,guess){
return result||RegExp('\\b'+(
guess.pattern||qualify(guess))+
'\\b','i').exec(ua)&&(guess.label||guess);
});
}

/**
     * Picks the manufacturer from an array of guesses.
     *
     * @private
     * @param {Array} guesses An object of guesses.
     * @returns {null|string} The detected manufacturer.
     */
function getManufacturer(guesses){
return reduce(guesses,function(result,value,key){
// Lookup the manufacturer by product or scan the UA for the manufacturer.
return result||(
value[product]||
value[/^[a-z]+(?: +[a-z]+\b)*/i.exec(product)]||
RegExp('\\b'+qualify(key)+'(?:\\b|\\w*\\d)','i').exec(ua))&&
key;
});
}

/**
     * Picks the browser name from an array of guesses.
     *
     * @private
     * @param {Array} guesses An array of guesses.
     * @returns {null|string} The detected browser name.
     */
function getName(guesses){
return reduce(guesses,function(result,guess){
return result||RegExp('\\b'+(
guess.pattern||qualify(guess))+
'\\b','i').exec(ua)&&(guess.label||guess);
});
}

/**
     * Picks the OS name from an array of guesses.
     *
     * @private
     * @param {Array} guesses An array of guesses.
     * @returns {null|string} The detected OS name.
     */
function getOS(guesses){
return reduce(guesses,function(result,guess){
var pattern=guess.pattern||qualify(guess);
if(!result&&(result=
RegExp('\\b'+pattern+'(?:/[\\d.]+|[ \\w.]*)','i').exec(ua)))
{
result=cleanupOS(result,pattern,guess.label||guess);
}
return result;
});
}

/**
     * Picks the product name from an array of guesses.
     *
     * @private
     * @param {Array} guesses An array of guesses.
     * @returns {null|string} The detected product name.
     */
function getProduct(guesses){
return reduce(guesses,function(result,guess){
var pattern=guess.pattern||qualify(guess);
if(!result&&(result=
RegExp('\\b'+pattern+' *\\d+[.\\w_]*','i').exec(ua)||
RegExp('\\b'+pattern+' *\\w+-[\\w]*','i').exec(ua)||
RegExp('\\b'+pattern+'(?:; *(?:[a-z]+[_-])?[a-z]+\\d+|[^ ();-]*)','i').exec(ua)))
{
// Split by forward slash and append product version if needed.
if((result=String(guess.label&&!RegExp(pattern,'i').test(guess.label)?guess.label:result).split('/'))[1]&&!/[\d.]+/.test(result[0])){
result[0]+=' '+result[1];
}
// Correct character case and cleanup string.
guess=guess.label||guess;
result=format(result[0].
replace(RegExp(pattern,'i'),guess).
replace(RegExp('; *(?:'+guess+'[_-])?','i'),' ').
replace(RegExp('('+guess+')[-_.]?(\\w)','i'),'$1 $2'));
}
return result;
});
}

/**
     * Resolves the version using an array of UA patterns.
     *
     * @private
     * @param {Array} patterns An array of UA patterns.
     * @returns {null|string} The detected version.
     */
function getVersion(patterns){
return reduce(patterns,function(result,pattern){
return result||(RegExp(pattern+
'(?:-[\\d.]+/|(?: for [\\w-]+)?[ /-])([\\d.]+[^ ();/_-]*)','i').exec(ua)||0)[1]||null;
});
}

/**
     * Returns `platform.description` when the platform object is coerced to a string.
     *
     * @name toString
     * @memberOf platform
     * @returns {string} Returns `platform.description` if available, else an empty string.
     */
function toStringPlatform(){
return this.description||'';
}

/*------------------------------------------------------------------------*/

// Convert layout to an array so we can add extra details.
layout&&(layout=[layout]);

// Detect product names that contain their manufacturer's name.
if(manufacturer&&!product){
product=getProduct([manufacturer]);
}
// Clean up Google TV.
if(data=/\bGoogle TV\b/.exec(product)){
product=data[0];
}
// Detect simulators.
if(/\bSimulator\b/i.test(ua)){
product=(product?product+' ':'')+'Simulator';
}
// Detect Opera Mini 8+ running in Turbo/Uncompressed mode on iOS.
if(name=='Opera Mini'&&/\bOPiOS\b/.test(ua)){
description.push('running in Turbo/Uncompressed mode');
}
// Detect IE Mobile 11.
if(name=='IE'&&/\blike iPhone OS\b/.test(ua)){
data=parse(ua.replace(/like iPhone OS/,''));
manufacturer=data.manufacturer;
product=data.product;
}
// Detect iOS.
else if(/^iP/.test(product)){
name||(name='Safari');
os='iOS'+((data=/ OS ([\d_]+)/i.exec(ua))?
' '+data[1].replace(/_/g,'.'):
'');
}
// Detect Kubuntu.
else if(name=='Konqueror'&&!/buntu/i.test(os)){
os='Kubuntu';
}
// Detect Android browsers.
else if(manufacturer&&manufacturer!='Google'&&(
/Chrome/.test(name)&&!/\bMobile Safari\b/i.test(ua)||/\bVita\b/.test(product))||
/\bAndroid\b/.test(os)&&/^Chrome/.test(name)&&/\bVersion\//i.test(ua)){
name='Android Browser';
os=/\bAndroid\b/.test(os)?os:'Android';
}
// Detect Silk desktop/accelerated modes.
else if(name=='Silk'){
if(!/\bMobi/i.test(ua)){
os='Android';
description.unshift('desktop mode');
}
if(/Accelerated *= *true/i.test(ua)){
description.unshift('accelerated');
}
}
// Detect PaleMoon identifying as Firefox.
else if(name=='PaleMoon'&&(data=/\bFirefox\/([\d.]+)\b/.exec(ua))){
description.push('identifying as Firefox '+data[1]);
}
// Detect Firefox OS and products running Firefox.
else if(name=='Firefox'&&(data=/\b(Mobile|Tablet|TV)\b/i.exec(ua))){
os||(os='Firefox OS');
product||(product=data[1]);
}
// Detect false positives for Firefox/Safari.
else if(!name||(data=!/\bMinefield\b/i.test(ua)&&/\b(?:Firefox|Safari)\b/.exec(name))){
// Escape the `/` for Firefox 1.
if(name&&!product&&/[\/,]|^[^(]+?\)/.test(ua.slice(ua.indexOf(data+'/')+8))){
// Clear name of false positives.
name=null;
}
// Reassign a generic name.
if((data=product||manufacturer||os)&&(
product||manufacturer||/\b(?:Android|Symbian OS|Tablet OS|webOS)\b/.test(os))){
name=/[a-z]+(?: Hat)?/i.exec(/\bAndroid\b/.test(os)?os:data)+' Browser';
}
}
// Add Chrome version to description for Electron.
else if(name=='Electron'&&(data=(/\bChrome\/([\d.]+)\b/.exec(ua)||0)[1])){
description.push('Chromium '+data);
}
// Detect non-Opera (Presto-based) versions (order is important).
if(!version){
version=getVersion([
'(?:Cloud9|CriOS|CrMo|Edge|FxiOS|IEMobile|Iron|Opera ?Mini|OPiOS|OPR|Raven|SamsungBrowser|Silk(?!/[\\d.]+$))',
'Version',
qualify(name),
'(?:Firefox|Minefield|NetFront)']);

}
// Detect stubborn layout engines.
if(data=
layout=='iCab'&&parseFloat(version)>3&&'WebKit'||
/\bOpera\b/.test(name)&&(/\bOPR\b/.test(ua)?'Blink':'Presto')||
/\b(?:Midori|Nook|Safari)\b/i.test(ua)&&!/^(?:Trident|EdgeHTML)$/.test(layout)&&'WebKit'||
!layout&&/\bMSIE\b/i.test(ua)&&(os=='Mac OS'?'Tasman':'Trident')||
layout=='WebKit'&&/\bPlayStation\b(?! Vita\b)/i.test(name)&&'NetFront')
{
layout=[data];
}
// Detect Windows Phone 7 desktop mode.
if(name=='IE'&&(data=(/; *(?:XBLWP|ZuneWP)(\d+)/i.exec(ua)||0)[1])){
name+=' Mobile';
os='Windows Phone '+(/\+$/.test(data)?data:data+'.x');
description.unshift('desktop mode');
}
// Detect Windows Phone 8.x desktop mode.
else if(/\bWPDesktop\b/i.test(ua)){
name='IE Mobile';
os='Windows Phone 8.x';
description.unshift('desktop mode');
version||(version=(/\brv:([\d.]+)/.exec(ua)||0)[1]);
}
// Detect IE 11 identifying as other browsers.
else if(name!='IE'&&layout=='Trident'&&(data=/\brv:([\d.]+)/.exec(ua))){
if(name){
description.push('identifying as '+name+(version?' '+version:''));
}
name='IE';
version=data[1];
}
// Leverage environment features.
if(useFeatures){
// Detect server-side environments.
// Rhino has a global function while others have a global object.
if(isHostType(context,'global')){
if(java){
data=java.lang.System;
arch=data.getProperty('os.arch');
os=os||data.getProperty('os.name')+' '+data.getProperty('os.version');
}
if(rhino){
try{
version=context.require('ringo/engine').version.join('.');
name='RingoJS';
}catch(e){
if((data=context.system)&&data.global.system==context.system){
name='Narwhal';
os||(os=data[0].os||null);
}
}
if(!name){
name='Rhino';
}
}else
if(
typeof context.process=='object'&&!context.process.browser&&(
data=context.process))
{
if(typeof data.versions=='object'){
if(typeof data.versions.electron=='string'){
description.push('Node '+data.versions.node);
name='Electron';
version=data.versions.electron;
}else if(typeof data.versions.nw=='string'){
description.push('Chromium '+version,'Node '+data.versions.node);
name='NW.js';
version=data.versions.nw;
}
}
if(!name){
name='Node.js';
arch=data.arch;
os=data.platform;
version=/[\d.]+/.exec(data.version);
version=version?version[0]:null;
}
}
}
// Detect Adobe AIR.
else if(getClassOf(data=context.runtime)==airRuntimeClass){
name='Adobe AIR';
os=data.flash.system.Capabilities.os;
}
// Detect PhantomJS.
else if(getClassOf(data=context.phantom)==phantomClass){
name='PhantomJS';
version=(data=data.version||null)&&data.major+'.'+data.minor+'.'+data.patch;
}
// Detect IE compatibility modes.
else if(typeof doc.documentMode=='number'&&(data=/\bTrident\/(\d+)/i.exec(ua))){
// We're in compatibility mode when the Trident version + 4 doesn't
// equal the document mode.
version=[version,doc.documentMode];
if((data=+data[1]+4)!=version[1]){
description.push('IE '+version[1]+' mode');
layout&&(layout[1]='');
version[1]=data;
}
version=name=='IE'?String(version[1].toFixed(1)):version[0];
}
// Detect IE 11 masking as other browsers.
else if(typeof doc.documentMode=='number'&&/^(?:Chrome|Firefox)\b/.test(name)){
description.push('masking as '+name+' '+version);
name='IE';
version='11.0';
layout=['Trident'];
os='Windows';
}
os=os&&format(os);
}
// Detect prerelease phases.
if(version&&(data=
/(?:[ab]|dp|pre|[ab]\d+pre)(?:\d+\+?)?$/i.exec(version)||
/(?:alpha|beta)(?: ?\d)?/i.exec(ua+';'+(useFeatures&&nav.appMinorVersion))||
/\bMinefield\b/i.test(ua)&&'a'))
{
prerelease=/b/i.test(data)?'beta':'alpha';
version=version.replace(RegExp(data+'\\+?$'),'')+(
prerelease=='beta'?beta:alpha)+(/\d+\+?/.exec(data)||'');
}
// Detect Firefox Mobile.
if(name=='Fennec'||name=='Firefox'&&/\b(?:Android|Firefox OS)\b/.test(os)){
name='Firefox Mobile';
}
// Obscure Maxthon's unreliable version.
else if(name=='Maxthon'&&version){
version=version.replace(/\.[\d.]+/,'.x');
}
// Detect Xbox 360 and Xbox One.
else if(/\bXbox\b/i.test(product)){
if(product=='Xbox 360'){
os=null;
}
if(product=='Xbox 360'&&/\bIEMobile\b/.test(ua)){
description.unshift('mobile mode');
}
}
// Add mobile postfix.
else if((/^(?:Chrome|IE|Opera)$/.test(name)||name&&!product&&!/Browser|Mobi/.test(name))&&(
os=='Windows CE'||/Mobi/i.test(ua))){
name+=' Mobile';
}
// Detect IE platform preview.
else if(name=='IE'&&useFeatures){
try{
if(context.external===null){
description.unshift('platform preview');
}
}catch(e){
description.unshift('embedded');
}
}
// Detect BlackBerry OS version.
// http://docs.blackberry.com/en/developers/deliverables/18169/HTTP_headers_sent_by_BB_Browser_1234911_11.jsp
else if((/\bBlackBerry\b/.test(product)||/\bBB10\b/.test(ua))&&(data=
(RegExp(product.replace(/ +/g,' *')+'/([.\\d]+)','i').exec(ua)||0)[1]||
version))
{
data=[data,/BB10/.test(ua)];
os=(data[1]?(product=null,manufacturer='BlackBerry'):'Device Software')+' '+data[0];
version=null;
}
// Detect Opera identifying/masking itself as another browser.
// http://www.opera.com/support/kb/view/843/
else if(this!=forOwn&&product!='Wii'&&(
useFeatures&&opera||
/Opera/.test(name)&&/\b(?:MSIE|Firefox)\b/i.test(ua)||
name=='Firefox'&&/\bOS X (?:\d+\.){2,}/.test(os)||
name=='IE'&&(
os&&!/^Win/.test(os)&&version>5.5||
/\bWindows XP\b/.test(os)&&version>8||
version==8&&!/\bTrident\b/.test(ua)))&&

!reOpera.test(data=parse.call(forOwn,ua.replace(reOpera,'')+';'))&&data.name){
// When "identifying", the UA contains both Opera and the other browser's name.
data='ing as '+data.name+((data=data.version)?' '+data:'');
if(reOpera.test(name)){
if(/\bIE\b/.test(data)&&os=='Mac OS'){
os=null;
}
data='identify'+data;
}
// When "masking", the UA contains only the other browser's name.
else{
data='mask'+data;
if(operaClass){
name=format(operaClass.replace(/([a-z])([A-Z])/g,'$1 $2'));
}else{
name='Opera';
}
if(/\bIE\b/.test(data)){
os=null;
}
if(!useFeatures){
version=null;
}
}
layout=['Presto'];
description.push(data);
}
// Detect WebKit Nightly and approximate Chrome/Safari versions.
if(data=(/\bAppleWebKit\/([\d.]+\+?)/i.exec(ua)||0)[1]){
// Correct build number for numeric comparison.
// (e.g. "532.5" becomes "532.05")
data=[parseFloat(data.replace(/\.(\d)$/,'.0$1')),data];
// Nightly builds are postfixed with a "+".
if(name=='Safari'&&data[1].slice(-1)=='+'){
name='WebKit Nightly';
prerelease='alpha';
version=data[1].slice(0,-1);
}
// Clear incorrect browser versions.
else if(version==data[1]||
version==(data[2]=(/\bSafari\/([\d.]+\+?)/i.exec(ua)||0)[1])){
version=null;
}
// Use the full Chrome version when available.
data[1]=(/\bChrome\/([\d.]+)/i.exec(ua)||0)[1];
// Detect Blink layout engine.
if(data[0]==537.36&&data[2]==537.36&&parseFloat(data[1])>=28&&layout=='WebKit'){
layout=['Blink'];
}
// Detect JavaScriptCore.
// http://stackoverflow.com/questions/6768474/how-can-i-detect-which-javascript-engine-v8-or-jsc-is-used-at-runtime-in-androi
if(!useFeatures||!likeChrome&&!data[1]){
layout&&(layout[1]='like Safari');
data=(data=data[0],data<400?1:data<500?2:data<526?3:data<533?4:data<534?'4+':data<535?5:data<537?6:data<538?7:data<601?8:'8');
}else{
layout&&(layout[1]='like Chrome');
data=data[1]||(data=data[0],data<530?1:data<532?2:data<532.05?3:data<533?4:data<534.03?5:data<534.07?6:data<534.10?7:data<534.13?8:data<534.16?9:data<534.24?10:data<534.30?11:data<535.01?12:data<535.02?'13+':data<535.07?15:data<535.11?16:data<535.19?17:data<536.05?18:data<536.10?19:data<537.01?20:data<537.11?'21+':data<537.13?23:data<537.18?24:data<537.24?25:data<537.36?26:layout!='Blink'?'27':'28');
}
// Add the postfix of ".x" or "+" for approximate versions.
layout&&(layout[1]+=' '+(data+=typeof data=='number'?'.x':/[.+]/.test(data)?'':'+'));
// Obscure version for some Safari 1-2 releases.
if(name=='Safari'&&(!version||parseInt(version)>45)){
version=data;
}
}
// Detect Opera desktop modes.
if(name=='Opera'&&(data=/\bzbov|zvav$/.exec(os))){
name+=' ';
description.unshift('desktop mode');
if(data=='zvav'){
name+='Mini';
version=null;
}else{
name+='Mobile';
}
os=os.replace(RegExp(' *'+data+'$'),'');
}
// Detect Chrome desktop mode.
else if(name=='Safari'&&/\bChrome\b/.exec(layout&&layout[1])){
description.unshift('desktop mode');
name='Chrome Mobile';
version=null;

if(/\bOS X\b/.test(os)){
manufacturer='Apple';
os='iOS 4.3+';
}else{
os=null;
}
}
// Strip incorrect OS versions.
if(version&&version.indexOf(data=/[\d.]+$/.exec(os))==0&&
ua.indexOf('/'+data+'-')>-1){
os=trim(os.replace(data,''));
}
// Add layout engine.
if(layout&&!/\b(?:Avant|Nook)\b/.test(name)&&(
/Browser|Lunascape|Maxthon/.test(name)||
name!='Safari'&&/^iOS/.test(os)&&/\bSafari\b/.test(layout[1])||
/^(?:Adobe|Arora|Breach|Midori|Opera|Phantom|Rekonq|Rock|Samsung Internet|Sleipnir|Web)/.test(name)&&layout[1])){
// Don't add layout details to description if they are falsey.
(data=layout[layout.length-1])&&description.push(data);
}
// Combine contextual information.
if(description.length){
description=['('+description.join('; ')+')'];
}
// Append manufacturer to description.
if(manufacturer&&product&&product.indexOf(manufacturer)<0){
description.push('on '+manufacturer);
}
// Append product to description.
if(product){
description.push((/^on /.test(description[description.length-1])?'':'on ')+product);
}
// Parse the OS into an object.
if(os){
data=/ ([\d.+]+)$/.exec(os);
isSpecialCasedOS=data&&os.charAt(os.length-data[0].length-1)=='/';
os={
'architecture':32,
'family':data&&!isSpecialCasedOS?os.replace(data[0],''):os,
'version':data?data[1]:null,
'toString':function toString(){
var version=this.version;
return this.family+(version&&!isSpecialCasedOS?' '+version:'')+(this.architecture==64?' 64-bit':'');
}};

}
// Add browser/OS architecture.
if((data=/\b(?:AMD|IA|Win|WOW|x86_|x)64\b/i.exec(arch))&&!/\bi686\b/i.test(arch)){
if(os){
os.architecture=64;
os.family=os.family.replace(RegExp(' *'+data),'');
}
if(
name&&(/\bWOW64\b/i.test(ua)||
useFeatures&&/\w(?:86|32)$/.test(nav.cpuClass||nav.platform)&&!/\bWin64; x64\b/i.test(ua)))
{
description.unshift('32-bit');
}
}
// Chrome 39 and above on OS X is always 64-bit.
else if(
os&&/^OS X/.test(os.family)&&
name=='Chrome'&&parseFloat(version)>=39)
{
os.architecture=64;
}

ua||(ua=null);

/*------------------------------------------------------------------------*/

/**
     * The platform object.
     *
     * @name platform
     * @type Object
     */
var platform={};

/**
     * The platform description.
     *
     * @memberOf platform
     * @type string|null
     */
platform.description=ua;

/**
     * The name of the browser's layout engine.
     *
     * The list of common layout engines include:
     * "Blink", "EdgeHTML", "Gecko", "Trident" and "WebKit"
     *
     * @memberOf platform
     * @type string|null
     */
platform.layout=layout&&layout[0];

/**
     * The name of the product's manufacturer.
     *
     * The list of manufacturers include:
     * "Apple", "Archos", "Amazon", "Asus", "Barnes & Noble", "BlackBerry",
     * "Google", "HP", "HTC", "LG", "Microsoft", "Motorola", "Nintendo",
     * "Nokia", "Samsung" and "Sony"
     *
     * @memberOf platform
     * @type string|null
     */
platform.manufacturer=manufacturer;

/**
     * The name of the browser/environment.
     *
     * The list of common browser names include:
     * "Chrome", "Electron", "Firefox", "Firefox for iOS", "IE",
     * "Microsoft Edge", "PhantomJS", "Safari", "SeaMonkey", "Silk",
     * "Opera Mini" and "Opera"
     *
     * Mobile versions of some browsers have "Mobile" appended to their name:
     * eg. "Chrome Mobile", "Firefox Mobile", "IE Mobile" and "Opera Mobile"
     *
     * @memberOf platform
     * @type string|null
     */
platform.name=name;

/**
     * The alpha/beta release indicator.
     *
     * @memberOf platform
     * @type string|null
     */
platform.prerelease=prerelease;

/**
     * The name of the product hosting the browser.
     *
     * The list of common products include:
     *
     * "BlackBerry", "Galaxy S4", "Lumia", "iPad", "iPod", "iPhone", "Kindle",
     * "Kindle Fire", "Nexus", "Nook", "PlayBook", "TouchPad" and "Transformer"
     *
     * @memberOf platform
     * @type string|null
     */
platform.product=product;

/**
     * The browser's user agent string.
     *
     * @memberOf platform
     * @type string|null
     */
platform.ua=ua;

/**
     * The browser/environment version.
     *
     * @memberOf platform
     * @type string|null
     */
platform.version=name&&version;

/**
     * The name of the operating system.
     *
     * @memberOf platform
     * @type Object
     */
platform.os=os||{

/**
       * The CPU architecture the OS is built for.
       *
       * @memberOf platform.os
       * @type number|null
       */
'architecture':null,

/**
       * The family of the OS.
       *
       * Common values include:
       * "Windows", "Windows Server 2008 R2 / 7", "Windows Server 2008 / Vista",
       * "Windows XP", "OS X", "Ubuntu", "Debian", "Fedora", "Red Hat", "SuSE",
       * "Android", "iOS" and "Windows Phone"
       *
       * @memberOf platform.os
       * @type string|null
       */
'family':null,

/**
       * The version of the OS.
       *
       * @memberOf platform.os
       * @type string|null
       */
'version':null,

/**
       * Returns the OS string.
       *
       * @memberOf platform.os
       * @returns {string} The OS string.
       */
'toString':function toString(){return'null';}};


platform.parse=parse;
platform.toString=toStringPlatform;

if(platform.version){
description.unshift(version);
}
if(platform.name){
description.unshift(name);
}
if(os&&name&&!(os==String(os).split(' ')[0]&&(os==name.split(' ')[0]||product))){
description.push(product?'('+os+')':'on '+os);
}
if(description.length){
platform.description=description.join(' ');
}
return platform;
}

/*--------------------------------------------------------------------------*/

// Export platform.
var platform=parse();

// Some AMD build optimizers, like r.js, check for condition patterns like the following:
if(typeof define=='function'&&typeof define.amd=='object'&&define.amd){
// Expose platform on the global object to prevent errors when platform is
// loaded by a script tag in the presence of an AMD loader.
// See http://requirejs.org/docs/errors.html#mismatch for more details.
root.platform=platform;

// Define as an anonymous module so platform can be aliased through path mapping.
define(function(){
return platform;
});
}
// Check for `exports` after `define` in case a build optimizer adds an `exports` object.
else if(freeExports&&freeModule){
// Export for CommonJS support.
forOwn(platform,function(value,key){
freeExports[key]=value;
});
}else
{
// Export to the global object.
root.platform=platform;
}
}).call(this);

}).call(this,typeof global!=="undefined"?global:typeof self!=="undefined"?self:typeof window!=="undefined"?window:{});
},{}],317:[function(require,module,exports){
(function(process){
'use strict';

if(typeof process==='undefined'||
!process.version||
process.version.indexOf('v0.')===0||
process.version.indexOf('v1.')===0&&process.version.indexOf('v1.8.')!==0){
module.exports={nextTick:nextTick};
}else{
module.exports=process;
}

function nextTick(fn,arg1,arg2,arg3){
if(typeof fn!=='function'){
throw new TypeError('"callback" argument must be a function');
}
var len=arguments.length;
var args,i;
switch(len){
case 0:
case 1:
return process.nextTick(fn);
case 2:
return process.nextTick(function afterTickOne(){
fn.call(null,arg1);
});
case 3:
return process.nextTick(function afterTickTwo(){
fn.call(null,arg1,arg2);
});
case 4:
return process.nextTick(function afterTickThree(){
fn.call(null,arg1,arg2,arg3);
});
default:
args=new Array(len-1);
i=0;
while(i<args.length){
args[i++]=arguments[i];
}
return process.nextTick(function afterTick(){
fn.apply(null,args);
});}

}


}).call(this,require('_process'));
},{"_process":392}],318:[function(require,module,exports){
// shim for using process in browser
var process=module.exports={};

// cached from whatever global is present so that test runners that stub it
// don't break things.  But we need to wrap it in a try catch in case it is
// wrapped in strict mode code which doesn't define any globals.  It's inside a
// function because try/catches deoptimize in certain engines.

var cachedSetTimeout;
var cachedClearTimeout;

function defaultSetTimout(){
throw new Error('setTimeout has not been defined');
}
function defaultClearTimeout(){
throw new Error('clearTimeout has not been defined');
}
(function(){
try{
if(typeof setTimeout==='function'){
cachedSetTimeout=setTimeout;
}else{
cachedSetTimeout=defaultSetTimout;
}
}catch(e){
cachedSetTimeout=defaultSetTimout;
}
try{
if(typeof clearTimeout==='function'){
cachedClearTimeout=clearTimeout;
}else{
cachedClearTimeout=defaultClearTimeout;
}
}catch(e){
cachedClearTimeout=defaultClearTimeout;
}
})();
function runTimeout(fun){
if(cachedSetTimeout===setTimeout){
//normal enviroments in sane situations
return setTimeout(fun,0);
}
// if setTimeout wasn't available but was latter defined
if((cachedSetTimeout===defaultSetTimout||!cachedSetTimeout)&&setTimeout){
cachedSetTimeout=setTimeout;
return setTimeout(fun,0);
}
try{
// when when somebody has screwed with setTimeout but no I.E. maddness
return cachedSetTimeout(fun,0);
}catch(e){
try{
// When we are in I.E. but the script has been evaled so I.E. doesn't trust the global object when called normally
return cachedSetTimeout.call(null,fun,0);
}catch(e){
// same as above but when it's a version of I.E. that must have the global object for 'this', hopfully our context correct otherwise it will throw a global error
return cachedSetTimeout.call(this,fun,0);
}
}


}
function runClearTimeout(marker){
if(cachedClearTimeout===clearTimeout){
//normal enviroments in sane situations
return clearTimeout(marker);
}
// if clearTimeout wasn't available but was latter defined
if((cachedClearTimeout===defaultClearTimeout||!cachedClearTimeout)&&clearTimeout){
cachedClearTimeout=clearTimeout;
return clearTimeout(marker);
}
try{
// when when somebody has screwed with setTimeout but no I.E. maddness
return cachedClearTimeout(marker);
}catch(e){
try{
// When we are in I.E. but the script has been evaled so I.E. doesn't  trust the global object when called normally
return cachedClearTimeout.call(null,marker);
}catch(e){
// same as above but when it's a version of I.E. that must have the global object for 'this', hopfully our context correct otherwise it will throw a global error.
// Some versions of I.E. have different rules for clearTimeout vs setTimeout
return cachedClearTimeout.call(this,marker);
}
}



}
var queue=[];
var draining=false;
var currentQueue;
var queueIndex=-1;

function cleanUpNextTick(){
if(!draining||!currentQueue){
return;
}
draining=false;
if(currentQueue.length){
queue=currentQueue.concat(queue);
}else{
queueIndex=-1;
}
if(queue.length){
drainQueue();
}
}

function drainQueue(){
if(draining){
return;
}
var timeout=runTimeout(cleanUpNextTick);
draining=true;

var len=queue.length;
while(len){
currentQueue=queue;
queue=[];
while(++queueIndex<len){
if(currentQueue){
currentQueue[queueIndex].run();
}
}
queueIndex=-1;
len=queue.length;
}
currentQueue=null;
draining=false;
runClearTimeout(timeout);
}

process.nextTick=function(fun){
var args=new Array(arguments.length-1);
if(arguments.length>1){
for(var i=1;i<arguments.length;i++){
args[i-1]=arguments[i];
}
}
queue.push(new Item(fun,args));
if(queue.length===1&&!draining){
runTimeout(drainQueue);
}
};

// v8 likes predictible objects
function Item(fun,array){
this.fun=fun;
this.array=array;
}
Item.prototype.run=function(){
this.fun.apply(null,this.array);
};
process.title='browser';
process.browser=true;
process.env={};
process.argv=[];
process.version='';// empty string to avoid regexp issues
process.versions={};

function noop(){}

process.on=noop;
process.addListener=noop;
process.once=noop;
process.off=noop;
process.removeListener=noop;
process.removeAllListeners=noop;
process.emit=noop;
process.prependListener=noop;
process.prependOnceListener=noop;

process.listeners=function(name){return[];};

process.binding=function(name){
throw new Error('process.binding is not supported');
};

process.cwd=function(){return'/';};
process.chdir=function(dir){
throw new Error('process.chdir is not supported');
};
process.umask=function(){return 0;};

},{}],319:[function(require,module,exports){
(function(global){
/*! https://mths.be/punycode v1.4.1 by @mathias */
;(function(root){

/** Detect free variables */
var freeExports=typeof exports=='object'&&exports&&
!exports.nodeType&&exports;
var freeModule=typeof module=='object'&&module&&
!module.nodeType&&module;
var freeGlobal=typeof global=='object'&&global;
if(
freeGlobal.global===freeGlobal||
freeGlobal.window===freeGlobal||
freeGlobal.self===freeGlobal)
{
root=freeGlobal;
}

/**
	 * The `punycode` object.
	 * @name punycode
	 * @type Object
	 */
var punycode,

/** Highest positive signed 32-bit float value */
maxInt=2147483647,// aka. 0x7FFFFFFF or 2^31-1

/** Bootstring parameters */
base=36,
tMin=1,
tMax=26,
skew=38,
damp=700,
initialBias=72,
initialN=128,// 0x80
delimiter='-',// '\x2D'

/** Regular expressions */
regexPunycode=/^xn--/,
regexNonASCII=/[^\x20-\x7E]/,// unprintable ASCII chars + non-ASCII chars
regexSeparators=/[\x2E\u3002\uFF0E\uFF61]/g,// RFC 3490 separators

/** Error messages */
errors={
'overflow':'Overflow: input needs wider integers to process',
'not-basic':'Illegal input >= 0x80 (not a basic code point)',
'invalid-input':'Invalid input'},


/** Convenience shortcuts */
baseMinusTMin=base-tMin,
floor=Math.floor,
stringFromCharCode=String.fromCharCode,

/** Temporary variable */
key;

/*--------------------------------------------------------------------------*/

/**
	 * A generic error utility function.
	 * @private
	 * @param {String} type The error type.
	 * @returns {Error} Throws a `RangeError` with the applicable error message.
	 */
function error(type){
throw new RangeError(errors[type]);
}

/**
	 * A generic `Array#map` utility function.
	 * @private
	 * @param {Array} array The array to iterate over.
	 * @param {Function} callback The function that gets called for every array
	 * item.
	 * @returns {Array} A new array of values returned by the callback function.
	 */
function map(array,fn){
var length=array.length;
var result=[];
while(length--){
result[length]=fn(array[length]);
}
return result;
}

/**
	 * A simple `Array#map`-like wrapper to work with domain name strings or email
	 * addresses.
	 * @private
	 * @param {String} domain The domain name or email address.
	 * @param {Function} callback The function that gets called for every
	 * character.
	 * @returns {Array} A new string of characters returned by the callback
	 * function.
	 */
function mapDomain(string,fn){
var parts=string.split('@');
var result='';
if(parts.length>1){
// In email addresses, only the domain name should be punycoded. Leave
// the local part (i.e. everything up to `@`) intact.
result=parts[0]+'@';
string=parts[1];
}
// Avoid `split(regex)` for IE8 compatibility. See #17.
string=string.replace(regexSeparators,'\x2E');
var labels=string.split('.');
var encoded=map(labels,fn).join('.');
return result+encoded;
}

/**
	 * Creates an array containing the numeric code points of each Unicode
	 * character in the string. While JavaScript uses UCS-2 internally,
	 * this function will convert a pair of surrogate halves (each of which
	 * UCS-2 exposes as separate characters) into a single code point,
	 * matching UTF-16.
	 * @see `punycode.ucs2.encode`
	 * @see <https://mathiasbynens.be/notes/javascript-encoding>
	 * @memberOf punycode.ucs2
	 * @name decode
	 * @param {String} string The Unicode input string (UCS-2).
	 * @returns {Array} The new array of code points.
	 */
function ucs2decode(string){
var output=[],
counter=0,
length=string.length,
value,
extra;
while(counter<length){
value=string.charCodeAt(counter++);
if(value>=0xD800&&value<=0xDBFF&&counter<length){
// high surrogate, and there is a next character
extra=string.charCodeAt(counter++);
if((extra&0xFC00)==0xDC00){// low surrogate
output.push(((value&0x3FF)<<10)+(extra&0x3FF)+0x10000);
}else{
// unmatched surrogate; only append this code unit, in case the next
// code unit is the high surrogate of a surrogate pair
output.push(value);
counter--;
}
}else{
output.push(value);
}
}
return output;
}

/**
	 * Creates a string based on an array of numeric code points.
	 * @see `punycode.ucs2.decode`
	 * @memberOf punycode.ucs2
	 * @name encode
	 * @param {Array} codePoints The array of numeric code points.
	 * @returns {String} The new Unicode string (UCS-2).
	 */
function ucs2encode(array){
return map(array,function(value){
var output='';
if(value>0xFFFF){
value-=0x10000;
output+=stringFromCharCode(value>>>10&0x3FF|0xD800);
value=0xDC00|value&0x3FF;
}
output+=stringFromCharCode(value);
return output;
}).join('');
}

/**
	 * Converts a basic code point into a digit/integer.
	 * @see `digitToBasic()`
	 * @private
	 * @param {Number} codePoint The basic numeric code point value.
	 * @returns {Number} The numeric value of a basic code point (for use in
	 * representing integers) in the range `0` to `base - 1`, or `base` if
	 * the code point does not represent a value.
	 */
function basicToDigit(codePoint){
if(codePoint-48<10){
return codePoint-22;
}
if(codePoint-65<26){
return codePoint-65;
}
if(codePoint-97<26){
return codePoint-97;
}
return base;
}

/**
	 * Converts a digit/integer into a basic code point.
	 * @see `basicToDigit()`
	 * @private
	 * @param {Number} digit The numeric value of a basic code point.
	 * @returns {Number} The basic code point whose value (when used for
	 * representing integers) is `digit`, which needs to be in the range
	 * `0` to `base - 1`. If `flag` is non-zero, the uppercase form is
	 * used; else, the lowercase form is used. The behavior is undefined
	 * if `flag` is non-zero and `digit` has no uppercase form.
	 */
function digitToBasic(digit,flag){
//  0..25 map to ASCII a..z or A..Z
// 26..35 map to ASCII 0..9
return digit+22+75*(digit<26)-((flag!=0)<<5);
}

/**
	 * Bias adaptation function as per section 3.4 of RFC 3492.
	 * https://tools.ietf.org/html/rfc3492#section-3.4
	 * @private
	 */
function adapt(delta,numPoints,firstTime){
var k=0;
delta=firstTime?floor(delta/damp):delta>>1;
delta+=floor(delta/numPoints);
for(;/* no initialization */delta>baseMinusTMin*tMax>>1;k+=base){
delta=floor(delta/baseMinusTMin);
}
return floor(k+(baseMinusTMin+1)*delta/(delta+skew));
}

/**
	 * Converts a Punycode string of ASCII-only symbols to a string of Unicode
	 * symbols.
	 * @memberOf punycode
	 * @param {String} input The Punycode string of ASCII-only symbols.
	 * @returns {String} The resulting string of Unicode symbols.
	 */
function decode(input){
// Don't use UCS-2
var output=[],
inputLength=input.length,
out,
i=0,
n=initialN,
bias=initialBias,
basic,
j,
index,
oldi,
w,
k,
digit,
t,
/** Cached calculation results */
baseMinusT;

// Handle the basic code points: let `basic` be the number of input code
// points before the last delimiter, or `0` if there is none, then copy
// the first basic code points to the output.

basic=input.lastIndexOf(delimiter);
if(basic<0){
basic=0;
}

for(j=0;j<basic;++j){
// if it's not a basic code point
if(input.charCodeAt(j)>=0x80){
error('not-basic');
}
output.push(input.charCodeAt(j));
}

// Main decoding loop: start just after the last delimiter if any basic code
// points were copied; start at the beginning otherwise.

for(index=basic>0?basic+1:0;index<inputLength;)/* no final expression */{

// `index` is the index of the next character to be consumed.
// Decode a generalized variable-length integer into `delta`,
// which gets added to `i`. The overflow checking is easier
// if we increase `i` as we go, then subtract off its starting
// value at the end to obtain `delta`.
for(oldi=i,w=1,k=base;;/* no condition */k+=base){

if(index>=inputLength){
error('invalid-input');
}

digit=basicToDigit(input.charCodeAt(index++));

if(digit>=base||digit>floor((maxInt-i)/w)){
error('overflow');
}

i+=digit*w;
t=k<=bias?tMin:k>=bias+tMax?tMax:k-bias;

if(digit<t){
break;
}

baseMinusT=base-t;
if(w>floor(maxInt/baseMinusT)){
error('overflow');
}

w*=baseMinusT;

}

out=output.length+1;
bias=adapt(i-oldi,out,oldi==0);

// `i` was supposed to wrap around from `out` to `0`,
// incrementing `n` each time, so we'll fix that now:
if(floor(i/out)>maxInt-n){
error('overflow');
}

n+=floor(i/out);
i%=out;

// Insert `n` at position `i` of the output
output.splice(i++,0,n);

}

return ucs2encode(output);
}

/**
	 * Converts a string of Unicode symbols (e.g. a domain name label) to a
	 * Punycode string of ASCII-only symbols.
	 * @memberOf punycode
	 * @param {String} input The string of Unicode symbols.
	 * @returns {String} The resulting Punycode string of ASCII-only symbols.
	 */
function encode(input){
var n,
delta,
handledCPCount,
basicLength,
bias,
j,
m,
q,
k,
t,
currentValue,
output=[],
/** `inputLength` will hold the number of code points in `input`. */
inputLength,
/** Cached calculation results */
handledCPCountPlusOne,
baseMinusT,
qMinusT;

// Convert the input in UCS-2 to Unicode
input=ucs2decode(input);

// Cache the length
inputLength=input.length;

// Initialize the state
n=initialN;
delta=0;
bias=initialBias;

// Handle the basic code points
for(j=0;j<inputLength;++j){
currentValue=input[j];
if(currentValue<0x80){
output.push(stringFromCharCode(currentValue));
}
}

handledCPCount=basicLength=output.length;

// `handledCPCount` is the number of code points that have been handled;
// `basicLength` is the number of basic code points.

// Finish the basic string - if it is not empty - with a delimiter
if(basicLength){
output.push(delimiter);
}

// Main encoding loop:
while(handledCPCount<inputLength){

// All non-basic code points < n have been handled already. Find the next
// larger one:
for(m=maxInt,j=0;j<inputLength;++j){
currentValue=input[j];
if(currentValue>=n&&currentValue<m){
m=currentValue;
}
}

// Increase `delta` enough to advance the decoder's <n,i> state to <m,0>,
// but guard against overflow
handledCPCountPlusOne=handledCPCount+1;
if(m-n>floor((maxInt-delta)/handledCPCountPlusOne)){
error('overflow');
}

delta+=(m-n)*handledCPCountPlusOne;
n=m;

for(j=0;j<inputLength;++j){
currentValue=input[j];

if(currentValue<n&&++delta>maxInt){
error('overflow');
}

if(currentValue==n){
// Represent delta as a generalized variable-length integer
for(q=delta,k=base;;/* no condition */k+=base){
t=k<=bias?tMin:k>=bias+tMax?tMax:k-bias;
if(q<t){
break;
}
qMinusT=q-t;
baseMinusT=base-t;
output.push(
stringFromCharCode(digitToBasic(t+qMinusT%baseMinusT,0)));

q=floor(qMinusT/baseMinusT);
}

output.push(stringFromCharCode(digitToBasic(q,0)));
bias=adapt(delta,handledCPCountPlusOne,handledCPCount==basicLength);
delta=0;
++handledCPCount;
}
}

++delta;
++n;

}
return output.join('');
}

/**
	 * Converts a Punycode string representing a domain name or an email address
	 * to Unicode. Only the Punycoded parts of the input will be converted, i.e.
	 * it doesn't matter if you call it on a string that has already been
	 * converted to Unicode.
	 * @memberOf punycode
	 * @param {String} input The Punycoded domain name or email address to
	 * convert to Unicode.
	 * @returns {String} The Unicode representation of the given Punycode
	 * string.
	 */
function toUnicode(input){
return mapDomain(input,function(string){
return regexPunycode.test(string)?
decode(string.slice(4).toLowerCase()):
string;
});
}

/**
	 * Converts a Unicode string representing a domain name or an email address to
	 * Punycode. Only the non-ASCII parts of the domain name will be converted,
	 * i.e. it doesn't matter if you call it with a domain that's already in
	 * ASCII.
	 * @memberOf punycode
	 * @param {String} input The domain name or email address to convert, as a
	 * Unicode string.
	 * @returns {String} The Punycode representation of the given domain name or
	 * email address.
	 */
function toASCII(input){
return mapDomain(input,function(string){
return regexNonASCII.test(string)?
'xn--'+encode(string):
string;
});
}

/*--------------------------------------------------------------------------*/

/** Define the public API */
punycode={
/**
		 * A string representing the current Punycode.js version number.
		 * @memberOf punycode
		 * @type String
		 */
'version':'1.4.1',
/**
		 * An object of methods to convert from JavaScript's internal character
		 * representation (UCS-2) to Unicode code points, and back.
		 * @see <https://mathiasbynens.be/notes/javascript-encoding>
		 * @memberOf punycode
		 * @type Object
		 */
'ucs2':{
'decode':ucs2decode,
'encode':ucs2encode},

'decode':decode,
'encode':encode,
'toASCII':toASCII,
'toUnicode':toUnicode};


/** Expose `punycode` */
// Some AMD build optimizers, like r.js, check for specific condition patterns
// like the following:
if(
typeof define=='function'&&
typeof define.amd=='object'&&
define.amd)
{
define('punycode',function(){
return punycode;
});
}else if(freeExports&&freeModule){
if(module.exports==freeExports){
// in Node.js, io.js, or RingoJS v0.8.0+
freeModule.exports=punycode;
}else{
// in Narwhal or RingoJS v0.7.0-
for(key in punycode){
punycode.hasOwnProperty(key)&&(freeExports[key]=punycode[key]);
}
}
}else{
// in Rhino or a web browser
root.punycode=punycode;
}

})(this);

}).call(this,typeof global!=="undefined"?global:typeof self!=="undefined"?self:typeof window!=="undefined"?window:{});
},{}],320:[function(require,module,exports){
// Copyright Joyent, Inc. and other Node contributors.
//
// Permission is hereby granted, free of charge, to any person obtaining a
// copy of this software and associated documentation files (the
// "Software"), to deal in the Software without restriction, including
// without limitation the rights to use, copy, modify, merge, publish,
// distribute, sublicense, and/or sell copies of the Software, and to permit
// persons to whom the Software is furnished to do so, subject to the
// following conditions:
//
// The above copyright notice and this permission notice shall be included
// in all copies or substantial portions of the Software.
//
// THE SOFTWARE IS PROVIDED "AS IS", WITHOUT WARRANTY OF ANY KIND, EXPRESS
// OR IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF
// MERCHANTABILITY, FITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN
// NO EVENT SHALL THE AUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM,
// DAMAGES OR OTHER LIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR
// OTHERWISE, ARISING FROM, OUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE
// USE OR OTHER DEALINGS IN THE SOFTWARE.

'use strict';

// If obj.hasOwnProperty has been overridden, then calling
// obj.hasOwnProperty(prop) will break.
// See: https://github.com/joyent/node/issues/1707
function hasOwnProperty(obj,prop){
return Object.prototype.hasOwnProperty.call(obj,prop);
}

module.exports=function(qs,sep,eq,options){
sep=sep||'&';
eq=eq||'=';
var obj={};

if(typeof qs!=='string'||qs.length===0){
return obj;
}

var regexp=/\+/g;
qs=qs.split(sep);

var maxKeys=1000;
if(options&&typeof options.maxKeys==='number'){
maxKeys=options.maxKeys;
}

var len=qs.length;
// maxKeys <= 0 means that we should not limit keys count
if(maxKeys>0&&len>maxKeys){
len=maxKeys;
}

for(var i=0;i<len;++i){
var x=qs[i].replace(regexp,'%20'),
idx=x.indexOf(eq),
kstr,vstr,k,v;

if(idx>=0){
kstr=x.substr(0,idx);
vstr=x.substr(idx+1);
}else{
kstr=x;
vstr='';
}

k=decodeURIComponent(kstr);
v=decodeURIComponent(vstr);

if(!hasOwnProperty(obj,k)){
obj[k]=v;
}else if(isArray(obj[k])){
obj[k].push(v);
}else{
obj[k]=[obj[k],v];
}
}

return obj;
};

var isArray=Array.isArray||function(xs){
return Object.prototype.toString.call(xs)==='[object Array]';
};

},{}],321:[function(require,module,exports){
// Copyright Joyent, Inc. and other Node contributors.
//
// Permission is hereby granted, free of charge, to any person obtaining a
// copy of this software and associated documentation files (the
// "Software"), to deal in the Software without restriction, including
// without limitation the rights to use, copy, modify, merge, publish,
// distribute, sublicense, and/or sell copies of the Software, and to permit
// persons to whom the Software is furnished to do so, subject to the
// following conditions:
//
// The above copyright notice and this permission notice shall be included
// in all copies or substantial portions of the Software.
//
// THE SOFTWARE IS PROVIDED "AS IS", WITHOUT WARRANTY OF ANY KIND, EXPRESS
// OR IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF
// MERCHANTABILITY, FITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN
// NO EVENT SHALL THE AUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM,
// DAMAGES OR OTHER LIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR
// OTHERWISE, ARISING FROM, OUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE
// USE OR OTHER DEALINGS IN THE SOFTWARE.

'use strict';

var stringifyPrimitive=function stringifyPrimitive(v){
switch(typeof v){
case'string':
return v;

case'boolean':
return v?'true':'false';

case'number':
return isFinite(v)?v:'';

default:
return'';}

};

module.exports=function(obj,sep,eq,name){
sep=sep||'&';
eq=eq||'=';
if(obj===null){
obj=undefined;
}

if(typeof obj==='object'){
return map(objectKeys(obj),function(k){
var ks=encodeURIComponent(stringifyPrimitive(k))+eq;
if(isArray(obj[k])){
return map(obj[k],function(v){
return ks+encodeURIComponent(stringifyPrimitive(v));
}).join(sep);
}else{
return ks+encodeURIComponent(stringifyPrimitive(obj[k]));
}
}).join(sep);

}

if(!name)return'';
return encodeURIComponent(stringifyPrimitive(name))+eq+
encodeURIComponent(stringifyPrimitive(obj));
};

var isArray=Array.isArray||function(xs){
return Object.prototype.toString.call(xs)==='[object Array]';
};

function map(xs,f){
if(xs.map)return xs.map(f);
var res=[];
for(var i=0;i<xs.length;i++){
res.push(f(xs[i],i));
}
return res;
}

var objectKeys=Object.keys||function(obj){
var res=[];
for(var key in obj){
if(Object.prototype.hasOwnProperty.call(obj,key))res.push(key);
}
return res;
};

},{}],322:[function(require,module,exports){
'use strict';

exports.decode=exports.parse=require('./decode');
exports.encode=exports.stringify=require('./encode');

},{"./decode":320,"./encode":321}],323:[function(require,module,exports){
module.exports=require('./lib/_stream_duplex.js');

},{"./lib/_stream_duplex.js":324}],324:[function(require,module,exports){
// Copyright Joyent, Inc. and other Node contributors.
//
// Permission is hereby granted, free of charge, to any person obtaining a
// copy of this software and associated documentation files (the
// "Software"), to deal in the Software without restriction, including
// without limitation the rights to use, copy, modify, merge, publish,
// distribute, sublicense, and/or sell copies of the Software, and to permit
// persons to whom the Software is furnished to do so, subject to the
// following conditions:
//
// The above copyright notice and this permission notice shall be included
// in all copies or substantial portions of the Software.
//
// THE SOFTWARE IS PROVIDED "AS IS", WITHOUT WARRANTY OF ANY KIND, EXPRESS
// OR IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF
// MERCHANTABILITY, FITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN
// NO EVENT SHALL THE AUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM,
// DAMAGES OR OTHER LIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR
// OTHERWISE, ARISING FROM, OUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE
// USE OR OTHER DEALINGS IN THE SOFTWARE.

// a duplex stream is just a stream that is both readable and writable.
// Since JS doesn't have multiple prototypal inheritance, this class
// prototypally inherits from Readable, and then parasitically from
// Writable.

'use strict';

/*<replacement>*/

var pna=require('process-nextick-args');
/*</replacement>*/

/*<replacement>*/
var objectKeys=Object.keys||function(obj){
var keys=[];
for(var key in obj){
keys.push(key);
}return keys;
};
/*</replacement>*/

module.exports=Duplex;

/*<replacement>*/
var util=Object.create(require('core-util-is'));
util.inherits=require('inherits');
/*</replacement>*/

var Readable=require('./_stream_readable');
var Writable=require('./_stream_writable');

util.inherits(Duplex,Readable);

{
// avoid scope creep, the keys array can then be collected
var keys=objectKeys(Writable.prototype);
for(var v=0;v<keys.length;v++){
var method=keys[v];
if(!Duplex.prototype[method])Duplex.prototype[method]=Writable.prototype[method];
}
}

function Duplex(options){
if(!(this instanceof Duplex))return new Duplex(options);

Readable.call(this,options);
Writable.call(this,options);

if(options&&options.readable===false)this.readable=false;

if(options&&options.writable===false)this.writable=false;

this.allowHalfOpen=true;
if(options&&options.allowHalfOpen===false)this.allowHalfOpen=false;

this.once('end',onend);
}

Object.defineProperty(Duplex.prototype,'writableHighWaterMark',{
// making it explicit this property is not enumerable
// because otherwise some prototype manipulation in
// userland will fail
enumerable:false,
get:function get(){
return this._writableState.highWaterMark;
}});


// the no-half-open enforcer
function onend(){
// if we allow half-open state, or if the writable side ended,
// then we're ok.
if(this.allowHalfOpen||this._writableState.ended)return;

// no more data can be written.
// But allow more writes to happen in this tick.
pna.nextTick(onEndNT,this);
}

function onEndNT(self){
self.end();
}

Object.defineProperty(Duplex.prototype,'destroyed',{
get:function get(){
if(this._readableState===undefined||this._writableState===undefined){
return false;
}
return this._readableState.destroyed&&this._writableState.destroyed;
},
set:function set(value){
// we ignore the value if the stream
// has not been initialized yet
if(this._readableState===undefined||this._writableState===undefined){
return;
}

// backward compatibility, the user is explicitly
// managing destroyed
this._readableState.destroyed=value;
this._writableState.destroyed=value;
}});


Duplex.prototype._destroy=function(err,cb){
this.push(null);
this.end();

pna.nextTick(cb,err);
};
},{"./_stream_readable":326,"./_stream_writable":328,"core-util-is":293,"inherits":306,"process-nextick-args":317}],325:[function(require,module,exports){
// Copyright Joyent, Inc. and other Node contributors.
//
// Permission is hereby granted, free of charge, to any person obtaining a
// copy of this software and associated documentation files (the
// "Software"), to deal in the Software without restriction, including
// without limitation the rights to use, copy, modify, merge, publish,
// distribute, sublicense, and/or sell copies of the Software, and to permit
// persons to whom the Software is furnished to do so, subject to the
// following conditions:
//
// The above copyright notice and this permission notice shall be included
// in all copies or substantial portions of the Software.
//
// THE SOFTWARE IS PROVIDED "AS IS", WITHOUT WARRANTY OF ANY KIND, EXPRESS
// OR IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF
// MERCHANTABILITY, FITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN
// NO EVENT SHALL THE AUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM,
// DAMAGES OR OTHER LIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR
// OTHERWISE, ARISING FROM, OUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE
// USE OR OTHER DEALINGS IN THE SOFTWARE.

// a passthrough stream.
// basically just the most minimal sort of Transform stream.
// Every written chunk gets output as-is.

'use strict';

module.exports=PassThrough;

var Transform=require('./_stream_transform');

/*<replacement>*/
var util=Object.create(require('core-util-is'));
util.inherits=require('inherits');
/*</replacement>*/

util.inherits(PassThrough,Transform);

function PassThrough(options){
if(!(this instanceof PassThrough))return new PassThrough(options);

Transform.call(this,options);
}

PassThrough.prototype._transform=function(chunk,encoding,cb){
cb(null,chunk);
};
},{"./_stream_transform":327,"core-util-is":293,"inherits":306}],326:[function(require,module,exports){
(function(process,global){
// Copyright Joyent, Inc. and other Node contributors.
//
// Permission is hereby granted, free of charge, to any person obtaining a
// copy of this software and associated documentation files (the
// "Software"), to deal in the Software without restriction, including
// without limitation the rights to use, copy, modify, merge, publish,
// distribute, sublicense, and/or sell copies of the Software, and to permit
// persons to whom the Software is furnished to do so, subject to the
// following conditions:
//
// The above copyright notice and this permission notice shall be included
// in all copies or substantial portions of the Software.
//
// THE SOFTWARE IS PROVIDED "AS IS", WITHOUT WARRANTY OF ANY KIND, EXPRESS
// OR IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF
// MERCHANTABILITY, FITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN
// NO EVENT SHALL THE AUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM,
// DAMAGES OR OTHER LIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR
// OTHERWISE, ARISING FROM, OUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE
// USE OR OTHER DEALINGS IN THE SOFTWARE.

'use strict';

/*<replacement>*/

var pna=require('process-nextick-args');
/*</replacement>*/

module.exports=Readable;

/*<replacement>*/
var isArray=require('isarray');
/*</replacement>*/

/*<replacement>*/
var Duplex;
/*</replacement>*/

Readable.ReadableState=ReadableState;

/*<replacement>*/
var EE=require('events').EventEmitter;

var EElistenerCount=function EElistenerCount(emitter,type){
return emitter.listeners(type).length;
};
/*</replacement>*/

/*<replacement>*/
var Stream=require('./internal/streams/stream');
/*</replacement>*/

/*<replacement>*/

var Buffer=require('safe-buffer').Buffer;
var OurUint8Array=global.Uint8Array||function(){};
function _uint8ArrayToBuffer(chunk){
return Buffer.from(chunk);
}
function _isUint8Array(obj){
return Buffer.isBuffer(obj)||obj instanceof OurUint8Array;
}

/*</replacement>*/

/*<replacement>*/
var util=Object.create(require('core-util-is'));
util.inherits=require('inherits');
/*</replacement>*/

/*<replacement>*/
var debugUtil=require('util');
var debug=void 0;
if(debugUtil&&debugUtil.debuglog){
debug=debugUtil.debuglog('stream');
}else{
debug=function debug(){};
}
/*</replacement>*/

var BufferList=require('./internal/streams/BufferList');
var destroyImpl=require('./internal/streams/destroy');
var StringDecoder;

util.inherits(Readable,Stream);

var kProxyEvents=['error','close','destroy','pause','resume'];

function prependListener(emitter,event,fn){
// Sadly this is not cacheable as some libraries bundle their own
// event emitter implementation with them.
if(typeof emitter.prependListener==='function')return emitter.prependListener(event,fn);

// This is a hack to make sure that our error handler is attached before any
// userland ones.  NEVER DO THIS. This is here only because this code needs
// to continue to work with older versions of Node.js that do not include
// the prependListener() method. The goal is to eventually remove this hack.
if(!emitter._events||!emitter._events[event])emitter.on(event,fn);else if(isArray(emitter._events[event]))emitter._events[event].unshift(fn);else emitter._events[event]=[fn,emitter._events[event]];
}

function ReadableState(options,stream){
Duplex=Duplex||require('./_stream_duplex');

options=options||{};

// Duplex streams are both readable and writable, but share
// the same options object.
// However, some cases require setting options to different
// values for the readable and the writable sides of the duplex stream.
// These options can be provided separately as readableXXX and writableXXX.
var isDuplex=stream instanceof Duplex;

// object stream flag. Used to make read(n) ignore n and to
// make all the buffer merging and length checks go away
this.objectMode=!!options.objectMode;

if(isDuplex)this.objectMode=this.objectMode||!!options.readableObjectMode;

// the point at which it stops calling _read() to fill the buffer
// Note: 0 is a valid value, means "don't call _read preemptively ever"
var hwm=options.highWaterMark;
var readableHwm=options.readableHighWaterMark;
var defaultHwm=this.objectMode?16:16*1024;

if(hwm||hwm===0)this.highWaterMark=hwm;else if(isDuplex&&(readableHwm||readableHwm===0))this.highWaterMark=readableHwm;else this.highWaterMark=defaultHwm;

// cast to ints.
this.highWaterMark=Math.floor(this.highWaterMark);

// A linked list is used to store data chunks instead of an array because the
// linked list can remove elements from the beginning faster than
// array.shift()
this.buffer=new BufferList();
this.length=0;
this.pipes=null;
this.pipesCount=0;
this.flowing=null;
this.ended=false;
this.endEmitted=false;
this.reading=false;

// a flag to be able to tell if the event 'readable'/'data' is emitted
// immediately, or on a later tick.  We set this to true at first, because
// any actions that shouldn't happen until "later" should generally also
// not happen before the first read call.
this.sync=true;

// whenever we return null, then we set a flag to say
// that we're awaiting a 'readable' event emission.
this.needReadable=false;
this.emittedReadable=false;
this.readableListening=false;
this.resumeScheduled=false;

// has it been destroyed
this.destroyed=false;

// Crypto is kind of old and crusty.  Historically, its default string
// encoding is 'binary' so we have to make this configurable.
// Everything else in the universe uses 'utf8', though.
this.defaultEncoding=options.defaultEncoding||'utf8';

// the number of writers that are awaiting a drain event in .pipe()s
this.awaitDrain=0;

// if true, a maybeReadMore has been scheduled
this.readingMore=false;

this.decoder=null;
this.encoding=null;
if(options.encoding){
if(!StringDecoder)StringDecoder=require('string_decoder/').StringDecoder;
this.decoder=new StringDecoder(options.encoding);
this.encoding=options.encoding;
}
}

function Readable(options){
Duplex=Duplex||require('./_stream_duplex');

if(!(this instanceof Readable))return new Readable(options);

this._readableState=new ReadableState(options,this);

// legacy
this.readable=true;

if(options){
if(typeof options.read==='function')this._read=options.read;

if(typeof options.destroy==='function')this._destroy=options.destroy;
}

Stream.call(this);
}

Object.defineProperty(Readable.prototype,'destroyed',{
get:function get(){
if(this._readableState===undefined){
return false;
}
return this._readableState.destroyed;
},
set:function set(value){
// we ignore the value if the stream
// has not been initialized yet
if(!this._readableState){
return;
}

// backward compatibility, the user is explicitly
// managing destroyed
this._readableState.destroyed=value;
}});


Readable.prototype.destroy=destroyImpl.destroy;
Readable.prototype._undestroy=destroyImpl.undestroy;
Readable.prototype._destroy=function(err,cb){
this.push(null);
cb(err);
};

// Manually shove something into the read() buffer.
// This returns true if the highWaterMark has not been hit yet,
// similar to how Writable.write() returns true if you should
// write() some more.
Readable.prototype.push=function(chunk,encoding){
var state=this._readableState;
var skipChunkCheck;

if(!state.objectMode){
if(typeof chunk==='string'){
encoding=encoding||state.defaultEncoding;
if(encoding!==state.encoding){
chunk=Buffer.from(chunk,encoding);
encoding='';
}
skipChunkCheck=true;
}
}else{
skipChunkCheck=true;
}

return readableAddChunk(this,chunk,encoding,false,skipChunkCheck);
};

// Unshift should *always* be something directly out of read()
Readable.prototype.unshift=function(chunk){
return readableAddChunk(this,chunk,null,true,false);
};

function readableAddChunk(stream,chunk,encoding,addToFront,skipChunkCheck){
var state=stream._readableState;
if(chunk===null){
state.reading=false;
onEofChunk(stream,state);
}else{
var er;
if(!skipChunkCheck)er=chunkInvalid(state,chunk);
if(er){
stream.emit('error',er);
}else if(state.objectMode||chunk&&chunk.length>0){
if(typeof chunk!=='string'&&!state.objectMode&&Object.getPrototypeOf(chunk)!==Buffer.prototype){
chunk=_uint8ArrayToBuffer(chunk);
}

if(addToFront){
if(state.endEmitted)stream.emit('error',new Error('stream.unshift() after end event'));else addChunk(stream,state,chunk,true);
}else if(state.ended){
stream.emit('error',new Error('stream.push() after EOF'));
}else{
state.reading=false;
if(state.decoder&&!encoding){
chunk=state.decoder.write(chunk);
if(state.objectMode||chunk.length!==0)addChunk(stream,state,chunk,false);else maybeReadMore(stream,state);
}else{
addChunk(stream,state,chunk,false);
}
}
}else if(!addToFront){
state.reading=false;
}
}

return needMoreData(state);
}

function addChunk(stream,state,chunk,addToFront){
if(state.flowing&&state.length===0&&!state.sync){
stream.emit('data',chunk);
stream.read(0);
}else{
// update the buffer info.
state.length+=state.objectMode?1:chunk.length;
if(addToFront)state.buffer.unshift(chunk);else state.buffer.push(chunk);

if(state.needReadable)emitReadable(stream);
}
maybeReadMore(stream,state);
}

function chunkInvalid(state,chunk){
var er;
if(!_isUint8Array(chunk)&&typeof chunk!=='string'&&chunk!==undefined&&!state.objectMode){
er=new TypeError('Invalid non-string/buffer chunk');
}
return er;
}

// if it's past the high water mark, we can push in some more.
// Also, if we have no data yet, we can stand some
// more bytes.  This is to work around cases where hwm=0,
// such as the repl.  Also, if the push() triggered a
// readable event, and the user called read(largeNumber) such that
// needReadable was set, then we ought to push more, so that another
// 'readable' event will be triggered.
function needMoreData(state){
return!state.ended&&(state.needReadable||state.length<state.highWaterMark||state.length===0);
}

Readable.prototype.isPaused=function(){
return this._readableState.flowing===false;
};

// backwards compatibility.
Readable.prototype.setEncoding=function(enc){
if(!StringDecoder)StringDecoder=require('string_decoder/').StringDecoder;
this._readableState.decoder=new StringDecoder(enc);
this._readableState.encoding=enc;
return this;
};

// Don't raise the hwm > 8MB
var MAX_HWM=0x800000;
function computeNewHighWaterMark(n){
if(n>=MAX_HWM){
n=MAX_HWM;
}else{
// Get the next highest power of 2 to prevent increasing hwm excessively in
// tiny amounts
n--;
n|=n>>>1;
n|=n>>>2;
n|=n>>>4;
n|=n>>>8;
n|=n>>>16;
n++;
}
return n;
}

// This function is designed to be inlinable, so please take care when making
// changes to the function body.
function howMuchToRead(n,state){
if(n<=0||state.length===0&&state.ended)return 0;
if(state.objectMode)return 1;
if(n!==n){
// Only flow one buffer at a time
if(state.flowing&&state.length)return state.buffer.head.data.length;else return state.length;
}
// If we're asking for more than the current hwm, then raise the hwm.
if(n>state.highWaterMark)state.highWaterMark=computeNewHighWaterMark(n);
if(n<=state.length)return n;
// Don't have enough
if(!state.ended){
state.needReadable=true;
return 0;
}
return state.length;
}

// you can override either this method, or the async _read(n) below.
Readable.prototype.read=function(n){
debug('read',n);
n=parseInt(n,10);
var state=this._readableState;
var nOrig=n;

if(n!==0)state.emittedReadable=false;

// if we're doing read(0) to trigger a readable event, but we
// already have a bunch of data in the buffer, then just trigger
// the 'readable' event and move on.
if(n===0&&state.needReadable&&(state.length>=state.highWaterMark||state.ended)){
debug('read: emitReadable',state.length,state.ended);
if(state.length===0&&state.ended)endReadable(this);else emitReadable(this);
return null;
}

n=howMuchToRead(n,state);

// if we've ended, and we're now clear, then finish it up.
if(n===0&&state.ended){
if(state.length===0)endReadable(this);
return null;
}

// All the actual chunk generation logic needs to be
// *below* the call to _read.  The reason is that in certain
// synthetic stream cases, such as passthrough streams, _read
// may be a completely synchronous operation which may change
// the state of the read buffer, providing enough data when
// before there was *not* enough.
//
// So, the steps are:
// 1. Figure out what the state of things will be after we do
// a read from the buffer.
//
// 2. If that resulting state will trigger a _read, then call _read.
// Note that this may be asynchronous, or synchronous.  Yes, it is
// deeply ugly to write APIs this way, but that still doesn't mean
// that the Readable class should behave improperly, as streams are
// designed to be sync/async agnostic.
// Take note if the _read call is sync or async (ie, if the read call
// has returned yet), so that we know whether or not it's safe to emit
// 'readable' etc.
//
// 3. Actually pull the requested chunks out of the buffer and return.

// if we need a readable event, then we need to do some reading.
var doRead=state.needReadable;
debug('need readable',doRead);

// if we currently have less than the highWaterMark, then also read some
if(state.length===0||state.length-n<state.highWaterMark){
doRead=true;
debug('length less than watermark',doRead);
}

// however, if we've ended, then there's no point, and if we're already
// reading, then it's unnecessary.
if(state.ended||state.reading){
doRead=false;
debug('reading or ended',doRead);
}else if(doRead){
debug('do read');
state.reading=true;
state.sync=true;
// if the length is currently zero, then we *need* a readable event.
if(state.length===0)state.needReadable=true;
// call internal read method
this._read(state.highWaterMark);
state.sync=false;
// If _read pushed data synchronously, then `reading` will be false,
// and we need to re-evaluate how much data we can return to the user.
if(!state.reading)n=howMuchToRead(nOrig,state);
}

var ret;
if(n>0)ret=fromList(n,state);else ret=null;

if(ret===null){
state.needReadable=true;
n=0;
}else{
state.length-=n;
}

if(state.length===0){
// If we have nothing in the buffer, then we want to know
// as soon as we *do* get something into the buffer.
if(!state.ended)state.needReadable=true;

// If we tried to read() past the EOF, then emit end on the next tick.
if(nOrig!==n&&state.ended)endReadable(this);
}

if(ret!==null)this.emit('data',ret);

return ret;
};

function onEofChunk(stream,state){
if(state.ended)return;
if(state.decoder){
var chunk=state.decoder.end();
if(chunk&&chunk.length){
state.buffer.push(chunk);
state.length+=state.objectMode?1:chunk.length;
}
}
state.ended=true;

// emit 'readable' now to make sure it gets picked up.
emitReadable(stream);
}

// Don't emit readable right away in sync mode, because this can trigger
// another read() call => stack overflow.  This way, it might trigger
// a nextTick recursion warning, but that's not so bad.
function emitReadable(stream){
var state=stream._readableState;
state.needReadable=false;
if(!state.emittedReadable){
debug('emitReadable',state.flowing);
state.emittedReadable=true;
if(state.sync)pna.nextTick(emitReadable_,stream);else emitReadable_(stream);
}
}

function emitReadable_(stream){
debug('emit readable');
stream.emit('readable');
flow(stream);
}

// at this point, the user has presumably seen the 'readable' event,
// and called read() to consume some data.  that may have triggered
// in turn another _read(n) call, in which case reading = true if
// it's in progress.
// However, if we're not ended, or reading, and the length < hwm,
// then go ahead and try to read some more preemptively.
function maybeReadMore(stream,state){
if(!state.readingMore){
state.readingMore=true;
pna.nextTick(maybeReadMore_,stream,state);
}
}

function maybeReadMore_(stream,state){
var len=state.length;
while(!state.reading&&!state.flowing&&!state.ended&&state.length<state.highWaterMark){
debug('maybeReadMore read 0');
stream.read(0);
if(len===state.length)
// didn't get any data, stop spinning.
break;else len=state.length;
}
state.readingMore=false;
}

// abstract method.  to be overridden in specific implementation classes.
// call cb(er, data) where data is <= n in length.
// for virtual (non-string, non-buffer) streams, "length" is somewhat
// arbitrary, and perhaps not very meaningful.
Readable.prototype._read=function(n){
this.emit('error',new Error('_read() is not implemented'));
};

Readable.prototype.pipe=function(dest,pipeOpts){
var src=this;
var state=this._readableState;

switch(state.pipesCount){
case 0:
state.pipes=dest;
break;
case 1:
state.pipes=[state.pipes,dest];
break;
default:
state.pipes.push(dest);
break;}

state.pipesCount+=1;
debug('pipe count=%d opts=%j',state.pipesCount,pipeOpts);

var doEnd=(!pipeOpts||pipeOpts.end!==false)&&dest!==process.stdout&&dest!==process.stderr;

var endFn=doEnd?onend:unpipe;
if(state.endEmitted)pna.nextTick(endFn);else src.once('end',endFn);

dest.on('unpipe',onunpipe);
function onunpipe(readable,unpipeInfo){
debug('onunpipe');
if(readable===src){
if(unpipeInfo&&unpipeInfo.hasUnpiped===false){
unpipeInfo.hasUnpiped=true;
cleanup();
}
}
}

function onend(){
debug('onend');
dest.end();
}

// when the dest drains, it reduces the awaitDrain counter
// on the source.  This would be more elegant with a .once()
// handler in flow(), but adding and removing repeatedly is
// too slow.
var ondrain=pipeOnDrain(src);
dest.on('drain',ondrain);

var cleanedUp=false;
function cleanup(){
debug('cleanup');
// cleanup event handlers once the pipe is broken
dest.removeListener('close',onclose);
dest.removeListener('finish',onfinish);
dest.removeListener('drain',ondrain);
dest.removeListener('error',onerror);
dest.removeListener('unpipe',onunpipe);
src.removeListener('end',onend);
src.removeListener('end',unpipe);
src.removeListener('data',ondata);

cleanedUp=true;

// if the reader is waiting for a drain event from this
// specific writer, then it would cause it to never start
// flowing again.
// So, if this is awaiting a drain, then we just call it now.
// If we don't know, then assume that we are waiting for one.
if(state.awaitDrain&&(!dest._writableState||dest._writableState.needDrain))ondrain();
}

// If the user pushes more data while we're writing to dest then we'll end up
// in ondata again. However, we only want to increase awaitDrain once because
// dest will only emit one 'drain' event for the multiple writes.
// => Introduce a guard on increasing awaitDrain.
var increasedAwaitDrain=false;
src.on('data',ondata);
function ondata(chunk){
debug('ondata');
increasedAwaitDrain=false;
var ret=dest.write(chunk);
if(false===ret&&!increasedAwaitDrain){
// If the user unpiped during `dest.write()`, it is possible
// to get stuck in a permanently paused state if that write
// also returned false.
// => Check whether `dest` is still a piping destination.
if((state.pipesCount===1&&state.pipes===dest||state.pipesCount>1&&indexOf(state.pipes,dest)!==-1)&&!cleanedUp){
debug('false write response, pause',src._readableState.awaitDrain);
src._readableState.awaitDrain++;
increasedAwaitDrain=true;
}
src.pause();
}
}

// if the dest has an error, then stop piping into it.
// however, don't suppress the throwing behavior for this.
function onerror(er){
debug('onerror',er);
unpipe();
dest.removeListener('error',onerror);
if(EElistenerCount(dest,'error')===0)dest.emit('error',er);
}

// Make sure our error handler is attached before userland ones.
prependListener(dest,'error',onerror);

// Both close and finish should trigger unpipe, but only once.
function onclose(){
dest.removeListener('finish',onfinish);
unpipe();
}
dest.once('close',onclose);
function onfinish(){
debug('onfinish');
dest.removeListener('close',onclose);
unpipe();
}
dest.once('finish',onfinish);

function unpipe(){
debug('unpipe');
src.unpipe(dest);
}

// tell the dest that it's being piped to
dest.emit('pipe',src);

// start the flow if it hasn't been started already.
if(!state.flowing){
debug('pipe resume');
src.resume();
}

return dest;
};

function pipeOnDrain(src){
return function(){
var state=src._readableState;
debug('pipeOnDrain',state.awaitDrain);
if(state.awaitDrain)state.awaitDrain--;
if(state.awaitDrain===0&&EElistenerCount(src,'data')){
state.flowing=true;
flow(src);
}
};
}

Readable.prototype.unpipe=function(dest){
var state=this._readableState;
var unpipeInfo={hasUnpiped:false};

// if we're not piping anywhere, then do nothing.
if(state.pipesCount===0)return this;

// just one destination.  most common case.
if(state.pipesCount===1){
// passed in one, but it's not the right one.
if(dest&&dest!==state.pipes)return this;

if(!dest)dest=state.pipes;

// got a match.
state.pipes=null;
state.pipesCount=0;
state.flowing=false;
if(dest)dest.emit('unpipe',this,unpipeInfo);
return this;
}

// slow case. multiple pipe destinations.

if(!dest){
// remove all.
var dests=state.pipes;
var len=state.pipesCount;
state.pipes=null;
state.pipesCount=0;
state.flowing=false;

for(var i=0;i<len;i++){
dests[i].emit('unpipe',this,unpipeInfo);
}return this;
}

// try to find the right one.
var index=indexOf(state.pipes,dest);
if(index===-1)return this;

state.pipes.splice(index,1);
state.pipesCount-=1;
if(state.pipesCount===1)state.pipes=state.pipes[0];

dest.emit('unpipe',this,unpipeInfo);

return this;
};

// set up data events if they are asked for
// Ensure readable listeners eventually get something
Readable.prototype.on=function(ev,fn){
var res=Stream.prototype.on.call(this,ev,fn);

if(ev==='data'){
// Start flowing on next tick if stream isn't explicitly paused
if(this._readableState.flowing!==false)this.resume();
}else if(ev==='readable'){
var state=this._readableState;
if(!state.endEmitted&&!state.readableListening){
state.readableListening=state.needReadable=true;
state.emittedReadable=false;
if(!state.reading){
pna.nextTick(nReadingNextTick,this);
}else if(state.length){
emitReadable(this);
}
}
}

return res;
};
Readable.prototype.addListener=Readable.prototype.on;

function nReadingNextTick(self){
debug('readable nexttick read 0');
self.read(0);
}

// pause() and resume() are remnants of the legacy readable stream API
// If the user uses them, then switch into old mode.
Readable.prototype.resume=function(){
var state=this._readableState;
if(!state.flowing){
debug('resume');
state.flowing=true;
resume(this,state);
}
return this;
};

function resume(stream,state){
if(!state.resumeScheduled){
state.resumeScheduled=true;
pna.nextTick(resume_,stream,state);
}
}

function resume_(stream,state){
if(!state.reading){
debug('resume read 0');
stream.read(0);
}

state.resumeScheduled=false;
state.awaitDrain=0;
stream.emit('resume');
flow(stream);
if(state.flowing&&!state.reading)stream.read(0);
}

Readable.prototype.pause=function(){
debug('call pause flowing=%j',this._readableState.flowing);
if(false!==this._readableState.flowing){
debug('pause');
this._readableState.flowing=false;
this.emit('pause');
}
return this;
};

function flow(stream){
var state=stream._readableState;
debug('flow',state.flowing);
while(state.flowing&&stream.read()!==null){}
}

// wrap an old-style stream as the async data source.
// This is *not* part of the readable stream interface.
// It is an ugly unfortunate mess of history.
Readable.prototype.wrap=function(stream){
var _this=this;

var state=this._readableState;
var paused=false;

stream.on('end',function(){
debug('wrapped end');
if(state.decoder&&!state.ended){
var chunk=state.decoder.end();
if(chunk&&chunk.length)_this.push(chunk);
}

_this.push(null);
});

stream.on('data',function(chunk){
debug('wrapped data');
if(state.decoder)chunk=state.decoder.write(chunk);

// don't skip over falsy values in objectMode
if(state.objectMode&&(chunk===null||chunk===undefined))return;else if(!state.objectMode&&(!chunk||!chunk.length))return;

var ret=_this.push(chunk);
if(!ret){
paused=true;
stream.pause();
}
});

// proxy all the other methods.
// important when wrapping filters and duplexes.
for(var i in stream){
if(this[i]===undefined&&typeof stream[i]==='function'){
this[i]=function(method){
return function(){
return stream[method].apply(stream,arguments);
};
}(i);
}
}

// proxy certain important events.
for(var n=0;n<kProxyEvents.length;n++){
stream.on(kProxyEvents[n],this.emit.bind(this,kProxyEvents[n]));
}

// when we try to consume some more bytes, simply unpause the
// underlying stream.
this._read=function(n){
debug('wrapped _read',n);
if(paused){
paused=false;
stream.resume();
}
};

return this;
};

Object.defineProperty(Readable.prototype,'readableHighWaterMark',{
// making it explicit this property is not enumerable
// because otherwise some prototype manipulation in
// userland will fail
enumerable:false,
get:function get(){
return this._readableState.highWaterMark;
}});


// exposed for testing purposes only.
Readable._fromList=fromList;

// Pluck off n bytes from an array of buffers.
// Length is the combined lengths of all the buffers in the list.
// This function is designed to be inlinable, so please take care when making
// changes to the function body.
function fromList(n,state){
// nothing buffered
if(state.length===0)return null;

var ret;
if(state.objectMode)ret=state.buffer.shift();else if(!n||n>=state.length){
// read it all, truncate the list
if(state.decoder)ret=state.buffer.join('');else if(state.buffer.length===1)ret=state.buffer.head.data;else ret=state.buffer.concat(state.length);
state.buffer.clear();
}else{
// read part of list
ret=fromListPartial(n,state.buffer,state.decoder);
}

return ret;
}

// Extracts only enough buffered data to satisfy the amount requested.
// This function is designed to be inlinable, so please take care when making
// changes to the function body.
function fromListPartial(n,list,hasStrings){
var ret;
if(n<list.head.data.length){
// slice is the same for buffers and strings
ret=list.head.data.slice(0,n);
list.head.data=list.head.data.slice(n);
}else if(n===list.head.data.length){
// first chunk is a perfect match
ret=list.shift();
}else{
// result spans more than one buffer
ret=hasStrings?copyFromBufferString(n,list):copyFromBuffer(n,list);
}
return ret;
}

// Copies a specified amount of characters from the list of buffered data
// chunks.
// This function is designed to be inlinable, so please take care when making
// changes to the function body.
function copyFromBufferString(n,list){
var p=list.head;
var c=1;
var ret=p.data;
n-=ret.length;
while(p=p.next){
var str=p.data;
var nb=n>str.length?str.length:n;
if(nb===str.length)ret+=str;else ret+=str.slice(0,n);
n-=nb;
if(n===0){
if(nb===str.length){
++c;
if(p.next)list.head=p.next;else list.head=list.tail=null;
}else{
list.head=p;
p.data=str.slice(nb);
}
break;
}
++c;
}
list.length-=c;
return ret;
}

// Copies a specified amount of bytes from the list of buffered data chunks.
// This function is designed to be inlinable, so please take care when making
// changes to the function body.
function copyFromBuffer(n,list){
var ret=Buffer.allocUnsafe(n);
var p=list.head;
var c=1;
p.data.copy(ret);
n-=p.data.length;
while(p=p.next){
var buf=p.data;
var nb=n>buf.length?buf.length:n;
buf.copy(ret,ret.length-n,0,nb);
n-=nb;
if(n===0){
if(nb===buf.length){
++c;
if(p.next)list.head=p.next;else list.head=list.tail=null;
}else{
list.head=p;
p.data=buf.slice(nb);
}
break;
}
++c;
}
list.length-=c;
return ret;
}

function endReadable(stream){
var state=stream._readableState;

// If we get here before consuming all the bytes, then that is a
// bug in node.  Should never happen.
if(state.length>0)throw new Error('"endReadable()" called on non-empty stream');

if(!state.endEmitted){
state.ended=true;
pna.nextTick(endReadableNT,state,stream);
}
}

function endReadableNT(state,stream){
// Check that we didn't get one last unshift.
if(!state.endEmitted&&state.length===0){
state.endEmitted=true;
stream.readable=false;
stream.emit('end');
}
}

function indexOf(xs,x){
for(var i=0,l=xs.length;i<l;i++){
if(xs[i]===x)return i;
}
return-1;
}
}).call(this,require('_process'),typeof global!=="undefined"?global:typeof self!=="undefined"?self:typeof window!=="undefined"?window:{});
},{"./_stream_duplex":324,"./internal/streams/BufferList":329,"./internal/streams/destroy":330,"./internal/streams/stream":331,"_process":392,"core-util-is":293,"events":296,"inherits":306,"isarray":308,"process-nextick-args":317,"safe-buffer":337,"string_decoder/":340,"util":79}],327:[function(require,module,exports){
// Copyright Joyent, Inc. and other Node contributors.
//
// Permission is hereby granted, free of charge, to any person obtaining a
// copy of this software and associated documentation files (the
// "Software"), to deal in the Software without restriction, including
// without limitation the rights to use, copy, modify, merge, publish,
// distribute, sublicense, and/or sell copies of the Software, and to permit
// persons to whom the Software is furnished to do so, subject to the
// following conditions:
//
// The above copyright notice and this permission notice shall be included
// in all copies or substantial portions of the Software.
//
// THE SOFTWARE IS PROVIDED "AS IS", WITHOUT WARRANTY OF ANY KIND, EXPRESS
// OR IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF
// MERCHANTABILITY, FITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN
// NO EVENT SHALL THE AUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM,
// DAMAGES OR OTHER LIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR
// OTHERWISE, ARISING FROM, OUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE
// USE OR OTHER DEALINGS IN THE SOFTWARE.

// a transform stream is a readable/writable stream where you do
// something with the data.  Sometimes it's called a "filter",
// but that's not a great name for it, since that implies a thing where
// some bits pass through, and others are simply ignored.  (That would
// be a valid example of a transform, of course.)
//
// While the output is causally related to the input, it's not a
// necessarily symmetric or synchronous transformation.  For example,
// a zlib stream might take multiple plain-text writes(), and then
// emit a single compressed chunk some time in the future.
//
// Here's how this works:
//
// The Transform stream has all the aspects of the readable and writable
// stream classes.  When you write(chunk), that calls _write(chunk,cb)
// internally, and returns false if there's a lot of pending writes
// buffered up.  When you call read(), that calls _read(n) until
// there's enough pending readable data buffered up.
//
// In a transform stream, the written data is placed in a buffer.  When
// _read(n) is called, it transforms the queued up data, calling the
// buffered _write cb's as it consumes chunks.  If consuming a single
// written chunk would result in multiple output chunks, then the first
// outputted bit calls the readcb, and subsequent chunks just go into
// the read buffer, and will cause it to emit 'readable' if necessary.
//
// This way, back-pressure is actually determined by the reading side,
// since _read has to be called to start processing a new chunk.  However,
// a pathological inflate type of transform can cause excessive buffering
// here.  For example, imagine a stream where every byte of input is
// interpreted as an integer from 0-255, and then results in that many
// bytes of output.  Writing the 4 bytes {ff,ff,ff,ff} would result in
// 1kb of data being output.  In this case, you could write a very small
// amount of input, and end up with a very large amount of output.  In
// such a pathological inflating mechanism, there'd be no way to tell
// the system to stop doing the transform.  A single 4MB write could
// cause the system to run out of memory.
//
// However, even in such a pathological case, only a single written chunk
// would be consumed, and then the rest would wait (un-transformed) until
// the results of the previous transformed chunk were consumed.

'use strict';

module.exports=Transform;

var Duplex=require('./_stream_duplex');

/*<replacement>*/
var util=Object.create(require('core-util-is'));
util.inherits=require('inherits');
/*</replacement>*/

util.inherits(Transform,Duplex);

function afterTransform(er,data){
var ts=this._transformState;
ts.transforming=false;

var cb=ts.writecb;

if(!cb){
return this.emit('error',new Error('write callback called multiple times'));
}

ts.writechunk=null;
ts.writecb=null;

if(data!=null)// single equals check for both `null` and `undefined`
this.push(data);

cb(er);

var rs=this._readableState;
rs.reading=false;
if(rs.needReadable||rs.length<rs.highWaterMark){
this._read(rs.highWaterMark);
}
}

function Transform(options){
if(!(this instanceof Transform))return new Transform(options);

Duplex.call(this,options);

this._transformState={
afterTransform:afterTransform.bind(this),
needTransform:false,
transforming:false,
writecb:null,
writechunk:null,
writeencoding:null};


// start out asking for a readable event once data is transformed.
this._readableState.needReadable=true;

// we have implemented the _read method, and done the other things
// that Readable wants before the first _read call, so unset the
// sync guard flag.
this._readableState.sync=false;

if(options){
if(typeof options.transform==='function')this._transform=options.transform;

if(typeof options.flush==='function')this._flush=options.flush;
}

// When the writable side finishes, then flush out anything remaining.
this.on('prefinish',prefinish);
}

function prefinish(){
var _this=this;

if(typeof this._flush==='function'){
this._flush(function(er,data){
done(_this,er,data);
});
}else{
done(this,null,null);
}
}

Transform.prototype.push=function(chunk,encoding){
this._transformState.needTransform=false;
return Duplex.prototype.push.call(this,chunk,encoding);
};

// This is the part where you do stuff!
// override this function in implementation classes.
// 'chunk' is an input chunk.
//
// Call `push(newChunk)` to pass along transformed output
// to the readable side.  You may call 'push' zero or more times.
//
// Call `cb(err)` when you are done with this chunk.  If you pass
// an error, then that'll put the hurt on the whole operation.  If you
// never call cb(), then you'll never get another chunk.
Transform.prototype._transform=function(chunk,encoding,cb){
throw new Error('_transform() is not implemented');
};

Transform.prototype._write=function(chunk,encoding,cb){
var ts=this._transformState;
ts.writecb=cb;
ts.writechunk=chunk;
ts.writeencoding=encoding;
if(!ts.transforming){
var rs=this._readableState;
if(ts.needTransform||rs.needReadable||rs.length<rs.highWaterMark)this._read(rs.highWaterMark);
}
};

// Doesn't matter what the args are here.
// _transform does all the work.
// That we got here means that the readable side wants more data.
Transform.prototype._read=function(n){
var ts=this._transformState;

if(ts.writechunk!==null&&ts.writecb&&!ts.transforming){
ts.transforming=true;
this._transform(ts.writechunk,ts.writeencoding,ts.afterTransform);
}else{
// mark that we need a transform, so that any data that comes in
// will get processed, now that we've asked for it.
ts.needTransform=true;
}
};

Transform.prototype._destroy=function(err,cb){
var _this2=this;

Duplex.prototype._destroy.call(this,err,function(err2){
cb(err2);
_this2.emit('close');
});
};

function done(stream,er,data){
if(er)return stream.emit('error',er);

if(data!=null)// single equals check for both `null` and `undefined`
stream.push(data);

// if there's nothing in the write buffer, then that means
// that nothing more will ever be provided
if(stream._writableState.length)throw new Error('Calling transform done when ws.length != 0');

if(stream._transformState.transforming)throw new Error('Calling transform done when still transforming');

return stream.push(null);
}
},{"./_stream_duplex":324,"core-util-is":293,"inherits":306}],328:[function(require,module,exports){
(function(process,global,setImmediate){
// Copyright Joyent, Inc. and other Node contributors.
//
// Permission is hereby granted, free of charge, to any person obtaining a
// copy of this software and associated documentation files (the
// "Software"), to deal in the Software without restriction, including
// without limitation the rights to use, copy, modify, merge, publish,
// distribute, sublicense, and/or sell copies of the Software, and to permit
// persons to whom the Software is furnished to do so, subject to the
// following conditions:
//
// The above copyright notice and this permission notice shall be included
// in all copies or substantial portions of the Software.
//
// THE SOFTWARE IS PROVIDED "AS IS", WITHOUT WARRANTY OF ANY KIND, EXPRESS
// OR IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF
// MERCHANTABILITY, FITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN
// NO EVENT SHALL THE AUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM,
// DAMAGES OR OTHER LIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR
// OTHERWISE, ARISING FROM, OUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE
// USE OR OTHER DEALINGS IN THE SOFTWARE.

// A bit simpler than readable streams.
// Implement an async ._write(chunk, encoding, cb), and it'll handle all
// the drain event emission and buffering.

'use strict';

/*<replacement>*/

var pna=require('process-nextick-args');
/*</replacement>*/

module.exports=Writable;

/* <replacement> */
function WriteReq(chunk,encoding,cb){
this.chunk=chunk;
this.encoding=encoding;
this.callback=cb;
this.next=null;
}

// It seems a linked list but it is not
// there will be only 2 of these for each stream
function CorkedRequest(state){
var _this=this;

this.next=null;
this.entry=null;
this.finish=function(){
onCorkedFinish(_this,state);
};
}
/* </replacement> */

/*<replacement>*/
var asyncWrite=!process.browser&&['v0.10','v0.9.'].indexOf(process.version.slice(0,5))>-1?setImmediate:pna.nextTick;
/*</replacement>*/

/*<replacement>*/
var Duplex;
/*</replacement>*/

Writable.WritableState=WritableState;

/*<replacement>*/
var util=Object.create(require('core-util-is'));
util.inherits=require('inherits');
/*</replacement>*/

/*<replacement>*/
var internalUtil={
deprecate:require('util-deprecate')};

/*</replacement>*/

/*<replacement>*/
var Stream=require('./internal/streams/stream');
/*</replacement>*/

/*<replacement>*/

var Buffer=require('safe-buffer').Buffer;
var OurUint8Array=global.Uint8Array||function(){};
function _uint8ArrayToBuffer(chunk){
return Buffer.from(chunk);
}
function _isUint8Array(obj){
return Buffer.isBuffer(obj)||obj instanceof OurUint8Array;
}

/*</replacement>*/

var destroyImpl=require('./internal/streams/destroy');

util.inherits(Writable,Stream);

function nop(){}

function WritableState(options,stream){
Duplex=Duplex||require('./_stream_duplex');

options=options||{};

// Duplex streams are both readable and writable, but share
// the same options object.
// However, some cases require setting options to different
// values for the readable and the writable sides of the duplex stream.
// These options can be provided separately as readableXXX and writableXXX.
var isDuplex=stream instanceof Duplex;

// object stream flag to indicate whether or not this stream
// contains buffers or objects.
this.objectMode=!!options.objectMode;

if(isDuplex)this.objectMode=this.objectMode||!!options.writableObjectMode;

// the point at which write() starts returning false
// Note: 0 is a valid value, means that we always return false if
// the entire buffer is not flushed immediately on write()
var hwm=options.highWaterMark;
var writableHwm=options.writableHighWaterMark;
var defaultHwm=this.objectMode?16:16*1024;

if(hwm||hwm===0)this.highWaterMark=hwm;else if(isDuplex&&(writableHwm||writableHwm===0))this.highWaterMark=writableHwm;else this.highWaterMark=defaultHwm;

// cast to ints.
this.highWaterMark=Math.floor(this.highWaterMark);

// if _final has been called
this.finalCalled=false;

// drain event flag.
this.needDrain=false;
// at the start of calling end()
this.ending=false;
// when end() has been called, and returned
this.ended=false;
// when 'finish' is emitted
this.finished=false;

// has it been destroyed
this.destroyed=false;

// should we decode strings into buffers before passing to _write?
// this is here so that some node-core streams can optimize string
// handling at a lower level.
var noDecode=options.decodeStrings===false;
this.decodeStrings=!noDecode;

// Crypto is kind of old and crusty.  Historically, its default string
// encoding is 'binary' so we have to make this configurable.
// Everything else in the universe uses 'utf8', though.
this.defaultEncoding=options.defaultEncoding||'utf8';

// not an actual buffer we keep track of, but a measurement
// of how much we're waiting to get pushed to some underlying
// socket or file.
this.length=0;

// a flag to see when we're in the middle of a write.
this.writing=false;

// when true all writes will be buffered until .uncork() call
this.corked=0;

// a flag to be able to tell if the onwrite cb is called immediately,
// or on a later tick.  We set this to true at first, because any
// actions that shouldn't happen until "later" should generally also
// not happen before the first write call.
this.sync=true;

// a flag to know if we're processing previously buffered items, which
// may call the _write() callback in the same tick, so that we don't
// end up in an overlapped onwrite situation.
this.bufferProcessing=false;

// the callback that's passed to _write(chunk,cb)
this.onwrite=function(er){
onwrite(stream,er);
};

// the callback that the user supplies to write(chunk,encoding,cb)
this.writecb=null;

// the amount that is being written when _write is called.
this.writelen=0;

this.bufferedRequest=null;
this.lastBufferedRequest=null;

// number of pending user-supplied write callbacks
// this must be 0 before 'finish' can be emitted
this.pendingcb=0;

// emit prefinish if the only thing we're waiting for is _write cbs
// This is relevant for synchronous Transform streams
this.prefinished=false;

// True if the error was already emitted and should not be thrown again
this.errorEmitted=false;

// count buffered requests
this.bufferedRequestCount=0;

// allocate the first CorkedRequest, there is always
// one allocated and free to use, and we maintain at most two
this.corkedRequestsFree=new CorkedRequest(this);
}

WritableState.prototype.getBuffer=function getBuffer(){
var current=this.bufferedRequest;
var out=[];
while(current){
out.push(current);
current=current.next;
}
return out;
};

(function(){
try{
Object.defineProperty(WritableState.prototype,'buffer',{
get:internalUtil.deprecate(function(){
return this.getBuffer();
},'_writableState.buffer is deprecated. Use _writableState.getBuffer '+'instead.','DEP0003')});

}catch(_){}
})();

// Test _writableState for inheritance to account for Duplex streams,
// whose prototype chain only points to Readable.
var realHasInstance;
if(typeof Symbol==='function'&&Symbol.hasInstance&&typeof Function.prototype[Symbol.hasInstance]==='function'){
realHasInstance=Function.prototype[Symbol.hasInstance];
Object.defineProperty(Writable,Symbol.hasInstance,{
value:function value(object){
if(realHasInstance.call(this,object))return true;
if(this!==Writable)return false;

return object&&object._writableState instanceof WritableState;
}});

}else{
realHasInstance=function realHasInstance(object){
return object instanceof this;
};
}

function Writable(options){
Duplex=Duplex||require('./_stream_duplex');

// Writable ctor is applied to Duplexes, too.
// `realHasInstance` is necessary because using plain `instanceof`
// would return false, as no `_writableState` property is attached.

// Trying to use the custom `instanceof` for Writable here will also break the
// Node.js LazyTransform implementation, which has a non-trivial getter for
// `_writableState` that would lead to infinite recursion.
if(!realHasInstance.call(Writable,this)&&!(this instanceof Duplex)){
return new Writable(options);
}

this._writableState=new WritableState(options,this);

// legacy.
this.writable=true;

if(options){
if(typeof options.write==='function')this._write=options.write;

if(typeof options.writev==='function')this._writev=options.writev;

if(typeof options.destroy==='function')this._destroy=options.destroy;

if(typeof options.final==='function')this._final=options.final;
}

Stream.call(this);
}

// Otherwise people can pipe Writable streams, which is just wrong.
Writable.prototype.pipe=function(){
this.emit('error',new Error('Cannot pipe, not readable'));
};

function writeAfterEnd(stream,cb){
var er=new Error('write after end');
// TODO: defer error events consistently everywhere, not just the cb
stream.emit('error',er);
pna.nextTick(cb,er);
}

// Checks that a user-supplied chunk is valid, especially for the particular
// mode the stream is in. Currently this means that `null` is never accepted
// and undefined/non-string values are only allowed in object mode.
function validChunk(stream,state,chunk,cb){
var valid=true;
var er=false;

if(chunk===null){
er=new TypeError('May not write null values to stream');
}else if(typeof chunk!=='string'&&chunk!==undefined&&!state.objectMode){
er=new TypeError('Invalid non-string/buffer chunk');
}
if(er){
stream.emit('error',er);
pna.nextTick(cb,er);
valid=false;
}
return valid;
}

Writable.prototype.write=function(chunk,encoding,cb){
var state=this._writableState;
var ret=false;
var isBuf=!state.objectMode&&_isUint8Array(chunk);

if(isBuf&&!Buffer.isBuffer(chunk)){
chunk=_uint8ArrayToBuffer(chunk);
}

if(typeof encoding==='function'){
cb=encoding;
encoding=null;
}

if(isBuf)encoding='buffer';else if(!encoding)encoding=state.defaultEncoding;

if(typeof cb!=='function')cb=nop;

if(state.ended)writeAfterEnd(this,cb);else if(isBuf||validChunk(this,state,chunk,cb)){
state.pendingcb++;
ret=writeOrBuffer(this,state,isBuf,chunk,encoding,cb);
}

return ret;
};

Writable.prototype.cork=function(){
var state=this._writableState;

state.corked++;
};

Writable.prototype.uncork=function(){
var state=this._writableState;

if(state.corked){
state.corked--;

if(!state.writing&&!state.corked&&!state.finished&&!state.bufferProcessing&&state.bufferedRequest)clearBuffer(this,state);
}
};

Writable.prototype.setDefaultEncoding=function setDefaultEncoding(encoding){
// node::ParseEncoding() requires lower case.
if(typeof encoding==='string')encoding=encoding.toLowerCase();
if(!(['hex','utf8','utf-8','ascii','binary','base64','ucs2','ucs-2','utf16le','utf-16le','raw'].indexOf((encoding+'').toLowerCase())>-1))throw new TypeError('Unknown encoding: '+encoding);
this._writableState.defaultEncoding=encoding;
return this;
};

function decodeChunk(state,chunk,encoding){
if(!state.objectMode&&state.decodeStrings!==false&&typeof chunk==='string'){
chunk=Buffer.from(chunk,encoding);
}
return chunk;
}

Object.defineProperty(Writable.prototype,'writableHighWaterMark',{
// making it explicit this property is not enumerable
// because otherwise some prototype manipulation in
// userland will fail
enumerable:false,
get:function get(){
return this._writableState.highWaterMark;
}});


// if we're already writing something, then just put this
// in the queue, and wait our turn.  Otherwise, call _write
// If we return false, then we need a drain event, so set that flag.
function writeOrBuffer(stream,state,isBuf,chunk,encoding,cb){
if(!isBuf){
var newChunk=decodeChunk(state,chunk,encoding);
if(chunk!==newChunk){
isBuf=true;
encoding='buffer';
chunk=newChunk;
}
}
var len=state.objectMode?1:chunk.length;

state.length+=len;

var ret=state.length<state.highWaterMark;
// we must ensure that previous needDrain will not be reset to false.
if(!ret)state.needDrain=true;

if(state.writing||state.corked){
var last=state.lastBufferedRequest;
state.lastBufferedRequest={
chunk:chunk,
encoding:encoding,
isBuf:isBuf,
callback:cb,
next:null};

if(last){
last.next=state.lastBufferedRequest;
}else{
state.bufferedRequest=state.lastBufferedRequest;
}
state.bufferedRequestCount+=1;
}else{
doWrite(stream,state,false,len,chunk,encoding,cb);
}

return ret;
}

function doWrite(stream,state,writev,len,chunk,encoding,cb){
state.writelen=len;
state.writecb=cb;
state.writing=true;
state.sync=true;
if(writev)stream._writev(chunk,state.onwrite);else stream._write(chunk,encoding,state.onwrite);
state.sync=false;
}

function onwriteError(stream,state,sync,er,cb){
--state.pendingcb;

if(sync){
// defer the callback if we are being called synchronously
// to avoid piling up things on the stack
pna.nextTick(cb,er);
// this can emit finish, and it will always happen
// after error
pna.nextTick(finishMaybe,stream,state);
stream._writableState.errorEmitted=true;
stream.emit('error',er);
}else{
// the caller expect this to happen before if
// it is async
cb(er);
stream._writableState.errorEmitted=true;
stream.emit('error',er);
// this can emit finish, but finish must
// always follow error
finishMaybe(stream,state);
}
}

function onwriteStateUpdate(state){
state.writing=false;
state.writecb=null;
state.length-=state.writelen;
state.writelen=0;
}

function onwrite(stream,er){
var state=stream._writableState;
var sync=state.sync;
var cb=state.writecb;

onwriteStateUpdate(state);

if(er)onwriteError(stream,state,sync,er,cb);else{
// Check if we're actually ready to finish, but don't emit yet
var finished=needFinish(state);

if(!finished&&!state.corked&&!state.bufferProcessing&&state.bufferedRequest){
clearBuffer(stream,state);
}

if(sync){
/*<replacement>*/
asyncWrite(afterWrite,stream,state,finished,cb);
/*</replacement>*/
}else{
afterWrite(stream,state,finished,cb);
}
}
}

function afterWrite(stream,state,finished,cb){
if(!finished)onwriteDrain(stream,state);
state.pendingcb--;
cb();
finishMaybe(stream,state);
}

// Must force callback to be called on nextTick, so that we don't
// emit 'drain' before the write() consumer gets the 'false' return
// value, and has a chance to attach a 'drain' listener.
function onwriteDrain(stream,state){
if(state.length===0&&state.needDrain){
state.needDrain=false;
stream.emit('drain');
}
}

// if there's something in the buffer waiting, then process it
function clearBuffer(stream,state){
state.bufferProcessing=true;
var entry=state.bufferedRequest;

if(stream._writev&&entry&&entry.next){
// Fast case, write everything using _writev()
var l=state.bufferedRequestCount;
var buffer=new Array(l);
var holder=state.corkedRequestsFree;
holder.entry=entry;

var count=0;
var allBuffers=true;
while(entry){
buffer[count]=entry;
if(!entry.isBuf)allBuffers=false;
entry=entry.next;
count+=1;
}
buffer.allBuffers=allBuffers;

doWrite(stream,state,true,state.length,buffer,'',holder.finish);

// doWrite is almost always async, defer these to save a bit of time
// as the hot path ends with doWrite
state.pendingcb++;
state.lastBufferedRequest=null;
if(holder.next){
state.corkedRequestsFree=holder.next;
holder.next=null;
}else{
state.corkedRequestsFree=new CorkedRequest(state);
}
state.bufferedRequestCount=0;
}else{
// Slow case, write chunks one-by-one
while(entry){
var chunk=entry.chunk;
var encoding=entry.encoding;
var cb=entry.callback;
var len=state.objectMode?1:chunk.length;

doWrite(stream,state,false,len,chunk,encoding,cb);
entry=entry.next;
state.bufferedRequestCount--;
// if we didn't call the onwrite immediately, then
// it means that we need to wait until it does.
// also, that means that the chunk and cb are currently
// being processed, so move the buffer counter past them.
if(state.writing){
break;
}
}

if(entry===null)state.lastBufferedRequest=null;
}

state.bufferedRequest=entry;
state.bufferProcessing=false;
}

Writable.prototype._write=function(chunk,encoding,cb){
cb(new Error('_write() is not implemented'));
};

Writable.prototype._writev=null;

Writable.prototype.end=function(chunk,encoding,cb){
var state=this._writableState;

if(typeof chunk==='function'){
cb=chunk;
chunk=null;
encoding=null;
}else if(typeof encoding==='function'){
cb=encoding;
encoding=null;
}

if(chunk!==null&&chunk!==undefined)this.write(chunk,encoding);

// .end() fully uncorks
if(state.corked){
state.corked=1;
this.uncork();
}

// ignore unnecessary end() calls.
if(!state.ending&&!state.finished)endWritable(this,state,cb);
};

function needFinish(state){
return state.ending&&state.length===0&&state.bufferedRequest===null&&!state.finished&&!state.writing;
}
function callFinal(stream,state){
stream._final(function(err){
state.pendingcb--;
if(err){
stream.emit('error',err);
}
state.prefinished=true;
stream.emit('prefinish');
finishMaybe(stream,state);
});
}
function prefinish(stream,state){
if(!state.prefinished&&!state.finalCalled){
if(typeof stream._final==='function'){
state.pendingcb++;
state.finalCalled=true;
pna.nextTick(callFinal,stream,state);
}else{
state.prefinished=true;
stream.emit('prefinish');
}
}
}

function finishMaybe(stream,state){
var need=needFinish(state);
if(need){
prefinish(stream,state);
if(state.pendingcb===0){
state.finished=true;
stream.emit('finish');
}
}
return need;
}

function endWritable(stream,state,cb){
state.ending=true;
finishMaybe(stream,state);
if(cb){
if(state.finished)pna.nextTick(cb);else stream.once('finish',cb);
}
state.ended=true;
stream.writable=false;
}

function onCorkedFinish(corkReq,state,err){
var entry=corkReq.entry;
corkReq.entry=null;
while(entry){
var cb=entry.callback;
state.pendingcb--;
cb(err);
entry=entry.next;
}
if(state.corkedRequestsFree){
state.corkedRequestsFree.next=corkReq;
}else{
state.corkedRequestsFree=corkReq;
}
}

Object.defineProperty(Writable.prototype,'destroyed',{
get:function get(){
if(this._writableState===undefined){
return false;
}
return this._writableState.destroyed;
},
set:function set(value){
// we ignore the value if the stream
// has not been initialized yet
if(!this._writableState){
return;
}

// backward compatibility, the user is explicitly
// managing destroyed
this._writableState.destroyed=value;
}});


Writable.prototype.destroy=destroyImpl.destroy;
Writable.prototype._undestroy=destroyImpl.undestroy;
Writable.prototype._destroy=function(err,cb){
this.end();
cb(err);
};
}).call(this,require('_process'),typeof global!=="undefined"?global:typeof self!=="undefined"?self:typeof window!=="undefined"?window:{},require("timers").setImmediate);
},{"./_stream_duplex":324,"./internal/streams/destroy":330,"./internal/streams/stream":331,"_process":392,"core-util-is":293,"inherits":306,"process-nextick-args":317,"safe-buffer":337,"timers":341,"util-deprecate":342}],329:[function(require,module,exports){
'use strict';

function _classCallCheck(instance,Constructor){if(!(instance instanceof Constructor)){throw new TypeError("Cannot call a class as a function");}}

var Buffer=require('safe-buffer').Buffer;
var util=require('util');

function copyBuffer(src,target,offset){
src.copy(target,offset);
}

module.exports=function(){
function BufferList(){
_classCallCheck(this,BufferList);

this.head=null;
this.tail=null;
this.length=0;
}

BufferList.prototype.push=function push(v){
var entry={data:v,next:null};
if(this.length>0)this.tail.next=entry;else this.head=entry;
this.tail=entry;
++this.length;
};

BufferList.prototype.unshift=function unshift(v){
var entry={data:v,next:this.head};
if(this.length===0)this.tail=entry;
this.head=entry;
++this.length;
};

BufferList.prototype.shift=function shift(){
if(this.length===0)return;
var ret=this.head.data;
if(this.length===1)this.head=this.tail=null;else this.head=this.head.next;
--this.length;
return ret;
};

BufferList.prototype.clear=function clear(){
this.head=this.tail=null;
this.length=0;
};

BufferList.prototype.join=function join(s){
if(this.length===0)return'';
var p=this.head;
var ret=''+p.data;
while(p=p.next){
ret+=s+p.data;
}return ret;
};

BufferList.prototype.concat=function concat(n){
if(this.length===0)return Buffer.alloc(0);
if(this.length===1)return this.head.data;
var ret=Buffer.allocUnsafe(n>>>0);
var p=this.head;
var i=0;
while(p){
copyBuffer(p.data,ret,i);
i+=p.data.length;
p=p.next;
}
return ret;
};

return BufferList;
}();

if(util&&util.inspect&&util.inspect.custom){
module.exports.prototype[util.inspect.custom]=function(){
var obj=util.inspect({length:this.length});
return this.constructor.name+' '+obj;
};
}
},{"safe-buffer":337,"util":79}],330:[function(require,module,exports){
'use strict';

/*<replacement>*/

var pna=require('process-nextick-args');
/*</replacement>*/

// undocumented cb() API, needed for core, not for public API
function destroy(err,cb){
var _this=this;

var readableDestroyed=this._readableState&&this._readableState.destroyed;
var writableDestroyed=this._writableState&&this._writableState.destroyed;

if(readableDestroyed||writableDestroyed){
if(cb){
cb(err);
}else if(err&&(!this._writableState||!this._writableState.errorEmitted)){
pna.nextTick(emitErrorNT,this,err);
}
return this;
}

// we set destroyed to true before firing error callbacks in order
// to make it re-entrance safe in case destroy() is called within callbacks

if(this._readableState){
this._readableState.destroyed=true;
}

// if this is a duplex stream mark the writable part as destroyed as well
if(this._writableState){
this._writableState.destroyed=true;
}

this._destroy(err||null,function(err){
if(!cb&&err){
pna.nextTick(emitErrorNT,_this,err);
if(_this._writableState){
_this._writableState.errorEmitted=true;
}
}else if(cb){
cb(err);
}
});

return this;
}

function undestroy(){
if(this._readableState){
this._readableState.destroyed=false;
this._readableState.reading=false;
this._readableState.ended=false;
this._readableState.endEmitted=false;
}

if(this._writableState){
this._writableState.destroyed=false;
this._writableState.ended=false;
this._writableState.ending=false;
this._writableState.finished=false;
this._writableState.errorEmitted=false;
}
}

function emitErrorNT(self,err){
self.emit('error',err);
}

module.exports={
destroy:destroy,
undestroy:undestroy};

},{"process-nextick-args":317}],331:[function(require,module,exports){
arguments[4][97][0].apply(exports,arguments);
},{"dup":97,"events":296}],332:[function(require,module,exports){
module.exports=require('./readable').PassThrough;

},{"./readable":333}],333:[function(require,module,exports){
exports=module.exports=require('./lib/_stream_readable.js');
exports.Stream=exports;
exports.Readable=exports;
exports.Writable=require('./lib/_stream_writable.js');
exports.Duplex=require('./lib/_stream_duplex.js');
exports.Transform=require('./lib/_stream_transform.js');
exports.PassThrough=require('./lib/_stream_passthrough.js');

},{"./lib/_stream_duplex.js":324,"./lib/_stream_passthrough.js":325,"./lib/_stream_readable.js":326,"./lib/_stream_transform.js":327,"./lib/_stream_writable.js":328}],334:[function(require,module,exports){
module.exports=require('./readable').Transform;

},{"./readable":333}],335:[function(require,module,exports){
module.exports=require('./lib/_stream_writable.js');

},{"./lib/_stream_writable.js":328}],336:[function(require,module,exports){
/**
 * Copyright (c) 2014-present, Facebook, Inc.
 *
 * This source code is licensed under the MIT license found in the
 * LICENSE file in the root directory of this source tree.
 */

!function(global){
"use strict";

var Op=Object.prototype;
var hasOwn=Op.hasOwnProperty;
var undefined;// More compressible than void 0.
var $Symbol=typeof Symbol==="function"?Symbol:{};
var iteratorSymbol=$Symbol.iterator||"@@iterator";
var asyncIteratorSymbol=$Symbol.asyncIterator||"@@asyncIterator";
var toStringTagSymbol=$Symbol.toStringTag||"@@toStringTag";

var inModule=typeof module==="object";
var runtime=global.regeneratorRuntime;
if(runtime){
if(inModule){
// If regeneratorRuntime is defined globally and we're in a module,
// make the exports object identical to regeneratorRuntime.
module.exports=runtime;
}
// Don't bother evaluating the rest of this file if the runtime was
// already defined globally.
return;
}

// Define the runtime globally (as expected by generated code) as either
// module.exports (if we're in a module) or a new, empty object.
runtime=global.regeneratorRuntime=inModule?module.exports:{};

function wrap(innerFn,outerFn,self,tryLocsList){
// If outerFn provided and outerFn.prototype is a Generator, then outerFn.prototype instanceof Generator.
var protoGenerator=outerFn&&outerFn.prototype instanceof Generator?outerFn:Generator;
var generator=Object.create(protoGenerator.prototype);
var context=new Context(tryLocsList||[]);

// The ._invoke method unifies the implementations of the .next,
// .throw, and .return methods.
generator._invoke=makeInvokeMethod(innerFn,self,context);

return generator;
}
runtime.wrap=wrap;

// Try/catch helper to minimize deoptimizations. Returns a completion
// record like context.tryEntries[i].completion. This interface could
// have been (and was previously) designed to take a closure to be
// invoked without arguments, but in all the cases we care about we
// already have an existing method we want to call, so there's no need
// to create a new function object. We can even get away with assuming
// the method takes exactly one argument, since that happens to be true
// in every case, so we don't have to touch the arguments object. The
// only additional allocation required is the completion record, which
// has a stable shape and so hopefully should be cheap to allocate.
function tryCatch(fn,obj,arg){
try{
return{type:"normal",arg:fn.call(obj,arg)};
}catch(err){
return{type:"throw",arg:err};
}
}

var GenStateSuspendedStart="suspendedStart";
var GenStateSuspendedYield="suspendedYield";
var GenStateExecuting="executing";
var GenStateCompleted="completed";

// Returning this object from the innerFn has the same effect as
// breaking out of the dispatch switch statement.
var ContinueSentinel={};

// Dummy constructor functions that we use as the .constructor and
// .constructor.prototype properties for functions that return Generator
// objects. For full spec compliance, you may wish to configure your
// minifier not to mangle the names of these two functions.
function Generator(){}
function GeneratorFunction(){}
function GeneratorFunctionPrototype(){}

// This is a polyfill for %IteratorPrototype% for environments that
// don't natively support it.
var IteratorPrototype={};
IteratorPrototype[iteratorSymbol]=function(){
return this;
};

var getProto=Object.getPrototypeOf;
var NativeIteratorPrototype=getProto&&getProto(getProto(values([])));
if(NativeIteratorPrototype&&
NativeIteratorPrototype!==Op&&
hasOwn.call(NativeIteratorPrototype,iteratorSymbol)){
// This environment has a native %IteratorPrototype%; use it instead
// of the polyfill.
IteratorPrototype=NativeIteratorPrototype;
}

var Gp=GeneratorFunctionPrototype.prototype=
Generator.prototype=Object.create(IteratorPrototype);
GeneratorFunction.prototype=Gp.constructor=GeneratorFunctionPrototype;
GeneratorFunctionPrototype.constructor=GeneratorFunction;
GeneratorFunctionPrototype[toStringTagSymbol]=
GeneratorFunction.displayName="GeneratorFunction";

// Helper for defining the .next, .throw, and .return methods of the
// Iterator interface in terms of a single ._invoke method.
function defineIteratorMethods(prototype){
["next","throw","return"].forEach(function(method){
prototype[method]=function(arg){
return this._invoke(method,arg);
};
});
}

runtime.isGeneratorFunction=function(genFun){
var ctor=typeof genFun==="function"&&genFun.constructor;
return ctor?
ctor===GeneratorFunction||
// For the native GeneratorFunction constructor, the best we can
// do is to check its .name property.
(ctor.displayName||ctor.name)==="GeneratorFunction":
false;
};

runtime.mark=function(genFun){
if(Object.setPrototypeOf){
Object.setPrototypeOf(genFun,GeneratorFunctionPrototype);
}else{
genFun.__proto__=GeneratorFunctionPrototype;
if(!(toStringTagSymbol in genFun)){
genFun[toStringTagSymbol]="GeneratorFunction";
}
}
genFun.prototype=Object.create(Gp);
return genFun;
};

// Within the body of any async function, `await x` is transformed to
// `yield regeneratorRuntime.awrap(x)`, so that the runtime can test
// `hasOwn.call(value, "__await")` to determine if the yielded value is
// meant to be awaited.
runtime.awrap=function(arg){
return{__await:arg};
};

function AsyncIterator(generator){
function invoke(method,arg,resolve,reject){
var record=tryCatch(generator[method],generator,arg);
if(record.type==="throw"){
reject(record.arg);
}else{
var result=record.arg;
var value=result.value;
if(value&&
typeof value==="object"&&
hasOwn.call(value,"__await")){
return Promise.resolve(value.__await).then(function(value){
invoke("next",value,resolve,reject);
},function(err){
invoke("throw",err,resolve,reject);
});
}

return Promise.resolve(value).then(function(unwrapped){
// When a yielded Promise is resolved, its final value becomes
// the .value of the Promise<{value,done}> result for the
// current iteration. If the Promise is rejected, however, the
// result for this iteration will be rejected with the same
// reason. Note that rejections of yielded Promises are not
// thrown back into the generator function, as is the case
// when an awaited Promise is rejected. This difference in
// behavior between yield and await is important, because it
// allows the consumer to decide what to do with the yielded
// rejection (swallow it and continue, manually .throw it back
// into the generator, abandon iteration, whatever). With
// await, by contrast, there is no opportunity to examine the
// rejection reason outside the generator function, so the
// only option is to throw it from the await expression, and
// let the generator function handle the exception.
result.value=unwrapped;
resolve(result);
},reject);
}
}

var previousPromise;

function enqueue(method,arg){
function callInvokeWithMethodAndArg(){
return new Promise(function(resolve,reject){
invoke(method,arg,resolve,reject);
});
}

return previousPromise=
// If enqueue has been called before, then we want to wait until
// all previous Promises have been resolved before calling invoke,
// so that results are always delivered in the correct order. If
// enqueue has not been called before, then it is important to
// call invoke immediately, without waiting on a callback to fire,
// so that the async generator function has the opportunity to do
// any necessary setup in a predictable way. This predictability
// is why the Promise constructor synchronously invokes its
// executor callback, and why async functions synchronously
// execute code before the first await. Since we implement simple
// async functions in terms of async generators, it is especially
// important to get this right, even though it requires care.
previousPromise?previousPromise.then(
callInvokeWithMethodAndArg,
// Avoid propagating failures to Promises returned by later
// invocations of the iterator.
callInvokeWithMethodAndArg):
callInvokeWithMethodAndArg();
}

// Define the unified helper method that is used to implement .next,
// .throw, and .return (see defineIteratorMethods).
this._invoke=enqueue;
}

defineIteratorMethods(AsyncIterator.prototype);
AsyncIterator.prototype[asyncIteratorSymbol]=function(){
return this;
};
runtime.AsyncIterator=AsyncIterator;

// Note that simple async functions are implemented on top of
// AsyncIterator objects; they just return a Promise for the value of
// the final result produced by the iterator.
runtime.async=function(innerFn,outerFn,self,tryLocsList){
var iter=new AsyncIterator(
wrap(innerFn,outerFn,self,tryLocsList));


return runtime.isGeneratorFunction(outerFn)?
iter// If outerFn is a generator, return the full iterator.
:iter.next().then(function(result){
return result.done?result.value:iter.next();
});
};

function makeInvokeMethod(innerFn,self,context){
var state=GenStateSuspendedStart;

return function invoke(method,arg){
if(state===GenStateExecuting){
throw new Error("Generator is already running");
}

if(state===GenStateCompleted){
if(method==="throw"){
throw arg;
}

// Be forgiving, per 25.3.3.3.3 of the spec:
// https://people.mozilla.org/~jorendorff/es6-draft.html#sec-generatorresume
return doneResult();
}

context.method=method;
context.arg=arg;

while(true){
var delegate=context.delegate;
if(delegate){
var delegateResult=maybeInvokeDelegate(delegate,context);
if(delegateResult){
if(delegateResult===ContinueSentinel)continue;
return delegateResult;
}
}

if(context.method==="next"){
// Setting context._sent for legacy support of Babel's
// function.sent implementation.
context.sent=context._sent=context.arg;

}else if(context.method==="throw"){
if(state===GenStateSuspendedStart){
state=GenStateCompleted;
throw context.arg;
}

context.dispatchException(context.arg);

}else if(context.method==="return"){
context.abrupt("return",context.arg);
}

state=GenStateExecuting;

var record=tryCatch(innerFn,self,context);
if(record.type==="normal"){
// If an exception is thrown from innerFn, we leave state ===
// GenStateExecuting and loop back for another invocation.
state=context.done?
GenStateCompleted:
GenStateSuspendedYield;

if(record.arg===ContinueSentinel){
continue;
}

return{
value:record.arg,
done:context.done};


}else if(record.type==="throw"){
state=GenStateCompleted;
// Dispatch the exception by looping back around to the
// context.dispatchException(context.arg) call above.
context.method="throw";
context.arg=record.arg;
}
}
};
}

// Call delegate.iterator[context.method](context.arg) and handle the
// result, either by returning a { value, done } result from the
// delegate iterator, or by modifying context.method and context.arg,
// setting context.delegate to null, and returning the ContinueSentinel.
function maybeInvokeDelegate(delegate,context){
var method=delegate.iterator[context.method];
if(method===undefined){
// A .throw or .return when the delegate iterator has no .throw
// method always terminates the yield* loop.
context.delegate=null;

if(context.method==="throw"){
if(delegate.iterator.return){
// If the delegate iterator has a return method, give it a
// chance to clean up.
context.method="return";
context.arg=undefined;
maybeInvokeDelegate(delegate,context);

if(context.method==="throw"){
// If maybeInvokeDelegate(context) changed context.method from
// "return" to "throw", let that override the TypeError below.
return ContinueSentinel;
}
}

context.method="throw";
context.arg=new TypeError(
"The iterator does not provide a 'throw' method");
}

return ContinueSentinel;
}

var record=tryCatch(method,delegate.iterator,context.arg);

if(record.type==="throw"){
context.method="throw";
context.arg=record.arg;
context.delegate=null;
return ContinueSentinel;
}

var info=record.arg;

if(!info){
context.method="throw";
context.arg=new TypeError("iterator result is not an object");
context.delegate=null;
return ContinueSentinel;
}

if(info.done){
// Assign the result of the finished delegate to the temporary
// variable specified by delegate.resultName (see delegateYield).
context[delegate.resultName]=info.value;

// Resume execution at the desired location (see delegateYield).
context.next=delegate.nextLoc;

// If context.method was "throw" but the delegate handled the
// exception, let the outer generator proceed normally. If
// context.method was "next", forget context.arg since it has been
// "consumed" by the delegate iterator. If context.method was
// "return", allow the original .return call to continue in the
// outer generator.
if(context.method!=="return"){
context.method="next";
context.arg=undefined;
}

}else{
// Re-yield the result returned by the delegate method.
return info;
}

// The delegate iterator is finished, so forget it and continue with
// the outer generator.
context.delegate=null;
return ContinueSentinel;
}

// Define Generator.prototype.{next,throw,return} in terms of the
// unified ._invoke helper method.
defineIteratorMethods(Gp);

Gp[toStringTagSymbol]="Generator";

// A Generator should always return itself as the iterator object when the
// @@iterator function is called on it. Some browsers' implementations of the
// iterator prototype chain incorrectly implement this, causing the Generator
// object to not be returned from this call. This ensures that doesn't happen.
// See https://github.com/facebook/regenerator/issues/274 for more details.
Gp[iteratorSymbol]=function(){
return this;
};

Gp.toString=function(){
return"[object Generator]";
};

function pushTryEntry(locs){
var entry={tryLoc:locs[0]};

if(1 in locs){
entry.catchLoc=locs[1];
}

if(2 in locs){
entry.finallyLoc=locs[2];
entry.afterLoc=locs[3];
}

this.tryEntries.push(entry);
}

function resetTryEntry(entry){
var record=entry.completion||{};
record.type="normal";
delete record.arg;
entry.completion=record;
}

function Context(tryLocsList){
// The root entry object (effectively a try statement without a catch
// or a finally block) gives us a place to store values thrown from
// locations where there is no enclosing try statement.
this.tryEntries=[{tryLoc:"root"}];
tryLocsList.forEach(pushTryEntry,this);
this.reset(true);
}

runtime.keys=function(object){
var keys=[];
for(var key in object){
keys.push(key);
}
keys.reverse();

// Rather than returning an object with a next method, we keep
// things simple and return the next function itself.
return function next(){
while(keys.length){
var key=keys.pop();
if(key in object){
next.value=key;
next.done=false;
return next;
}
}

// To avoid creating an additional object, we just hang the .value
// and .done properties off the next function object itself. This
// also ensures that the minifier will not anonymize the function.
next.done=true;
return next;
};
};

function values(iterable){
if(iterable){
var iteratorMethod=iterable[iteratorSymbol];
if(iteratorMethod){
return iteratorMethod.call(iterable);
}

if(typeof iterable.next==="function"){
return iterable;
}

if(!isNaN(iterable.length)){
var i=-1,next=function next(){
while(++i<iterable.length){
if(hasOwn.call(iterable,i)){
next.value=iterable[i];
next.done=false;
return next;
}
}

next.value=undefined;
next.done=true;

return next;
};

return next.next=next;
}
}

// Return an iterator with no values.
return{next:doneResult};
}
runtime.values=values;

function doneResult(){
return{value:undefined,done:true};
}

Context.prototype={
constructor:Context,

reset:function reset(skipTempReset){
this.prev=0;
this.next=0;
// Resetting context._sent for legacy support of Babel's
// function.sent implementation.
this.sent=this._sent=undefined;
this.done=false;
this.delegate=null;

this.method="next";
this.arg=undefined;

this.tryEntries.forEach(resetTryEntry);

if(!skipTempReset){
for(var name in this){
// Not sure about the optimal order of these conditions:
if(name.charAt(0)==="t"&&
hasOwn.call(this,name)&&
!isNaN(+name.slice(1))){
this[name]=undefined;
}
}
}
},

stop:function stop(){
this.done=true;

var rootEntry=this.tryEntries[0];
var rootRecord=rootEntry.completion;
if(rootRecord.type==="throw"){
throw rootRecord.arg;
}

return this.rval;
},

dispatchException:function dispatchException(exception){
if(this.done){
throw exception;
}

var context=this;
function handle(loc,caught){
record.type="throw";
record.arg=exception;
context.next=loc;

if(caught){
// If the dispatched exception was caught by a catch block,
// then let that catch block handle the exception normally.
context.method="next";
context.arg=undefined;
}

return!!caught;
}

for(var i=this.tryEntries.length-1;i>=0;--i){
var entry=this.tryEntries[i];
var record=entry.completion;

if(entry.tryLoc==="root"){
// Exception thrown outside of any try block that could handle
// it, so set the completion value of the entire function to
// throw the exception.
return handle("end");
}

if(entry.tryLoc<=this.prev){
var hasCatch=hasOwn.call(entry,"catchLoc");
var hasFinally=hasOwn.call(entry,"finallyLoc");

if(hasCatch&&hasFinally){
if(this.prev<entry.catchLoc){
return handle(entry.catchLoc,true);
}else if(this.prev<entry.finallyLoc){
return handle(entry.finallyLoc);
}

}else if(hasCatch){
if(this.prev<entry.catchLoc){
return handle(entry.catchLoc,true);
}

}else if(hasFinally){
if(this.prev<entry.finallyLoc){
return handle(entry.finallyLoc);
}

}else{
throw new Error("try statement without catch or finally");
}
}
}
},

abrupt:function abrupt(type,arg){
for(var i=this.tryEntries.length-1;i>=0;--i){
var entry=this.tryEntries[i];
if(entry.tryLoc<=this.prev&&
hasOwn.call(entry,"finallyLoc")&&
this.prev<entry.finallyLoc){
var finallyEntry=entry;
break;
}
}

if(finallyEntry&&(
type==="break"||
type==="continue")&&
finallyEntry.tryLoc<=arg&&
arg<=finallyEntry.finallyLoc){
// Ignore the finally entry if control is not jumping to a
// location outside the try/catch block.
finallyEntry=null;
}

var record=finallyEntry?finallyEntry.completion:{};
record.type=type;
record.arg=arg;

if(finallyEntry){
this.method="next";
this.next=finallyEntry.finallyLoc;
return ContinueSentinel;
}

return this.complete(record);
},

complete:function complete(record,afterLoc){
if(record.type==="throw"){
throw record.arg;
}

if(record.type==="break"||
record.type==="continue"){
this.next=record.arg;
}else if(record.type==="return"){
this.rval=this.arg=record.arg;
this.method="return";
this.next="end";
}else if(record.type==="normal"&&afterLoc){
this.next=afterLoc;
}

return ContinueSentinel;
},

finish:function finish(finallyLoc){
for(var i=this.tryEntries.length-1;i>=0;--i){
var entry=this.tryEntries[i];
if(entry.finallyLoc===finallyLoc){
this.complete(entry.completion,entry.afterLoc);
resetTryEntry(entry);
return ContinueSentinel;
}
}
},

"catch":function _catch(tryLoc){
for(var i=this.tryEntries.length-1;i>=0;--i){
var entry=this.tryEntries[i];
if(entry.tryLoc===tryLoc){
var record=entry.completion;
if(record.type==="throw"){
var thrown=record.arg;
resetTryEntry(entry);
}
return thrown;
}
}

// The context.catch method must only be called with a location
// argument that corresponds to a known catch block.
throw new Error("illegal catch attempt");
},

delegateYield:function delegateYield(iterable,resultName,nextLoc){
this.delegate={
iterator:values(iterable),
resultName:resultName,
nextLoc:nextLoc};


if(this.method==="next"){
// Deliberately forget the last sent value so that we don't
// accidentally pass it on to the delegate.
this.arg=undefined;
}

return ContinueSentinel;
}};

}(
// In sloppy mode, unbound `this` refers to the global object, fallback to
// Function constructor if we're in global strict mode. That is sadly a form
// of indirect eval which violates Content Security Policy.
function(){return this;}()||Function("return this")());


},{}],337:[function(require,module,exports){
/* eslint-disable node/no-deprecated-api */
var buffer=require('buffer');
var Buffer=buffer.Buffer;

// alternative to using Object.keys for old browsers
function copyProps(src,dst){
for(var key in src){
dst[key]=src[key];
}
}
if(Buffer.from&&Buffer.alloc&&Buffer.allocUnsafe&&Buffer.allocUnsafeSlow){
module.exports=buffer;
}else{
// Copy properties from require('buffer')
copyProps(buffer,exports);
exports.Buffer=SafeBuffer;
}

function SafeBuffer(arg,encodingOrOffset,length){
return Buffer(arg,encodingOrOffset,length);
}

// Copy static methods from Buffer
copyProps(Buffer,SafeBuffer);

SafeBuffer.from=function(arg,encodingOrOffset,length){
if(typeof arg==='number'){
throw new TypeError('Argument must not be a number');
}
return Buffer(arg,encodingOrOffset,length);
};

SafeBuffer.alloc=function(size,fill,encoding){
if(typeof size!=='number'){
throw new TypeError('Argument must be a number');
}
var buf=Buffer(size);
if(fill!==undefined){
if(typeof encoding==='string'){
buf.fill(fill,encoding);
}else{
buf.fill(fill);
}
}else{
buf.fill(0);
}
return buf;
};

SafeBuffer.allocUnsafe=function(size){
if(typeof size!=='number'){
throw new TypeError('Argument must be a number');
}
return Buffer(size);
};

SafeBuffer.allocUnsafeSlow=function(size){
if(typeof size!=='number'){
throw new TypeError('Argument must be a number');
}
return buffer.SlowBuffer(size);
};

},{"buffer":99}],338:[function(require,module,exports){
(function(Buffer){
;(function(sax){// wrapper for non-node envs
sax.parser=function(strict,opt){return new SAXParser(strict,opt);};
sax.SAXParser=SAXParser;
sax.SAXStream=SAXStream;
sax.createStream=createStream;

// When we pass the MAX_BUFFER_LENGTH position, start checking for buffer overruns.
// When we check, schedule the next check for MAX_BUFFER_LENGTH - (max(buffer lengths)),
// since that's the earliest that a buffer overrun could occur.  This way, checks are
// as rare as required, but as often as necessary to ensure never crossing this bound.
// Furthermore, buffers are only tested at most once per write(), so passing a very
// large string into write() might have undesirable effects, but this is manageable by
// the caller, so it is assumed to be safe.  Thus, a call to write() may, in the extreme
// edge case, result in creating at most one complete copy of the string passed in.
// Set to Infinity to have unlimited buffers.
sax.MAX_BUFFER_LENGTH=64*1024;

var buffers=[
'comment','sgmlDecl','textNode','tagName','doctype',
'procInstName','procInstBody','entity','attribName',
'attribValue','cdata','script'];


sax.EVENTS=[
'text',
'processinginstruction',
'sgmldeclaration',
'doctype',
'comment',
'opentagstart',
'attribute',
'opentag',
'closetag',
'opencdata',
'cdata',
'closecdata',
'error',
'end',
'ready',
'script',
'opennamespace',
'closenamespace'];


function SAXParser(strict,opt){
if(!(this instanceof SAXParser)){
return new SAXParser(strict,opt);
}

var parser=this;
clearBuffers(parser);
parser.q=parser.c='';
parser.bufferCheckPosition=sax.MAX_BUFFER_LENGTH;
parser.opt=opt||{};
parser.opt.lowercase=parser.opt.lowercase||parser.opt.lowercasetags;
parser.looseCase=parser.opt.lowercase?'toLowerCase':'toUpperCase';
parser.tags=[];
parser.closed=parser.closedRoot=parser.sawRoot=false;
parser.tag=parser.error=null;
parser.strict=!!strict;
parser.noscript=!!(strict||parser.opt.noscript);
parser.state=S.BEGIN;
parser.strictEntities=parser.opt.strictEntities;
parser.ENTITIES=parser.strictEntities?Object.create(sax.XML_ENTITIES):Object.create(sax.ENTITIES);
parser.attribList=[];

// namespaces form a prototype chain.
// it always points at the current tag,
// which protos to its parent tag.
if(parser.opt.xmlns){
parser.ns=Object.create(rootNS);
}

// mostly just for error reporting
parser.trackPosition=parser.opt.position!==false;
if(parser.trackPosition){
parser.position=parser.line=parser.column=0;
}
emit(parser,'onready');
}

if(!Object.create){
Object.create=function(o){
function F(){}
F.prototype=o;
var newf=new F();
return newf;
};
}

if(!Object.keys){
Object.keys=function(o){
var a=[];
for(var i in o){if(o.hasOwnProperty(i))a.push(i);}
return a;
};
}

function checkBufferLength(parser){
var maxAllowed=Math.max(sax.MAX_BUFFER_LENGTH,10);
var maxActual=0;
for(var i=0,l=buffers.length;i<l;i++){
var len=parser[buffers[i]].length;
if(len>maxAllowed){
// Text/cdata nodes can get big, and since they're buffered,
// we can get here under normal conditions.
// Avoid issues by emitting the text node now,
// so at least it won't get any bigger.
switch(buffers[i]){
case'textNode':
closeText(parser);
break;

case'cdata':
emitNode(parser,'oncdata',parser.cdata);
parser.cdata='';
break;

case'script':
emitNode(parser,'onscript',parser.script);
parser.script='';
break;

default:
error(parser,'Max buffer length exceeded: '+buffers[i]);}

}
maxActual=Math.max(maxActual,len);
}
// schedule the next check for the earliest possible buffer overrun.
var m=sax.MAX_BUFFER_LENGTH-maxActual;
parser.bufferCheckPosition=m+parser.position;
}

function clearBuffers(parser){
for(var i=0,l=buffers.length;i<l;i++){
parser[buffers[i]]='';
}
}

function flushBuffers(parser){
closeText(parser);
if(parser.cdata!==''){
emitNode(parser,'oncdata',parser.cdata);
parser.cdata='';
}
if(parser.script!==''){
emitNode(parser,'onscript',parser.script);
parser.script='';
}
}

SAXParser.prototype={
end:function end(){_end(this);},
write:write,
resume:function resume(){this.error=null;return this;},
close:function close(){return this.write(null);},
flush:function flush(){flushBuffers(this);}};


var Stream;
try{
Stream=require('stream').Stream;
}catch(ex){
Stream=function Stream(){};
}

var streamWraps=sax.EVENTS.filter(function(ev){
return ev!=='error'&&ev!=='end';
});

function createStream(strict,opt){
return new SAXStream(strict,opt);
}

function SAXStream(strict,opt){
if(!(this instanceof SAXStream)){
return new SAXStream(strict,opt);
}

Stream.apply(this);

this._parser=new SAXParser(strict,opt);
this.writable=true;
this.readable=true;

var me=this;

this._parser.onend=function(){
me.emit('end');
};

this._parser.onerror=function(er){
me.emit('error',er);

// if didn't throw, then means error was handled.
// go ahead and clear error, so we can write again.
me._parser.error=null;
};

this._decoder=null;

streamWraps.forEach(function(ev){
Object.defineProperty(me,'on'+ev,{
get:function get(){
return me._parser['on'+ev];
},
set:function set(h){
if(!h){
me.removeAllListeners(ev);
me._parser['on'+ev]=h;
return h;
}
me.on(ev,h);
},
enumerable:true,
configurable:false});

});
}

SAXStream.prototype=Object.create(Stream.prototype,{
constructor:{
value:SAXStream}});



SAXStream.prototype.write=function(data){
if(typeof Buffer==='function'&&
typeof Buffer.isBuffer==='function'&&
Buffer.isBuffer(data)){
if(!this._decoder){
var SD=require('string_decoder').StringDecoder;
this._decoder=new SD('utf8');
}
data=this._decoder.write(data);
}

this._parser.write(data.toString());
this.emit('data',data);
return true;
};

SAXStream.prototype.end=function(chunk){
if(chunk&&chunk.length){
this.write(chunk);
}
this._parser.end();
return true;
};

SAXStream.prototype.on=function(ev,handler){
var me=this;
if(!me._parser['on'+ev]&&streamWraps.indexOf(ev)!==-1){
me._parser['on'+ev]=function(){
var args=arguments.length===1?[arguments[0]]:Array.apply(null,arguments);
args.splice(0,0,ev);
me.emit.apply(me,args);
};
}

return Stream.prototype.on.call(me,ev,handler);
};

// this really needs to be replaced with character classes.
// XML allows all manner of ridiculous numbers and digits.
var CDATA='[CDATA[';
var DOCTYPE='DOCTYPE';
var XML_NAMESPACE='http://www.w3.org/XML/1998/namespace';
var XMLNS_NAMESPACE='http://www.w3.org/2000/xmlns/';
var rootNS={xml:XML_NAMESPACE,xmlns:XMLNS_NAMESPACE};

// http://www.w3.org/TR/REC-xml/#NT-NameStartChar
// This implementation works on strings, a single character at a time
// as such, it cannot ever support astral-plane characters (10000-EFFFF)
// without a significant breaking change to either this  parser, or the
// JavaScript language.  Implementation of an emoji-capable xml parser
// is left as an exercise for the reader.
var nameStart=/[:_A-Za-z\u00C0-\u00D6\u00D8-\u00F6\u00F8-\u02FF\u0370-\u037D\u037F-\u1FFF\u200C-\u200D\u2070-\u218F\u2C00-\u2FEF\u3001-\uD7FF\uF900-\uFDCF\uFDF0-\uFFFD]/;

var nameBody=/[:_A-Za-z\u00C0-\u00D6\u00D8-\u00F6\u00F8-\u02FF\u0370-\u037D\u037F-\u1FFF\u200C-\u200D\u2070-\u218F\u2C00-\u2FEF\u3001-\uD7FF\uF900-\uFDCF\uFDF0-\uFFFD\u00B7\u0300-\u036F\u203F-\u2040.\d-]/;

var entityStart=/[#:_A-Za-z\u00C0-\u00D6\u00D8-\u00F6\u00F8-\u02FF\u0370-\u037D\u037F-\u1FFF\u200C-\u200D\u2070-\u218F\u2C00-\u2FEF\u3001-\uD7FF\uF900-\uFDCF\uFDF0-\uFFFD]/;
var entityBody=/[#:_A-Za-z\u00C0-\u00D6\u00D8-\u00F6\u00F8-\u02FF\u0370-\u037D\u037F-\u1FFF\u200C-\u200D\u2070-\u218F\u2C00-\u2FEF\u3001-\uD7FF\uF900-\uFDCF\uFDF0-\uFFFD\u00B7\u0300-\u036F\u203F-\u2040.\d-]/;

function isWhitespace(c){
return c===' '||c==='\n'||c==='\r'||c==='\t';
}

function isQuote(c){
return c==='"'||c==='\'';
}

function isAttribEnd(c){
return c==='>'||isWhitespace(c);
}

function isMatch(regex,c){
return regex.test(c);
}

function notMatch(regex,c){
return!isMatch(regex,c);
}

var S=0;
sax.STATE={
BEGIN:S++,// leading byte order mark or whitespace
BEGIN_WHITESPACE:S++,// leading whitespace
TEXT:S++,// general stuff
TEXT_ENTITY:S++,// &amp and such.
OPEN_WAKA:S++,// <
SGML_DECL:S++,// <!BLARG
SGML_DECL_QUOTED:S++,// <!BLARG foo "bar
DOCTYPE:S++,// <!DOCTYPE
DOCTYPE_QUOTED:S++,// <!DOCTYPE "//blah
DOCTYPE_DTD:S++,// <!DOCTYPE "//blah" [ ...
DOCTYPE_DTD_QUOTED:S++,// <!DOCTYPE "//blah" [ "foo
COMMENT_STARTING:S++,// <!-
COMMENT:S++,// <!--
COMMENT_ENDING:S++,// <!-- blah -
COMMENT_ENDED:S++,// <!-- blah --
CDATA:S++,// <![CDATA[ something
CDATA_ENDING:S++,// ]
CDATA_ENDING_2:S++,// ]]
PROC_INST:S++,// <?hi
PROC_INST_BODY:S++,// <?hi there
PROC_INST_ENDING:S++,// <?hi "there" ?
OPEN_TAG:S++,// <strong
OPEN_TAG_SLASH:S++,// <strong /
ATTRIB:S++,// <a
ATTRIB_NAME:S++,// <a foo
ATTRIB_NAME_SAW_WHITE:S++,// <a foo _
ATTRIB_VALUE:S++,// <a foo=
ATTRIB_VALUE_QUOTED:S++,// <a foo="bar
ATTRIB_VALUE_CLOSED:S++,// <a foo="bar"
ATTRIB_VALUE_UNQUOTED:S++,// <a foo=bar
ATTRIB_VALUE_ENTITY_Q:S++,// <foo bar="&quot;"
ATTRIB_VALUE_ENTITY_U:S++,// <foo bar=&quot
CLOSE_TAG:S++,// </a
CLOSE_TAG_SAW_WHITE:S++,// </a   >
SCRIPT:S++,// <script> ...
SCRIPT_ENDING:S++// <script> ... <
};

sax.XML_ENTITIES={
'amp':'&',
'gt':'>',
'lt':'<',
'quot':'"',
'apos':"'"};


sax.ENTITIES={
'amp':'&',
'gt':'>',
'lt':'<',
'quot':'"',
'apos':"'",
'AElig':198,
'Aacute':193,
'Acirc':194,
'Agrave':192,
'Aring':197,
'Atilde':195,
'Auml':196,
'Ccedil':199,
'ETH':208,
'Eacute':201,
'Ecirc':202,
'Egrave':200,
'Euml':203,
'Iacute':205,
'Icirc':206,
'Igrave':204,
'Iuml':207,
'Ntilde':209,
'Oacute':211,
'Ocirc':212,
'Ograve':210,
'Oslash':216,
'Otilde':213,
'Ouml':214,
'THORN':222,
'Uacute':218,
'Ucirc':219,
'Ugrave':217,
'Uuml':220,
'Yacute':221,
'aacute':225,
'acirc':226,
'aelig':230,
'agrave':224,
'aring':229,
'atilde':227,
'auml':228,
'ccedil':231,
'eacute':233,
'ecirc':234,
'egrave':232,
'eth':240,
'euml':235,
'iacute':237,
'icirc':238,
'igrave':236,
'iuml':239,
'ntilde':241,
'oacute':243,
'ocirc':244,
'ograve':242,
'oslash':248,
'otilde':245,
'ouml':246,
'szlig':223,
'thorn':254,
'uacute':250,
'ucirc':251,
'ugrave':249,
'uuml':252,
'yacute':253,
'yuml':255,
'copy':169,
'reg':174,
'nbsp':160,
'iexcl':161,
'cent':162,
'pound':163,
'curren':164,
'yen':165,
'brvbar':166,
'sect':167,
'uml':168,
'ordf':170,
'laquo':171,
'not':172,
'shy':173,
'macr':175,
'deg':176,
'plusmn':177,
'sup1':185,
'sup2':178,
'sup3':179,
'acute':180,
'micro':181,
'para':182,
'middot':183,
'cedil':184,
'ordm':186,
'raquo':187,
'frac14':188,
'frac12':189,
'frac34':190,
'iquest':191,
'times':215,
'divide':247,
'OElig':338,
'oelig':339,
'Scaron':352,
'scaron':353,
'Yuml':376,
'fnof':402,
'circ':710,
'tilde':732,
'Alpha':913,
'Beta':914,
'Gamma':915,
'Delta':916,
'Epsilon':917,
'Zeta':918,
'Eta':919,
'Theta':920,
'Iota':921,
'Kappa':922,
'Lambda':923,
'Mu':924,
'Nu':925,
'Xi':926,
'Omicron':927,
'Pi':928,
'Rho':929,
'Sigma':931,
'Tau':932,
'Upsilon':933,
'Phi':934,
'Chi':935,
'Psi':936,
'Omega':937,
'alpha':945,
'beta':946,
'gamma':947,
'delta':948,
'epsilon':949,
'zeta':950,
'eta':951,
'theta':952,
'iota':953,
'kappa':954,
'lambda':955,
'mu':956,
'nu':957,
'xi':958,
'omicron':959,
'pi':960,
'rho':961,
'sigmaf':962,
'sigma':963,
'tau':964,
'upsilon':965,
'phi':966,
'chi':967,
'psi':968,
'omega':969,
'thetasym':977,
'upsih':978,
'piv':982,
'ensp':8194,
'emsp':8195,
'thinsp':8201,
'zwnj':8204,
'zwj':8205,
'lrm':8206,
'rlm':8207,
'ndash':8211,
'mdash':8212,
'lsquo':8216,
'rsquo':8217,
'sbquo':8218,
'ldquo':8220,
'rdquo':8221,
'bdquo':8222,
'dagger':8224,
'Dagger':8225,
'bull':8226,
'hellip':8230,
'permil':8240,
'prime':8242,
'Prime':8243,
'lsaquo':8249,
'rsaquo':8250,
'oline':8254,
'frasl':8260,
'euro':8364,
'image':8465,
'weierp':8472,
'real':8476,
'trade':8482,
'alefsym':8501,
'larr':8592,
'uarr':8593,
'rarr':8594,
'darr':8595,
'harr':8596,
'crarr':8629,
'lArr':8656,
'uArr':8657,
'rArr':8658,
'dArr':8659,
'hArr':8660,
'forall':8704,
'part':8706,
'exist':8707,
'empty':8709,
'nabla':8711,
'isin':8712,
'notin':8713,
'ni':8715,
'prod':8719,
'sum':8721,
'minus':8722,
'lowast':8727,
'radic':8730,
'prop':8733,
'infin':8734,
'ang':8736,
'and':8743,
'or':8744,
'cap':8745,
'cup':8746,
'int':8747,
'there4':8756,
'sim':8764,
'cong':8773,
'asymp':8776,
'ne':8800,
'equiv':8801,
'le':8804,
'ge':8805,
'sub':8834,
'sup':8835,
'nsub':8836,
'sube':8838,
'supe':8839,
'oplus':8853,
'otimes':8855,
'perp':8869,
'sdot':8901,
'lceil':8968,
'rceil':8969,
'lfloor':8970,
'rfloor':8971,
'lang':9001,
'rang':9002,
'loz':9674,
'spades':9824,
'clubs':9827,
'hearts':9829,
'diams':9830};


Object.keys(sax.ENTITIES).forEach(function(key){
var e=sax.ENTITIES[key];
var s=typeof e==='number'?String.fromCharCode(e):e;
sax.ENTITIES[key]=s;
});

for(var s in sax.STATE){
sax.STATE[sax.STATE[s]]=s;
}

// shorthand
S=sax.STATE;

function emit(parser,event,data){
parser[event]&&parser[event](data);
}

function emitNode(parser,nodeType,data){
if(parser.textNode)closeText(parser);
emit(parser,nodeType,data);
}

function closeText(parser){
parser.textNode=textopts(parser.opt,parser.textNode);
if(parser.textNode)emit(parser,'ontext',parser.textNode);
parser.textNode='';
}

function textopts(opt,text){
if(opt.trim)text=text.trim();
if(opt.normalize)text=text.replace(/\s+/g,' ');
return text;
}

function error(parser,er){
closeText(parser);
if(parser.trackPosition){
er+='\nLine: '+parser.line+
'\nColumn: '+parser.column+
'\nChar: '+parser.c;
}
er=new Error(er);
parser.error=er;
emit(parser,'onerror',er);
return parser;
}

function _end(parser){
if(parser.sawRoot&&!parser.closedRoot)strictFail(parser,'Unclosed root tag');
if(parser.state!==S.BEGIN&&
parser.state!==S.BEGIN_WHITESPACE&&
parser.state!==S.TEXT){
error(parser,'Unexpected end');
}
closeText(parser);
parser.c='';
parser.closed=true;
emit(parser,'onend');
SAXParser.call(parser,parser.strict,parser.opt);
return parser;
}

function strictFail(parser,message){
if(typeof parser!=='object'||!(parser instanceof SAXParser)){
throw new Error('bad call to strictFail');
}
if(parser.strict){
error(parser,message);
}
}

function newTag(parser){
if(!parser.strict)parser.tagName=parser.tagName[parser.looseCase]();
var parent=parser.tags[parser.tags.length-1]||parser;
var tag=parser.tag={name:parser.tagName,attributes:{}};

// will be overridden if tag contails an xmlns="foo" or xmlns:foo="bar"
if(parser.opt.xmlns){
tag.ns=parent.ns;
}
parser.attribList.length=0;
emitNode(parser,'onopentagstart',tag);
}

function qname(name,attribute){
var i=name.indexOf(':');
var qualName=i<0?['',name]:name.split(':');
var prefix=qualName[0];
var local=qualName[1];

// <x "xmlns"="http://foo">
if(attribute&&name==='xmlns'){
prefix='xmlns';
local='';
}

return{prefix:prefix,local:local};
}

function attrib(parser){
if(!parser.strict){
parser.attribName=parser.attribName[parser.looseCase]();
}

if(parser.attribList.indexOf(parser.attribName)!==-1||
parser.tag.attributes.hasOwnProperty(parser.attribName)){
parser.attribName=parser.attribValue='';
return;
}

if(parser.opt.xmlns){
var qn=qname(parser.attribName,true);
var prefix=qn.prefix;
var local=qn.local;

if(prefix==='xmlns'){
// namespace binding attribute. push the binding into scope
if(local==='xml'&&parser.attribValue!==XML_NAMESPACE){
strictFail(parser,
'xml: prefix must be bound to '+XML_NAMESPACE+'\n'+
'Actual: '+parser.attribValue);
}else if(local==='xmlns'&&parser.attribValue!==XMLNS_NAMESPACE){
strictFail(parser,
'xmlns: prefix must be bound to '+XMLNS_NAMESPACE+'\n'+
'Actual: '+parser.attribValue);
}else{
var tag=parser.tag;
var parent=parser.tags[parser.tags.length-1]||parser;
if(tag.ns===parent.ns){
tag.ns=Object.create(parent.ns);
}
tag.ns[local]=parser.attribValue;
}
}

// defer onattribute events until all attributes have been seen
// so any new bindings can take effect. preserve attribute order
// so deferred events can be emitted in document order
parser.attribList.push([parser.attribName,parser.attribValue]);
}else{
// in non-xmlns mode, we can emit the event right away
parser.tag.attributes[parser.attribName]=parser.attribValue;
emitNode(parser,'onattribute',{
name:parser.attribName,
value:parser.attribValue});

}

parser.attribName=parser.attribValue='';
}

function openTag(parser,selfClosing){
if(parser.opt.xmlns){
// emit namespace binding events
var tag=parser.tag;

// add namespace info to tag
var qn=qname(parser.tagName);
tag.prefix=qn.prefix;
tag.local=qn.local;
tag.uri=tag.ns[qn.prefix]||'';

if(tag.prefix&&!tag.uri){
strictFail(parser,'Unbound namespace prefix: '+
JSON.stringify(parser.tagName));
tag.uri=qn.prefix;
}

var parent=parser.tags[parser.tags.length-1]||parser;
if(tag.ns&&parent.ns!==tag.ns){
Object.keys(tag.ns).forEach(function(p){
emitNode(parser,'onopennamespace',{
prefix:p,
uri:tag.ns[p]});

});
}

// handle deferred onattribute events
// Note: do not apply default ns to attributes:
//   http://www.w3.org/TR/REC-xml-names/#defaulting
for(var i=0,l=parser.attribList.length;i<l;i++){
var nv=parser.attribList[i];
var name=nv[0];
var value=nv[1];
var qualName=qname(name,true);
var prefix=qualName.prefix;
var local=qualName.local;
var uri=prefix===''?'':tag.ns[prefix]||'';
var a={
name:name,
value:value,
prefix:prefix,
local:local,
uri:uri};


// if there's any attributes with an undefined namespace,
// then fail on them now.
if(prefix&&prefix!=='xmlns'&&!uri){
strictFail(parser,'Unbound namespace prefix: '+
JSON.stringify(prefix));
a.uri=prefix;
}
parser.tag.attributes[name]=a;
emitNode(parser,'onattribute',a);
}
parser.attribList.length=0;
}

parser.tag.isSelfClosing=!!selfClosing;

// process the tag
parser.sawRoot=true;
parser.tags.push(parser.tag);
emitNode(parser,'onopentag',parser.tag);
if(!selfClosing){
// special case for <script> in non-strict mode.
if(!parser.noscript&&parser.tagName.toLowerCase()==='script'){
parser.state=S.SCRIPT;
}else{
parser.state=S.TEXT;
}
parser.tag=null;
parser.tagName='';
}
parser.attribName=parser.attribValue='';
parser.attribList.length=0;
}

function closeTag(parser){
if(!parser.tagName){
strictFail(parser,'Weird empty close tag.');
parser.textNode+='</>';
parser.state=S.TEXT;
return;
}

if(parser.script){
if(parser.tagName!=='script'){
parser.script+='</'+parser.tagName+'>';
parser.tagName='';
parser.state=S.SCRIPT;
return;
}
emitNode(parser,'onscript',parser.script);
parser.script='';
}

// first make sure that the closing tag actually exists.
// <a><b></c></b></a> will close everything, otherwise.
var t=parser.tags.length;
var tagName=parser.tagName;
if(!parser.strict){
tagName=tagName[parser.looseCase]();
}
var closeTo=tagName;
while(t--){
var close=parser.tags[t];
if(close.name!==closeTo){
// fail the first time in strict mode
strictFail(parser,'Unexpected close tag');
}else{
break;
}
}

// didn't find it.  we already failed for strict, so just abort.
if(t<0){
strictFail(parser,'Unmatched closing tag: '+parser.tagName);
parser.textNode+='</'+parser.tagName+'>';
parser.state=S.TEXT;
return;
}
parser.tagName=tagName;
var s=parser.tags.length;
while(s-->t){
var tag=parser.tag=parser.tags.pop();
parser.tagName=parser.tag.name;
emitNode(parser,'onclosetag',parser.tagName);

var x={};
for(var i in tag.ns){
x[i]=tag.ns[i];
}

var parent=parser.tags[parser.tags.length-1]||parser;
if(parser.opt.xmlns&&tag.ns!==parent.ns){
// remove namespace bindings introduced by tag
Object.keys(tag.ns).forEach(function(p){
var n=tag.ns[p];
emitNode(parser,'onclosenamespace',{prefix:p,uri:n});
});
}
}
if(t===0)parser.closedRoot=true;
parser.tagName=parser.attribValue=parser.attribName='';
parser.attribList.length=0;
parser.state=S.TEXT;
}

function parseEntity(parser){
var entity=parser.entity;
var entityLC=entity.toLowerCase();
var num;
var numStr='';

if(parser.ENTITIES[entity]){
return parser.ENTITIES[entity];
}
if(parser.ENTITIES[entityLC]){
return parser.ENTITIES[entityLC];
}
entity=entityLC;
if(entity.charAt(0)==='#'){
if(entity.charAt(1)==='x'){
entity=entity.slice(2);
num=parseInt(entity,16);
numStr=num.toString(16);
}else{
entity=entity.slice(1);
num=parseInt(entity,10);
numStr=num.toString(10);
}
}
entity=entity.replace(/^0+/,'');
if(isNaN(num)||numStr.toLowerCase()!==entity){
strictFail(parser,'Invalid character entity');
return'&'+parser.entity+';';
}

return String.fromCodePoint(num);
}

function beginWhiteSpace(parser,c){
if(c==='<'){
parser.state=S.OPEN_WAKA;
parser.startTagPosition=parser.position;
}else if(!isWhitespace(c)){
// have to process this as a text node.
// weird, but happens.
strictFail(parser,'Non-whitespace before first tag.');
parser.textNode=c;
parser.state=S.TEXT;
}
}

function charAt(chunk,i){
var result='';
if(i<chunk.length){
result=chunk.charAt(i);
}
return result;
}

function write(chunk){
var parser=this;
if(this.error){
throw this.error;
}
if(parser.closed){
return error(parser,
'Cannot write after close. Assign an onready handler.');
}
if(chunk===null){
return _end(parser);
}
if(typeof chunk==='object'){
chunk=chunk.toString();
}
var i=0;
var c='';
while(true){
c=charAt(chunk,i++);
parser.c=c;

if(!c){
break;
}

if(parser.trackPosition){
parser.position++;
if(c==='\n'){
parser.line++;
parser.column=0;
}else{
parser.column++;
}
}

switch(parser.state){
case S.BEGIN:
parser.state=S.BEGIN_WHITESPACE;
if(c==="\uFEFF"){
continue;
}
beginWhiteSpace(parser,c);
continue;

case S.BEGIN_WHITESPACE:
beginWhiteSpace(parser,c);
continue;

case S.TEXT:
if(parser.sawRoot&&!parser.closedRoot){
var starti=i-1;
while(c&&c!=='<'&&c!=='&'){
c=charAt(chunk,i++);
if(c&&parser.trackPosition){
parser.position++;
if(c==='\n'){
parser.line++;
parser.column=0;
}else{
parser.column++;
}
}
}
parser.textNode+=chunk.substring(starti,i-1);
}
if(c==='<'&&!(parser.sawRoot&&parser.closedRoot&&!parser.strict)){
parser.state=S.OPEN_WAKA;
parser.startTagPosition=parser.position;
}else{
if(!isWhitespace(c)&&(!parser.sawRoot||parser.closedRoot)){
strictFail(parser,'Text data outside of root node.');
}
if(c==='&'){
parser.state=S.TEXT_ENTITY;
}else{
parser.textNode+=c;
}
}
continue;

case S.SCRIPT:
// only non-strict
if(c==='<'){
parser.state=S.SCRIPT_ENDING;
}else{
parser.script+=c;
}
continue;

case S.SCRIPT_ENDING:
if(c==='/'){
parser.state=S.CLOSE_TAG;
}else{
parser.script+='<'+c;
parser.state=S.SCRIPT;
}
continue;

case S.OPEN_WAKA:
// either a /, ?, !, or text is coming next.
if(c==='!'){
parser.state=S.SGML_DECL;
parser.sgmlDecl='';
}else if(isWhitespace(c)){
// wait for it...
}else if(isMatch(nameStart,c)){
parser.state=S.OPEN_TAG;
parser.tagName=c;
}else if(c==='/'){
parser.state=S.CLOSE_TAG;
parser.tagName='';
}else if(c==='?'){
parser.state=S.PROC_INST;
parser.procInstName=parser.procInstBody='';
}else{
strictFail(parser,'Unencoded <');
// if there was some whitespace, then add that in.
if(parser.startTagPosition+1<parser.position){
var pad=parser.position-parser.startTagPosition;
c=new Array(pad).join(' ')+c;
}
parser.textNode+='<'+c;
parser.state=S.TEXT;
}
continue;

case S.SGML_DECL:
if((parser.sgmlDecl+c).toUpperCase()===CDATA){
emitNode(parser,'onopencdata');
parser.state=S.CDATA;
parser.sgmlDecl='';
parser.cdata='';
}else if(parser.sgmlDecl+c==='--'){
parser.state=S.COMMENT;
parser.comment='';
parser.sgmlDecl='';
}else if((parser.sgmlDecl+c).toUpperCase()===DOCTYPE){
parser.state=S.DOCTYPE;
if(parser.doctype||parser.sawRoot){
strictFail(parser,
'Inappropriately located doctype declaration');
}
parser.doctype='';
parser.sgmlDecl='';
}else if(c==='>'){
emitNode(parser,'onsgmldeclaration',parser.sgmlDecl);
parser.sgmlDecl='';
parser.state=S.TEXT;
}else if(isQuote(c)){
parser.state=S.SGML_DECL_QUOTED;
parser.sgmlDecl+=c;
}else{
parser.sgmlDecl+=c;
}
continue;

case S.SGML_DECL_QUOTED:
if(c===parser.q){
parser.state=S.SGML_DECL;
parser.q='';
}
parser.sgmlDecl+=c;
continue;

case S.DOCTYPE:
if(c==='>'){
parser.state=S.TEXT;
emitNode(parser,'ondoctype',parser.doctype);
parser.doctype=true;// just remember that we saw it.
}else{
parser.doctype+=c;
if(c==='['){
parser.state=S.DOCTYPE_DTD;
}else if(isQuote(c)){
parser.state=S.DOCTYPE_QUOTED;
parser.q=c;
}
}
continue;

case S.DOCTYPE_QUOTED:
parser.doctype+=c;
if(c===parser.q){
parser.q='';
parser.state=S.DOCTYPE;
}
continue;

case S.DOCTYPE_DTD:
parser.doctype+=c;
if(c===']'){
parser.state=S.DOCTYPE;
}else if(isQuote(c)){
parser.state=S.DOCTYPE_DTD_QUOTED;
parser.q=c;
}
continue;

case S.DOCTYPE_DTD_QUOTED:
parser.doctype+=c;
if(c===parser.q){
parser.state=S.DOCTYPE_DTD;
parser.q='';
}
continue;

case S.COMMENT:
if(c==='-'){
parser.state=S.COMMENT_ENDING;
}else{
parser.comment+=c;
}
continue;

case S.COMMENT_ENDING:
if(c==='-'){
parser.state=S.COMMENT_ENDED;
parser.comment=textopts(parser.opt,parser.comment);
if(parser.comment){
emitNode(parser,'oncomment',parser.comment);
}
parser.comment='';
}else{
parser.comment+='-'+c;
parser.state=S.COMMENT;
}
continue;

case S.COMMENT_ENDED:
if(c!=='>'){
strictFail(parser,'Malformed comment');
// allow <!-- blah -- bloo --> in non-strict mode,
// which is a comment of " blah -- bloo "
parser.comment+='--'+c;
parser.state=S.COMMENT;
}else{
parser.state=S.TEXT;
}
continue;

case S.CDATA:
if(c===']'){
parser.state=S.CDATA_ENDING;
}else{
parser.cdata+=c;
}
continue;

case S.CDATA_ENDING:
if(c===']'){
parser.state=S.CDATA_ENDING_2;
}else{
parser.cdata+=']'+c;
parser.state=S.CDATA;
}
continue;

case S.CDATA_ENDING_2:
if(c==='>'){
if(parser.cdata){
emitNode(parser,'oncdata',parser.cdata);
}
emitNode(parser,'onclosecdata');
parser.cdata='';
parser.state=S.TEXT;
}else if(c===']'){
parser.cdata+=']';
}else{
parser.cdata+=']]'+c;
parser.state=S.CDATA;
}
continue;

case S.PROC_INST:
if(c==='?'){
parser.state=S.PROC_INST_ENDING;
}else if(isWhitespace(c)){
parser.state=S.PROC_INST_BODY;
}else{
parser.procInstName+=c;
}
continue;

case S.PROC_INST_BODY:
if(!parser.procInstBody&&isWhitespace(c)){
continue;
}else if(c==='?'){
parser.state=S.PROC_INST_ENDING;
}else{
parser.procInstBody+=c;
}
continue;

case S.PROC_INST_ENDING:
if(c==='>'){
emitNode(parser,'onprocessinginstruction',{
name:parser.procInstName,
body:parser.procInstBody});

parser.procInstName=parser.procInstBody='';
parser.state=S.TEXT;
}else{
parser.procInstBody+='?'+c;
parser.state=S.PROC_INST_BODY;
}
continue;

case S.OPEN_TAG:
if(isMatch(nameBody,c)){
parser.tagName+=c;
}else{
newTag(parser);
if(c==='>'){
openTag(parser);
}else if(c==='/'){
parser.state=S.OPEN_TAG_SLASH;
}else{
if(!isWhitespace(c)){
strictFail(parser,'Invalid character in tag name');
}
parser.state=S.ATTRIB;
}
}
continue;

case S.OPEN_TAG_SLASH:
if(c==='>'){
openTag(parser,true);
closeTag(parser);
}else{
strictFail(parser,'Forward-slash in opening tag not followed by >');
parser.state=S.ATTRIB;
}
continue;

case S.ATTRIB:
// haven't read the attribute name yet.
if(isWhitespace(c)){
continue;
}else if(c==='>'){
openTag(parser);
}else if(c==='/'){
parser.state=S.OPEN_TAG_SLASH;
}else if(isMatch(nameStart,c)){
parser.attribName=c;
parser.attribValue='';
parser.state=S.ATTRIB_NAME;
}else{
strictFail(parser,'Invalid attribute name');
}
continue;

case S.ATTRIB_NAME:
if(c==='='){
parser.state=S.ATTRIB_VALUE;
}else if(c==='>'){
strictFail(parser,'Attribute without value');
parser.attribValue=parser.attribName;
attrib(parser);
openTag(parser);
}else if(isWhitespace(c)){
parser.state=S.ATTRIB_NAME_SAW_WHITE;
}else if(isMatch(nameBody,c)){
parser.attribName+=c;
}else{
strictFail(parser,'Invalid attribute name');
}
continue;

case S.ATTRIB_NAME_SAW_WHITE:
if(c==='='){
parser.state=S.ATTRIB_VALUE;
}else if(isWhitespace(c)){
continue;
}else{
strictFail(parser,'Attribute without value');
parser.tag.attributes[parser.attribName]='';
parser.attribValue='';
emitNode(parser,'onattribute',{
name:parser.attribName,
value:''});

parser.attribName='';
if(c==='>'){
openTag(parser);
}else if(isMatch(nameStart,c)){
parser.attribName=c;
parser.state=S.ATTRIB_NAME;
}else{
strictFail(parser,'Invalid attribute name');
parser.state=S.ATTRIB;
}
}
continue;

case S.ATTRIB_VALUE:
if(isWhitespace(c)){
continue;
}else if(isQuote(c)){
parser.q=c;
parser.state=S.ATTRIB_VALUE_QUOTED;
}else{
strictFail(parser,'Unquoted attribute value');
parser.state=S.ATTRIB_VALUE_UNQUOTED;
parser.attribValue=c;
}
continue;

case S.ATTRIB_VALUE_QUOTED:
if(c!==parser.q){
if(c==='&'){
parser.state=S.ATTRIB_VALUE_ENTITY_Q;
}else{
parser.attribValue+=c;
}
continue;
}
attrib(parser);
parser.q='';
parser.state=S.ATTRIB_VALUE_CLOSED;
continue;

case S.ATTRIB_VALUE_CLOSED:
if(isWhitespace(c)){
parser.state=S.ATTRIB;
}else if(c==='>'){
openTag(parser);
}else if(c==='/'){
parser.state=S.OPEN_TAG_SLASH;
}else if(isMatch(nameStart,c)){
strictFail(parser,'No whitespace between attributes');
parser.attribName=c;
parser.attribValue='';
parser.state=S.ATTRIB_NAME;
}else{
strictFail(parser,'Invalid attribute name');
}
continue;

case S.ATTRIB_VALUE_UNQUOTED:
if(!isAttribEnd(c)){
if(c==='&'){
parser.state=S.ATTRIB_VALUE_ENTITY_U;
}else{
parser.attribValue+=c;
}
continue;
}
attrib(parser);
if(c==='>'){
openTag(parser);
}else{
parser.state=S.ATTRIB;
}
continue;

case S.CLOSE_TAG:
if(!parser.tagName){
if(isWhitespace(c)){
continue;
}else if(notMatch(nameStart,c)){
if(parser.script){
parser.script+='</'+c;
parser.state=S.SCRIPT;
}else{
strictFail(parser,'Invalid tagname in closing tag.');
}
}else{
parser.tagName=c;
}
}else if(c==='>'){
closeTag(parser);
}else if(isMatch(nameBody,c)){
parser.tagName+=c;
}else if(parser.script){
parser.script+='</'+parser.tagName;
parser.tagName='';
parser.state=S.SCRIPT;
}else{
if(!isWhitespace(c)){
strictFail(parser,'Invalid tagname in closing tag');
}
parser.state=S.CLOSE_TAG_SAW_WHITE;
}
continue;

case S.CLOSE_TAG_SAW_WHITE:
if(isWhitespace(c)){
continue;
}
if(c==='>'){
closeTag(parser);
}else{
strictFail(parser,'Invalid characters in closing tag');
}
continue;

case S.TEXT_ENTITY:
case S.ATTRIB_VALUE_ENTITY_Q:
case S.ATTRIB_VALUE_ENTITY_U:
var returnState;
var buffer;
switch(parser.state){
case S.TEXT_ENTITY:
returnState=S.TEXT;
buffer='textNode';
break;

case S.ATTRIB_VALUE_ENTITY_Q:
returnState=S.ATTRIB_VALUE_QUOTED;
buffer='attribValue';
break;

case S.ATTRIB_VALUE_ENTITY_U:
returnState=S.ATTRIB_VALUE_UNQUOTED;
buffer='attribValue';
break;}


if(c===';'){
parser[buffer]+=parseEntity(parser);
parser.entity='';
parser.state=returnState;
}else if(isMatch(parser.entity.length?entityBody:entityStart,c)){
parser.entity+=c;
}else{
strictFail(parser,'Invalid character in entity name');
parser[buffer]+='&'+parser.entity+c;
parser.entity='';
parser.state=returnState;
}

continue;

default:
throw new Error(parser,'Unknown state: '+parser.state);}

}// while

if(parser.position>=parser.bufferCheckPosition){
checkBufferLength(parser);
}
return parser;
}

/*! http://mths.be/fromcodepoint v0.1.0 by @mathias */
/* istanbul ignore next */
if(!String.fromCodePoint){
(function(){
var stringFromCharCode=String.fromCharCode;
var floor=Math.floor;
var fromCodePoint=function fromCodePoint(){
var MAX_SIZE=0x4000;
var codeUnits=[];
var highSurrogate;
var lowSurrogate;
var index=-1;
var length=arguments.length;
if(!length){
return'';
}
var result='';
while(++index<length){
var codePoint=Number(arguments[index]);
if(
!isFinite(codePoint)||// `NaN`, `+Infinity`, or `-Infinity`
codePoint<0||// not a valid Unicode code point
codePoint>0x10FFFF||// not a valid Unicode code point
floor(codePoint)!==codePoint// not an integer
){
throw RangeError('Invalid code point: '+codePoint);
}
if(codePoint<=0xFFFF){// BMP code point
codeUnits.push(codePoint);
}else{// Astral code point; split in surrogate halves
// http://mathiasbynens.be/notes/javascript-encoding#surrogate-formulae
codePoint-=0x10000;
highSurrogate=(codePoint>>10)+0xD800;
lowSurrogate=codePoint%0x400+0xDC00;
codeUnits.push(highSurrogate,lowSurrogate);
}
if(index+1===length||codeUnits.length>MAX_SIZE){
result+=stringFromCharCode.apply(null,codeUnits);
codeUnits.length=0;
}
}
return result;
};
/* istanbul ignore next */
if(Object.defineProperty){
Object.defineProperty(String,'fromCodePoint',{
value:fromCodePoint,
configurable:true,
writable:true});

}else{
String.fromCodePoint=fromCodePoint;
}
})();
}
})(typeof exports==='undefined'?this.sax={}:exports);

}).call(this,require("buffer").Buffer);
},{"buffer":99,"stream":339,"string_decoder":340}],339:[function(require,module,exports){
// Copyright Joyent, Inc. and other Node contributors.
//
// Permission is hereby granted, free of charge, to any person obtaining a
// copy of this software and associated documentation files (the
// "Software"), to deal in the Software without restriction, including
// without limitation the rights to use, copy, modify, merge, publish,
// distribute, sublicense, and/or sell copies of the Software, and to permit
// persons to whom the Software is furnished to do so, subject to the
// following conditions:
//
// The above copyright notice and this permission notice shall be included
// in all copies or substantial portions of the Software.
//
// THE SOFTWARE IS PROVIDED "AS IS", WITHOUT WARRANTY OF ANY KIND, EXPRESS
// OR IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF
// MERCHANTABILITY, FITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN
// NO EVENT SHALL THE AUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM,
// DAMAGES OR OTHER LIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR
// OTHERWISE, ARISING FROM, OUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE
// USE OR OTHER DEALINGS IN THE SOFTWARE.

module.exports=Stream;

var EE=require('events').EventEmitter;
var inherits=require('inherits');

inherits(Stream,EE);
Stream.Readable=require('readable-stream/readable.js');
Stream.Writable=require('readable-stream/writable.js');
Stream.Duplex=require('readable-stream/duplex.js');
Stream.Transform=require('readable-stream/transform.js');
Stream.PassThrough=require('readable-stream/passthrough.js');

// Backwards-compat with node 0.4.x
Stream.Stream=Stream;



// old-style streams.  Note that the pipe method (the only relevant
// part of this class) is overridden in the Readable class.

function Stream(){
EE.call(this);
}

Stream.prototype.pipe=function(dest,options){
var source=this;

function ondata(chunk){
if(dest.writable){
if(false===dest.write(chunk)&&source.pause){
source.pause();
}
}
}

source.on('data',ondata);

function ondrain(){
if(source.readable&&source.resume){
source.resume();
}
}

dest.on('drain',ondrain);

// If the 'end' option is not supplied, dest.end() will be called when
// source gets the 'end' or 'close' events.  Only dest.end() once.
if(!dest._isStdio&&(!options||options.end!==false)){
source.on('end',onend);
source.on('close',onclose);
}

var didOnEnd=false;
function onend(){
if(didOnEnd)return;
didOnEnd=true;

dest.end();
}


function onclose(){
if(didOnEnd)return;
didOnEnd=true;

if(typeof dest.destroy==='function')dest.destroy();
}

// don't leave dangling pipes when there are errors.
function onerror(er){
cleanup();
if(EE.listenerCount(this,'error')===0){
throw er;// Unhandled stream error in pipe.
}
}

source.on('error',onerror);
dest.on('error',onerror);

// remove all the event listeners that were added.
function cleanup(){
source.removeListener('data',ondata);
dest.removeListener('drain',ondrain);

source.removeListener('end',onend);
source.removeListener('close',onclose);

source.removeListener('error',onerror);
dest.removeListener('error',onerror);

source.removeListener('end',cleanup);
source.removeListener('close',cleanup);

dest.removeListener('close',cleanup);
}

source.on('end',cleanup);
source.on('close',cleanup);

dest.on('close',cleanup);

dest.emit('pipe',source);

// Allow for unix-like usage: A.pipe(B).pipe(C)
return dest;
};

},{"events":296,"inherits":306,"readable-stream/duplex.js":323,"readable-stream/passthrough.js":332,"readable-stream/readable.js":333,"readable-stream/transform.js":334,"readable-stream/writable.js":335}],340:[function(require,module,exports){
// Copyright Joyent, Inc. and other Node contributors.
//
// Permission is hereby granted, free of charge, to any person obtaining a
// copy of this software and associated documentation files (the
// "Software"), to deal in the Software without restriction, including
// without limitation the rights to use, copy, modify, merge, publish,
// distribute, sublicense, and/or sell copies of the Software, and to permit
// persons to whom the Software is furnished to do so, subject to the
// following conditions:
//
// The above copyright notice and this permission notice shall be included
// in all copies or substantial portions of the Software.
//
// THE SOFTWARE IS PROVIDED "AS IS", WITHOUT WARRANTY OF ANY KIND, EXPRESS
// OR IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF
// MERCHANTABILITY, FITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN
// NO EVENT SHALL THE AUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM,
// DAMAGES OR OTHER LIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR
// OTHERWISE, ARISING FROM, OUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE
// USE OR OTHER DEALINGS IN THE SOFTWARE.

'use strict';

/*<replacement>*/

var Buffer=require('safe-buffer').Buffer;
/*</replacement>*/

var isEncoding=Buffer.isEncoding||function(encoding){
encoding=''+encoding;
switch(encoding&&encoding.toLowerCase()){
case'hex':case'utf8':case'utf-8':case'ascii':case'binary':case'base64':case'ucs2':case'ucs-2':case'utf16le':case'utf-16le':case'raw':
return true;
default:
return false;}

};

function _normalizeEncoding(enc){
if(!enc)return'utf8';
var retried;
while(true){
switch(enc){
case'utf8':
case'utf-8':
return'utf8';
case'ucs2':
case'ucs-2':
case'utf16le':
case'utf-16le':
return'utf16le';
case'latin1':
case'binary':
return'latin1';
case'base64':
case'ascii':
case'hex':
return enc;
default:
if(retried)return;// undefined
enc=(''+enc).toLowerCase();
retried=true;}

}
};

// Do not cache `Buffer.isEncoding` when checking encoding names as some
// modules monkey-patch it to support additional encodings
function normalizeEncoding(enc){
var nenc=_normalizeEncoding(enc);
if(typeof nenc!=='string'&&(Buffer.isEncoding===isEncoding||!isEncoding(enc)))throw new Error('Unknown encoding: '+enc);
return nenc||enc;
}

// StringDecoder provides an interface for efficiently splitting a series of
// buffers into a series of JS strings without breaking apart multi-byte
// characters.
exports.StringDecoder=StringDecoder;
function StringDecoder(encoding){
this.encoding=normalizeEncoding(encoding);
var nb;
switch(this.encoding){
case'utf16le':
this.text=utf16Text;
this.end=utf16End;
nb=4;
break;
case'utf8':
this.fillLast=utf8FillLast;
nb=4;
break;
case'base64':
this.text=base64Text;
this.end=base64End;
nb=3;
break;
default:
this.write=simpleWrite;
this.end=simpleEnd;
return;}

this.lastNeed=0;
this.lastTotal=0;
this.lastChar=Buffer.allocUnsafe(nb);
}

StringDecoder.prototype.write=function(buf){
if(buf.length===0)return'';
var r;
var i;
if(this.lastNeed){
r=this.fillLast(buf);
if(r===undefined)return'';
i=this.lastNeed;
this.lastNeed=0;
}else{
i=0;
}
if(i<buf.length)return r?r+this.text(buf,i):this.text(buf,i);
return r||'';
};

StringDecoder.prototype.end=utf8End;

// Returns only complete characters in a Buffer
StringDecoder.prototype.text=utf8Text;

// Attempts to complete a partial non-UTF-8 character using bytes from a Buffer
StringDecoder.prototype.fillLast=function(buf){
if(this.lastNeed<=buf.length){
buf.copy(this.lastChar,this.lastTotal-this.lastNeed,0,this.lastNeed);
return this.lastChar.toString(this.encoding,0,this.lastTotal);
}
buf.copy(this.lastChar,this.lastTotal-this.lastNeed,0,buf.length);
this.lastNeed-=buf.length;
};

// Checks the type of a UTF-8 byte, whether it's ASCII, a leading byte, or a
// continuation byte. If an invalid byte is detected, -2 is returned.
function utf8CheckByte(byte){
if(byte<=0x7F)return 0;else if(byte>>5===0x06)return 2;else if(byte>>4===0x0E)return 3;else if(byte>>3===0x1E)return 4;
return byte>>6===0x02?-1:-2;
}

// Checks at most 3 bytes at the end of a Buffer in order to detect an
// incomplete multi-byte UTF-8 character. The total number of bytes (2, 3, or 4)
// needed to complete the UTF-8 character (if applicable) are returned.
function utf8CheckIncomplete(self,buf,i){
var j=buf.length-1;
if(j<i)return 0;
var nb=utf8CheckByte(buf[j]);
if(nb>=0){
if(nb>0)self.lastNeed=nb-1;
return nb;
}
if(--j<i||nb===-2)return 0;
nb=utf8CheckByte(buf[j]);
if(nb>=0){
if(nb>0)self.lastNeed=nb-2;
return nb;
}
if(--j<i||nb===-2)return 0;
nb=utf8CheckByte(buf[j]);
if(nb>=0){
if(nb>0){
if(nb===2)nb=0;else self.lastNeed=nb-3;
}
return nb;
}
return 0;
}

// Validates as many continuation bytes for a multi-byte UTF-8 character as
// needed or are available. If we see a non-continuation byte where we expect
// one, we "replace" the validated continuation bytes we've seen so far with
// a single UTF-8 replacement character ('\ufffd'), to match v8's UTF-8 decoding
// behavior. The continuation byte check is included three times in the case
// where all of the continuation bytes for a character exist in the same buffer.
// It is also done this way as a slight performance increase instead of using a
// loop.
function utf8CheckExtraBytes(self,buf,p){
if((buf[0]&0xC0)!==0x80){
self.lastNeed=0;
return"\uFFFD";
}
if(self.lastNeed>1&&buf.length>1){
if((buf[1]&0xC0)!==0x80){
self.lastNeed=1;
return"\uFFFD";
}
if(self.lastNeed>2&&buf.length>2){
if((buf[2]&0xC0)!==0x80){
self.lastNeed=2;
return"\uFFFD";
}
}
}
}

// Attempts to complete a multi-byte UTF-8 character using bytes from a Buffer.
function utf8FillLast(buf){
var p=this.lastTotal-this.lastNeed;
var r=utf8CheckExtraBytes(this,buf,p);
if(r!==undefined)return r;
if(this.lastNeed<=buf.length){
buf.copy(this.lastChar,p,0,this.lastNeed);
return this.lastChar.toString(this.encoding,0,this.lastTotal);
}
buf.copy(this.lastChar,p,0,buf.length);
this.lastNeed-=buf.length;
}

// Returns all complete UTF-8 characters in a Buffer. If the Buffer ended on a
// partial character, the character's bytes are buffered until the required
// number of bytes are available.
function utf8Text(buf,i){
var total=utf8CheckIncomplete(this,buf,i);
if(!this.lastNeed)return buf.toString('utf8',i);
this.lastTotal=total;
var end=buf.length-(total-this.lastNeed);
buf.copy(this.lastChar,0,end);
return buf.toString('utf8',i,end);
}

// For UTF-8, a replacement character is added when ending on a partial
// character.
function utf8End(buf){
var r=buf&&buf.length?this.write(buf):'';
if(this.lastNeed)return r+"\uFFFD";
return r;
}

// UTF-16LE typically needs two bytes per character, but even if we have an even
// number of bytes available, we need to check if we end on a leading/high
// surrogate. In that case, we need to wait for the next two bytes in order to
// decode the last character properly.
function utf16Text(buf,i){
if((buf.length-i)%2===0){
var r=buf.toString('utf16le',i);
if(r){
var c=r.charCodeAt(r.length-1);
if(c>=0xD800&&c<=0xDBFF){
this.lastNeed=2;
this.lastTotal=4;
this.lastChar[0]=buf[buf.length-2];
this.lastChar[1]=buf[buf.length-1];
return r.slice(0,-1);
}
}
return r;
}
this.lastNeed=1;
this.lastTotal=2;
this.lastChar[0]=buf[buf.length-1];
return buf.toString('utf16le',i,buf.length-1);
}

// For UTF-16LE we do not explicitly append special replacement characters if we
// end on a partial character, we simply let v8 handle that.
function utf16End(buf){
var r=buf&&buf.length?this.write(buf):'';
if(this.lastNeed){
var end=this.lastTotal-this.lastNeed;
return r+this.lastChar.toString('utf16le',0,end);
}
return r;
}

function base64Text(buf,i){
var n=(buf.length-i)%3;
if(n===0)return buf.toString('base64',i);
this.lastNeed=3-n;
this.lastTotal=3;
if(n===1){
this.lastChar[0]=buf[buf.length-1];
}else{
this.lastChar[0]=buf[buf.length-2];
this.lastChar[1]=buf[buf.length-1];
}
return buf.toString('base64',i,buf.length-n);
}

function base64End(buf){
var r=buf&&buf.length?this.write(buf):'';
if(this.lastNeed)return r+this.lastChar.toString('base64',0,3-this.lastNeed);
return r;
}

// Pass bytes on through for single-byte encodings (e.g. ascii, latin1, hex)
function simpleWrite(buf){
return buf.toString(this.encoding);
}

function simpleEnd(buf){
return buf&&buf.length?this.write(buf):'';
}
},{"safe-buffer":337}],341:[function(require,module,exports){
(function(setImmediate,clearImmediate){
var nextTick=require('process/browser.js').nextTick;
var apply=Function.prototype.apply;
var slice=Array.prototype.slice;
var immediateIds={};
var nextImmediateId=0;

// DOM APIs, for completeness

exports.setTimeout=function(){
return new Timeout(apply.call(setTimeout,window,arguments),clearTimeout);
};
exports.setInterval=function(){
return new Timeout(apply.call(setInterval,window,arguments),clearInterval);
};
exports.clearTimeout=
exports.clearInterval=function(timeout){timeout.close();};

function Timeout(id,clearFn){
this._id=id;
this._clearFn=clearFn;
}
Timeout.prototype.unref=Timeout.prototype.ref=function(){};
Timeout.prototype.close=function(){
this._clearFn.call(window,this._id);
};

// Does not start the time, just sets up the members needed.
exports.enroll=function(item,msecs){
clearTimeout(item._idleTimeoutId);
item._idleTimeout=msecs;
};

exports.unenroll=function(item){
clearTimeout(item._idleTimeoutId);
item._idleTimeout=-1;
};

exports._unrefActive=exports.active=function(item){
clearTimeout(item._idleTimeoutId);

var msecs=item._idleTimeout;
if(msecs>=0){
item._idleTimeoutId=setTimeout(function onTimeout(){
if(item._onTimeout)
item._onTimeout();
},msecs);
}
};

// That's not how node.js implements it but the exposed api is the same.
exports.setImmediate=typeof setImmediate==="function"?setImmediate:function(fn){
var id=nextImmediateId++;
var args=arguments.length<2?false:slice.call(arguments,1);

immediateIds[id]=true;

nextTick(function onNextTick(){
if(immediateIds[id]){
// fn.call() is faster so we optimize for the common use-case
// @see http://jsperf.com/call-apply-segu
if(args){
fn.apply(null,args);
}else{
fn.call(null);
}
// Prevent ids from leaking
exports.clearImmediate(id);
}
});

return id;
};

exports.clearImmediate=typeof clearImmediate==="function"?clearImmediate:function(id){
delete immediateIds[id];
};
}).call(this,require("timers").setImmediate,require("timers").clearImmediate);
},{"process/browser.js":318,"timers":341}],342:[function(require,module,exports){
(function(global){

/**
 * Module exports.
 */

module.exports=deprecate;

/**
 * Mark that a method should not be used.
 * Returns a modified function which warns once by default.
 *
 * If `localStorage.noDeprecation = true` is set, then it is a no-op.
 *
 * If `localStorage.throwDeprecation = true` is set, then deprecated functions
 * will throw an Error when invoked.
 *
 * If `localStorage.traceDeprecation = true` is set, then deprecated functions
 * will invoke `console.trace()` instead of `console.error()`.
 *
 * @param {Function} fn - the function to deprecate
 * @param {String} msg - the string to print to the console when `fn` is invoked
 * @returns {Function} a new "deprecated" version of `fn`
 * @api public
 */

function deprecate(fn,msg){
if(config('noDeprecation')){
return fn;
}

var warned=false;
function deprecated(){
if(!warned){
if(config('throwDeprecation')){
throw new Error(msg);
}else if(config('traceDeprecation')){
console.trace(msg);
}else{
console.warn(msg);
}
warned=true;
}
return fn.apply(this,arguments);
}

return deprecated;
}

/**
 * Checks `localStorage` for boolean values for the given `name`.
 *
 * @param {String} name
 * @returns {Boolean}
 * @api private
 */

function config(name){
// accessing global.localStorage can trigger a DOMException in sandboxed iframes
try{
if(!global.localStorage)return false;
}catch(_){
return false;
}
var val=global.localStorage[name];
if(null==val)return false;
return String(val).toLowerCase()==='true';
}

}).call(this,typeof global!=="undefined"?global:typeof self!=="undefined"?self:typeof window!=="undefined"?window:{});
},{}],343:[function(require,module,exports){
if(typeof Object.create==='function'){
// implementation from standard node.js 'util' module
module.exports=function inherits(ctor,superCtor){
ctor.super_=superCtor;
ctor.prototype=Object.create(superCtor.prototype,{
constructor:{
value:ctor,
enumerable:false,
writable:true,
configurable:true}});


};
}else{
// old school shim for old browsers
module.exports=function inherits(ctor,superCtor){
ctor.super_=superCtor;
var TempCtor=function TempCtor(){};
TempCtor.prototype=superCtor.prototype;
ctor.prototype=new TempCtor();
ctor.prototype.constructor=ctor;
};
}

},{}],344:[function(require,module,exports){
module.exports=function isBuffer(arg){
return arg&&typeof arg==='object'&&
typeof arg.copy==='function'&&
typeof arg.fill==='function'&&
typeof arg.readUInt8==='function';
};
},{}],345:[function(require,module,exports){
(function(process,global){
// Copyright Joyent, Inc. and other Node contributors.
//
// Permission is hereby granted, free of charge, to any person obtaining a
// copy of this software and associated documentation files (the
// "Software"), to deal in the Software without restriction, including
// without limitation the rights to use, copy, modify, merge, publish,
// distribute, sublicense, and/or sell copies of the Software, and to permit
// persons to whom the Software is furnished to do so, subject to the
// following conditions:
//
// The above copyright notice and this permission notice shall be included
// in all copies or substantial portions of the Software.
//
// THE SOFTWARE IS PROVIDED "AS IS", WITHOUT WARRANTY OF ANY KIND, EXPRESS
// OR IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF
// MERCHANTABILITY, FITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN
// NO EVENT SHALL THE AUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM,
// DAMAGES OR OTHER LIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR
// OTHERWISE, ARISING FROM, OUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE
// USE OR OTHER DEALINGS IN THE SOFTWARE.

var formatRegExp=/%[sdj%]/g;
exports.format=function(f){
if(!isString(f)){
var objects=[];
for(var i=0;i<arguments.length;i++){
objects.push(inspect(arguments[i]));
}
return objects.join(' ');
}

var i=1;
var args=arguments;
var len=args.length;
var str=String(f).replace(formatRegExp,function(x){
if(x==='%%')return'%';
if(i>=len)return x;
switch(x){
case'%s':return String(args[i++]);
case'%d':return Number(args[i++]);
case'%j':
try{
return JSON.stringify(args[i++]);
}catch(_){
return'[Circular]';
}
default:
return x;}

});
for(var x=args[i];i<len;x=args[++i]){
if(isNull(x)||!isObject(x)){
str+=' '+x;
}else{
str+=' '+inspect(x);
}
}
return str;
};


// Mark that a method should not be used.
// Returns a modified function which warns once by default.
// If --no-deprecation is set, then it is a no-op.
exports.deprecate=function(fn,msg){
// Allow for deprecating things in the process of starting up.
if(isUndefined(global.process)){
return function(){
return exports.deprecate(fn,msg).apply(this,arguments);
};
}

if(process.noDeprecation===true){
return fn;
}

var warned=false;
function deprecated(){
if(!warned){
if(process.throwDeprecation){
throw new Error(msg);
}else if(process.traceDeprecation){
console.trace(msg);
}else{
console.error(msg);
}
warned=true;
}
return fn.apply(this,arguments);
}

return deprecated;
};


var debugs={};
var debugEnviron;
exports.debuglog=function(set){
if(isUndefined(debugEnviron))
debugEnviron=process.env.NODE_DEBUG||'';
set=set.toUpperCase();
if(!debugs[set]){
if(new RegExp('\\b'+set+'\\b','i').test(debugEnviron)){
var pid=process.pid;
debugs[set]=function(){
var msg=exports.format.apply(exports,arguments);
console.error('%s %d: %s',set,pid,msg);
};
}else{
debugs[set]=function(){};
}
}
return debugs[set];
};


/**
 * Echos the value of a value. Trys to print the value out
 * in the best way possible given the different types.
 *
 * @param {Object} obj The object to print out.
 * @param {Object} opts Optional options object that alters the output.
 */
/* legacy: obj, showHidden, depth, colors*/
function inspect(obj,opts){
// default options
var ctx={
seen:[],
stylize:stylizeNoColor};

// legacy...
if(arguments.length>=3)ctx.depth=arguments[2];
if(arguments.length>=4)ctx.colors=arguments[3];
if(isBoolean(opts)){
// legacy...
ctx.showHidden=opts;
}else if(opts){
// got an "options" object
exports._extend(ctx,opts);
}
// set default options
if(isUndefined(ctx.showHidden))ctx.showHidden=false;
if(isUndefined(ctx.depth))ctx.depth=2;
if(isUndefined(ctx.colors))ctx.colors=false;
if(isUndefined(ctx.customInspect))ctx.customInspect=true;
if(ctx.colors)ctx.stylize=stylizeWithColor;
return formatValue(ctx,obj,ctx.depth);
}
exports.inspect=inspect;


// http://en.wikipedia.org/wiki/ANSI_escape_code#graphics
inspect.colors={
'bold':[1,22],
'italic':[3,23],
'underline':[4,24],
'inverse':[7,27],
'white':[37,39],
'grey':[90,39],
'black':[30,39],
'blue':[34,39],
'cyan':[36,39],
'green':[32,39],
'magenta':[35,39],
'red':[31,39],
'yellow':[33,39]};


// Don't use 'blue' not visible on cmd.exe
inspect.styles={
'special':'cyan',
'number':'yellow',
'boolean':'yellow',
'undefined':'grey',
'null':'bold',
'string':'green',
'date':'magenta',
// "name": intentionally not styling
'regexp':'red'};



function stylizeWithColor(str,styleType){
var style=inspect.styles[styleType];

if(style){
return"\x1B["+inspect.colors[style][0]+'m'+str+
"\x1B["+inspect.colors[style][1]+'m';
}else{
return str;
}
}


function stylizeNoColor(str,styleType){
return str;
}


function arrayToHash(array){
var hash={};

array.forEach(function(val,idx){
hash[val]=true;
});

return hash;
}


function formatValue(ctx,value,recurseTimes){
// Provide a hook for user-specified inspect functions.
// Check that value is an object with an inspect function on it
if(ctx.customInspect&&
value&&
isFunction(value.inspect)&&
// Filter out the util module, it's inspect function is special
value.inspect!==exports.inspect&&
// Also filter out any prototype objects using the circular check.
!(value.constructor&&value.constructor.prototype===value)){
var ret=value.inspect(recurseTimes,ctx);
if(!isString(ret)){
ret=formatValue(ctx,ret,recurseTimes);
}
return ret;
}

// Primitive types cannot have properties
var primitive=formatPrimitive(ctx,value);
if(primitive){
return primitive;
}

// Look up the keys of the object.
var keys=Object.keys(value);
var visibleKeys=arrayToHash(keys);

if(ctx.showHidden){
keys=Object.getOwnPropertyNames(value);
}

// IE doesn't make error fields non-enumerable
// http://msdn.microsoft.com/en-us/library/ie/dww52sbt(v=vs.94).aspx
if(isError(value)&&(
keys.indexOf('message')>=0||keys.indexOf('description')>=0)){
return formatError(value);
}

// Some type of object without properties can be shortcutted.
if(keys.length===0){
if(isFunction(value)){
var name=value.name?': '+value.name:'';
return ctx.stylize('[Function'+name+']','special');
}
if(isRegExp(value)){
return ctx.stylize(RegExp.prototype.toString.call(value),'regexp');
}
if(isDate(value)){
return ctx.stylize(Date.prototype.toString.call(value),'date');
}
if(isError(value)){
return formatError(value);
}
}

var base='',array=false,braces=['{','}'];

// Make Array say that they are Array
if(isArray(value)){
array=true;
braces=['[',']'];
}

// Make functions say that they are functions
if(isFunction(value)){
var n=value.name?': '+value.name:'';
base=' [Function'+n+']';
}

// Make RegExps say that they are RegExps
if(isRegExp(value)){
base=' '+RegExp.prototype.toString.call(value);
}

// Make dates with properties first say the date
if(isDate(value)){
base=' '+Date.prototype.toUTCString.call(value);
}

// Make error with message first say the error
if(isError(value)){
base=' '+formatError(value);
}

if(keys.length===0&&(!array||value.length==0)){
return braces[0]+base+braces[1];
}

if(recurseTimes<0){
if(isRegExp(value)){
return ctx.stylize(RegExp.prototype.toString.call(value),'regexp');
}else{
return ctx.stylize('[Object]','special');
}
}

ctx.seen.push(value);

var output;
if(array){
output=formatArray(ctx,value,recurseTimes,visibleKeys,keys);
}else{
output=keys.map(function(key){
return formatProperty(ctx,value,recurseTimes,visibleKeys,key,array);
});
}

ctx.seen.pop();

return reduceToSingleString(output,base,braces);
}


function formatPrimitive(ctx,value){
if(isUndefined(value))
return ctx.stylize('undefined','undefined');
if(isString(value)){
var simple='\''+JSON.stringify(value).replace(/^"|"$/g,'').
replace(/'/g,"\\'").
replace(/\\"/g,'"')+'\'';
return ctx.stylize(simple,'string');
}
if(isNumber(value))
return ctx.stylize(''+value,'number');
if(isBoolean(value))
return ctx.stylize(''+value,'boolean');
// For some reason typeof null is "object", so special case here.
if(isNull(value))
return ctx.stylize('null','null');
}


function formatError(value){
return'['+Error.prototype.toString.call(value)+']';
}


function formatArray(ctx,value,recurseTimes,visibleKeys,keys){
var output=[];
for(var i=0,l=value.length;i<l;++i){
if(hasOwnProperty(value,String(i))){
output.push(formatProperty(ctx,value,recurseTimes,visibleKeys,
String(i),true));
}else{
output.push('');
}
}
keys.forEach(function(key){
if(!key.match(/^\d+$/)){
output.push(formatProperty(ctx,value,recurseTimes,visibleKeys,
key,true));
}
});
return output;
}


function formatProperty(ctx,value,recurseTimes,visibleKeys,key,array){
var name,str,desc;
desc=Object.getOwnPropertyDescriptor(value,key)||{value:value[key]};
if(desc.get){
if(desc.set){
str=ctx.stylize('[Getter/Setter]','special');
}else{
str=ctx.stylize('[Getter]','special');
}
}else{
if(desc.set){
str=ctx.stylize('[Setter]','special');
}
}
if(!hasOwnProperty(visibleKeys,key)){
name='['+key+']';
}
if(!str){
if(ctx.seen.indexOf(desc.value)<0){
if(isNull(recurseTimes)){
str=formatValue(ctx,desc.value,null);
}else{
str=formatValue(ctx,desc.value,recurseTimes-1);
}
if(str.indexOf('\n')>-1){
if(array){
str=str.split('\n').map(function(line){
return'  '+line;
}).join('\n').substr(2);
}else{
str='\n'+str.split('\n').map(function(line){
return'   '+line;
}).join('\n');
}
}
}else{
str=ctx.stylize('[Circular]','special');
}
}
if(isUndefined(name)){
if(array&&key.match(/^\d+$/)){
return str;
}
name=JSON.stringify(''+key);
if(name.match(/^"([a-zA-Z_][a-zA-Z_0-9]*)"$/)){
name=name.substr(1,name.length-2);
name=ctx.stylize(name,'name');
}else{
name=name.replace(/'/g,"\\'").
replace(/\\"/g,'"').
replace(/(^"|"$)/g,"'");
name=ctx.stylize(name,'string');
}
}

return name+': '+str;
}


function reduceToSingleString(output,base,braces){
var numLinesEst=0;
var length=output.reduce(function(prev,cur){
numLinesEst++;
if(cur.indexOf('\n')>=0)numLinesEst++;
return prev+cur.replace(/\u001b\[\d\d?m/g,'').length+1;
},0);

if(length>60){
return braces[0]+(
base===''?'':base+'\n ')+
' '+
output.join(',\n  ')+
' '+
braces[1];
}

return braces[0]+base+' '+output.join(', ')+' '+braces[1];
}


// NOTE: These type checking functions intentionally don't use `instanceof`
// because it is fragile and can be easily faked with `Object.create()`.
function isArray(ar){
return Array.isArray(ar);
}
exports.isArray=isArray;

function isBoolean(arg){
return typeof arg==='boolean';
}
exports.isBoolean=isBoolean;

function isNull(arg){
return arg===null;
}
exports.isNull=isNull;

function isNullOrUndefined(arg){
return arg==null;
}
exports.isNullOrUndefined=isNullOrUndefined;

function isNumber(arg){
return typeof arg==='number';
}
exports.isNumber=isNumber;

function isString(arg){
return typeof arg==='string';
}
exports.isString=isString;

function isSymbol(arg){
return typeof arg==='symbol';
}
exports.isSymbol=isSymbol;

function isUndefined(arg){
return arg===void 0;
}
exports.isUndefined=isUndefined;

function isRegExp(re){
return isObject(re)&&objectToString(re)==='[object RegExp]';
}
exports.isRegExp=isRegExp;

function isObject(arg){
return typeof arg==='object'&&arg!==null;
}
exports.isObject=isObject;

function isDate(d){
return isObject(d)&&objectToString(d)==='[object Date]';
}
exports.isDate=isDate;

function isError(e){
return isObject(e)&&(
objectToString(e)==='[object Error]'||e instanceof Error);
}
exports.isError=isError;

function isFunction(arg){
return typeof arg==='function';
}
exports.isFunction=isFunction;

function isPrimitive(arg){
return arg===null||
typeof arg==='boolean'||
typeof arg==='number'||
typeof arg==='string'||
typeof arg==='symbol'||// ES6 symbol
typeof arg==='undefined';
}
exports.isPrimitive=isPrimitive;

exports.isBuffer=require('./support/isBuffer');

function objectToString(o){
return Object.prototype.toString.call(o);
}


function pad(n){
return n<10?'0'+n.toString(10):n.toString(10);
}


var months=['Jan','Feb','Mar','Apr','May','Jun','Jul','Aug','Sep',
'Oct','Nov','Dec'];

// 26 Feb 16:19:34
function timestamp(){
var d=new Date();
var time=[pad(d.getHours()),
pad(d.getMinutes()),
pad(d.getSeconds())].join(':');
return[d.getDate(),months[d.getMonth()],time].join(' ');
}


// log is just a thin wrapper to console.log that prepends a timestamp
exports.log=function(){
console.log('%s - %s',timestamp(),exports.format.apply(exports,arguments));
};


/**
 * Inherit the prototype methods from one constructor into another.
 *
 * The Function.prototype.inherits from lang.js rewritten as a standalone
 * function (not on Function.prototype). NOTE: If this file is to be loaded
 * during bootstrapping this function needs to be rewritten using some native
 * functions as prototype setup using normal JavaScript does not work as
 * expected during bootstrapping (see mirror.js in r114903).
 *
 * @param {function} ctor Constructor function which needs to inherit the
 *     prototype.
 * @param {function} superCtor Constructor function to inherit prototype from.
 */
exports.inherits=require('inherits');

exports._extend=function(origin,add){
// Don't do anything if add isn't an object
if(!add||!isObject(add))return origin;

var keys=Object.keys(add);
var i=keys.length;
while(i--){
origin[keys[i]]=add[keys[i]];
}
return origin;
};

function hasOwnProperty(obj,prop){
return Object.prototype.hasOwnProperty.call(obj,prop);
}

}).call(this,require('_process'),typeof global!=="undefined"?global:typeof self!=="undefined"?self:typeof window!=="undefined"?window:{});
},{"./support/isBuffer":344,"_process":392,"inherits":343}],346:[function(require,module,exports){
// Generated by CoffeeScript 1.12.7
(function(){
"use strict";
exports.stripBOM=function(str){
if(str[0]==="\uFEFF"){
return str.substring(1);
}else{
return str;
}
};

}).call(this);

},{}],347:[function(require,module,exports){
// Generated by CoffeeScript 1.12.7
(function(){
"use strict";
var builder,defaults,escapeCDATA,requiresCDATA,wrapCDATA,
hasProp={}.hasOwnProperty;

builder=require('xmlbuilder');

defaults=require('./defaults').defaults;

requiresCDATA=function requiresCDATA(entry){
return typeof entry==="string"&&(entry.indexOf('&')>=0||entry.indexOf('>')>=0||entry.indexOf('<')>=0);
};

wrapCDATA=function wrapCDATA(entry){
return"<![CDATA["+escapeCDATA(entry)+"]]>";
};

escapeCDATA=function escapeCDATA(entry){
return entry.replace(']]>',']]]]><![CDATA[>');
};

exports.Builder=function(){
function Builder(opts){
var key,ref,value;
this.options={};
ref=defaults["0.2"];
for(key in ref){
if(!hasProp.call(ref,key))continue;
value=ref[key];
this.options[key]=value;
}
for(key in opts){
if(!hasProp.call(opts,key))continue;
value=opts[key];
this.options[key]=value;
}
}

Builder.prototype.buildObject=function(rootObj){
var attrkey,charkey,render,rootElement,rootName;
attrkey=this.options.attrkey;
charkey=this.options.charkey;
if(Object.keys(rootObj).length===1&&this.options.rootName===defaults['0.2'].rootName){
rootName=Object.keys(rootObj)[0];
rootObj=rootObj[rootName];
}else{
rootName=this.options.rootName;
}
render=function(_this){
return function(element,obj){
var attr,child,entry,index,key,value;
if(typeof obj!=='object'){
if(_this.options.cdata&&requiresCDATA(obj)){
element.raw(wrapCDATA(obj));
}else{
element.txt(obj);
}
}else if(Array.isArray(obj)){
for(index in obj){
if(!hasProp.call(obj,index))continue;
child=obj[index];
for(key in child){
entry=child[key];
element=render(element.ele(key),entry).up();
}
}
}else{
for(key in obj){
if(!hasProp.call(obj,key))continue;
child=obj[key];
if(key===attrkey){
if(typeof child==="object"){
for(attr in child){
value=child[attr];
element=element.att(attr,value);
}
}
}else if(key===charkey){
if(_this.options.cdata&&requiresCDATA(child)){
element=element.raw(wrapCDATA(child));
}else{
element=element.txt(child);
}
}else if(Array.isArray(child)){
for(index in child){
if(!hasProp.call(child,index))continue;
entry=child[index];
if(typeof entry==='string'){
if(_this.options.cdata&&requiresCDATA(entry)){
element=element.ele(key).raw(wrapCDATA(entry)).up();
}else{
element=element.ele(key,entry).up();
}
}else{
element=render(element.ele(key),entry).up();
}
}
}else if(typeof child==="object"){
element=render(element.ele(key),child).up();
}else{
if(typeof child==='string'&&_this.options.cdata&&requiresCDATA(child)){
element=element.ele(key).raw(wrapCDATA(child)).up();
}else{
if(child==null){
child='';
}
element=element.ele(key,child.toString()).up();
}
}
}
}
return element;
};
}(this);
rootElement=builder.create(rootName,this.options.xmldec,this.options.doctype,{
headless:this.options.headless,
allowSurrogateChars:this.options.allowSurrogateChars});

return render(rootElement,rootObj).end(this.options.renderOpts);
};

return Builder;

}();

}).call(this);

},{"./defaults":348,"xmlbuilder":384}],348:[function(require,module,exports){
// Generated by CoffeeScript 1.12.7
(function(){
exports.defaults={
"0.1":{
explicitCharkey:false,
trim:true,
normalize:true,
normalizeTags:false,
attrkey:"@",
charkey:"#",
explicitArray:false,
ignoreAttrs:false,
mergeAttrs:false,
explicitRoot:false,
validator:null,
xmlns:false,
explicitChildren:false,
childkey:'@@',
charsAsChildren:false,
includeWhiteChars:false,
async:false,
strict:true,
attrNameProcessors:null,
attrValueProcessors:null,
tagNameProcessors:null,
valueProcessors:null,
emptyTag:''},

"0.2":{
explicitCharkey:false,
trim:false,
normalize:false,
normalizeTags:false,
attrkey:"$",
charkey:"_",
explicitArray:true,
ignoreAttrs:false,
mergeAttrs:false,
explicitRoot:true,
validator:null,
xmlns:false,
explicitChildren:false,
preserveChildrenOrder:false,
childkey:'$$',
charsAsChildren:false,
includeWhiteChars:false,
async:false,
strict:true,
attrNameProcessors:null,
attrValueProcessors:null,
tagNameProcessors:null,
valueProcessors:null,
rootName:'root',
xmldec:{
'version':'1.0',
'encoding':'UTF-8',
'standalone':true},

doctype:null,
renderOpts:{
'pretty':true,
'indent':'  ',
'newline':'\n'},

headless:false,
chunkSize:10000,
emptyTag:'',
cdata:false}};



}).call(this);

},{}],349:[function(require,module,exports){
// Generated by CoffeeScript 1.12.7
(function(){
"use strict";
var bom,defaults,events,isEmpty,processItem,processors,sax,setImmediate,
bind=function bind(fn,me){return function(){return fn.apply(me,arguments);};},
extend=function extend(child,parent){for(var key in parent){if(hasProp.call(parent,key))child[key]=parent[key];}function ctor(){this.constructor=child;}ctor.prototype=parent.prototype;child.prototype=new ctor();child.__super__=parent.prototype;return child;},
hasProp={}.hasOwnProperty;

sax=require('sax');

events=require('events');

bom=require('./bom');

processors=require('./processors');

setImmediate=require('timers').setImmediate;

defaults=require('./defaults').defaults;

isEmpty=function isEmpty(thing){
return typeof thing==="object"&&thing!=null&&Object.keys(thing).length===0;
};

processItem=function processItem(processors,item,key){
var i,len,process;
for(i=0,len=processors.length;i<len;i++){
process=processors[i];
item=process(item,key);
}
return item;
};

exports.Parser=function(superClass){
extend(Parser,superClass);

function Parser(opts){
this.parseStringPromise=bind(this.parseStringPromise,this);
this.parseString=bind(this.parseString,this);
this.reset=bind(this.reset,this);
this.assignOrPush=bind(this.assignOrPush,this);
this.processAsync=bind(this.processAsync,this);
var key,ref,value;
if(!(this instanceof exports.Parser)){
return new exports.Parser(opts);
}
this.options={};
ref=defaults["0.2"];
for(key in ref){
if(!hasProp.call(ref,key))continue;
value=ref[key];
this.options[key]=value;
}
for(key in opts){
if(!hasProp.call(opts,key))continue;
value=opts[key];
this.options[key]=value;
}
if(this.options.xmlns){
this.options.xmlnskey=this.options.attrkey+"ns";
}
if(this.options.normalizeTags){
if(!this.options.tagNameProcessors){
this.options.tagNameProcessors=[];
}
this.options.tagNameProcessors.unshift(processors.normalize);
}
this.reset();
}

Parser.prototype.processAsync=function(){
var chunk,err;
try{
if(this.remaining.length<=this.options.chunkSize){
chunk=this.remaining;
this.remaining='';
this.saxParser=this.saxParser.write(chunk);
return this.saxParser.close();
}else{
chunk=this.remaining.substr(0,this.options.chunkSize);
this.remaining=this.remaining.substr(this.options.chunkSize,this.remaining.length);
this.saxParser=this.saxParser.write(chunk);
return setImmediate(this.processAsync);
}
}catch(error1){
err=error1;
if(!this.saxParser.errThrown){
this.saxParser.errThrown=true;
return this.emit(err);
}
}
};

Parser.prototype.assignOrPush=function(obj,key,newValue){
if(!(key in obj)){
if(!this.options.explicitArray){
return obj[key]=newValue;
}else{
return obj[key]=[newValue];
}
}else{
if(!(obj[key]instanceof Array)){
obj[key]=[obj[key]];
}
return obj[key].push(newValue);
}
};

Parser.prototype.reset=function(){
var attrkey,charkey,ontext,stack;
this.removeAllListeners();
this.saxParser=sax.parser(this.options.strict,{
trim:false,
normalize:false,
xmlns:this.options.xmlns});

this.saxParser.errThrown=false;
this.saxParser.onerror=function(_this){
return function(error){
_this.saxParser.resume();
if(!_this.saxParser.errThrown){
_this.saxParser.errThrown=true;
return _this.emit("error",error);
}
};
}(this);
this.saxParser.onend=function(_this){
return function(){
if(!_this.saxParser.ended){
_this.saxParser.ended=true;
return _this.emit("end",_this.resultObject);
}
};
}(this);
this.saxParser.ended=false;
this.EXPLICIT_CHARKEY=this.options.explicitCharkey;
this.resultObject=null;
stack=[];
attrkey=this.options.attrkey;
charkey=this.options.charkey;
this.saxParser.onopentag=function(_this){
return function(node){
var key,newValue,obj,processedKey,ref;
obj={};
obj[charkey]="";
if(!_this.options.ignoreAttrs){
ref=node.attributes;
for(key in ref){
if(!hasProp.call(ref,key))continue;
if(!(attrkey in obj)&&!_this.options.mergeAttrs){
obj[attrkey]={};
}
newValue=_this.options.attrValueProcessors?processItem(_this.options.attrValueProcessors,node.attributes[key],key):node.attributes[key];
processedKey=_this.options.attrNameProcessors?processItem(_this.options.attrNameProcessors,key):key;
if(_this.options.mergeAttrs){
_this.assignOrPush(obj,processedKey,newValue);
}else{
obj[attrkey][processedKey]=newValue;
}
}
}
obj["#name"]=_this.options.tagNameProcessors?processItem(_this.options.tagNameProcessors,node.name):node.name;
if(_this.options.xmlns){
obj[_this.options.xmlnskey]={
uri:node.uri,
local:node.local};

}
return stack.push(obj);
};
}(this);
this.saxParser.onclosetag=function(_this){
return function(){
var cdata,emptyStr,key,node,nodeName,obj,objClone,old,s,xpath;
obj=stack.pop();
nodeName=obj["#name"];
if(!_this.options.explicitChildren||!_this.options.preserveChildrenOrder){
delete obj["#name"];
}
if(obj.cdata===true){
cdata=obj.cdata;
delete obj.cdata;
}
s=stack[stack.length-1];
if(obj[charkey].match(/^\s*$/)&&!cdata){
emptyStr=obj[charkey];
delete obj[charkey];
}else{
if(_this.options.trim){
obj[charkey]=obj[charkey].trim();
}
if(_this.options.normalize){
obj[charkey]=obj[charkey].replace(/\s{2,}/g," ").trim();
}
obj[charkey]=_this.options.valueProcessors?processItem(_this.options.valueProcessors,obj[charkey],nodeName):obj[charkey];
if(Object.keys(obj).length===1&&charkey in obj&&!_this.EXPLICIT_CHARKEY){
obj=obj[charkey];
}
}
if(isEmpty(obj)){
obj=_this.options.emptyTag!==''?_this.options.emptyTag:emptyStr;
}
if(_this.options.validator!=null){
xpath="/"+function(){
var i,len,results;
results=[];
for(i=0,len=stack.length;i<len;i++){
node=stack[i];
results.push(node["#name"]);
}
return results;
}().concat(nodeName).join("/");
(function(){
var err;
try{
return obj=_this.options.validator(xpath,s&&s[nodeName],obj);
}catch(error1){
err=error1;
return _this.emit("error",err);
}
})();
}
if(_this.options.explicitChildren&&!_this.options.mergeAttrs&&typeof obj==='object'){
if(!_this.options.preserveChildrenOrder){
node={};
if(_this.options.attrkey in obj){
node[_this.options.attrkey]=obj[_this.options.attrkey];
delete obj[_this.options.attrkey];
}
if(!_this.options.charsAsChildren&&_this.options.charkey in obj){
node[_this.options.charkey]=obj[_this.options.charkey];
delete obj[_this.options.charkey];
}
if(Object.getOwnPropertyNames(obj).length>0){
node[_this.options.childkey]=obj;
}
obj=node;
}else if(s){
s[_this.options.childkey]=s[_this.options.childkey]||[];
objClone={};
for(key in obj){
if(!hasProp.call(obj,key))continue;
objClone[key]=obj[key];
}
s[_this.options.childkey].push(objClone);
delete obj["#name"];
if(Object.keys(obj).length===1&&charkey in obj&&!_this.EXPLICIT_CHARKEY){
obj=obj[charkey];
}
}
}
if(stack.length>0){
return _this.assignOrPush(s,nodeName,obj);
}else{
if(_this.options.explicitRoot){
old=obj;
obj={};
obj[nodeName]=old;
}
_this.resultObject=obj;
_this.saxParser.ended=true;
return _this.emit("end",_this.resultObject);
}
};
}(this);
ontext=function(_this){
return function(text){
var charChild,s;
s=stack[stack.length-1];
if(s){
s[charkey]+=text;
if(_this.options.explicitChildren&&_this.options.preserveChildrenOrder&&_this.options.charsAsChildren&&(_this.options.includeWhiteChars||text.replace(/\\n/g,'').trim()!=='')){
s[_this.options.childkey]=s[_this.options.childkey]||[];
charChild={
'#name':'__text__'};

charChild[charkey]=text;
if(_this.options.normalize){
charChild[charkey]=charChild[charkey].replace(/\s{2,}/g," ").trim();
}
s[_this.options.childkey].push(charChild);
}
return s;
}
};
}(this);
this.saxParser.ontext=ontext;
return this.saxParser.oncdata=function(_this){
return function(text){
var s;
s=ontext(text);
if(s){
return s.cdata=true;
}
};
}(this);
};

Parser.prototype.parseString=function(str,cb){
var err;
if(cb!=null&&typeof cb==="function"){
this.on("end",function(result){
this.reset();
return cb(null,result);
});
this.on("error",function(err){
this.reset();
return cb(err);
});
}
try{
str=str.toString();
if(str.trim()===''){
this.emit("end",null);
return true;
}
str=bom.stripBOM(str);
if(this.options.async){
this.remaining=str;
setImmediate(this.processAsync);
return this.saxParser;
}
return this.saxParser.write(str).close();
}catch(error1){
err=error1;
if(!(this.saxParser.errThrown||this.saxParser.ended)){
this.emit('error',err);
return this.saxParser.errThrown=true;
}else if(this.saxParser.ended){
throw err;
}
}
};

Parser.prototype.parseStringPromise=function(str){
return new Promise(function(_this){
return function(resolve,reject){
return _this.parseString(str,function(err,value){
if(err){
return reject(err);
}else{
return resolve(value);
}
});
};
}(this));
};

return Parser;

}(events);

exports.parseString=function(str,a,b){
var cb,options,parser;
if(b!=null){
if(typeof b==='function'){
cb=b;
}
if(typeof a==='object'){
options=a;
}
}else{
if(typeof a==='function'){
cb=a;
}
options={};
}
parser=new exports.Parser(options);
return parser.parseString(str,cb);
};

exports.parseStringPromise=function(str,a){
var options,parser;
if(typeof a==='object'){
options=a;
}
parser=new exports.Parser(options);
return parser.parseStringPromise(str);
};

}).call(this);

},{"./bom":346,"./defaults":348,"./processors":350,"events":296,"sax":338,"timers":341}],350:[function(require,module,exports){
// Generated by CoffeeScript 1.12.7
(function(){
"use strict";
var prefixMatch;

prefixMatch=new RegExp(/(?!xmlns)^.*:/);

exports.normalize=function(str){
return str.toLowerCase();
};

exports.firstCharLowerCase=function(str){
return str.charAt(0).toLowerCase()+str.slice(1);
};

exports.stripPrefix=function(str){
return str.replace(prefixMatch,'');
};

exports.parseNumbers=function(str){
if(!isNaN(str)){
str=str%1===0?parseInt(str,10):parseFloat(str);
}
return str;
};

exports.parseBooleans=function(str){
if(/^(?:true|false)$/i.test(str)){
str=str.toLowerCase()==='true';
}
return str;
};

}).call(this);

},{}],351:[function(require,module,exports){
// Generated by CoffeeScript 1.12.7
(function(){
"use strict";
var builder,defaults,parser,processors,
extend=function extend(child,parent){for(var key in parent){if(hasProp.call(parent,key))child[key]=parent[key];}function ctor(){this.constructor=child;}ctor.prototype=parent.prototype;child.prototype=new ctor();child.__super__=parent.prototype;return child;},
hasProp={}.hasOwnProperty;

defaults=require('./defaults');

builder=require('./builder');

parser=require('./parser');

processors=require('./processors');

exports.defaults=defaults.defaults;

exports.processors=processors;

exports.ValidationError=function(superClass){
extend(ValidationError,superClass);

function ValidationError(message){
this.message=message;
}

return ValidationError;

}(Error);

exports.Builder=builder.Builder;

exports.Parser=parser.Parser;

exports.parseString=parser.parseString;

exports.parseStringPromise=parser.parseStringPromise;

}).call(this);

},{"./builder":347,"./defaults":348,"./parser":349,"./processors":350}],352:[function(require,module,exports){
// Generated by CoffeeScript 1.12.7
(function(){
module.exports={
Disconnected:1,
Preceding:2,
Following:4,
Contains:8,
ContainedBy:16,
ImplementationSpecific:32};


}).call(this);

},{}],353:[function(require,module,exports){
// Generated by CoffeeScript 1.12.7
(function(){
module.exports={
Element:1,
Attribute:2,
Text:3,
CData:4,
EntityReference:5,
EntityDeclaration:6,
ProcessingInstruction:7,
Comment:8,
Document:9,
DocType:10,
DocumentFragment:11,
NotationDeclaration:12,
Declaration:201,
Raw:202,
AttributeDeclaration:203,
ElementDeclaration:204,
Dummy:205};


}).call(this);

},{}],354:[function(require,module,exports){
// Generated by CoffeeScript 1.12.7
(function(){
var assign,getValue,isArray,isEmpty,isFunction,isObject,isPlainObject,
slice=[].slice,
hasProp={}.hasOwnProperty;

assign=function assign(){
var i,key,len,source,sources,target;
target=arguments[0],sources=2<=arguments.length?slice.call(arguments,1):[];
if(isFunction(Object.assign)){
Object.assign.apply(null,arguments);
}else{
for(i=0,len=sources.length;i<len;i++){
source=sources[i];
if(source!=null){
for(key in source){
if(!hasProp.call(source,key))continue;
target[key]=source[key];
}
}
}
}
return target;
};

isFunction=function isFunction(val){
return!!val&&Object.prototype.toString.call(val)==='[object Function]';
};

isObject=function isObject(val){
var ref;
return!!val&&((ref=typeof val)==='function'||ref==='object');
};

isArray=function isArray(val){
if(isFunction(Array.isArray)){
return Array.isArray(val);
}else{
return Object.prototype.toString.call(val)==='[object Array]';
}
};

isEmpty=function isEmpty(val){
var key;
if(isArray(val)){
return!val.length;
}else{
for(key in val){
if(!hasProp.call(val,key))continue;
return false;
}
return true;
}
};

isPlainObject=function isPlainObject(val){
var ctor,proto;
return isObject(val)&&(proto=Object.getPrototypeOf(val))&&(ctor=proto.constructor)&&typeof ctor==='function'&&ctor instanceof ctor&&Function.prototype.toString.call(ctor)===Function.prototype.toString.call(Object);
};

getValue=function getValue(obj){
if(isFunction(obj.valueOf)){
return obj.valueOf();
}else{
return obj;
}
};

module.exports.assign=assign;

module.exports.isFunction=isFunction;

module.exports.isObject=isObject;

module.exports.isArray=isArray;

module.exports.isEmpty=isEmpty;

module.exports.isPlainObject=isPlainObject;

module.exports.getValue=getValue;

}).call(this);

},{}],355:[function(require,module,exports){
// Generated by CoffeeScript 1.12.7
(function(){
module.exports={
None:0,
OpenTag:1,
InsideTag:2,
CloseTag:3};


}).call(this);

},{}],356:[function(require,module,exports){
// Generated by CoffeeScript 1.12.7
(function(){
var NodeType,XMLAttribute,XMLNode;

NodeType=require('./NodeType');

XMLNode=require('./XMLNode');

module.exports=XMLAttribute=function(){
function XMLAttribute(parent,name,value){
this.parent=parent;
if(this.parent){
this.options=this.parent.options;
this.stringify=this.parent.stringify;
}
if(name==null){
throw new Error("Missing attribute name. "+this.debugInfo(name));
}
this.name=this.stringify.name(name);
this.value=this.stringify.attValue(value);
this.type=NodeType.Attribute;
this.isId=false;
this.schemaTypeInfo=null;
}

Object.defineProperty(XMLAttribute.prototype,'nodeType',{
get:function get(){
return this.type;
}});


Object.defineProperty(XMLAttribute.prototype,'ownerElement',{
get:function get(){
return this.parent;
}});


Object.defineProperty(XMLAttribute.prototype,'textContent',{
get:function get(){
return this.value;
},
set:function set(value){
return this.value=value||'';
}});


Object.defineProperty(XMLAttribute.prototype,'namespaceURI',{
get:function get(){
return'';
}});


Object.defineProperty(XMLAttribute.prototype,'prefix',{
get:function get(){
return'';
}});


Object.defineProperty(XMLAttribute.prototype,'localName',{
get:function get(){
return this.name;
}});


Object.defineProperty(XMLAttribute.prototype,'specified',{
get:function get(){
return true;
}});


XMLAttribute.prototype.clone=function(){
return Object.create(this);
};

XMLAttribute.prototype.toString=function(options){
return this.options.writer.attribute(this,this.options.writer.filterOptions(options));
};

XMLAttribute.prototype.debugInfo=function(name){
name=name||this.name;
if(name==null){
return"parent: <"+this.parent.name+">";
}else{
return"attribute: {"+name+"}, parent: <"+this.parent.name+">";
}
};

XMLAttribute.prototype.isEqualNode=function(node){
if(node.namespaceURI!==this.namespaceURI){
return false;
}
if(node.prefix!==this.prefix){
return false;
}
if(node.localName!==this.localName){
return false;
}
if(node.value!==this.value){
return false;
}
return true;
};

return XMLAttribute;

}();

}).call(this);

},{"./NodeType":353,"./XMLNode":375}],357:[function(require,module,exports){
// Generated by CoffeeScript 1.12.7
(function(){
var NodeType,XMLCData,XMLCharacterData,
extend=function extend(child,parent){for(var key in parent){if(hasProp.call(parent,key))child[key]=parent[key];}function ctor(){this.constructor=child;}ctor.prototype=parent.prototype;child.prototype=new ctor();child.__super__=parent.prototype;return child;},
hasProp={}.hasOwnProperty;

NodeType=require('./NodeType');

XMLCharacterData=require('./XMLCharacterData');

module.exports=XMLCData=function(superClass){
extend(XMLCData,superClass);

function XMLCData(parent,text){
XMLCData.__super__.constructor.call(this,parent);
if(text==null){
throw new Error("Missing CDATA text. "+this.debugInfo());
}
this.name="#cdata-section";
this.type=NodeType.CData;
this.value=this.stringify.cdata(text);
}

XMLCData.prototype.clone=function(){
return Object.create(this);
};

XMLCData.prototype.toString=function(options){
return this.options.writer.cdata(this,this.options.writer.filterOptions(options));
};

return XMLCData;

}(XMLCharacterData);

}).call(this);

},{"./NodeType":353,"./XMLCharacterData":358}],358:[function(require,module,exports){
// Generated by CoffeeScript 1.12.7
(function(){
var XMLCharacterData,XMLNode,
extend=function extend(child,parent){for(var key in parent){if(hasProp.call(parent,key))child[key]=parent[key];}function ctor(){this.constructor=child;}ctor.prototype=parent.prototype;child.prototype=new ctor();child.__super__=parent.prototype;return child;},
hasProp={}.hasOwnProperty;

XMLNode=require('./XMLNode');

module.exports=XMLCharacterData=function(superClass){
extend(XMLCharacterData,superClass);

function XMLCharacterData(parent){
XMLCharacterData.__super__.constructor.call(this,parent);
this.value='';
}

Object.defineProperty(XMLCharacterData.prototype,'data',{
get:function get(){
return this.value;
},
set:function set(value){
return this.value=value||'';
}});


Object.defineProperty(XMLCharacterData.prototype,'length',{
get:function get(){
return this.value.length;
}});


Object.defineProperty(XMLCharacterData.prototype,'textContent',{
get:function get(){
return this.value;
},
set:function set(value){
return this.value=value||'';
}});


XMLCharacterData.prototype.clone=function(){
return Object.create(this);
};

XMLCharacterData.prototype.substringData=function(offset,count){
throw new Error("This DOM method is not implemented."+this.debugInfo());
};

XMLCharacterData.prototype.appendData=function(arg){
throw new Error("This DOM method is not implemented."+this.debugInfo());
};

XMLCharacterData.prototype.insertData=function(offset,arg){
throw new Error("This DOM method is not implemented."+this.debugInfo());
};

XMLCharacterData.prototype.deleteData=function(offset,count){
throw new Error("This DOM method is not implemented."+this.debugInfo());
};

XMLCharacterData.prototype.replaceData=function(offset,count,arg){
throw new Error("This DOM method is not implemented."+this.debugInfo());
};

XMLCharacterData.prototype.isEqualNode=function(node){
if(!XMLCharacterData.__super__.isEqualNode.apply(this,arguments).isEqualNode(node)){
return false;
}
if(node.data!==this.data){
return false;
}
return true;
};

return XMLCharacterData;

}(XMLNode);

}).call(this);

},{"./XMLNode":375}],359:[function(require,module,exports){
// Generated by CoffeeScript 1.12.7
(function(){
var NodeType,XMLCharacterData,XMLComment,
extend=function extend(child,parent){for(var key in parent){if(hasProp.call(parent,key))child[key]=parent[key];}function ctor(){this.constructor=child;}ctor.prototype=parent.prototype;child.prototype=new ctor();child.__super__=parent.prototype;return child;},
hasProp={}.hasOwnProperty;

NodeType=require('./NodeType');

XMLCharacterData=require('./XMLCharacterData');

module.exports=XMLComment=function(superClass){
extend(XMLComment,superClass);

function XMLComment(parent,text){
XMLComment.__super__.constructor.call(this,parent);
if(text==null){
throw new Error("Missing comment text. "+this.debugInfo());
}
this.name="#comment";
this.type=NodeType.Comment;
this.value=this.stringify.comment(text);
}

XMLComment.prototype.clone=function(){
return Object.create(this);
};

XMLComment.prototype.toString=function(options){
return this.options.writer.comment(this,this.options.writer.filterOptions(options));
};

return XMLComment;

}(XMLCharacterData);

}).call(this);

},{"./NodeType":353,"./XMLCharacterData":358}],360:[function(require,module,exports){
// Generated by CoffeeScript 1.12.7
(function(){
var XMLDOMConfiguration,XMLDOMErrorHandler,XMLDOMStringList;

XMLDOMErrorHandler=require('./XMLDOMErrorHandler');

XMLDOMStringList=require('./XMLDOMStringList');

module.exports=XMLDOMConfiguration=function(){
function XMLDOMConfiguration(){
var clonedSelf;
this.defaultParams={
"canonical-form":false,
"cdata-sections":false,
"comments":false,
"datatype-normalization":false,
"element-content-whitespace":true,
"entities":true,
"error-handler":new XMLDOMErrorHandler(),
"infoset":true,
"validate-if-schema":false,
"namespaces":true,
"namespace-declarations":true,
"normalize-characters":false,
"schema-location":'',
"schema-type":'',
"split-cdata-sections":true,
"validate":false,
"well-formed":true};

this.params=clonedSelf=Object.create(this.defaultParams);
}

Object.defineProperty(XMLDOMConfiguration.prototype,'parameterNames',{
get:function get(){
return new XMLDOMStringList(Object.keys(this.defaultParams));
}});


XMLDOMConfiguration.prototype.getParameter=function(name){
if(this.params.hasOwnProperty(name)){
return this.params[name];
}else{
return null;
}
};

XMLDOMConfiguration.prototype.canSetParameter=function(name,value){
return true;
};

XMLDOMConfiguration.prototype.setParameter=function(name,value){
if(value!=null){
return this.params[name]=value;
}else{
return delete this.params[name];
}
};

return XMLDOMConfiguration;

}();

}).call(this);

},{"./XMLDOMErrorHandler":361,"./XMLDOMStringList":363}],361:[function(require,module,exports){
// Generated by CoffeeScript 1.12.7
(function(){
var XMLDOMErrorHandler;

module.exports=XMLDOMErrorHandler=function(){
function XMLDOMErrorHandler(){}

XMLDOMErrorHandler.prototype.handleError=function(error){
throw new Error(error);
};

return XMLDOMErrorHandler;

}();

}).call(this);

},{}],362:[function(require,module,exports){
// Generated by CoffeeScript 1.12.7
(function(){
var XMLDOMImplementation;

module.exports=XMLDOMImplementation=function(){
function XMLDOMImplementation(){}

XMLDOMImplementation.prototype.hasFeature=function(feature,version){
return true;
};

XMLDOMImplementation.prototype.createDocumentType=function(qualifiedName,publicId,systemId){
throw new Error("This DOM method is not implemented.");
};

XMLDOMImplementation.prototype.createDocument=function(namespaceURI,qualifiedName,doctype){
throw new Error("This DOM method is not implemented.");
};

XMLDOMImplementation.prototype.createHTMLDocument=function(title){
throw new Error("This DOM method is not implemented.");
};

XMLDOMImplementation.prototype.getFeature=function(feature,version){
throw new Error("This DOM method is not implemented.");
};

return XMLDOMImplementation;

}();

}).call(this);

},{}],363:[function(require,module,exports){
// Generated by CoffeeScript 1.12.7
(function(){
var XMLDOMStringList;

module.exports=XMLDOMStringList=function(){
function XMLDOMStringList(arr){
this.arr=arr||[];
}

Object.defineProperty(XMLDOMStringList.prototype,'length',{
get:function get(){
return this.arr.length;
}});


XMLDOMStringList.prototype.item=function(index){
return this.arr[index]||null;
};

XMLDOMStringList.prototype.contains=function(str){
return this.arr.indexOf(str)!==-1;
};

return XMLDOMStringList;

}();

}).call(this);

},{}],364:[function(require,module,exports){
// Generated by CoffeeScript 1.12.7
(function(){
var NodeType,XMLDTDAttList,XMLNode,
extend=function extend(child,parent){for(var key in parent){if(hasProp.call(parent,key))child[key]=parent[key];}function ctor(){this.constructor=child;}ctor.prototype=parent.prototype;child.prototype=new ctor();child.__super__=parent.prototype;return child;},
hasProp={}.hasOwnProperty;

XMLNode=require('./XMLNode');

NodeType=require('./NodeType');

module.exports=XMLDTDAttList=function(superClass){
extend(XMLDTDAttList,superClass);

function XMLDTDAttList(parent,elementName,attributeName,attributeType,defaultValueType,defaultValue){
XMLDTDAttList.__super__.constructor.call(this,parent);
if(elementName==null){
throw new Error("Missing DTD element name. "+this.debugInfo());
}
if(attributeName==null){
throw new Error("Missing DTD attribute name. "+this.debugInfo(elementName));
}
if(!attributeType){
throw new Error("Missing DTD attribute type. "+this.debugInfo(elementName));
}
if(!defaultValueType){
throw new Error("Missing DTD attribute default. "+this.debugInfo(elementName));
}
if(defaultValueType.indexOf('#')!==0){
defaultValueType='#'+defaultValueType;
}
if(!defaultValueType.match(/^(#REQUIRED|#IMPLIED|#FIXED|#DEFAULT)$/)){
throw new Error("Invalid default value type; expected: #REQUIRED, #IMPLIED, #FIXED or #DEFAULT. "+this.debugInfo(elementName));
}
if(defaultValue&&!defaultValueType.match(/^(#FIXED|#DEFAULT)$/)){
throw new Error("Default value only applies to #FIXED or #DEFAULT. "+this.debugInfo(elementName));
}
this.elementName=this.stringify.name(elementName);
this.type=NodeType.AttributeDeclaration;
this.attributeName=this.stringify.name(attributeName);
this.attributeType=this.stringify.dtdAttType(attributeType);
if(defaultValue){
this.defaultValue=this.stringify.dtdAttDefault(defaultValue);
}
this.defaultValueType=defaultValueType;
}

XMLDTDAttList.prototype.toString=function(options){
return this.options.writer.dtdAttList(this,this.options.writer.filterOptions(options));
};

return XMLDTDAttList;

}(XMLNode);

}).call(this);

},{"./NodeType":353,"./XMLNode":375}],365:[function(require,module,exports){
// Generated by CoffeeScript 1.12.7
(function(){
var NodeType,XMLDTDElement,XMLNode,
extend=function extend(child,parent){for(var key in parent){if(hasProp.call(parent,key))child[key]=parent[key];}function ctor(){this.constructor=child;}ctor.prototype=parent.prototype;child.prototype=new ctor();child.__super__=parent.prototype;return child;},
hasProp={}.hasOwnProperty;

XMLNode=require('./XMLNode');

NodeType=require('./NodeType');

module.exports=XMLDTDElement=function(superClass){
extend(XMLDTDElement,superClass);

function XMLDTDElement(parent,name,value){
XMLDTDElement.__super__.constructor.call(this,parent);
if(name==null){
throw new Error("Missing DTD element name. "+this.debugInfo());
}
if(!value){
value='(#PCDATA)';
}
if(Array.isArray(value)){
value='('+value.join(',')+')';
}
this.name=this.stringify.name(name);
this.type=NodeType.ElementDeclaration;
this.value=this.stringify.dtdElementValue(value);
}

XMLDTDElement.prototype.toString=function(options){
return this.options.writer.dtdElement(this,this.options.writer.filterOptions(options));
};

return XMLDTDElement;

}(XMLNode);

}).call(this);

},{"./NodeType":353,"./XMLNode":375}],366:[function(require,module,exports){
// Generated by CoffeeScript 1.12.7
(function(){
var NodeType,XMLDTDEntity,XMLNode,isObject,
extend=function extend(child,parent){for(var key in parent){if(hasProp.call(parent,key))child[key]=parent[key];}function ctor(){this.constructor=child;}ctor.prototype=parent.prototype;child.prototype=new ctor();child.__super__=parent.prototype;return child;},
hasProp={}.hasOwnProperty;

isObject=require('./Utility').isObject;

XMLNode=require('./XMLNode');

NodeType=require('./NodeType');

module.exports=XMLDTDEntity=function(superClass){
extend(XMLDTDEntity,superClass);

function XMLDTDEntity(parent,pe,name,value){
XMLDTDEntity.__super__.constructor.call(this,parent);
if(name==null){
throw new Error("Missing DTD entity name. "+this.debugInfo(name));
}
if(value==null){
throw new Error("Missing DTD entity value. "+this.debugInfo(name));
}
this.pe=!!pe;
this.name=this.stringify.name(name);
this.type=NodeType.EntityDeclaration;
if(!isObject(value)){
this.value=this.stringify.dtdEntityValue(value);
this.internal=true;
}else{
if(!value.pubID&&!value.sysID){
throw new Error("Public and/or system identifiers are required for an external entity. "+this.debugInfo(name));
}
if(value.pubID&&!value.sysID){
throw new Error("System identifier is required for a public external entity. "+this.debugInfo(name));
}
this.internal=false;
if(value.pubID!=null){
this.pubID=this.stringify.dtdPubID(value.pubID);
}
if(value.sysID!=null){
this.sysID=this.stringify.dtdSysID(value.sysID);
}
if(value.nData!=null){
this.nData=this.stringify.dtdNData(value.nData);
}
if(this.pe&&this.nData){
throw new Error("Notation declaration is not allowed in a parameter entity. "+this.debugInfo(name));
}
}
}

Object.defineProperty(XMLDTDEntity.prototype,'publicId',{
get:function get(){
return this.pubID;
}});


Object.defineProperty(XMLDTDEntity.prototype,'systemId',{
get:function get(){
return this.sysID;
}});


Object.defineProperty(XMLDTDEntity.prototype,'notationName',{
get:function get(){
return this.nData||null;
}});


Object.defineProperty(XMLDTDEntity.prototype,'inputEncoding',{
get:function get(){
return null;
}});


Object.defineProperty(XMLDTDEntity.prototype,'xmlEncoding',{
get:function get(){
return null;
}});


Object.defineProperty(XMLDTDEntity.prototype,'xmlVersion',{
get:function get(){
return null;
}});


XMLDTDEntity.prototype.toString=function(options){
return this.options.writer.dtdEntity(this,this.options.writer.filterOptions(options));
};

return XMLDTDEntity;

}(XMLNode);

}).call(this);

},{"./NodeType":353,"./Utility":354,"./XMLNode":375}],367:[function(require,module,exports){
// Generated by CoffeeScript 1.12.7
(function(){
var NodeType,XMLDTDNotation,XMLNode,
extend=function extend(child,parent){for(var key in parent){if(hasProp.call(parent,key))child[key]=parent[key];}function ctor(){this.constructor=child;}ctor.prototype=parent.prototype;child.prototype=new ctor();child.__super__=parent.prototype;return child;},
hasProp={}.hasOwnProperty;

XMLNode=require('./XMLNode');

NodeType=require('./NodeType');

module.exports=XMLDTDNotation=function(superClass){
extend(XMLDTDNotation,superClass);

function XMLDTDNotation(parent,name,value){
XMLDTDNotation.__super__.constructor.call(this,parent);
if(name==null){
throw new Error("Missing DTD notation name. "+this.debugInfo(name));
}
if(!value.pubID&&!value.sysID){
throw new Error("Public or system identifiers are required for an external entity. "+this.debugInfo(name));
}
this.name=this.stringify.name(name);
this.type=NodeType.NotationDeclaration;
if(value.pubID!=null){
this.pubID=this.stringify.dtdPubID(value.pubID);
}
if(value.sysID!=null){
this.sysID=this.stringify.dtdSysID(value.sysID);
}
}

Object.defineProperty(XMLDTDNotation.prototype,'publicId',{
get:function get(){
return this.pubID;
}});


Object.defineProperty(XMLDTDNotation.prototype,'systemId',{
get:function get(){
return this.sysID;
}});


XMLDTDNotation.prototype.toString=function(options){
return this.options.writer.dtdNotation(this,this.options.writer.filterOptions(options));
};

return XMLDTDNotation;

}(XMLNode);

}).call(this);

},{"./NodeType":353,"./XMLNode":375}],368:[function(require,module,exports){
// Generated by CoffeeScript 1.12.7
(function(){
var NodeType,XMLDeclaration,XMLNode,isObject,
extend=function extend(child,parent){for(var key in parent){if(hasProp.call(parent,key))child[key]=parent[key];}function ctor(){this.constructor=child;}ctor.prototype=parent.prototype;child.prototype=new ctor();child.__super__=parent.prototype;return child;},
hasProp={}.hasOwnProperty;

isObject=require('./Utility').isObject;

XMLNode=require('./XMLNode');

NodeType=require('./NodeType');

module.exports=XMLDeclaration=function(superClass){
extend(XMLDeclaration,superClass);

function XMLDeclaration(parent,version,encoding,standalone){
var ref;
XMLDeclaration.__super__.constructor.call(this,parent);
if(isObject(version)){
ref=version,version=ref.version,encoding=ref.encoding,standalone=ref.standalone;
}
if(!version){
version='1.0';
}
this.type=NodeType.Declaration;
this.version=this.stringify.xmlVersion(version);
if(encoding!=null){
this.encoding=this.stringify.xmlEncoding(encoding);
}
if(standalone!=null){
this.standalone=this.stringify.xmlStandalone(standalone);
}
}

XMLDeclaration.prototype.toString=function(options){
return this.options.writer.declaration(this,this.options.writer.filterOptions(options));
};

return XMLDeclaration;

}(XMLNode);

}).call(this);

},{"./NodeType":353,"./Utility":354,"./XMLNode":375}],369:[function(require,module,exports){
// Generated by CoffeeScript 1.12.7
(function(){
var NodeType,XMLDTDAttList,XMLDTDElement,XMLDTDEntity,XMLDTDNotation,XMLDocType,XMLNamedNodeMap,XMLNode,isObject,
extend=function extend(child,parent){for(var key in parent){if(hasProp.call(parent,key))child[key]=parent[key];}function ctor(){this.constructor=child;}ctor.prototype=parent.prototype;child.prototype=new ctor();child.__super__=parent.prototype;return child;},
hasProp={}.hasOwnProperty;

isObject=require('./Utility').isObject;

XMLNode=require('./XMLNode');

NodeType=require('./NodeType');

XMLDTDAttList=require('./XMLDTDAttList');

XMLDTDEntity=require('./XMLDTDEntity');

XMLDTDElement=require('./XMLDTDElement');

XMLDTDNotation=require('./XMLDTDNotation');

XMLNamedNodeMap=require('./XMLNamedNodeMap');

module.exports=XMLDocType=function(superClass){
extend(XMLDocType,superClass);

function XMLDocType(parent,pubID,sysID){
var child,i,len,ref,ref1,ref2;
XMLDocType.__super__.constructor.call(this,parent);
this.type=NodeType.DocType;
if(parent.children){
ref=parent.children;
for(i=0,len=ref.length;i<len;i++){
child=ref[i];
if(child.type===NodeType.Element){
this.name=child.name;
break;
}
}
}
this.documentObject=parent;
if(isObject(pubID)){
ref1=pubID,pubID=ref1.pubID,sysID=ref1.sysID;
}
if(sysID==null){
ref2=[pubID,sysID],sysID=ref2[0],pubID=ref2[1];
}
if(pubID!=null){
this.pubID=this.stringify.dtdPubID(pubID);
}
if(sysID!=null){
this.sysID=this.stringify.dtdSysID(sysID);
}
}

Object.defineProperty(XMLDocType.prototype,'entities',{
get:function get(){
var child,i,len,nodes,ref;
nodes={};
ref=this.children;
for(i=0,len=ref.length;i<len;i++){
child=ref[i];
if(child.type===NodeType.EntityDeclaration&&!child.pe){
nodes[child.name]=child;
}
}
return new XMLNamedNodeMap(nodes);
}});


Object.defineProperty(XMLDocType.prototype,'notations',{
get:function get(){
var child,i,len,nodes,ref;
nodes={};
ref=this.children;
for(i=0,len=ref.length;i<len;i++){
child=ref[i];
if(child.type===NodeType.NotationDeclaration){
nodes[child.name]=child;
}
}
return new XMLNamedNodeMap(nodes);
}});


Object.defineProperty(XMLDocType.prototype,'publicId',{
get:function get(){
return this.pubID;
}});


Object.defineProperty(XMLDocType.prototype,'systemId',{
get:function get(){
return this.sysID;
}});


Object.defineProperty(XMLDocType.prototype,'internalSubset',{
get:function get(){
throw new Error("This DOM method is not implemented."+this.debugInfo());
}});


XMLDocType.prototype.element=function(name,value){
var child;
child=new XMLDTDElement(this,name,value);
this.children.push(child);
return this;
};

XMLDocType.prototype.attList=function(elementName,attributeName,attributeType,defaultValueType,defaultValue){
var child;
child=new XMLDTDAttList(this,elementName,attributeName,attributeType,defaultValueType,defaultValue);
this.children.push(child);
return this;
};

XMLDocType.prototype.entity=function(name,value){
var child;
child=new XMLDTDEntity(this,false,name,value);
this.children.push(child);
return this;
};

XMLDocType.prototype.pEntity=function(name,value){
var child;
child=new XMLDTDEntity(this,true,name,value);
this.children.push(child);
return this;
};

XMLDocType.prototype.notation=function(name,value){
var child;
child=new XMLDTDNotation(this,name,value);
this.children.push(child);
return this;
};

XMLDocType.prototype.toString=function(options){
return this.options.writer.docType(this,this.options.writer.filterOptions(options));
};

XMLDocType.prototype.ele=function(name,value){
return this.element(name,value);
};

XMLDocType.prototype.att=function(elementName,attributeName,attributeType,defaultValueType,defaultValue){
return this.attList(elementName,attributeName,attributeType,defaultValueType,defaultValue);
};

XMLDocType.prototype.ent=function(name,value){
return this.entity(name,value);
};

XMLDocType.prototype.pent=function(name,value){
return this.pEntity(name,value);
};

XMLDocType.prototype.not=function(name,value){
return this.notation(name,value);
};

XMLDocType.prototype.up=function(){
return this.root()||this.documentObject;
};

XMLDocType.prototype.isEqualNode=function(node){
if(!XMLDocType.__super__.isEqualNode.apply(this,arguments).isEqualNode(node)){
return false;
}
if(node.name!==this.name){
return false;
}
if(node.publicId!==this.publicId){
return false;
}
if(node.systemId!==this.systemId){
return false;
}
return true;
};

return XMLDocType;

}(XMLNode);

}).call(this);

},{"./NodeType":353,"./Utility":354,"./XMLDTDAttList":364,"./XMLDTDElement":365,"./XMLDTDEntity":366,"./XMLDTDNotation":367,"./XMLNamedNodeMap":374,"./XMLNode":375}],370:[function(require,module,exports){
// Generated by CoffeeScript 1.12.7
(function(){
var NodeType,XMLDOMConfiguration,XMLDOMImplementation,XMLDocument,XMLNode,XMLStringWriter,XMLStringifier,isPlainObject,
extend=function extend(child,parent){for(var key in parent){if(hasProp.call(parent,key))child[key]=parent[key];}function ctor(){this.constructor=child;}ctor.prototype=parent.prototype;child.prototype=new ctor();child.__super__=parent.prototype;return child;},
hasProp={}.hasOwnProperty;

isPlainObject=require('./Utility').isPlainObject;

XMLDOMImplementation=require('./XMLDOMImplementation');

XMLDOMConfiguration=require('./XMLDOMConfiguration');

XMLNode=require('./XMLNode');

NodeType=require('./NodeType');

XMLStringifier=require('./XMLStringifier');

XMLStringWriter=require('./XMLStringWriter');

module.exports=XMLDocument=function(superClass){
extend(XMLDocument,superClass);

function XMLDocument(options){
XMLDocument.__super__.constructor.call(this,null);
this.name="#document";
this.type=NodeType.Document;
this.documentURI=null;
this.domConfig=new XMLDOMConfiguration();
options||(options={});
if(!options.writer){
options.writer=new XMLStringWriter();
}
this.options=options;
this.stringify=new XMLStringifier(options);
}

Object.defineProperty(XMLDocument.prototype,'implementation',{
value:new XMLDOMImplementation()});


Object.defineProperty(XMLDocument.prototype,'doctype',{
get:function get(){
var child,i,len,ref;
ref=this.children;
for(i=0,len=ref.length;i<len;i++){
child=ref[i];
if(child.type===NodeType.DocType){
return child;
}
}
return null;
}});


Object.defineProperty(XMLDocument.prototype,'documentElement',{
get:function get(){
return this.rootObject||null;
}});


Object.defineProperty(XMLDocument.prototype,'inputEncoding',{
get:function get(){
return null;
}});


Object.defineProperty(XMLDocument.prototype,'strictErrorChecking',{
get:function get(){
return false;
}});


Object.defineProperty(XMLDocument.prototype,'xmlEncoding',{
get:function get(){
if(this.children.length!==0&&this.children[0].type===NodeType.Declaration){
return this.children[0].encoding;
}else{
return null;
}
}});


Object.defineProperty(XMLDocument.prototype,'xmlStandalone',{
get:function get(){
if(this.children.length!==0&&this.children[0].type===NodeType.Declaration){
return this.children[0].standalone==='yes';
}else{
return false;
}
}});


Object.defineProperty(XMLDocument.prototype,'xmlVersion',{
get:function get(){
if(this.children.length!==0&&this.children[0].type===NodeType.Declaration){
return this.children[0].version;
}else{
return"1.0";
}
}});


Object.defineProperty(XMLDocument.prototype,'URL',{
get:function get(){
return this.documentURI;
}});


Object.defineProperty(XMLDocument.prototype,'origin',{
get:function get(){
return null;
}});


Object.defineProperty(XMLDocument.prototype,'compatMode',{
get:function get(){
return null;
}});


Object.defineProperty(XMLDocument.prototype,'characterSet',{
get:function get(){
return null;
}});


Object.defineProperty(XMLDocument.prototype,'contentType',{
get:function get(){
return null;
}});


XMLDocument.prototype.end=function(writer){
var writerOptions;
writerOptions={};
if(!writer){
writer=this.options.writer;
}else if(isPlainObject(writer)){
writerOptions=writer;
writer=this.options.writer;
}
return writer.document(this,writer.filterOptions(writerOptions));
};

XMLDocument.prototype.toString=function(options){
return this.options.writer.document(this,this.options.writer.filterOptions(options));
};

XMLDocument.prototype.createElement=function(tagName){
throw new Error("This DOM method is not implemented."+this.debugInfo());
};

XMLDocument.prototype.createDocumentFragment=function(){
throw new Error("This DOM method is not implemented."+this.debugInfo());
};

XMLDocument.prototype.createTextNode=function(data){
throw new Error("This DOM method is not implemented."+this.debugInfo());
};

XMLDocument.prototype.createComment=function(data){
throw new Error("This DOM method is not implemented."+this.debugInfo());
};

XMLDocument.prototype.createCDATASection=function(data){
throw new Error("This DOM method is not implemented."+this.debugInfo());
};

XMLDocument.prototype.createProcessingInstruction=function(target,data){
throw new Error("This DOM method is not implemented."+this.debugInfo());
};

XMLDocument.prototype.createAttribute=function(name){
throw new Error("This DOM method is not implemented."+this.debugInfo());
};

XMLDocument.prototype.createEntityReference=function(name){
throw new Error("This DOM method is not implemented."+this.debugInfo());
};

XMLDocument.prototype.getElementsByTagName=function(tagname){
throw new Error("This DOM method is not implemented."+this.debugInfo());
};

XMLDocument.prototype.importNode=function(importedNode,deep){
throw new Error("This DOM method is not implemented."+this.debugInfo());
};

XMLDocument.prototype.createElementNS=function(namespaceURI,qualifiedName){
throw new Error("This DOM method is not implemented."+this.debugInfo());
};

XMLDocument.prototype.createAttributeNS=function(namespaceURI,qualifiedName){
throw new Error("This DOM method is not implemented."+this.debugInfo());
};

XMLDocument.prototype.getElementsByTagNameNS=function(namespaceURI,localName){
throw new Error("This DOM method is not implemented."+this.debugInfo());
};

XMLDocument.prototype.getElementById=function(elementId){
throw new Error("This DOM method is not implemented."+this.debugInfo());
};

XMLDocument.prototype.adoptNode=function(source){
throw new Error("This DOM method is not implemented."+this.debugInfo());
};

XMLDocument.prototype.normalizeDocument=function(){
throw new Error("This DOM method is not implemented."+this.debugInfo());
};

XMLDocument.prototype.renameNode=function(node,namespaceURI,qualifiedName){
throw new Error("This DOM method is not implemented."+this.debugInfo());
};

XMLDocument.prototype.getElementsByClassName=function(classNames){
throw new Error("This DOM method is not implemented."+this.debugInfo());
};

XMLDocument.prototype.createEvent=function(eventInterface){
throw new Error("This DOM method is not implemented."+this.debugInfo());
};

XMLDocument.prototype.createRange=function(){
throw new Error("This DOM method is not implemented."+this.debugInfo());
};

XMLDocument.prototype.createNodeIterator=function(root,whatToShow,filter){
throw new Error("This DOM method is not implemented."+this.debugInfo());
};

XMLDocument.prototype.createTreeWalker=function(root,whatToShow,filter){
throw new Error("This DOM method is not implemented."+this.debugInfo());
};

return XMLDocument;

}(XMLNode);

}).call(this);

},{"./NodeType":353,"./Utility":354,"./XMLDOMConfiguration":360,"./XMLDOMImplementation":362,"./XMLNode":375,"./XMLStringWriter":380,"./XMLStringifier":381}],371:[function(require,module,exports){
// Generated by CoffeeScript 1.12.7
(function(){
var NodeType,WriterState,XMLAttribute,XMLCData,XMLComment,XMLDTDAttList,XMLDTDElement,XMLDTDEntity,XMLDTDNotation,XMLDeclaration,XMLDocType,XMLDocument,XMLDocumentCB,XMLElement,XMLProcessingInstruction,XMLRaw,XMLStringWriter,XMLStringifier,XMLText,getValue,isFunction,isObject,isPlainObject,ref,
hasProp={}.hasOwnProperty;

ref=require('./Utility'),isObject=ref.isObject,isFunction=ref.isFunction,isPlainObject=ref.isPlainObject,getValue=ref.getValue;

NodeType=require('./NodeType');

XMLDocument=require('./XMLDocument');

XMLElement=require('./XMLElement');

XMLCData=require('./XMLCData');

XMLComment=require('./XMLComment');

XMLRaw=require('./XMLRaw');

XMLText=require('./XMLText');

XMLProcessingInstruction=require('./XMLProcessingInstruction');

XMLDeclaration=require('./XMLDeclaration');

XMLDocType=require('./XMLDocType');

XMLDTDAttList=require('./XMLDTDAttList');

XMLDTDEntity=require('./XMLDTDEntity');

XMLDTDElement=require('./XMLDTDElement');

XMLDTDNotation=require('./XMLDTDNotation');

XMLAttribute=require('./XMLAttribute');

XMLStringifier=require('./XMLStringifier');

XMLStringWriter=require('./XMLStringWriter');

WriterState=require('./WriterState');

module.exports=XMLDocumentCB=function(){
function XMLDocumentCB(options,onData,onEnd){
var writerOptions;
this.name="?xml";
this.type=NodeType.Document;
options||(options={});
writerOptions={};
if(!options.writer){
options.writer=new XMLStringWriter();
}else if(isPlainObject(options.writer)){
writerOptions=options.writer;
options.writer=new XMLStringWriter();
}
this.options=options;
this.writer=options.writer;
this.writerOptions=this.writer.filterOptions(writerOptions);
this.stringify=new XMLStringifier(options);
this.onDataCallback=onData||function(){};
this.onEndCallback=onEnd||function(){};
this.currentNode=null;
this.currentLevel=-1;
this.openTags={};
this.documentStarted=false;
this.documentCompleted=false;
this.root=null;
}

XMLDocumentCB.prototype.createChildNode=function(node){
var att,attName,attributes,child,i,len,ref1,ref2;
switch(node.type){
case NodeType.CData:
this.cdata(node.value);
break;
case NodeType.Comment:
this.comment(node.value);
break;
case NodeType.Element:
attributes={};
ref1=node.attribs;
for(attName in ref1){
if(!hasProp.call(ref1,attName))continue;
att=ref1[attName];
attributes[attName]=att.value;
}
this.node(node.name,attributes);
break;
case NodeType.Dummy:
this.dummy();
break;
case NodeType.Raw:
this.raw(node.value);
break;
case NodeType.Text:
this.text(node.value);
break;
case NodeType.ProcessingInstruction:
this.instruction(node.target,node.value);
break;
default:
throw new Error("This XML node type is not supported in a JS object: "+node.constructor.name);}

ref2=node.children;
for(i=0,len=ref2.length;i<len;i++){
child=ref2[i];
this.createChildNode(child);
if(child.type===NodeType.Element){
this.up();
}
}
return this;
};

XMLDocumentCB.prototype.dummy=function(){
return this;
};

XMLDocumentCB.prototype.node=function(name,attributes,text){
var ref1;
if(name==null){
throw new Error("Missing node name.");
}
if(this.root&&this.currentLevel===-1){
throw new Error("Document can only have one root node. "+this.debugInfo(name));
}
this.openCurrent();
name=getValue(name);
if(attributes==null){
attributes={};
}
attributes=getValue(attributes);
if(!isObject(attributes)){
ref1=[attributes,text],text=ref1[0],attributes=ref1[1];
}
this.currentNode=new XMLElement(this,name,attributes);
this.currentNode.children=false;
this.currentLevel++;
this.openTags[this.currentLevel]=this.currentNode;
if(text!=null){
this.text(text);
}
return this;
};

XMLDocumentCB.prototype.element=function(name,attributes,text){
var child,i,len,oldValidationFlag,ref1,root;
if(this.currentNode&&this.currentNode.type===NodeType.DocType){
this.dtdElement.apply(this,arguments);
}else{
if(Array.isArray(name)||isObject(name)||isFunction(name)){
oldValidationFlag=this.options.noValidation;
this.options.noValidation=true;
root=new XMLDocument(this.options).element('TEMP_ROOT');
root.element(name);
this.options.noValidation=oldValidationFlag;
ref1=root.children;
for(i=0,len=ref1.length;i<len;i++){
child=ref1[i];
this.createChildNode(child);
if(child.type===NodeType.Element){
this.up();
}
}
}else{
this.node(name,attributes,text);
}
}
return this;
};

XMLDocumentCB.prototype.attribute=function(name,value){
var attName,attValue;
if(!this.currentNode||this.currentNode.children){
throw new Error("att() can only be used immediately after an ele() call in callback mode. "+this.debugInfo(name));
}
if(name!=null){
name=getValue(name);
}
if(isObject(name)){
for(attName in name){
if(!hasProp.call(name,attName))continue;
attValue=name[attName];
this.attribute(attName,attValue);
}
}else{
if(isFunction(value)){
value=value.apply();
}
if(this.options.keepNullAttributes&&value==null){
this.currentNode.attribs[name]=new XMLAttribute(this,name,"");
}else if(value!=null){
this.currentNode.attribs[name]=new XMLAttribute(this,name,value);
}
}
return this;
};

XMLDocumentCB.prototype.text=function(value){
var node;
this.openCurrent();
node=new XMLText(this,value);
this.onData(this.writer.text(node,this.writerOptions,this.currentLevel+1),this.currentLevel+1);
return this;
};

XMLDocumentCB.prototype.cdata=function(value){
var node;
this.openCurrent();
node=new XMLCData(this,value);
this.onData(this.writer.cdata(node,this.writerOptions,this.currentLevel+1),this.currentLevel+1);
return this;
};

XMLDocumentCB.prototype.comment=function(value){
var node;
this.openCurrent();
node=new XMLComment(this,value);
this.onData(this.writer.comment(node,this.writerOptions,this.currentLevel+1),this.currentLevel+1);
return this;
};

XMLDocumentCB.prototype.raw=function(value){
var node;
this.openCurrent();
node=new XMLRaw(this,value);
this.onData(this.writer.raw(node,this.writerOptions,this.currentLevel+1),this.currentLevel+1);
return this;
};

XMLDocumentCB.prototype.instruction=function(target,value){
var i,insTarget,insValue,len,node;
this.openCurrent();
if(target!=null){
target=getValue(target);
}
if(value!=null){
value=getValue(value);
}
if(Array.isArray(target)){
for(i=0,len=target.length;i<len;i++){
insTarget=target[i];
this.instruction(insTarget);
}
}else if(isObject(target)){
for(insTarget in target){
if(!hasProp.call(target,insTarget))continue;
insValue=target[insTarget];
this.instruction(insTarget,insValue);
}
}else{
if(isFunction(value)){
value=value.apply();
}
node=new XMLProcessingInstruction(this,target,value);
this.onData(this.writer.processingInstruction(node,this.writerOptions,this.currentLevel+1),this.currentLevel+1);
}
return this;
};

XMLDocumentCB.prototype.declaration=function(version,encoding,standalone){
var node;
this.openCurrent();
if(this.documentStarted){
throw new Error("declaration() must be the first node.");
}
node=new XMLDeclaration(this,version,encoding,standalone);
this.onData(this.writer.declaration(node,this.writerOptions,this.currentLevel+1),this.currentLevel+1);
return this;
};

XMLDocumentCB.prototype.doctype=function(root,pubID,sysID){
this.openCurrent();
if(root==null){
throw new Error("Missing root node name.");
}
if(this.root){
throw new Error("dtd() must come before the root node.");
}
this.currentNode=new XMLDocType(this,pubID,sysID);
this.currentNode.rootNodeName=root;
this.currentNode.children=false;
this.currentLevel++;
this.openTags[this.currentLevel]=this.currentNode;
return this;
};

XMLDocumentCB.prototype.dtdElement=function(name,value){
var node;
this.openCurrent();
node=new XMLDTDElement(this,name,value);
this.onData(this.writer.dtdElement(node,this.writerOptions,this.currentLevel+1),this.currentLevel+1);
return this;
};

XMLDocumentCB.prototype.attList=function(elementName,attributeName,attributeType,defaultValueType,defaultValue){
var node;
this.openCurrent();
node=new XMLDTDAttList(this,elementName,attributeName,attributeType,defaultValueType,defaultValue);
this.onData(this.writer.dtdAttList(node,this.writerOptions,this.currentLevel+1),this.currentLevel+1);
return this;
};

XMLDocumentCB.prototype.entity=function(name,value){
var node;
this.openCurrent();
node=new XMLDTDEntity(this,false,name,value);
this.onData(this.writer.dtdEntity(node,this.writerOptions,this.currentLevel+1),this.currentLevel+1);
return this;
};

XMLDocumentCB.prototype.pEntity=function(name,value){
var node;
this.openCurrent();
node=new XMLDTDEntity(this,true,name,value);
this.onData(this.writer.dtdEntity(node,this.writerOptions,this.currentLevel+1),this.currentLevel+1);
return this;
};

XMLDocumentCB.prototype.notation=function(name,value){
var node;
this.openCurrent();
node=new XMLDTDNotation(this,name,value);
this.onData(this.writer.dtdNotation(node,this.writerOptions,this.currentLevel+1),this.currentLevel+1);
return this;
};

XMLDocumentCB.prototype.up=function(){
if(this.currentLevel<0){
throw new Error("The document node has no parent.");
}
if(this.currentNode){
if(this.currentNode.children){
this.closeNode(this.currentNode);
}else{
this.openNode(this.currentNode);
}
this.currentNode=null;
}else{
this.closeNode(this.openTags[this.currentLevel]);
}
delete this.openTags[this.currentLevel];
this.currentLevel--;
return this;
};

XMLDocumentCB.prototype.end=function(){
while(this.currentLevel>=0){
this.up();
}
return this.onEnd();
};

XMLDocumentCB.prototype.openCurrent=function(){
if(this.currentNode){
this.currentNode.children=true;
return this.openNode(this.currentNode);
}
};

XMLDocumentCB.prototype.openNode=function(node){
var att,chunk,name,ref1;
if(!node.isOpen){
if(!this.root&&this.currentLevel===0&&node.type===NodeType.Element){
this.root=node;
}
chunk='';
if(node.type===NodeType.Element){
this.writerOptions.state=WriterState.OpenTag;
chunk=this.writer.indent(node,this.writerOptions,this.currentLevel)+'<'+node.name;
ref1=node.attribs;
for(name in ref1){
if(!hasProp.call(ref1,name))continue;
att=ref1[name];
chunk+=this.writer.attribute(att,this.writerOptions,this.currentLevel);
}
chunk+=(node.children?'>':'/>')+this.writer.endline(node,this.writerOptions,this.currentLevel);
this.writerOptions.state=WriterState.InsideTag;
}else{
this.writerOptions.state=WriterState.OpenTag;
chunk=this.writer.indent(node,this.writerOptions,this.currentLevel)+'<!DOCTYPE '+node.rootNodeName;
if(node.pubID&&node.sysID){
chunk+=' PUBLIC "'+node.pubID+'" "'+node.sysID+'"';
}else if(node.sysID){
chunk+=' SYSTEM "'+node.sysID+'"';
}
if(node.children){
chunk+=' [';
this.writerOptions.state=WriterState.InsideTag;
}else{
this.writerOptions.state=WriterState.CloseTag;
chunk+='>';
}
chunk+=this.writer.endline(node,this.writerOptions,this.currentLevel);
}
this.onData(chunk,this.currentLevel);
return node.isOpen=true;
}
};

XMLDocumentCB.prototype.closeNode=function(node){
var chunk;
if(!node.isClosed){
chunk='';
this.writerOptions.state=WriterState.CloseTag;
if(node.type===NodeType.Element){
chunk=this.writer.indent(node,this.writerOptions,this.currentLevel)+'</'+node.name+'>'+this.writer.endline(node,this.writerOptions,this.currentLevel);
}else{
chunk=this.writer.indent(node,this.writerOptions,this.currentLevel)+']>'+this.writer.endline(node,this.writerOptions,this.currentLevel);
}
this.writerOptions.state=WriterState.None;
this.onData(chunk,this.currentLevel);
return node.isClosed=true;
}
};

XMLDocumentCB.prototype.onData=function(chunk,level){
this.documentStarted=true;
return this.onDataCallback(chunk,level+1);
};

XMLDocumentCB.prototype.onEnd=function(){
this.documentCompleted=true;
return this.onEndCallback();
};

XMLDocumentCB.prototype.debugInfo=function(name){
if(name==null){
return"";
}else{
return"node: <"+name+">";
}
};

XMLDocumentCB.prototype.ele=function(){
return this.element.apply(this,arguments);
};

XMLDocumentCB.prototype.nod=function(name,attributes,text){
return this.node(name,attributes,text);
};

XMLDocumentCB.prototype.txt=function(value){
return this.text(value);
};

XMLDocumentCB.prototype.dat=function(value){
return this.cdata(value);
};

XMLDocumentCB.prototype.com=function(value){
return this.comment(value);
};

XMLDocumentCB.prototype.ins=function(target,value){
return this.instruction(target,value);
};

XMLDocumentCB.prototype.dec=function(version,encoding,standalone){
return this.declaration(version,encoding,standalone);
};

XMLDocumentCB.prototype.dtd=function(root,pubID,sysID){
return this.doctype(root,pubID,sysID);
};

XMLDocumentCB.prototype.e=function(name,attributes,text){
return this.element(name,attributes,text);
};

XMLDocumentCB.prototype.n=function(name,attributes,text){
return this.node(name,attributes,text);
};

XMLDocumentCB.prototype.t=function(value){
return this.text(value);
};

XMLDocumentCB.prototype.d=function(value){
return this.cdata(value);
};

XMLDocumentCB.prototype.c=function(value){
return this.comment(value);
};

XMLDocumentCB.prototype.r=function(value){
return this.raw(value);
};

XMLDocumentCB.prototype.i=function(target,value){
return this.instruction(target,value);
};

XMLDocumentCB.prototype.att=function(){
if(this.currentNode&&this.currentNode.type===NodeType.DocType){
return this.attList.apply(this,arguments);
}else{
return this.attribute.apply(this,arguments);
}
};

XMLDocumentCB.prototype.a=function(){
if(this.currentNode&&this.currentNode.type===NodeType.DocType){
return this.attList.apply(this,arguments);
}else{
return this.attribute.apply(this,arguments);
}
};

XMLDocumentCB.prototype.ent=function(name,value){
return this.entity(name,value);
};

XMLDocumentCB.prototype.pent=function(name,value){
return this.pEntity(name,value);
};

XMLDocumentCB.prototype.not=function(name,value){
return this.notation(name,value);
};

return XMLDocumentCB;

}();

}).call(this);

},{"./NodeType":353,"./Utility":354,"./WriterState":355,"./XMLAttribute":356,"./XMLCData":357,"./XMLComment":359,"./XMLDTDAttList":364,"./XMLDTDElement":365,"./XMLDTDEntity":366,"./XMLDTDNotation":367,"./XMLDeclaration":368,"./XMLDocType":369,"./XMLDocument":370,"./XMLElement":373,"./XMLProcessingInstruction":377,"./XMLRaw":378,"./XMLStringWriter":380,"./XMLStringifier":381,"./XMLText":382}],372:[function(require,module,exports){
// Generated by CoffeeScript 1.12.7
(function(){
var NodeType,XMLDummy,XMLNode,
extend=function extend(child,parent){for(var key in parent){if(hasProp.call(parent,key))child[key]=parent[key];}function ctor(){this.constructor=child;}ctor.prototype=parent.prototype;child.prototype=new ctor();child.__super__=parent.prototype;return child;},
hasProp={}.hasOwnProperty;

XMLNode=require('./XMLNode');

NodeType=require('./NodeType');

module.exports=XMLDummy=function(superClass){
extend(XMLDummy,superClass);

function XMLDummy(parent){
XMLDummy.__super__.constructor.call(this,parent);
this.type=NodeType.Dummy;
}

XMLDummy.prototype.clone=function(){
return Object.create(this);
};

XMLDummy.prototype.toString=function(options){
return'';
};

return XMLDummy;

}(XMLNode);

}).call(this);

},{"./NodeType":353,"./XMLNode":375}],373:[function(require,module,exports){
// Generated by CoffeeScript 1.12.7
(function(){
var NodeType,XMLAttribute,XMLElement,XMLNamedNodeMap,XMLNode,getValue,isFunction,isObject,ref,
extend=function extend(child,parent){for(var key in parent){if(hasProp.call(parent,key))child[key]=parent[key];}function ctor(){this.constructor=child;}ctor.prototype=parent.prototype;child.prototype=new ctor();child.__super__=parent.prototype;return child;},
hasProp={}.hasOwnProperty;

ref=require('./Utility'),isObject=ref.isObject,isFunction=ref.isFunction,getValue=ref.getValue;

XMLNode=require('./XMLNode');

NodeType=require('./NodeType');

XMLAttribute=require('./XMLAttribute');

XMLNamedNodeMap=require('./XMLNamedNodeMap');

module.exports=XMLElement=function(superClass){
extend(XMLElement,superClass);

function XMLElement(parent,name,attributes){
var child,j,len,ref1;
XMLElement.__super__.constructor.call(this,parent);
if(name==null){
throw new Error("Missing element name. "+this.debugInfo());
}
this.name=this.stringify.name(name);
this.type=NodeType.Element;
this.attribs={};
this.schemaTypeInfo=null;
if(attributes!=null){
this.attribute(attributes);
}
if(parent.type===NodeType.Document){
this.isRoot=true;
this.documentObject=parent;
parent.rootObject=this;
if(parent.children){
ref1=parent.children;
for(j=0,len=ref1.length;j<len;j++){
child=ref1[j];
if(child.type===NodeType.DocType){
child.name=this.name;
break;
}
}
}
}
}

Object.defineProperty(XMLElement.prototype,'tagName',{
get:function get(){
return this.name;
}});


Object.defineProperty(XMLElement.prototype,'namespaceURI',{
get:function get(){
return'';
}});


Object.defineProperty(XMLElement.prototype,'prefix',{
get:function get(){
return'';
}});


Object.defineProperty(XMLElement.prototype,'localName',{
get:function get(){
return this.name;
}});


Object.defineProperty(XMLElement.prototype,'id',{
get:function get(){
throw new Error("This DOM method is not implemented."+this.debugInfo());
}});


Object.defineProperty(XMLElement.prototype,'className',{
get:function get(){
throw new Error("This DOM method is not implemented."+this.debugInfo());
}});


Object.defineProperty(XMLElement.prototype,'classList',{
get:function get(){
throw new Error("This DOM method is not implemented."+this.debugInfo());
}});


Object.defineProperty(XMLElement.prototype,'attributes',{
get:function get(){
if(!this.attributeMap||!this.attributeMap.nodes){
this.attributeMap=new XMLNamedNodeMap(this.attribs);
}
return this.attributeMap;
}});


XMLElement.prototype.clone=function(){
var att,attName,clonedSelf,ref1;
clonedSelf=Object.create(this);
if(clonedSelf.isRoot){
clonedSelf.documentObject=null;
}
clonedSelf.attribs={};
ref1=this.attribs;
for(attName in ref1){
if(!hasProp.call(ref1,attName))continue;
att=ref1[attName];
clonedSelf.attribs[attName]=att.clone();
}
clonedSelf.children=[];
this.children.forEach(function(child){
var clonedChild;
clonedChild=child.clone();
clonedChild.parent=clonedSelf;
return clonedSelf.children.push(clonedChild);
});
return clonedSelf;
};

XMLElement.prototype.attribute=function(name,value){
var attName,attValue;
if(name!=null){
name=getValue(name);
}
if(isObject(name)){
for(attName in name){
if(!hasProp.call(name,attName))continue;
attValue=name[attName];
this.attribute(attName,attValue);
}
}else{
if(isFunction(value)){
value=value.apply();
}
if(this.options.keepNullAttributes&&value==null){
this.attribs[name]=new XMLAttribute(this,name,"");
}else if(value!=null){
this.attribs[name]=new XMLAttribute(this,name,value);
}
}
return this;
};

XMLElement.prototype.removeAttribute=function(name){
var attName,j,len;
if(name==null){
throw new Error("Missing attribute name. "+this.debugInfo());
}
name=getValue(name);
if(Array.isArray(name)){
for(j=0,len=name.length;j<len;j++){
attName=name[j];
delete this.attribs[attName];
}
}else{
delete this.attribs[name];
}
return this;
};

XMLElement.prototype.toString=function(options){
return this.options.writer.element(this,this.options.writer.filterOptions(options));
};

XMLElement.prototype.att=function(name,value){
return this.attribute(name,value);
};

XMLElement.prototype.a=function(name,value){
return this.attribute(name,value);
};

XMLElement.prototype.getAttribute=function(name){
if(this.attribs.hasOwnProperty(name)){
return this.attribs[name].value;
}else{
return null;
}
};

XMLElement.prototype.setAttribute=function(name,value){
throw new Error("This DOM method is not implemented."+this.debugInfo());
};

XMLElement.prototype.getAttributeNode=function(name){
if(this.attribs.hasOwnProperty(name)){
return this.attribs[name];
}else{
return null;
}
};

XMLElement.prototype.setAttributeNode=function(newAttr){
throw new Error("This DOM method is not implemented."+this.debugInfo());
};

XMLElement.prototype.removeAttributeNode=function(oldAttr){
throw new Error("This DOM method is not implemented."+this.debugInfo());
};

XMLElement.prototype.getElementsByTagName=function(name){
throw new Error("This DOM method is not implemented."+this.debugInfo());
};

XMLElement.prototype.getAttributeNS=function(namespaceURI,localName){
throw new Error("This DOM method is not implemented."+this.debugInfo());
};

XMLElement.prototype.setAttributeNS=function(namespaceURI,qualifiedName,value){
throw new Error("This DOM method is not implemented."+this.debugInfo());
};

XMLElement.prototype.removeAttributeNS=function(namespaceURI,localName){
throw new Error("This DOM method is not implemented."+this.debugInfo());
};

XMLElement.prototype.getAttributeNodeNS=function(namespaceURI,localName){
throw new Error("This DOM method is not implemented."+this.debugInfo());
};

XMLElement.prototype.setAttributeNodeNS=function(newAttr){
throw new Error("This DOM method is not implemented."+this.debugInfo());
};

XMLElement.prototype.getElementsByTagNameNS=function(namespaceURI,localName){
throw new Error("This DOM method is not implemented."+this.debugInfo());
};

XMLElement.prototype.hasAttribute=function(name){
return this.attribs.hasOwnProperty(name);
};

XMLElement.prototype.hasAttributeNS=function(namespaceURI,localName){
throw new Error("This DOM method is not implemented."+this.debugInfo());
};

XMLElement.prototype.setIdAttribute=function(name,isId){
if(this.attribs.hasOwnProperty(name)){
return this.attribs[name].isId;
}else{
return isId;
}
};

XMLElement.prototype.setIdAttributeNS=function(namespaceURI,localName,isId){
throw new Error("This DOM method is not implemented."+this.debugInfo());
};

XMLElement.prototype.setIdAttributeNode=function(idAttr,isId){
throw new Error("This DOM method is not implemented."+this.debugInfo());
};

XMLElement.prototype.getElementsByTagName=function(tagname){
throw new Error("This DOM method is not implemented."+this.debugInfo());
};

XMLElement.prototype.getElementsByTagNameNS=function(namespaceURI,localName){
throw new Error("This DOM method is not implemented."+this.debugInfo());
};

XMLElement.prototype.getElementsByClassName=function(classNames){
throw new Error("This DOM method is not implemented."+this.debugInfo());
};

XMLElement.prototype.isEqualNode=function(node){
var i,j,ref1;
if(!XMLElement.__super__.isEqualNode.apply(this,arguments).isEqualNode(node)){
return false;
}
if(node.namespaceURI!==this.namespaceURI){
return false;
}
if(node.prefix!==this.prefix){
return false;
}
if(node.localName!==this.localName){
return false;
}
if(node.attribs.length!==this.attribs.length){
return false;
}
for(i=j=0,ref1=this.attribs.length-1;0<=ref1?j<=ref1:j>=ref1;i=0<=ref1?++j:--j){
if(!this.attribs[i].isEqualNode(node.attribs[i])){
return false;
}
}
return true;
};

return XMLElement;

}(XMLNode);

}).call(this);

},{"./NodeType":353,"./Utility":354,"./XMLAttribute":356,"./XMLNamedNodeMap":374,"./XMLNode":375}],374:[function(require,module,exports){
// Generated by CoffeeScript 1.12.7
(function(){
var XMLNamedNodeMap;

module.exports=XMLNamedNodeMap=function(){
function XMLNamedNodeMap(nodes){
this.nodes=nodes;
}

Object.defineProperty(XMLNamedNodeMap.prototype,'length',{
get:function get(){
return Object.keys(this.nodes).length||0;
}});


XMLNamedNodeMap.prototype.clone=function(){
return this.nodes=null;
};

XMLNamedNodeMap.prototype.getNamedItem=function(name){
return this.nodes[name];
};

XMLNamedNodeMap.prototype.setNamedItem=function(node){
var oldNode;
oldNode=this.nodes[node.nodeName];
this.nodes[node.nodeName]=node;
return oldNode||null;
};

XMLNamedNodeMap.prototype.removeNamedItem=function(name){
var oldNode;
oldNode=this.nodes[name];
delete this.nodes[name];
return oldNode||null;
};

XMLNamedNodeMap.prototype.item=function(index){
return this.nodes[Object.keys(this.nodes)[index]]||null;
};

XMLNamedNodeMap.prototype.getNamedItemNS=function(namespaceURI,localName){
throw new Error("This DOM method is not implemented.");
};

XMLNamedNodeMap.prototype.setNamedItemNS=function(node){
throw new Error("This DOM method is not implemented.");
};

XMLNamedNodeMap.prototype.removeNamedItemNS=function(namespaceURI,localName){
throw new Error("This DOM method is not implemented.");
};

return XMLNamedNodeMap;

}();

}).call(this);

},{}],375:[function(require,module,exports){
// Generated by CoffeeScript 1.12.7
(function(){
var DocumentPosition,NodeType,XMLCData,XMLComment,XMLDeclaration,XMLDocType,XMLDummy,XMLElement,XMLNamedNodeMap,XMLNode,XMLNodeList,XMLProcessingInstruction,XMLRaw,XMLText,getValue,isEmpty,isFunction,isObject,ref1,
hasProp={}.hasOwnProperty;

ref1=require('./Utility'),isObject=ref1.isObject,isFunction=ref1.isFunction,isEmpty=ref1.isEmpty,getValue=ref1.getValue;

XMLElement=null;

XMLCData=null;

XMLComment=null;

XMLDeclaration=null;

XMLDocType=null;

XMLRaw=null;

XMLText=null;

XMLProcessingInstruction=null;

XMLDummy=null;

NodeType=null;

XMLNodeList=null;

XMLNamedNodeMap=null;

DocumentPosition=null;

module.exports=XMLNode=function(){
function XMLNode(parent1){
this.parent=parent1;
if(this.parent){
this.options=this.parent.options;
this.stringify=this.parent.stringify;
}
this.value=null;
this.children=[];
this.baseURI=null;
if(!XMLElement){
XMLElement=require('./XMLElement');
XMLCData=require('./XMLCData');
XMLComment=require('./XMLComment');
XMLDeclaration=require('./XMLDeclaration');
XMLDocType=require('./XMLDocType');
XMLRaw=require('./XMLRaw');
XMLText=require('./XMLText');
XMLProcessingInstruction=require('./XMLProcessingInstruction');
XMLDummy=require('./XMLDummy');
NodeType=require('./NodeType');
XMLNodeList=require('./XMLNodeList');
XMLNamedNodeMap=require('./XMLNamedNodeMap');
DocumentPosition=require('./DocumentPosition');
}
}

Object.defineProperty(XMLNode.prototype,'nodeName',{
get:function get(){
return this.name;
}});


Object.defineProperty(XMLNode.prototype,'nodeType',{
get:function get(){
return this.type;
}});


Object.defineProperty(XMLNode.prototype,'nodeValue',{
get:function get(){
return this.value;
}});


Object.defineProperty(XMLNode.prototype,'parentNode',{
get:function get(){
return this.parent;
}});


Object.defineProperty(XMLNode.prototype,'childNodes',{
get:function get(){
if(!this.childNodeList||!this.childNodeList.nodes){
this.childNodeList=new XMLNodeList(this.children);
}
return this.childNodeList;
}});


Object.defineProperty(XMLNode.prototype,'firstChild',{
get:function get(){
return this.children[0]||null;
}});


Object.defineProperty(XMLNode.prototype,'lastChild',{
get:function get(){
return this.children[this.children.length-1]||null;
}});


Object.defineProperty(XMLNode.prototype,'previousSibling',{
get:function get(){
var i;
i=this.parent.children.indexOf(this);
return this.parent.children[i-1]||null;
}});


Object.defineProperty(XMLNode.prototype,'nextSibling',{
get:function get(){
var i;
i=this.parent.children.indexOf(this);
return this.parent.children[i+1]||null;
}});


Object.defineProperty(XMLNode.prototype,'ownerDocument',{
get:function get(){
return this.document()||null;
}});


Object.defineProperty(XMLNode.prototype,'textContent',{
get:function get(){
var child,j,len,ref2,str;
if(this.nodeType===NodeType.Element||this.nodeType===NodeType.DocumentFragment){
str='';
ref2=this.children;
for(j=0,len=ref2.length;j<len;j++){
child=ref2[j];
if(child.textContent){
str+=child.textContent;
}
}
return str;
}else{
return null;
}
},
set:function set(value){
throw new Error("This DOM method is not implemented."+this.debugInfo());
}});


XMLNode.prototype.setParent=function(parent){
var child,j,len,ref2,results;
this.parent=parent;
if(parent){
this.options=parent.options;
this.stringify=parent.stringify;
}
ref2=this.children;
results=[];
for(j=0,len=ref2.length;j<len;j++){
child=ref2[j];
results.push(child.setParent(this));
}
return results;
};

XMLNode.prototype.element=function(name,attributes,text){
var childNode,item,j,k,key,lastChild,len,len1,ref2,ref3,val;
lastChild=null;
if(attributes===null&&text==null){
ref2=[{},null],attributes=ref2[0],text=ref2[1];
}
if(attributes==null){
attributes={};
}
attributes=getValue(attributes);
if(!isObject(attributes)){
ref3=[attributes,text],text=ref3[0],attributes=ref3[1];
}
if(name!=null){
name=getValue(name);
}
if(Array.isArray(name)){
for(j=0,len=name.length;j<len;j++){
item=name[j];
lastChild=this.element(item);
}
}else if(isFunction(name)){
lastChild=this.element(name.apply());
}else if(isObject(name)){
for(key in name){
if(!hasProp.call(name,key))continue;
val=name[key];
if(isFunction(val)){
val=val.apply();
}
if(!this.options.ignoreDecorators&&this.stringify.convertAttKey&&key.indexOf(this.stringify.convertAttKey)===0){
lastChild=this.attribute(key.substr(this.stringify.convertAttKey.length),val);
}else if(!this.options.separateArrayItems&&Array.isArray(val)&&isEmpty(val)){
lastChild=this.dummy();
}else if(isObject(val)&&isEmpty(val)){
lastChild=this.element(key);
}else if(!this.options.keepNullNodes&&val==null){
lastChild=this.dummy();
}else if(!this.options.separateArrayItems&&Array.isArray(val)){
for(k=0,len1=val.length;k<len1;k++){
item=val[k];
childNode={};
childNode[key]=item;
lastChild=this.element(childNode);
}
}else if(isObject(val)){
if(!this.options.ignoreDecorators&&this.stringify.convertTextKey&&key.indexOf(this.stringify.convertTextKey)===0){
lastChild=this.element(val);
}else{
lastChild=this.element(key);
lastChild.element(val);
}
}else{
lastChild=this.element(key,val);
}
}
}else if(!this.options.keepNullNodes&&text===null){
lastChild=this.dummy();
}else{
if(!this.options.ignoreDecorators&&this.stringify.convertTextKey&&name.indexOf(this.stringify.convertTextKey)===0){
lastChild=this.text(text);
}else if(!this.options.ignoreDecorators&&this.stringify.convertCDataKey&&name.indexOf(this.stringify.convertCDataKey)===0){
lastChild=this.cdata(text);
}else if(!this.options.ignoreDecorators&&this.stringify.convertCommentKey&&name.indexOf(this.stringify.convertCommentKey)===0){
lastChild=this.comment(text);
}else if(!this.options.ignoreDecorators&&this.stringify.convertRawKey&&name.indexOf(this.stringify.convertRawKey)===0){
lastChild=this.raw(text);
}else if(!this.options.ignoreDecorators&&this.stringify.convertPIKey&&name.indexOf(this.stringify.convertPIKey)===0){
lastChild=this.instruction(name.substr(this.stringify.convertPIKey.length),text);
}else{
lastChild=this.node(name,attributes,text);
}
}
if(lastChild==null){
throw new Error("Could not create any elements with: "+name+". "+this.debugInfo());
}
return lastChild;
};

XMLNode.prototype.insertBefore=function(name,attributes,text){
var child,i,newChild,refChild,removed;
if(name!=null?name.type:void 0){
newChild=name;
refChild=attributes;
newChild.setParent(this);
if(refChild){
i=children.indexOf(refChild);
removed=children.splice(i);
children.push(newChild);
Array.prototype.push.apply(children,removed);
}else{
children.push(newChild);
}
return newChild;
}else{
if(this.isRoot){
throw new Error("Cannot insert elements at root level. "+this.debugInfo(name));
}
i=this.parent.children.indexOf(this);
removed=this.parent.children.splice(i);
child=this.parent.element(name,attributes,text);
Array.prototype.push.apply(this.parent.children,removed);
return child;
}
};

XMLNode.prototype.insertAfter=function(name,attributes,text){
var child,i,removed;
if(this.isRoot){
throw new Error("Cannot insert elements at root level. "+this.debugInfo(name));
}
i=this.parent.children.indexOf(this);
removed=this.parent.children.splice(i+1);
child=this.parent.element(name,attributes,text);
Array.prototype.push.apply(this.parent.children,removed);
return child;
};

XMLNode.prototype.remove=function(){
var i,ref2;
if(this.isRoot){
throw new Error("Cannot remove the root element. "+this.debugInfo());
}
i=this.parent.children.indexOf(this);
[].splice.apply(this.parent.children,[i,i-i+1].concat(ref2=[])),ref2;
return this.parent;
};

XMLNode.prototype.node=function(name,attributes,text){
var child,ref2;
if(name!=null){
name=getValue(name);
}
attributes||(attributes={});
attributes=getValue(attributes);
if(!isObject(attributes)){
ref2=[attributes,text],text=ref2[0],attributes=ref2[1];
}
child=new XMLElement(this,name,attributes);
if(text!=null){
child.text(text);
}
this.children.push(child);
return child;
};

XMLNode.prototype.text=function(value){
var child;
if(isObject(value)){
this.element(value);
}
child=new XMLText(this,value);
this.children.push(child);
return this;
};

XMLNode.prototype.cdata=function(value){
var child;
child=new XMLCData(this,value);
this.children.push(child);
return this;
};

XMLNode.prototype.comment=function(value){
var child;
child=new XMLComment(this,value);
this.children.push(child);
return this;
};

XMLNode.prototype.commentBefore=function(value){
var child,i,removed;
i=this.parent.children.indexOf(this);
removed=this.parent.children.splice(i);
child=this.parent.comment(value);
Array.prototype.push.apply(this.parent.children,removed);
return this;
};

XMLNode.prototype.commentAfter=function(value){
var child,i,removed;
i=this.parent.children.indexOf(this);
removed=this.parent.children.splice(i+1);
child=this.parent.comment(value);
Array.prototype.push.apply(this.parent.children,removed);
return this;
};

XMLNode.prototype.raw=function(value){
var child;
child=new XMLRaw(this,value);
this.children.push(child);
return this;
};

XMLNode.prototype.dummy=function(){
var child;
child=new XMLDummy(this);
return child;
};

XMLNode.prototype.instruction=function(target,value){
var insTarget,insValue,instruction,j,len;
if(target!=null){
target=getValue(target);
}
if(value!=null){
value=getValue(value);
}
if(Array.isArray(target)){
for(j=0,len=target.length;j<len;j++){
insTarget=target[j];
this.instruction(insTarget);
}
}else if(isObject(target)){
for(insTarget in target){
if(!hasProp.call(target,insTarget))continue;
insValue=target[insTarget];
this.instruction(insTarget,insValue);
}
}else{
if(isFunction(value)){
value=value.apply();
}
instruction=new XMLProcessingInstruction(this,target,value);
this.children.push(instruction);
}
return this;
};

XMLNode.prototype.instructionBefore=function(target,value){
var child,i,removed;
i=this.parent.children.indexOf(this);
removed=this.parent.children.splice(i);
child=this.parent.instruction(target,value);
Array.prototype.push.apply(this.parent.children,removed);
return this;
};

XMLNode.prototype.instructionAfter=function(target,value){
var child,i,removed;
i=this.parent.children.indexOf(this);
removed=this.parent.children.splice(i+1);
child=this.parent.instruction(target,value);
Array.prototype.push.apply(this.parent.children,removed);
return this;
};

XMLNode.prototype.declaration=function(version,encoding,standalone){
var doc,xmldec;
doc=this.document();
xmldec=new XMLDeclaration(doc,version,encoding,standalone);
if(doc.children.length===0){
doc.children.unshift(xmldec);
}else if(doc.children[0].type===NodeType.Declaration){
doc.children[0]=xmldec;
}else{
doc.children.unshift(xmldec);
}
return doc.root()||doc;
};

XMLNode.prototype.dtd=function(pubID,sysID){
var child,doc,doctype,i,j,k,len,len1,ref2,ref3;
doc=this.document();
doctype=new XMLDocType(doc,pubID,sysID);
ref2=doc.children;
for(i=j=0,len=ref2.length;j<len;i=++j){
child=ref2[i];
if(child.type===NodeType.DocType){
doc.children[i]=doctype;
return doctype;
}
}
ref3=doc.children;
for(i=k=0,len1=ref3.length;k<len1;i=++k){
child=ref3[i];
if(child.isRoot){
doc.children.splice(i,0,doctype);
return doctype;
}
}
doc.children.push(doctype);
return doctype;
};

XMLNode.prototype.up=function(){
if(this.isRoot){
throw new Error("The root node has no parent. Use doc() if you need to get the document object.");
}
return this.parent;
};

XMLNode.prototype.root=function(){
var node;
node=this;
while(node){
if(node.type===NodeType.Document){
return node.rootObject;
}else if(node.isRoot){
return node;
}else{
node=node.parent;
}
}
};

XMLNode.prototype.document=function(){
var node;
node=this;
while(node){
if(node.type===NodeType.Document){
return node;
}else{
node=node.parent;
}
}
};

XMLNode.prototype.end=function(options){
return this.document().end(options);
};

XMLNode.prototype.prev=function(){
var i;
i=this.parent.children.indexOf(this);
if(i<1){
throw new Error("Already at the first node. "+this.debugInfo());
}
return this.parent.children[i-1];
};

XMLNode.prototype.next=function(){
var i;
i=this.parent.children.indexOf(this);
if(i===-1||i===this.parent.children.length-1){
throw new Error("Already at the last node. "+this.debugInfo());
}
return this.parent.children[i+1];
};

XMLNode.prototype.importDocument=function(doc){
var clonedRoot;
clonedRoot=doc.root().clone();
clonedRoot.parent=this;
clonedRoot.isRoot=false;
this.children.push(clonedRoot);
return this;
};

XMLNode.prototype.debugInfo=function(name){
var ref2,ref3;
name=name||this.name;
if(name==null&&!((ref2=this.parent)!=null?ref2.name:void 0)){
return"";
}else if(name==null){
return"parent: <"+this.parent.name+">";
}else if(!((ref3=this.parent)!=null?ref3.name:void 0)){
return"node: <"+name+">";
}else{
return"node: <"+name+">, parent: <"+this.parent.name+">";
}
};

XMLNode.prototype.ele=function(name,attributes,text){
return this.element(name,attributes,text);
};

XMLNode.prototype.nod=function(name,attributes,text){
return this.node(name,attributes,text);
};

XMLNode.prototype.txt=function(value){
return this.text(value);
};

XMLNode.prototype.dat=function(value){
return this.cdata(value);
};

XMLNode.prototype.com=function(value){
return this.comment(value);
};

XMLNode.prototype.ins=function(target,value){
return this.instruction(target,value);
};

XMLNode.prototype.doc=function(){
return this.document();
};

XMLNode.prototype.dec=function(version,encoding,standalone){
return this.declaration(version,encoding,standalone);
};

XMLNode.prototype.e=function(name,attributes,text){
return this.element(name,attributes,text);
};

XMLNode.prototype.n=function(name,attributes,text){
return this.node(name,attributes,text);
};

XMLNode.prototype.t=function(value){
return this.text(value);
};

XMLNode.prototype.d=function(value){
return this.cdata(value);
};

XMLNode.prototype.c=function(value){
return this.comment(value);
};

XMLNode.prototype.r=function(value){
return this.raw(value);
};

XMLNode.prototype.i=function(target,value){
return this.instruction(target,value);
};

XMLNode.prototype.u=function(){
return this.up();
};

XMLNode.prototype.importXMLBuilder=function(doc){
return this.importDocument(doc);
};

XMLNode.prototype.replaceChild=function(newChild,oldChild){
throw new Error("This DOM method is not implemented."+this.debugInfo());
};

XMLNode.prototype.removeChild=function(oldChild){
throw new Error("This DOM method is not implemented."+this.debugInfo());
};

XMLNode.prototype.appendChild=function(newChild){
throw new Error("This DOM method is not implemented."+this.debugInfo());
};

XMLNode.prototype.hasChildNodes=function(){
return this.children.length!==0;
};

XMLNode.prototype.cloneNode=function(deep){
throw new Error("This DOM method is not implemented."+this.debugInfo());
};

XMLNode.prototype.normalize=function(){
throw new Error("This DOM method is not implemented."+this.debugInfo());
};

XMLNode.prototype.isSupported=function(feature,version){
return true;
};

XMLNode.prototype.hasAttributes=function(){
return this.attribs.length!==0;
};

XMLNode.prototype.compareDocumentPosition=function(other){
var ref,res;
ref=this;
if(ref===other){
return 0;
}else if(this.document()!==other.document()){
res=DocumentPosition.Disconnected|DocumentPosition.ImplementationSpecific;
if(Math.random()<0.5){
res|=DocumentPosition.Preceding;
}else{
res|=DocumentPosition.Following;
}
return res;
}else if(ref.isAncestor(other)){
return DocumentPosition.Contains|DocumentPosition.Preceding;
}else if(ref.isDescendant(other)){
return DocumentPosition.Contains|DocumentPosition.Following;
}else if(ref.isPreceding(other)){
return DocumentPosition.Preceding;
}else{
return DocumentPosition.Following;
}
};

XMLNode.prototype.isSameNode=function(other){
throw new Error("This DOM method is not implemented."+this.debugInfo());
};

XMLNode.prototype.lookupPrefix=function(namespaceURI){
throw new Error("This DOM method is not implemented."+this.debugInfo());
};

XMLNode.prototype.isDefaultNamespace=function(namespaceURI){
throw new Error("This DOM method is not implemented."+this.debugInfo());
};

XMLNode.prototype.lookupNamespaceURI=function(prefix){
throw new Error("This DOM method is not implemented."+this.debugInfo());
};

XMLNode.prototype.isEqualNode=function(node){
var i,j,ref2;
if(node.nodeType!==this.nodeType){
return false;
}
if(node.children.length!==this.children.length){
return false;
}
for(i=j=0,ref2=this.children.length-1;0<=ref2?j<=ref2:j>=ref2;i=0<=ref2?++j:--j){
if(!this.children[i].isEqualNode(node.children[i])){
return false;
}
}
return true;
};

XMLNode.prototype.getFeature=function(feature,version){
throw new Error("This DOM method is not implemented."+this.debugInfo());
};

XMLNode.prototype.setUserData=function(key,data,handler){
throw new Error("This DOM method is not implemented."+this.debugInfo());
};

XMLNode.prototype.getUserData=function(key){
throw new Error("This DOM method is not implemented."+this.debugInfo());
};

XMLNode.prototype.contains=function(other){
if(!other){
return false;
}
return other===this||this.isDescendant(other);
};

XMLNode.prototype.isDescendant=function(node){
var child,isDescendantChild,j,len,ref2;
ref2=this.children;
for(j=0,len=ref2.length;j<len;j++){
child=ref2[j];
if(node===child){
return true;
}
isDescendantChild=child.isDescendant(node);
if(isDescendantChild){
return true;
}
}
return false;
};

XMLNode.prototype.isAncestor=function(node){
return node.isDescendant(this);
};

XMLNode.prototype.isPreceding=function(node){
var nodePos,thisPos;
nodePos=this.treePosition(node);
thisPos=this.treePosition(this);
if(nodePos===-1||thisPos===-1){
return false;
}else{
return nodePos<thisPos;
}
};

XMLNode.prototype.isFollowing=function(node){
var nodePos,thisPos;
nodePos=this.treePosition(node);
thisPos=this.treePosition(this);
if(nodePos===-1||thisPos===-1){
return false;
}else{
return nodePos>thisPos;
}
};

XMLNode.prototype.treePosition=function(node){
var found,pos;
pos=0;
found=false;
this.foreachTreeNode(this.document(),function(childNode){
pos++;
if(!found&&childNode===node){
return found=true;
}
});
if(found){
return pos;
}else{
return-1;
}
};

XMLNode.prototype.foreachTreeNode=function(node,func){
var child,j,len,ref2,res;
node||(node=this.document());
ref2=node.children;
for(j=0,len=ref2.length;j<len;j++){
child=ref2[j];
if(res=func(child)){
return res;
}else{
res=this.foreachTreeNode(child,func);
if(res){
return res;
}
}
}
};

return XMLNode;

}();

}).call(this);

},{"./DocumentPosition":352,"./NodeType":353,"./Utility":354,"./XMLCData":357,"./XMLComment":359,"./XMLDeclaration":368,"./XMLDocType":369,"./XMLDummy":372,"./XMLElement":373,"./XMLNamedNodeMap":374,"./XMLNodeList":376,"./XMLProcessingInstruction":377,"./XMLRaw":378,"./XMLText":382}],376:[function(require,module,exports){
// Generated by CoffeeScript 1.12.7
(function(){
var XMLNodeList;

module.exports=XMLNodeList=function(){
function XMLNodeList(nodes){
this.nodes=nodes;
}

Object.defineProperty(XMLNodeList.prototype,'length',{
get:function get(){
return this.nodes.length||0;
}});


XMLNodeList.prototype.clone=function(){
return this.nodes=null;
};

XMLNodeList.prototype.item=function(index){
return this.nodes[index]||null;
};

return XMLNodeList;

}();

}).call(this);

},{}],377:[function(require,module,exports){
// Generated by CoffeeScript 1.12.7
(function(){
var NodeType,XMLCharacterData,XMLProcessingInstruction,
extend=function extend(child,parent){for(var key in parent){if(hasProp.call(parent,key))child[key]=parent[key];}function ctor(){this.constructor=child;}ctor.prototype=parent.prototype;child.prototype=new ctor();child.__super__=parent.prototype;return child;},
hasProp={}.hasOwnProperty;

NodeType=require('./NodeType');

XMLCharacterData=require('./XMLCharacterData');

module.exports=XMLProcessingInstruction=function(superClass){
extend(XMLProcessingInstruction,superClass);

function XMLProcessingInstruction(parent,target,value){
XMLProcessingInstruction.__super__.constructor.call(this,parent);
if(target==null){
throw new Error("Missing instruction target. "+this.debugInfo());
}
this.type=NodeType.ProcessingInstruction;
this.target=this.stringify.insTarget(target);
this.name=this.target;
if(value){
this.value=this.stringify.insValue(value);
}
}

XMLProcessingInstruction.prototype.clone=function(){
return Object.create(this);
};

XMLProcessingInstruction.prototype.toString=function(options){
return this.options.writer.processingInstruction(this,this.options.writer.filterOptions(options));
};

XMLProcessingInstruction.prototype.isEqualNode=function(node){
if(!XMLProcessingInstruction.__super__.isEqualNode.apply(this,arguments).isEqualNode(node)){
return false;
}
if(node.target!==this.target){
return false;
}
return true;
};

return XMLProcessingInstruction;

}(XMLCharacterData);

}).call(this);

},{"./NodeType":353,"./XMLCharacterData":358}],378:[function(require,module,exports){
// Generated by CoffeeScript 1.12.7
(function(){
var NodeType,XMLNode,XMLRaw,
extend=function extend(child,parent){for(var key in parent){if(hasProp.call(parent,key))child[key]=parent[key];}function ctor(){this.constructor=child;}ctor.prototype=parent.prototype;child.prototype=new ctor();child.__super__=parent.prototype;return child;},
hasProp={}.hasOwnProperty;

NodeType=require('./NodeType');

XMLNode=require('./XMLNode');

module.exports=XMLRaw=function(superClass){
extend(XMLRaw,superClass);

function XMLRaw(parent,text){
XMLRaw.__super__.constructor.call(this,parent);
if(text==null){
throw new Error("Missing raw text. "+this.debugInfo());
}
this.type=NodeType.Raw;
this.value=this.stringify.raw(text);
}

XMLRaw.prototype.clone=function(){
return Object.create(this);
};

XMLRaw.prototype.toString=function(options){
return this.options.writer.raw(this,this.options.writer.filterOptions(options));
};

return XMLRaw;

}(XMLNode);

}).call(this);

},{"./NodeType":353,"./XMLNode":375}],379:[function(require,module,exports){
// Generated by CoffeeScript 1.12.7
(function(){
var NodeType,WriterState,XMLStreamWriter,XMLWriterBase,
extend=function extend(child,parent){for(var key in parent){if(hasProp.call(parent,key))child[key]=parent[key];}function ctor(){this.constructor=child;}ctor.prototype=parent.prototype;child.prototype=new ctor();child.__super__=parent.prototype;return child;},
hasProp={}.hasOwnProperty;

NodeType=require('./NodeType');

XMLWriterBase=require('./XMLWriterBase');

WriterState=require('./WriterState');

module.exports=XMLStreamWriter=function(superClass){
extend(XMLStreamWriter,superClass);

function XMLStreamWriter(stream,options){
this.stream=stream;
XMLStreamWriter.__super__.constructor.call(this,options);
}

XMLStreamWriter.prototype.endline=function(node,options,level){
if(node.isLastRootNode&&options.state===WriterState.CloseTag){
return'';
}else{
return XMLStreamWriter.__super__.endline.call(this,node,options,level);
}
};

XMLStreamWriter.prototype.document=function(doc,options){
var child,i,j,k,len,len1,ref,ref1,results;
ref=doc.children;
for(i=j=0,len=ref.length;j<len;i=++j){
child=ref[i];
child.isLastRootNode=i===doc.children.length-1;
}
options=this.filterOptions(options);
ref1=doc.children;
results=[];
for(k=0,len1=ref1.length;k<len1;k++){
child=ref1[k];
results.push(this.writeChildNode(child,options,0));
}
return results;
};

XMLStreamWriter.prototype.attribute=function(att,options,level){
return this.stream.write(XMLStreamWriter.__super__.attribute.call(this,att,options,level));
};

XMLStreamWriter.prototype.cdata=function(node,options,level){
return this.stream.write(XMLStreamWriter.__super__.cdata.call(this,node,options,level));
};

XMLStreamWriter.prototype.comment=function(node,options,level){
return this.stream.write(XMLStreamWriter.__super__.comment.call(this,node,options,level));
};

XMLStreamWriter.prototype.declaration=function(node,options,level){
return this.stream.write(XMLStreamWriter.__super__.declaration.call(this,node,options,level));
};

XMLStreamWriter.prototype.docType=function(node,options,level){
var child,j,len,ref;
level||(level=0);
this.openNode(node,options,level);
options.state=WriterState.OpenTag;
this.stream.write(this.indent(node,options,level));
this.stream.write('<!DOCTYPE '+node.root().name);
if(node.pubID&&node.sysID){
this.stream.write(' PUBLIC "'+node.pubID+'" "'+node.sysID+'"');
}else if(node.sysID){
this.stream.write(' SYSTEM "'+node.sysID+'"');
}
if(node.children.length>0){
this.stream.write(' [');
this.stream.write(this.endline(node,options,level));
options.state=WriterState.InsideTag;
ref=node.children;
for(j=0,len=ref.length;j<len;j++){
child=ref[j];
this.writeChildNode(child,options,level+1);
}
options.state=WriterState.CloseTag;
this.stream.write(']');
}
options.state=WriterState.CloseTag;
this.stream.write(options.spaceBeforeSlash+'>');
this.stream.write(this.endline(node,options,level));
options.state=WriterState.None;
return this.closeNode(node,options,level);
};

XMLStreamWriter.prototype.element=function(node,options,level){
var att,child,childNodeCount,firstChildNode,j,len,name,prettySuppressed,ref,ref1;
level||(level=0);
this.openNode(node,options,level);
options.state=WriterState.OpenTag;
this.stream.write(this.indent(node,options,level)+'<'+node.name);
ref=node.attribs;
for(name in ref){
if(!hasProp.call(ref,name))continue;
att=ref[name];
this.attribute(att,options,level);
}
childNodeCount=node.children.length;
firstChildNode=childNodeCount===0?null:node.children[0];
if(childNodeCount===0||node.children.every(function(e){
return(e.type===NodeType.Text||e.type===NodeType.Raw)&&e.value==='';
})){
if(options.allowEmpty){
this.stream.write('>');
options.state=WriterState.CloseTag;
this.stream.write('</'+node.name+'>');
}else{
options.state=WriterState.CloseTag;
this.stream.write(options.spaceBeforeSlash+'/>');
}
}else if(options.pretty&&childNodeCount===1&&(firstChildNode.type===NodeType.Text||firstChildNode.type===NodeType.Raw)&&firstChildNode.value!=null){
this.stream.write('>');
options.state=WriterState.InsideTag;
options.suppressPrettyCount++;
prettySuppressed=true;
this.writeChildNode(firstChildNode,options,level+1);
options.suppressPrettyCount--;
prettySuppressed=false;
options.state=WriterState.CloseTag;
this.stream.write('</'+node.name+'>');
}else{
this.stream.write('>'+this.endline(node,options,level));
options.state=WriterState.InsideTag;
ref1=node.children;
for(j=0,len=ref1.length;j<len;j++){
child=ref1[j];
this.writeChildNode(child,options,level+1);
}
options.state=WriterState.CloseTag;
this.stream.write(this.indent(node,options,level)+'</'+node.name+'>');
}
this.stream.write(this.endline(node,options,level));
options.state=WriterState.None;
return this.closeNode(node,options,level);
};

XMLStreamWriter.prototype.processingInstruction=function(node,options,level){
return this.stream.write(XMLStreamWriter.__super__.processingInstruction.call(this,node,options,level));
};

XMLStreamWriter.prototype.raw=function(node,options,level){
return this.stream.write(XMLStreamWriter.__super__.raw.call(this,node,options,level));
};

XMLStreamWriter.prototype.text=function(node,options,level){
return this.stream.write(XMLStreamWriter.__super__.text.call(this,node,options,level));
};

XMLStreamWriter.prototype.dtdAttList=function(node,options,level){
return this.stream.write(XMLStreamWriter.__super__.dtdAttList.call(this,node,options,level));
};

XMLStreamWriter.prototype.dtdElement=function(node,options,level){
return this.stream.write(XMLStreamWriter.__super__.dtdElement.call(this,node,options,level));
};

XMLStreamWriter.prototype.dtdEntity=function(node,options,level){
return this.stream.write(XMLStreamWriter.__super__.dtdEntity.call(this,node,options,level));
};

XMLStreamWriter.prototype.dtdNotation=function(node,options,level){
return this.stream.write(XMLStreamWriter.__super__.dtdNotation.call(this,node,options,level));
};

return XMLStreamWriter;

}(XMLWriterBase);

}).call(this);

},{"./NodeType":353,"./WriterState":355,"./XMLWriterBase":383}],380:[function(require,module,exports){
// Generated by CoffeeScript 1.12.7
(function(){
var XMLStringWriter,XMLWriterBase,
extend=function extend(child,parent){for(var key in parent){if(hasProp.call(parent,key))child[key]=parent[key];}function ctor(){this.constructor=child;}ctor.prototype=parent.prototype;child.prototype=new ctor();child.__super__=parent.prototype;return child;},
hasProp={}.hasOwnProperty;

XMLWriterBase=require('./XMLWriterBase');

module.exports=XMLStringWriter=function(superClass){
extend(XMLStringWriter,superClass);

function XMLStringWriter(options){
XMLStringWriter.__super__.constructor.call(this,options);
}

XMLStringWriter.prototype.document=function(doc,options){
var child,i,len,r,ref;
options=this.filterOptions(options);
r='';
ref=doc.children;
for(i=0,len=ref.length;i<len;i++){
child=ref[i];
r+=this.writeChildNode(child,options,0);
}
if(options.pretty&&r.slice(-options.newline.length)===options.newline){
r=r.slice(0,-options.newline.length);
}
return r;
};

return XMLStringWriter;

}(XMLWriterBase);

}).call(this);

},{"./XMLWriterBase":383}],381:[function(require,module,exports){
// Generated by CoffeeScript 1.12.7
(function(){
var XMLStringifier,
bind=function bind(fn,me){return function(){return fn.apply(me,arguments);};},
hasProp={}.hasOwnProperty;

module.exports=XMLStringifier=function(){
function XMLStringifier(options){
this.assertLegalName=bind(this.assertLegalName,this);
this.assertLegalChar=bind(this.assertLegalChar,this);
var key,ref,value;
options||(options={});
this.options=options;
if(!this.options.version){
this.options.version='1.0';
}
ref=options.stringify||{};
for(key in ref){
if(!hasProp.call(ref,key))continue;
value=ref[key];
this[key]=value;
}
}

XMLStringifier.prototype.name=function(val){
if(this.options.noValidation){
return val;
}
return this.assertLegalName(''+val||'');
};

XMLStringifier.prototype.text=function(val){
if(this.options.noValidation){
return val;
}
return this.assertLegalChar(this.textEscape(''+val||''));
};

XMLStringifier.prototype.cdata=function(val){
if(this.options.noValidation){
return val;
}
val=''+val||'';
val=val.replace(']]>',']]]]><![CDATA[>');
return this.assertLegalChar(val);
};

XMLStringifier.prototype.comment=function(val){
if(this.options.noValidation){
return val;
}
val=''+val||'';
if(val.match(/--/)){
throw new Error("Comment text cannot contain double-hypen: "+val);
}
return this.assertLegalChar(val);
};

XMLStringifier.prototype.raw=function(val){
if(this.options.noValidation){
return val;
}
return''+val||'';
};

XMLStringifier.prototype.attValue=function(val){
if(this.options.noValidation){
return val;
}
return this.assertLegalChar(this.attEscape(val=''+val||''));
};

XMLStringifier.prototype.insTarget=function(val){
if(this.options.noValidation){
return val;
}
return this.assertLegalChar(''+val||'');
};

XMLStringifier.prototype.insValue=function(val){
if(this.options.noValidation){
return val;
}
val=''+val||'';
if(val.match(/\?>/)){
throw new Error("Invalid processing instruction value: "+val);
}
return this.assertLegalChar(val);
};

XMLStringifier.prototype.xmlVersion=function(val){
if(this.options.noValidation){
return val;
}
val=''+val||'';
if(!val.match(/1\.[0-9]+/)){
throw new Error("Invalid version number: "+val);
}
return val;
};

XMLStringifier.prototype.xmlEncoding=function(val){
if(this.options.noValidation){
return val;
}
val=''+val||'';
if(!val.match(/^[A-Za-z](?:[A-Za-z0-9._-])*$/)){
throw new Error("Invalid encoding: "+val);
}
return this.assertLegalChar(val);
};

XMLStringifier.prototype.xmlStandalone=function(val){
if(this.options.noValidation){
return val;
}
if(val){
return"yes";
}else{
return"no";
}
};

XMLStringifier.prototype.dtdPubID=function(val){
if(this.options.noValidation){
return val;
}
return this.assertLegalChar(''+val||'');
};

XMLStringifier.prototype.dtdSysID=function(val){
if(this.options.noValidation){
return val;
}
return this.assertLegalChar(''+val||'');
};

XMLStringifier.prototype.dtdElementValue=function(val){
if(this.options.noValidation){
return val;
}
return this.assertLegalChar(''+val||'');
};

XMLStringifier.prototype.dtdAttType=function(val){
if(this.options.noValidation){
return val;
}
return this.assertLegalChar(''+val||'');
};

XMLStringifier.prototype.dtdAttDefault=function(val){
if(this.options.noValidation){
return val;
}
return this.assertLegalChar(''+val||'');
};

XMLStringifier.prototype.dtdEntityValue=function(val){
if(this.options.noValidation){
return val;
}
return this.assertLegalChar(''+val||'');
};

XMLStringifier.prototype.dtdNData=function(val){
if(this.options.noValidation){
return val;
}
return this.assertLegalChar(''+val||'');
};

XMLStringifier.prototype.convertAttKey='@';

XMLStringifier.prototype.convertPIKey='?';

XMLStringifier.prototype.convertTextKey='#text';

XMLStringifier.prototype.convertCDataKey='#cdata';

XMLStringifier.prototype.convertCommentKey='#comment';

XMLStringifier.prototype.convertRawKey='#raw';

XMLStringifier.prototype.assertLegalChar=function(str){
var regex,res;
if(this.options.noValidation){
return str;
}
regex='';
if(this.options.version==='1.0'){
regex=/[\0-\x08\x0B\f\x0E-\x1F\uFFFE\uFFFF]|[\uD800-\uDBFF](?![\uDC00-\uDFFF])|(?:[^\uD800-\uDBFF]|^)[\uDC00-\uDFFF]/;
if(res=str.match(regex)){
throw new Error("Invalid character in string: "+str+" at index "+res.index);
}
}else if(this.options.version==='1.1'){
regex=/[\0\uFFFE\uFFFF]|[\uD800-\uDBFF](?![\uDC00-\uDFFF])|(?:[^\uD800-\uDBFF]|^)[\uDC00-\uDFFF]/;
if(res=str.match(regex)){
throw new Error("Invalid character in string: "+str+" at index "+res.index);
}
}
return str;
};

XMLStringifier.prototype.assertLegalName=function(str){
var regex;
if(this.options.noValidation){
return str;
}
this.assertLegalChar(str);
regex=/^([:A-Z_a-z\xC0-\xD6\xD8-\xF6\xF8-\u02FF\u0370-\u037D\u037F-\u1FFF\u200C\u200D\u2070-\u218F\u2C00-\u2FEF\u3001-\uD7FF\uF900-\uFDCF\uFDF0-\uFFFD]|[\uD800-\uDB7F][\uDC00-\uDFFF])([\x2D\.0-:A-Z_a-z\xB7\xC0-\xD6\xD8-\xF6\xF8-\u037D\u037F-\u1FFF\u200C\u200D\u203F\u2040\u2070-\u218F\u2C00-\u2FEF\u3001-\uD7FF\uF900-\uFDCF\uFDF0-\uFFFD]|[\uD800-\uDB7F][\uDC00-\uDFFF])*$/;
if(!str.match(regex)){
throw new Error("Invalid character in name");
}
return str;
};

XMLStringifier.prototype.textEscape=function(str){
var ampregex;
if(this.options.noValidation){
return str;
}
ampregex=this.options.noDoubleEncoding?/(?!&\S+;)&/g:/&/g;
return str.replace(ampregex,'&amp;').replace(/</g,'&lt;').replace(/>/g,'&gt;').replace(/\r/g,'&#xD;');
};

XMLStringifier.prototype.attEscape=function(str){
var ampregex;
if(this.options.noValidation){
return str;
}
ampregex=this.options.noDoubleEncoding?/(?!&\S+;)&/g:/&/g;
return str.replace(ampregex,'&amp;').replace(/</g,'&lt;').replace(/"/g,'&quot;').replace(/\t/g,'&#x9;').replace(/\n/g,'&#xA;').replace(/\r/g,'&#xD;');
};

return XMLStringifier;

}();

}).call(this);

},{}],382:[function(require,module,exports){
// Generated by CoffeeScript 1.12.7
(function(){
var NodeType,XMLCharacterData,XMLText,
extend=function extend(child,parent){for(var key in parent){if(hasProp.call(parent,key))child[key]=parent[key];}function ctor(){this.constructor=child;}ctor.prototype=parent.prototype;child.prototype=new ctor();child.__super__=parent.prototype;return child;},
hasProp={}.hasOwnProperty;

NodeType=require('./NodeType');

XMLCharacterData=require('./XMLCharacterData');

module.exports=XMLText=function(superClass){
extend(XMLText,superClass);

function XMLText(parent,text){
XMLText.__super__.constructor.call(this,parent);
if(text==null){
throw new Error("Missing element text. "+this.debugInfo());
}
this.name="#text";
this.type=NodeType.Text;
this.value=this.stringify.text(text);
}

Object.defineProperty(XMLText.prototype,'isElementContentWhitespace',{
get:function get(){
throw new Error("This DOM method is not implemented."+this.debugInfo());
}});


Object.defineProperty(XMLText.prototype,'wholeText',{
get:function get(){
var next,prev,str;
str='';
prev=this.previousSibling;
while(prev){
str=prev.data+str;
prev=prev.previousSibling;
}
str+=this.data;
next=this.nextSibling;
while(next){
str=str+next.data;
next=next.nextSibling;
}
return str;
}});


XMLText.prototype.clone=function(){
return Object.create(this);
};

XMLText.prototype.toString=function(options){
return this.options.writer.text(this,this.options.writer.filterOptions(options));
};

XMLText.prototype.splitText=function(offset){
throw new Error("This DOM method is not implemented."+this.debugInfo());
};

XMLText.prototype.replaceWholeText=function(content){
throw new Error("This DOM method is not implemented."+this.debugInfo());
};

return XMLText;

}(XMLCharacterData);

}).call(this);

},{"./NodeType":353,"./XMLCharacterData":358}],383:[function(require,module,exports){
// Generated by CoffeeScript 1.12.7
(function(){
var NodeType,WriterState,XMLCData,XMLComment,XMLDTDAttList,XMLDTDElement,XMLDTDEntity,XMLDTDNotation,XMLDeclaration,XMLDocType,XMLDummy,XMLElement,XMLProcessingInstruction,XMLRaw,XMLText,XMLWriterBase,assign,
hasProp={}.hasOwnProperty;

assign=require('./Utility').assign;

NodeType=require('./NodeType');

XMLDeclaration=require('./XMLDeclaration');

XMLDocType=require('./XMLDocType');

XMLCData=require('./XMLCData');

XMLComment=require('./XMLComment');

XMLElement=require('./XMLElement');

XMLRaw=require('./XMLRaw');

XMLText=require('./XMLText');

XMLProcessingInstruction=require('./XMLProcessingInstruction');

XMLDummy=require('./XMLDummy');

XMLDTDAttList=require('./XMLDTDAttList');

XMLDTDElement=require('./XMLDTDElement');

XMLDTDEntity=require('./XMLDTDEntity');

XMLDTDNotation=require('./XMLDTDNotation');

WriterState=require('./WriterState');

module.exports=XMLWriterBase=function(){
function XMLWriterBase(options){
var key,ref,value;
options||(options={});
this.options=options;
ref=options.writer||{};
for(key in ref){
if(!hasProp.call(ref,key))continue;
value=ref[key];
this["_"+key]=this[key];
this[key]=value;
}
}

XMLWriterBase.prototype.filterOptions=function(options){
var filteredOptions,ref,ref1,ref2,ref3,ref4,ref5,ref6;
options||(options={});
options=assign({},this.options,options);
filteredOptions={
writer:this};

filteredOptions.pretty=options.pretty||false;
filteredOptions.allowEmpty=options.allowEmpty||false;
filteredOptions.indent=(ref=options.indent)!=null?ref:'  ';
filteredOptions.newline=(ref1=options.newline)!=null?ref1:'\n';
filteredOptions.offset=(ref2=options.offset)!=null?ref2:0;
filteredOptions.dontPrettyTextNodes=(ref3=(ref4=options.dontPrettyTextNodes)!=null?ref4:options.dontprettytextnodes)!=null?ref3:0;
filteredOptions.spaceBeforeSlash=(ref5=(ref6=options.spaceBeforeSlash)!=null?ref6:options.spacebeforeslash)!=null?ref5:'';
if(filteredOptions.spaceBeforeSlash===true){
filteredOptions.spaceBeforeSlash=' ';
}
filteredOptions.suppressPrettyCount=0;
filteredOptions.user={};
filteredOptions.state=WriterState.None;
return filteredOptions;
};

XMLWriterBase.prototype.indent=function(node,options,level){
var indentLevel;
if(!options.pretty||options.suppressPrettyCount){
return'';
}else if(options.pretty){
indentLevel=(level||0)+options.offset+1;
if(indentLevel>0){
return new Array(indentLevel).join(options.indent);
}
}
return'';
};

XMLWriterBase.prototype.endline=function(node,options,level){
if(!options.pretty||options.suppressPrettyCount){
return'';
}else{
return options.newline;
}
};

XMLWriterBase.prototype.attribute=function(att,options,level){
var r;
this.openAttribute(att,options,level);
r=' '+att.name+'="'+att.value+'"';
this.closeAttribute(att,options,level);
return r;
};

XMLWriterBase.prototype.cdata=function(node,options,level){
var r;
this.openNode(node,options,level);
options.state=WriterState.OpenTag;
r=this.indent(node,options,level)+'<![CDATA[';
options.state=WriterState.InsideTag;
r+=node.value;
options.state=WriterState.CloseTag;
r+=']]>'+this.endline(node,options,level);
options.state=WriterState.None;
this.closeNode(node,options,level);
return r;
};

XMLWriterBase.prototype.comment=function(node,options,level){
var r;
this.openNode(node,options,level);
options.state=WriterState.OpenTag;
r=this.indent(node,options,level)+'<!-- ';
options.state=WriterState.InsideTag;
r+=node.value;
options.state=WriterState.CloseTag;
r+=' -->'+this.endline(node,options,level);
options.state=WriterState.None;
this.closeNode(node,options,level);
return r;
};

XMLWriterBase.prototype.declaration=function(node,options,level){
var r;
this.openNode(node,options,level);
options.state=WriterState.OpenTag;
r=this.indent(node,options,level)+'<?xml';
options.state=WriterState.InsideTag;
r+=' version="'+node.version+'"';
if(node.encoding!=null){
r+=' encoding="'+node.encoding+'"';
}
if(node.standalone!=null){
r+=' standalone="'+node.standalone+'"';
}
options.state=WriterState.CloseTag;
r+=options.spaceBeforeSlash+'?>';
r+=this.endline(node,options,level);
options.state=WriterState.None;
this.closeNode(node,options,level);
return r;
};

XMLWriterBase.prototype.docType=function(node,options,level){
var child,i,len,r,ref;
level||(level=0);
this.openNode(node,options,level);
options.state=WriterState.OpenTag;
r=this.indent(node,options,level);
r+='<!DOCTYPE '+node.root().name;
if(node.pubID&&node.sysID){
r+=' PUBLIC "'+node.pubID+'" "'+node.sysID+'"';
}else if(node.sysID){
r+=' SYSTEM "'+node.sysID+'"';
}
if(node.children.length>0){
r+=' [';
r+=this.endline(node,options,level);
options.state=WriterState.InsideTag;
ref=node.children;
for(i=0,len=ref.length;i<len;i++){
child=ref[i];
r+=this.writeChildNode(child,options,level+1);
}
options.state=WriterState.CloseTag;
r+=']';
}
options.state=WriterState.CloseTag;
r+=options.spaceBeforeSlash+'>';
r+=this.endline(node,options,level);
options.state=WriterState.None;
this.closeNode(node,options,level);
return r;
};

XMLWriterBase.prototype.element=function(node,options,level){
var att,child,childNodeCount,firstChildNode,i,j,len,len1,name,prettySuppressed,r,ref,ref1,ref2;
level||(level=0);
prettySuppressed=false;
r='';
this.openNode(node,options,level);
options.state=WriterState.OpenTag;
r+=this.indent(node,options,level)+'<'+node.name;
ref=node.attribs;
for(name in ref){
if(!hasProp.call(ref,name))continue;
att=ref[name];
r+=this.attribute(att,options,level);
}
childNodeCount=node.children.length;
firstChildNode=childNodeCount===0?null:node.children[0];
if(childNodeCount===0||node.children.every(function(e){
return(e.type===NodeType.Text||e.type===NodeType.Raw)&&e.value==='';
})){
if(options.allowEmpty){
r+='>';
options.state=WriterState.CloseTag;
r+='</'+node.name+'>'+this.endline(node,options,level);
}else{
options.state=WriterState.CloseTag;
r+=options.spaceBeforeSlash+'/>'+this.endline(node,options,level);
}
}else if(options.pretty&&childNodeCount===1&&(firstChildNode.type===NodeType.Text||firstChildNode.type===NodeType.Raw)&&firstChildNode.value!=null){
r+='>';
options.state=WriterState.InsideTag;
options.suppressPrettyCount++;
prettySuppressed=true;
r+=this.writeChildNode(firstChildNode,options,level+1);
options.suppressPrettyCount--;
prettySuppressed=false;
options.state=WriterState.CloseTag;
r+='</'+node.name+'>'+this.endline(node,options,level);
}else{
if(options.dontPrettyTextNodes){
ref1=node.children;
for(i=0,len=ref1.length;i<len;i++){
child=ref1[i];
if((child.type===NodeType.Text||child.type===NodeType.Raw)&&child.value!=null){
options.suppressPrettyCount++;
prettySuppressed=true;
break;
}
}
}
r+='>'+this.endline(node,options,level);
options.state=WriterState.InsideTag;
ref2=node.children;
for(j=0,len1=ref2.length;j<len1;j++){
child=ref2[j];
r+=this.writeChildNode(child,options,level+1);
}
options.state=WriterState.CloseTag;
r+=this.indent(node,options,level)+'</'+node.name+'>';
if(prettySuppressed){
options.suppressPrettyCount--;
}
r+=this.endline(node,options,level);
options.state=WriterState.None;
}
this.closeNode(node,options,level);
return r;
};

XMLWriterBase.prototype.writeChildNode=function(node,options,level){
switch(node.type){
case NodeType.CData:
return this.cdata(node,options,level);
case NodeType.Comment:
return this.comment(node,options,level);
case NodeType.Element:
return this.element(node,options,level);
case NodeType.Raw:
return this.raw(node,options,level);
case NodeType.Text:
return this.text(node,options,level);
case NodeType.ProcessingInstruction:
return this.processingInstruction(node,options,level);
case NodeType.Dummy:
return'';
case NodeType.Declaration:
return this.declaration(node,options,level);
case NodeType.DocType:
return this.docType(node,options,level);
case NodeType.AttributeDeclaration:
return this.dtdAttList(node,options,level);
case NodeType.ElementDeclaration:
return this.dtdElement(node,options,level);
case NodeType.EntityDeclaration:
return this.dtdEntity(node,options,level);
case NodeType.NotationDeclaration:
return this.dtdNotation(node,options,level);
default:
throw new Error("Unknown XML node type: "+node.constructor.name);}

};

XMLWriterBase.prototype.processingInstruction=function(node,options,level){
var r;
this.openNode(node,options,level);
options.state=WriterState.OpenTag;
r=this.indent(node,options,level)+'<?';
options.state=WriterState.InsideTag;
r+=node.target;
if(node.value){
r+=' '+node.value;
}
options.state=WriterState.CloseTag;
r+=options.spaceBeforeSlash+'?>';
r+=this.endline(node,options,level);
options.state=WriterState.None;
this.closeNode(node,options,level);
return r;
};

XMLWriterBase.prototype.raw=function(node,options,level){
var r;
this.openNode(node,options,level);
options.state=WriterState.OpenTag;
r=this.indent(node,options,level);
options.state=WriterState.InsideTag;
r+=node.value;
options.state=WriterState.CloseTag;
r+=this.endline(node,options,level);
options.state=WriterState.None;
this.closeNode(node,options,level);
return r;
};

XMLWriterBase.prototype.text=function(node,options,level){
var r;
this.openNode(node,options,level);
options.state=WriterState.OpenTag;
r=this.indent(node,options,level);
options.state=WriterState.InsideTag;
r+=node.value;
options.state=WriterState.CloseTag;
r+=this.endline(node,options,level);
options.state=WriterState.None;
this.closeNode(node,options,level);
return r;
};

XMLWriterBase.prototype.dtdAttList=function(node,options,level){
var r;
this.openNode(node,options,level);
options.state=WriterState.OpenTag;
r=this.indent(node,options,level)+'<!ATTLIST';
options.state=WriterState.InsideTag;
r+=' '+node.elementName+' '+node.attributeName+' '+node.attributeType;
if(node.defaultValueType!=='#DEFAULT'){
r+=' '+node.defaultValueType;
}
if(node.defaultValue){
r+=' "'+node.defaultValue+'"';
}
options.state=WriterState.CloseTag;
r+=options.spaceBeforeSlash+'>'+this.endline(node,options,level);
options.state=WriterState.None;
this.closeNode(node,options,level);
return r;
};

XMLWriterBase.prototype.dtdElement=function(node,options,level){
var r;
this.openNode(node,options,level);
options.state=WriterState.OpenTag;
r=this.indent(node,options,level)+'<!ELEMENT';
options.state=WriterState.InsideTag;
r+=' '+node.name+' '+node.value;
options.state=WriterState.CloseTag;
r+=options.spaceBeforeSlash+'>'+this.endline(node,options,level);
options.state=WriterState.None;
this.closeNode(node,options,level);
return r;
};

XMLWriterBase.prototype.dtdEntity=function(node,options,level){
var r;
this.openNode(node,options,level);
options.state=WriterState.OpenTag;
r=this.indent(node,options,level)+'<!ENTITY';
options.state=WriterState.InsideTag;
if(node.pe){
r+=' %';
}
r+=' '+node.name;
if(node.value){
r+=' "'+node.value+'"';
}else{
if(node.pubID&&node.sysID){
r+=' PUBLIC "'+node.pubID+'" "'+node.sysID+'"';
}else if(node.sysID){
r+=' SYSTEM "'+node.sysID+'"';
}
if(node.nData){
r+=' NDATA '+node.nData;
}
}
options.state=WriterState.CloseTag;
r+=options.spaceBeforeSlash+'>'+this.endline(node,options,level);
options.state=WriterState.None;
this.closeNode(node,options,level);
return r;
};

XMLWriterBase.prototype.dtdNotation=function(node,options,level){
var r;
this.openNode(node,options,level);
options.state=WriterState.OpenTag;
r=this.indent(node,options,level)+'<!NOTATION';
options.state=WriterState.InsideTag;
r+=' '+node.name;
if(node.pubID&&node.sysID){
r+=' PUBLIC "'+node.pubID+'" "'+node.sysID+'"';
}else if(node.pubID){
r+=' PUBLIC "'+node.pubID+'"';
}else if(node.sysID){
r+=' SYSTEM "'+node.sysID+'"';
}
options.state=WriterState.CloseTag;
r+=options.spaceBeforeSlash+'>'+this.endline(node,options,level);
options.state=WriterState.None;
this.closeNode(node,options,level);
return r;
};

XMLWriterBase.prototype.openNode=function(node,options,level){};

XMLWriterBase.prototype.closeNode=function(node,options,level){};

XMLWriterBase.prototype.openAttribute=function(att,options,level){};

XMLWriterBase.prototype.closeAttribute=function(att,options,level){};

return XMLWriterBase;

}();

}).call(this);

},{"./NodeType":353,"./Utility":354,"./WriterState":355,"./XMLCData":357,"./XMLComment":359,"./XMLDTDAttList":364,"./XMLDTDElement":365,"./XMLDTDEntity":366,"./XMLDTDNotation":367,"./XMLDeclaration":368,"./XMLDocType":369,"./XMLDummy":372,"./XMLElement":373,"./XMLProcessingInstruction":377,"./XMLRaw":378,"./XMLText":382}],384:[function(require,module,exports){
// Generated by CoffeeScript 1.12.7
(function(){
var NodeType,WriterState,XMLDOMImplementation,XMLDocument,XMLDocumentCB,XMLStreamWriter,XMLStringWriter,assign,isFunction,ref;

ref=require('./Utility'),assign=ref.assign,isFunction=ref.isFunction;

XMLDOMImplementation=require('./XMLDOMImplementation');

XMLDocument=require('./XMLDocument');

XMLDocumentCB=require('./XMLDocumentCB');

XMLStringWriter=require('./XMLStringWriter');

XMLStreamWriter=require('./XMLStreamWriter');

NodeType=require('./NodeType');

WriterState=require('./WriterState');

module.exports.create=function(name,xmldec,doctype,options){
var doc,root;
if(name==null){
throw new Error("Root element needs a name.");
}
options=assign({},xmldec,doctype,options);
doc=new XMLDocument(options);
root=doc.element(name);
if(!options.headless){
doc.declaration(options);
if(options.pubID!=null||options.sysID!=null){
doc.dtd(options);
}
}
return root;
};

module.exports.begin=function(options,onData,onEnd){
var ref1;
if(isFunction(options)){
ref1=[options,onData],onData=ref1[0],onEnd=ref1[1];
options={};
}
if(onData){
return new XMLDocumentCB(options,onData,onEnd);
}else{
return new XMLDocument(options);
}
};

module.exports.stringWriter=function(options){
return new XMLStringWriter(options);
};

module.exports.streamWriter=function(stream,options){
return new XMLStreamWriter(stream,options);
};

module.exports.implementation=new XMLDOMImplementation();

module.exports.nodeType=NodeType;

module.exports.writerState=WriterState;

}).call(this);

},{"./NodeType":353,"./Utility":354,"./WriterState":355,"./XMLDOMImplementation":362,"./XMLDocument":370,"./XMLDocumentCB":371,"./XMLStreamWriter":379,"./XMLStringWriter":380}],385:[function(require,module,exports){
module.exports=extend;

var hasOwnProperty=Object.prototype.hasOwnProperty;

function extend(){
var target={};

for(var i=0;i<arguments.length;i++){
var source=arguments[i];

for(var key in source){
if(hasOwnProperty.call(source,key)){
target[key]=source[key];
}
}
}

return target;
}

},{}],386:[function(require,module,exports){
"use strict";

require("core-js/modules/es.array.concat");

require("core-js/modules/es.array.fill");

require("core-js/modules/es.array.join");

require("core-js/modules/es.array.slice");

require("core-js/modules/es.object.to-string");

require("core-js/modules/es.regexp.to-string");

var Buffer=require('buffer').Buffer;

var sha=require('./sha');

var md5=require('./md5');

var algorithms={
sha1:sha,
md5:md5};

var blocksize=64;
var zeroBuffer=Buffer.alloc(blocksize);
zeroBuffer.fill(0);

function hmac(fn,key,data){
if(!Buffer.isBuffer(key))key=Buffer.from(key);
if(!Buffer.isBuffer(data))data=Buffer.from(data);

if(key.length>blocksize){
key=fn(key);
}else if(key.length<blocksize){
key=Buffer.concat([key,zeroBuffer],blocksize);
}

var ipad=Buffer.alloc(blocksize),
opad=Buffer.alloc(blocksize);

for(var i=0;i<blocksize;i++){
ipad[i]=key[i]^0x36;
opad[i]=key[i]^0x5C;
}

var hash=fn(Buffer.concat([ipad,data]));
return fn(Buffer.concat([opad,hash]));
}

function hash(alg,key){
alg=alg||'sha1';
var fn=algorithms[alg];
var bufs=[];
var length=0;
if(!fn)error('algorithm:',alg,'is not yet supported');
return{
update:function update(data){
if(!Buffer.isBuffer(data))data=Buffer.from(data);
bufs.push(data);
length+=data.length;
return this;
},
digest:function digest(enc){
var buf=Buffer.concat(bufs);
var r=key?hmac(fn,key,buf):fn(buf);
bufs=null;
return enc?r.toString(enc):r;
}};

}

function error(){
var m=[].slice.call(arguments).join(' ');
throw new Error([m,'we accept pull requests','http://github.com/dominictarr/crypto-browserify'].join('\n'));
}

exports.createHash=function(alg){
return hash(alg);
};

exports.createHmac=function(alg,key){
return hash(alg,key);
};

exports.createCredentials=function(){
error('sorry,createCredentials is not implemented yet');
};

exports.createCipher=function(){
error('sorry,createCipher is not implemented yet');
};

exports.createCipheriv=function(){
error('sorry,createCipheriv is not implemented yet');
};

exports.createDecipher=function(){
error('sorry,createDecipher is not implemented yet');
};

exports.createDecipheriv=function(){
error('sorry,createDecipheriv is not implemented yet');
};

exports.createSign=function(){
error('sorry,createSign is not implemented yet');
};

exports.createVerify=function(){
error('sorry,createVerify is not implemented yet');
};

exports.createDiffieHellman=function(){
error('sorry,createDiffieHellman is not implemented yet');
};

exports.pbkdf2=function(){
error('sorry,pbkdf2 is not implemented yet');
};

},{"./md5":388,"./sha":389,"buffer":99,"core-js/modules/es.array.concat":234,"core-js/modules/es.array.fill":235,"core-js/modules/es.array.join":243,"core-js/modules/es.array.slice":246,"core-js/modules/es.object.to-string":254,"core-js/modules/es.regexp.to-string":257}],387:[function(require,module,exports){
"use strict";

require("core-js/modules/es.array.concat");

require("core-js/modules/es.array.fill");

var Buffer=require('buffer').Buffer;

var intSize=4;
var zeroBuffer=Buffer.alloc(intSize);
zeroBuffer.fill(0);
var chrsz=8;

function toArray(buf,bigEndian){
if(buf.length%intSize!==0){
var len=buf.length+(intSize-buf.length%intSize);
buf=Buffer.concat([buf,zeroBuffer],len);
}

var arr=[];
var fn=bigEndian?buf.readInt32BE:buf.readInt32LE;

for(var i=0;i<buf.length;i+=intSize){
arr.push(fn.call(buf,i));
}

return arr;
}

function toBuffer(arr,size,bigEndian){
var buf=Buffer.alloc(size);
var fn=bigEndian?buf.writeInt32BE:buf.writeInt32LE;

for(var i=0;i<arr.length;i++){
fn.call(buf,arr[i],i*4,true);
}

return buf;
}

function hash(buf,fn,hashSize,bigEndian){
if(!Buffer.isBuffer(buf))buf=Buffer.from(buf);
var arr=fn(toArray(buf,bigEndian),buf.length*chrsz);
return toBuffer(arr,hashSize,bigEndian);
}

module.exports={
hash:hash};


},{"buffer":99,"core-js/modules/es.array.concat":234,"core-js/modules/es.array.fill":235}],388:[function(require,module,exports){
"use strict";

/*
 * A JavaScript implementation of the RSA Data Security, Inc. MD5 Message
 * Digest Algorithm, as defined in RFC 1321.
 * Version 2.1 Copyright (C) Paul Johnston 1999 - 2002.
 * Other contributors: Greg Holt, Andrew Kepert, Ydnar, Lostinet
 * Distributed under the BSD License
 * See http://pajhome.org.uk/crypt/md5 for more info.
 */
var helpers=require('./helpers');
/*
 * Perform a simple self-test to see if the VM is working
 */


function md5_vm_test(){
return hex_md5("abc")=="900150983cd24fb0d6963f7d28e17f72";
}
/*
 * Calculate the MD5 of an array of little-endian words, and a bit length
 */


function core_md5(x,len){
/* append padding */
x[len>>5]|=0x80<<len%32;
x[(len+64>>>9<<4)+14]=len;
var a=1732584193;
var b=-271733879;
var c=-1732584194;
var d=271733878;

for(var i=0;i<x.length;i+=16){
var olda=a;
var oldb=b;
var oldc=c;
var oldd=d;
a=md5_ff(a,b,c,d,x[i+0],7,-680876936);
d=md5_ff(d,a,b,c,x[i+1],12,-389564586);
c=md5_ff(c,d,a,b,x[i+2],17,606105819);
b=md5_ff(b,c,d,a,x[i+3],22,-1044525330);
a=md5_ff(a,b,c,d,x[i+4],7,-176418897);
d=md5_ff(d,a,b,c,x[i+5],12,1200080426);
c=md5_ff(c,d,a,b,x[i+6],17,-1473231341);
b=md5_ff(b,c,d,a,x[i+7],22,-45705983);
a=md5_ff(a,b,c,d,x[i+8],7,1770035416);
d=md5_ff(d,a,b,c,x[i+9],12,-1958414417);
c=md5_ff(c,d,a,b,x[i+10],17,-42063);
b=md5_ff(b,c,d,a,x[i+11],22,-1990404162);
a=md5_ff(a,b,c,d,x[i+12],7,1804603682);
d=md5_ff(d,a,b,c,x[i+13],12,-40341101);
c=md5_ff(c,d,a,b,x[i+14],17,-1502002290);
b=md5_ff(b,c,d,a,x[i+15],22,1236535329);
a=md5_gg(a,b,c,d,x[i+1],5,-165796510);
d=md5_gg(d,a,b,c,x[i+6],9,-1069501632);
c=md5_gg(c,d,a,b,x[i+11],14,643717713);
b=md5_gg(b,c,d,a,x[i+0],20,-373897302);
a=md5_gg(a,b,c,d,x[i+5],5,-701558691);
d=md5_gg(d,a,b,c,x[i+10],9,38016083);
c=md5_gg(c,d,a,b,x[i+15],14,-660478335);
b=md5_gg(b,c,d,a,x[i+4],20,-405537848);
a=md5_gg(a,b,c,d,x[i+9],5,568446438);
d=md5_gg(d,a,b,c,x[i+14],9,-1019803690);
c=md5_gg(c,d,a,b,x[i+3],14,-187363961);
b=md5_gg(b,c,d,a,x[i+8],20,1163531501);
a=md5_gg(a,b,c,d,x[i+13],5,-1444681467);
d=md5_gg(d,a,b,c,x[i+2],9,-51403784);
c=md5_gg(c,d,a,b,x[i+7],14,1735328473);
b=md5_gg(b,c,d,a,x[i+12],20,-1926607734);
a=md5_hh(a,b,c,d,x[i+5],4,-378558);
d=md5_hh(d,a,b,c,x[i+8],11,-2022574463);
c=md5_hh(c,d,a,b,x[i+11],16,1839030562);
b=md5_hh(b,c,d,a,x[i+14],23,-35309556);
a=md5_hh(a,b,c,d,x[i+1],4,-1530992060);
d=md5_hh(d,a,b,c,x[i+4],11,1272893353);
c=md5_hh(c,d,a,b,x[i+7],16,-155497632);
b=md5_hh(b,c,d,a,x[i+10],23,-1094730640);
a=md5_hh(a,b,c,d,x[i+13],4,681279174);
d=md5_hh(d,a,b,c,x[i+0],11,-358537222);
c=md5_hh(c,d,a,b,x[i+3],16,-722521979);
b=md5_hh(b,c,d,a,x[i+6],23,76029189);
a=md5_hh(a,b,c,d,x[i+9],4,-640364487);
d=md5_hh(d,a,b,c,x[i+12],11,-421815835);
c=md5_hh(c,d,a,b,x[i+15],16,530742520);
b=md5_hh(b,c,d,a,x[i+2],23,-995338651);
a=md5_ii(a,b,c,d,x[i+0],6,-198630844);
d=md5_ii(d,a,b,c,x[i+7],10,1126891415);
c=md5_ii(c,d,a,b,x[i+14],15,-1416354905);
b=md5_ii(b,c,d,a,x[i+5],21,-57434055);
a=md5_ii(a,b,c,d,x[i+12],6,1700485571);
d=md5_ii(d,a,b,c,x[i+3],10,-1894986606);
c=md5_ii(c,d,a,b,x[i+10],15,-1051523);
b=md5_ii(b,c,d,a,x[i+1],21,-2054922799);
a=md5_ii(a,b,c,d,x[i+8],6,1873313359);
d=md5_ii(d,a,b,c,x[i+15],10,-30611744);
c=md5_ii(c,d,a,b,x[i+6],15,-1560198380);
b=md5_ii(b,c,d,a,x[i+13],21,1309151649);
a=md5_ii(a,b,c,d,x[i+4],6,-145523070);
d=md5_ii(d,a,b,c,x[i+11],10,-1120210379);
c=md5_ii(c,d,a,b,x[i+2],15,718787259);
b=md5_ii(b,c,d,a,x[i+9],21,-343485551);
a=safe_add(a,olda);
b=safe_add(b,oldb);
c=safe_add(c,oldc);
d=safe_add(d,oldd);
}

return Array(a,b,c,d);
}
/*
 * These functions implement the four basic operations the algorithm uses.
 */


function md5_cmn(q,a,b,x,s,t){
return safe_add(bit_rol(safe_add(safe_add(a,q),safe_add(x,t)),s),b);
}

function md5_ff(a,b,c,d,x,s,t){
return md5_cmn(b&c|~b&d,a,b,x,s,t);
}

function md5_gg(a,b,c,d,x,s,t){
return md5_cmn(b&d|c&~d,a,b,x,s,t);
}

function md5_hh(a,b,c,d,x,s,t){
return md5_cmn(b^c^d,a,b,x,s,t);
}

function md5_ii(a,b,c,d,x,s,t){
return md5_cmn(c^(b|~d),a,b,x,s,t);
}
/*
 * Add integers, wrapping at 2^32. This uses 16-bit operations internally
 * to work around bugs in some JS interpreters.
 */


function safe_add(x,y){
var lsw=(x&0xFFFF)+(y&0xFFFF);
var msw=(x>>16)+(y>>16)+(lsw>>16);
return msw<<16|lsw&0xFFFF;
}
/*
 * Bitwise rotate a 32-bit number to the left.
 */


function bit_rol(num,cnt){
return num<<cnt|num>>>32-cnt;
}

module.exports=function md5(buf){
return helpers.hash(buf,core_md5,16);
};

},{"./helpers":387}],389:[function(require,module,exports){
"use strict";

/*
 * A JavaScript implementation of the Secure Hash Algorithm, SHA-1, as defined
 * in FIPS PUB 180-1
 * Version 2.1a Copyright Paul Johnston 2000 - 2002.
 * Other contributors: Greg Holt, Andrew Kepert, Ydnar, Lostinet
 * Distributed under the BSD License
 * See http://pajhome.org.uk/crypt/md5 for details.
 */
var helpers=require('./helpers');
/*
 * Calculate the SHA-1 of an array of big-endian words, and a bit length
 */


function core_sha1(x,len){
/* append padding */
x[len>>5]|=0x80<<24-len%32;
x[(len+64>>9<<4)+15]=len;
var w=Array(80);
var a=1732584193;
var b=-271733879;
var c=-1732584194;
var d=271733878;
var e=-1009589776;

for(var i=0;i<x.length;i+=16){
var olda=a;
var oldb=b;
var oldc=c;
var oldd=d;
var olde=e;

for(var j=0;j<80;j++){
if(j<16)w[j]=x[i+j];else w[j]=rol(w[j-3]^w[j-8]^w[j-14]^w[j-16],1);
var t=safe_add(safe_add(rol(a,5),sha1_ft(j,b,c,d)),safe_add(safe_add(e,w[j]),sha1_kt(j)));
e=d;
d=c;
c=rol(b,30);
b=a;
a=t;
}

a=safe_add(a,olda);
b=safe_add(b,oldb);
c=safe_add(c,oldc);
d=safe_add(d,oldd);
e=safe_add(e,olde);
}

return Array(a,b,c,d,e);
}
/*
 * Perform the appropriate triplet combination function for the current
 * iteration
 */


function sha1_ft(t,b,c,d){
if(t<20)return b&c|~b&d;
if(t<40)return b^c^d;
if(t<60)return b&c|b&d|c&d;
return b^c^d;
}
/*
 * Determine the appropriate additive constant for the current iteration
 */


function sha1_kt(t){
return t<20?1518500249:t<40?1859775393:t<60?-1894007588:-899497514;
}
/*
 * Add integers, wrapping at 2^32. This uses 16-bit operations internally
 * to work around bugs in some JS interpreters.
 */


function safe_add(x,y){
var lsw=(x&0xFFFF)+(y&0xFFFF);
var msw=(x>>16)+(y>>16)+(lsw>>16);
return msw<<16|lsw&0xFFFF;
}
/*
 * Bitwise rotate a 32-bit number to the left.
 */


function rol(num,cnt){
return num<<cnt|num>>>32-cnt;
}

module.exports=function sha1(buf){
return helpers.hash(buf,core_sha1,20,true);
};

},{"./helpers":387}],390:[function(require,module,exports){
"use strict";

module.exports=function(){
return function(){};
};

},{}],391:[function(require,module,exports){
(function(Buffer){
"use strict";

var _interopRequireDefault=require("@babel/runtime/helpers/interopRequireDefault");

var _typeof2=_interopRequireDefault(require("@babel/runtime/helpers/typeof"));

var _require=require('stream'),
Stream=_require.Stream;

var _require2=require('../lib/common/utils/isArray'),
isArray=_require2.isArray;

module.exports.string=function isString(obj){
return typeof obj==='string';
};

module.exports.array=isArray;
module.exports.buffer=Buffer.isBuffer;

function isStream(obj){
return obj instanceof Stream;
}

module.exports.writableStream=function isWritableStream(obj){
return isStream(obj)&&typeof obj._write==='function'&&(0,_typeof2.default)(obj._writableState)==='object';
};

}).call(this,{"isBuffer":require("../node_modules/is-buffer/index.js")});
},{"../lib/common/utils/isArray":59,"../node_modules/is-buffer/index.js":307,"@babel/runtime/helpers/interopRequireDefault":72,"@babel/runtime/helpers/typeof":73,"stream":339}],392:[function(require,module,exports){
"use strict";

var immediate=require('immediate');

var process=module.exports={};
process.nextTick=immediate;
process.title='browser';
process.browser=true;
process.env={};
process.argv=[];
process.version='';// empty string to avoid regexp issues

process.versions={};

function noop(){}

process.on=noop;
process.addListener=noop;
process.once=noop;
process.off=noop;
process.removeListener=noop;
process.removeAllListeners=noop;
process.emit=noop;
process.prependListener=noop;
process.prependOnceListener=noop;

process.listeners=function(name){
return[];
};

process.binding=function(name){
throw new Error('process.binding is not supported');
};

process.cwd=function(){
return'/';
};

process.chdir=function(dir){
throw new Error('process.chdir is not supported');
};

process.umask=function(){
return 0;
};

},{"immediate":300}],393:[function(require,module,exports){
// Copyright Joyent, Inc. and other Node contributors.
//
// Permission is hereby granted, free of charge, to any person obtaining a
// copy of this software and associated documentation files (the
// "Software"), to deal in the Software without restriction, including
// without limitation the rights to use, copy, modify, merge, publish,
// distribute, sublicense, and/or sell copies of the Software, and to permit
// persons to whom the Software is furnished to do so, subject to the
// following conditions:
//
// The above copyright notice and this permission notice shall be included
// in all copies or substantial portions of the Software.
//
// THE SOFTWARE IS PROVIDED "AS IS", WITHOUT WARRANTY OF ANY KIND, EXPRESS
// OR IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF
// MERCHANTABILITY, FITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN
// NO EVENT SHALL THE AUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM,
// DAMAGES OR OTHER LIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR
// OTHERWISE, ARISING FROM, OUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE
// USE OR OTHER DEALINGS IN THE SOFTWARE.
'use strict';

var _interopRequireDefault=require("@babel/runtime/helpers/interopRequireDefault");

require("core-js/modules/es.array.concat");

require("core-js/modules/es.array.index-of");

require("core-js/modules/es.array.join");

require("core-js/modules/es.array.last-index-of");

require("core-js/modules/es.array.slice");

require("core-js/modules/es.array.splice");

require("core-js/modules/es.object.keys");

require("core-js/modules/es.regexp.exec");

require("core-js/modules/es.string.match");

require("core-js/modules/es.string.replace");

require("core-js/modules/es.string.search");

require("core-js/modules/es.string.split");

require("core-js/modules/es.string.trim");

var _typeof2=_interopRequireDefault(require("@babel/runtime/helpers/typeof"));

var punycode=require('punycode');

var util=require('./util');

exports.parse=urlParse;
exports.resolve=urlResolve;
exports.resolveObject=urlResolveObject;
exports.format=urlFormat;
exports.Url=Url;

function Url(){
this.protocol=null;
this.slashes=null;
this.auth=null;
this.host=null;
this.port=null;
this.hostname=null;
this.hash=null;
this.search=null;
this.query=null;
this.pathname=null;
this.path=null;
this.href=null;
}// Reference: RFC 3986, RFC 1808, RFC 2396
// define these here so at least they only have to be
// compiled once on the first module load.


var protocolPattern=/^([a-z0-9.+-]+:)/i,
portPattern=/:[0-9]*$/,
// Special case for a simple path URL
simplePathPattern=/^(\/\/?(?!\/)[^\?\s]*)(\?[^\s]*)?$/,
// RFC 2396: characters reserved for delimiting URLs.
// We actually just auto-escape these.
delims=['<','>','"','`',' ','\r','\n','\t'],
// RFC 2396: characters not allowed for various reasons.
unwise=['{','}','|','\\','^','`'].concat(delims),
// Allowed by RFCs, but cause of XSS attacks.  Always escape these.
autoEscape=['\''].concat(unwise),
// Characters that are never ever allowed in a hostname.
// Note that any invalid chars are also handled, but these
// are the ones that are *expected* to be seen, so we fast-path
// them.
nonHostChars=['%','/','?',';','#'].concat(autoEscape),
hostEndingChars=['/','?','#'],
hostnameMaxLen=255,
hostnamePartPattern=/^[+a-z0-9A-Z_-]{0,63}$/,
hostnamePartStart=/^([+a-z0-9A-Z_-]{0,63})(.*)$/,
// protocols that can allow "unsafe" and "unwise" chars.
unsafeProtocol={
'javascript':true,
'javascript:':true},

// protocols that never have a hostname.
hostlessProtocol={
'javascript':true,
'javascript:':true},

// protocols that always contain a // bit.
slashedProtocol={
'http':true,
'https':true,
'ftp':true,
'gopher':true,
'file':true,
'http:':true,
'https:':true,
'ftp:':true,
'gopher:':true,
'file:':true},

querystring=require('querystring');

function urlParse(url,parseQueryString,slashesDenoteHost){
if(url&&util.isObject(url)&&url instanceof Url)return url;
var u=new Url();
u.parse(url,parseQueryString,slashesDenoteHost);
return u;
}

Url.prototype.parse=function(url,parseQueryString,slashesDenoteHost){
if(!util.isString(url)){
throw new TypeError("Parameter 'url' must be a string, not "+(0,_typeof2.default)(url));
}// Copy chrome, IE, opera backslash-handling behavior.
// Back slashes before the query string get converted to forward slashes
// See: https://code.google.com/p/chromium/issues/detail?id=25916


var queryIndex=url.indexOf('?'),
splitter=queryIndex!==-1&&queryIndex<url.indexOf('#')?'?':'#',
uSplit=url.split(splitter),
slashRegex=/\\/g;
uSplit[0]=uSplit[0].replace(slashRegex,'/');
url=uSplit.join(splitter);
var rest=url;// trim before proceeding.
// This is to support parse stuff like "  http://foo.com  \n"

rest=rest.trim();

if(!slashesDenoteHost&&url.split('#').length===1){
// Try fast path regexp
var simplePath=simplePathPattern.exec(rest);

if(simplePath){
this.path=rest;
this.href=rest;
this.pathname=simplePath[1];

if(simplePath[2]){
this.search=simplePath[2];

if(parseQueryString){
this.query=querystring.parse(this.search.substr(1));
}else{
this.query=this.search.substr(1);
}
}else if(parseQueryString){
this.search='';
this.query={};
}

return this;
}
}

var proto=protocolPattern.exec(rest);

if(proto){
proto=proto[0];
var lowerProto=proto.toLowerCase();
this.protocol=lowerProto;
rest=rest.substr(proto.length);
}// figure out if it's got a host
// user@server is *always* interpreted as a hostname, and url
// resolution will treat //foo/bar as host=foo,path=bar because that's
// how the browser resolves relative URLs.


if(slashesDenoteHost||proto||rest.match(/^\/\/[^@\/]+@[^@\/]+/)){
var slashes=rest.substr(0,2)==='//';

if(slashes&&!(proto&&hostlessProtocol[proto])){
rest=rest.substr(2);
this.slashes=true;
}
}

if(!hostlessProtocol[proto]&&(slashes||proto&&!slashedProtocol[proto])){
// there's a hostname.
// the first instance of /, ?, ;, or # ends the host.
//
// If there is an @ in the hostname, then non-host chars *are* allowed
// to the left of the last @ sign, unless some host-ending character
// comes *before* the @-sign.
// URLs are obnoxious.
//
// ex:
// http://a@b@c/ => user:a@b host:c
// http://a@b?@c => user:a host:c path:/?@c
// v0.12 TODO(isaacs): This is not quite how Chrome does things.
// Review our test case against browsers more comprehensively.
// find the first instance of any hostEndingChars
var hostEnd=-1;

for(var i=0;i<hostEndingChars.length;i++){
var hec=rest.indexOf(hostEndingChars[i]);
if(hec!==-1&&(hostEnd===-1||hec<hostEnd))hostEnd=hec;
}// at this point, either we have an explicit point where the
// auth portion cannot go past, or the last @ char is the decider.


var auth,atSign;

if(hostEnd===-1){
// atSign can be anywhere.
atSign=rest.lastIndexOf('@');
}else{
// atSign must be in auth portion.
// http://a@b/c@d => host:b auth:a path:/c@d
atSign=rest.lastIndexOf('@',hostEnd);
}// Now we have a portion which is definitely the auth.
// Pull that off.


if(atSign!==-1){
auth=rest.slice(0,atSign);
rest=rest.slice(atSign+1);
this.auth=decodeURIComponent(auth);
}// the host is the remaining to the left of the first non-host char


hostEnd=-1;

for(var i=0;i<nonHostChars.length;i++){
var hec=rest.indexOf(nonHostChars[i]);
if(hec!==-1&&(hostEnd===-1||hec<hostEnd))hostEnd=hec;
}// if we still have not hit it, then the entire thing is a host.


if(hostEnd===-1)hostEnd=rest.length;
this.host=rest.slice(0,hostEnd);
rest=rest.slice(hostEnd);// pull out port.

this.parseHost();// we've indicated that there is a hostname,
// so even if it's empty, it has to be present.

this.hostname=this.hostname||'';// if hostname begins with [ and ends with ]
// assume that it's an IPv6 address.

var ipv6Hostname=this.hostname[0]==='['&&this.hostname[this.hostname.length-1]===']';// validate a little.

if(!ipv6Hostname){
var hostparts=this.hostname.split('.');

for(var i=0,l=hostparts.length;i<l;i++){
var part=hostparts[i];
if(!part)continue;

if(!part.match(hostnamePartPattern)){
var newpart='';

for(var j=0,k=part.length;j<k;j++){
if(part.charCodeAt(j)>127){
// we replace non-ASCII char with a temporary placeholder
// we need this to make sure size of hostname is not
// broken by replacing non-ASCII by nothing
newpart+='x';
}else{
newpart+=part[j];
}
}// we test again with ASCII char only


if(!newpart.match(hostnamePartPattern)){
var validParts=hostparts.slice(0,i);
var notHost=hostparts.slice(i+1);
var bit=part.match(hostnamePartStart);

if(bit){
validParts.push(bit[1]);
notHost.unshift(bit[2]);
}

if(notHost.length){
rest='/'+notHost.join('.')+rest;
}

this.hostname=validParts.join('.');
break;
}
}
}
}

if(this.hostname.length>hostnameMaxLen){
this.hostname='';
}else{
// hostnames are always lower case.
this.hostname=this.hostname.toLowerCase();
}

if(!ipv6Hostname){
// IDNA Support: Returns a punycoded representation of "domain".
// It only converts parts of the domain name that
// have non-ASCII characters, i.e. it doesn't matter if
// you call it with a domain that already is ASCII-only.
this.hostname=punycode.toASCII(this.hostname);
}

var p=this.port?':'+this.port:'';
var h=this.hostname||'';
this.host=h+p;
this.href+=this.host;// strip [ and ] from the hostname
// the host field still retains them, though

if(ipv6Hostname){
this.hostname=this.hostname.substr(1,this.hostname.length-2);

if(rest[0]!=='/'){
rest='/'+rest;
}
}
}// now rest is set to the post-host stuff.
// chop off any delim chars.


if(!unsafeProtocol[lowerProto]){
// First, make 100% sure that any "autoEscape" chars get
// escaped, even if encodeURIComponent doesn't think they
// need to be.
for(var i=0,l=autoEscape.length;i<l;i++){
var ae=autoEscape[i];
if(rest.indexOf(ae)===-1)continue;
var esc=encodeURIComponent(ae);

if(esc===ae){
esc=escape(ae);
}

rest=rest.split(ae).join(esc);
}
}// chop off from the tail first.


var hash=rest.indexOf('#');

if(hash!==-1){
// got a fragment string.
this.hash=rest.substr(hash);
rest=rest.slice(0,hash);
}

var qm=rest.indexOf('?');

if(qm!==-1){
this.search=rest.substr(qm);
this.query=rest.substr(qm+1);

if(parseQueryString){
this.query=querystring.parse(this.query);
}

rest=rest.slice(0,qm);
}else if(parseQueryString){
// no query string, but parseQueryString still requested
this.search='';
this.query={};
}

if(rest)this.pathname=rest;

if(slashedProtocol[lowerProto]&&this.hostname&&!this.pathname){
this.pathname='/';
}//to support http.request


if(this.pathname||this.search){
var p=this.pathname||'';
var s=this.search||'';
this.path=p+s;
}// finally, reconstruct the href based on what has been validated.


this.href=this.format();
return this;
};// format a parsed object into a url string


function urlFormat(obj){
// ensure it's an object, and not a string url.
// If it's an obj, this is a no-op.
// this way, you can call url_format() on strings
// to clean up potentially wonky urls.
if(util.isString(obj))obj=urlParse(obj);
if(!(obj instanceof Url))return Url.prototype.format.call(obj);
return obj.format();
}

Url.prototype.format=function(){
var auth=this.auth||'';

if(auth){
auth=encodeURIComponent(auth);
auth=auth.replace(/%3A/i,':');
auth+='@';
}

var protocol=this.protocol||'',
pathname=this.pathname||'',
hash=this.hash||'',
host=false,
query='';

if(this.host){
host=auth+this.host;
}else if(this.hostname){
host=auth+(this.hostname.indexOf(':')===-1?this.hostname:'['+this.hostname+']');

if(this.port){
host+=':'+this.port;
}
}

if(this.query&&util.isObject(this.query)&&Object.keys(this.query).length){
query=querystring.stringify(this.query);
}

var search=this.search||query&&'?'+query||'';
if(protocol&&protocol.substr(-1)!==':')protocol+=':';// only the slashedProtocols get the //.  Not mailto:, xmpp:, etc.
// unless they had them to begin with.

if(this.slashes||(!protocol||slashedProtocol[protocol])&&host!==false){
host='//'+(host||'');
if(pathname&&pathname.charAt(0)!=='/')pathname='/'+pathname;
}else if(!host){
host='';
}

if(hash&&hash.charAt(0)!=='#')hash='#'+hash;
if(search&&search.charAt(0)!=='?')search='?'+search;
pathname=pathname.replace(/[?#]/g,function(match){
return encodeURIComponent(match);
});
search=search.replace('#','%23');
return protocol+host+pathname+search+hash;
};

function urlResolve(source,relative){
return urlParse(source,false,true).resolve(relative);
}

Url.prototype.resolve=function(relative){
return this.resolveObject(urlParse(relative,false,true)).format();
};

function urlResolveObject(source,relative){
if(!source)return relative;
return urlParse(source,false,true).resolveObject(relative);
}

Url.prototype.resolveObject=function(relative){
if(util.isString(relative)){
var rel=new Url();
rel.parse(relative,false,true);
relative=rel;
}

var result=new Url();
var tkeys=Object.keys(this);

for(var tk=0;tk<tkeys.length;tk++){
var tkey=tkeys[tk];
result[tkey]=this[tkey];
}// hash is always overridden, no matter what.
// even href="" will remove it.


result.hash=relative.hash;// if the relative url is empty, then there's nothing left to do here.

if(relative.href===''){
result.href=result.format();
return result;
}// hrefs like //foo/bar always cut to the protocol.


if(relative.slashes&&!relative.protocol){
// take everything except the protocol from relative
var rkeys=Object.keys(relative);

for(var rk=0;rk<rkeys.length;rk++){
var rkey=rkeys[rk];
if(rkey!=='protocol')result[rkey]=relative[rkey];
}//urlParse appends trailing / to urls like http://www.example.com


if(slashedProtocol[result.protocol]&&result.hostname&&!result.pathname){
result.path=result.pathname='/';
}

result.href=result.format();
return result;
}

if(relative.protocol&&relative.protocol!==result.protocol){
// if it's a known url protocol, then changing
// the protocol does weird things
// first, if it's not file:, then we MUST have a host,
// and if there was a path
// to begin with, then we MUST have a path.
// if it is file:, then the host is dropped,
// because that's known to be hostless.
// anything else is assumed to be absolute.
if(!slashedProtocol[relative.protocol]){
var keys=Object.keys(relative);

for(var v=0;v<keys.length;v++){
var k=keys[v];
result[k]=relative[k];
}

result.href=result.format();
return result;
}

result.protocol=relative.protocol;

if(!relative.host&&!hostlessProtocol[relative.protocol]){
var relPath=(relative.pathname||'').split('/');

while(relPath.length&&!(relative.host=relPath.shift())){
;
}

if(!relative.host)relative.host='';
if(!relative.hostname)relative.hostname='';
if(relPath[0]!=='')relPath.unshift('');
if(relPath.length<2)relPath.unshift('');
result.pathname=relPath.join('/');
}else{
result.pathname=relative.pathname;
}

result.search=relative.search;
result.query=relative.query;
result.host=relative.host||'';
result.auth=relative.auth;
result.hostname=relative.hostname||relative.host;
result.port=relative.port;// to support http.request

if(result.pathname||result.search){
var p=result.pathname||'';
var s=result.search||'';
result.path=p+s;
}

result.slashes=result.slashes||relative.slashes;
result.href=result.format();
return result;
}

var isSourceAbs=result.pathname&&result.pathname.charAt(0)==='/',
isRelAbs=relative.host||relative.pathname&&relative.pathname.charAt(0)==='/',
mustEndAbs=isRelAbs||isSourceAbs||result.host&&relative.pathname,
removeAllDots=mustEndAbs,
srcPath=result.pathname&&result.pathname.split('/')||[],
relPath=relative.pathname&&relative.pathname.split('/')||[],
psychotic=result.protocol&&!slashedProtocol[result.protocol];// if the url is a non-slashed url, then relative
// links like ../.. should be able
// to crawl up to the hostname, as well.  This is strange.
// result.protocol has already been set by now.
// Later on, put the first path part into the host field.

if(psychotic){
result.hostname='';
result.port=null;

if(result.host){
if(srcPath[0]==='')srcPath[0]=result.host;else srcPath.unshift(result.host);
}

result.host='';

if(relative.protocol){
relative.hostname=null;
relative.port=null;

if(relative.host){
if(relPath[0]==='')relPath[0]=relative.host;else relPath.unshift(relative.host);
}

relative.host=null;
}

mustEndAbs=mustEndAbs&&(relPath[0]===''||srcPath[0]==='');
}

if(isRelAbs){
// it's absolute.
result.host=relative.host||relative.host===''?relative.host:result.host;
result.hostname=relative.hostname||relative.hostname===''?relative.hostname:result.hostname;
result.search=relative.search;
result.query=relative.query;
srcPath=relPath;// fall through to the dot-handling below.
}else if(relPath.length){
// it's relative
// throw away the existing file, and take the new path instead.
if(!srcPath)srcPath=[];
srcPath.pop();
srcPath=srcPath.concat(relPath);
result.search=relative.search;
result.query=relative.query;
}else if(!util.isNullOrUndefined(relative.search)){
// just pull out the search.
// like href='?foo'.
// Put this after the other two cases because it simplifies the booleans
if(psychotic){
result.hostname=result.host=srcPath.shift();//occationaly the auth can get stuck only in host
//this especially happens in cases like
//url.resolveObject('mailto:local1@domain1', 'local2@domain2')

var authInHost=result.host&&result.host.indexOf('@')>0?result.host.split('@'):false;

if(authInHost){
result.auth=authInHost.shift();
result.host=result.hostname=authInHost.shift();
}
}

result.search=relative.search;
result.query=relative.query;//to support http.request

if(!util.isNull(result.pathname)||!util.isNull(result.search)){
result.path=(result.pathname?result.pathname:'')+(result.search?result.search:'');
}

result.href=result.format();
return result;
}

if(!srcPath.length){
// no path at all.  easy.
// we've already handled the other stuff above.
result.pathname=null;//to support http.request

if(result.search){
result.path='/'+result.search;
}else{
result.path=null;
}

result.href=result.format();
return result;
}// if a url ENDs in . or .., then it must get a trailing slash.
// however, if it ends in anything else non-slashy,
// then it must NOT get a trailing slash.


var last=srcPath.slice(-1)[0];
var hasTrailingSlash=(result.host||relative.host||srcPath.length>1)&&(last==='.'||last==='..')||last==='';// strip single dots, resolve double dots to parent dir
// if the path tries to go above the root, `up` ends up > 0

var up=0;

for(var i=srcPath.length;i>=0;i--){
last=srcPath[i];

if(last==='.'){
srcPath.splice(i,1);
}else if(last==='..'){
srcPath.splice(i,1);
up++;
}else if(up){
srcPath.splice(i,1);
up--;
}
}// if the path is allowed to go above the root, restore leading ..s


if(!mustEndAbs&&!removeAllDots){
for(;up--;up){
srcPath.unshift('..');
}
}

if(mustEndAbs&&srcPath[0]!==''&&(!srcPath[0]||srcPath[0].charAt(0)!=='/')){
srcPath.unshift('');
}

if(hasTrailingSlash&&srcPath.join('/').substr(-1)!=='/'){
srcPath.push('');
}

var isAbsolute=srcPath[0]===''||srcPath[0]&&srcPath[0].charAt(0)==='/';// put the host back

if(psychotic){
result.hostname=result.host=isAbsolute?'':srcPath.length?srcPath.shift():'';//occationaly the auth can get stuck only in host
//this especially happens in cases like
//url.resolveObject('mailto:local1@domain1', 'local2@domain2')

var authInHost=result.host&&result.host.indexOf('@')>0?result.host.split('@'):false;

if(authInHost){
result.auth=authInHost.shift();
result.host=result.hostname=authInHost.shift();
}
}

mustEndAbs=mustEndAbs||result.host&&srcPath.length;

if(mustEndAbs&&!isAbsolute){
srcPath.unshift('');
}

if(!srcPath.length){
result.pathname=null;
result.path=null;
}else{
result.pathname=srcPath.join('/');
}//to support request.http


if(!util.isNull(result.pathname)||!util.isNull(result.search)){
result.path=(result.pathname?result.pathname:'')+(result.search?result.search:'');
}

result.auth=relative.auth||result.auth;
result.slashes=result.slashes||relative.slashes;
result.href=result.format();
return result;
};

Url.prototype.parseHost=function(){
var host=this.host;
var port=portPattern.exec(host);

if(port){
port=port[0];

if(port!==':'){
this.port=port.substr(1);
}

host=host.substr(0,host.length-port.length);
}

if(host)this.hostname=host;
};

},{"./util":394,"@babel/runtime/helpers/interopRequireDefault":72,"@babel/runtime/helpers/typeof":73,"core-js/modules/es.array.concat":234,"core-js/modules/es.array.index-of":241,"core-js/modules/es.array.join":243,"core-js/modules/es.array.last-index-of":244,"core-js/modules/es.array.slice":246,"core-js/modules/es.array.splice":248,"core-js/modules/es.object.keys":253,"core-js/modules/es.regexp.exec":256,"core-js/modules/es.string.match":260,"core-js/modules/es.string.replace":261,"core-js/modules/es.string.search":262,"core-js/modules/es.string.split":263,"core-js/modules/es.string.trim":264,"punycode":319,"querystring":322}],394:[function(require,module,exports){
'use strict';

var _interopRequireDefault=require("@babel/runtime/helpers/interopRequireDefault");

var _typeof2=_interopRequireDefault(require("@babel/runtime/helpers/typeof"));

module.exports={
isString:function isString(arg){
return typeof arg==='string';
},
isObject:function isObject(arg){
return(0,_typeof2.default)(arg)==='object'&&arg!==null;
},
isNull:function isNull(arg){
return arg===null;
},
isNullOrUndefined:function isNullOrUndefined(arg){
return arg==null;
}};


},{"@babel/runtime/helpers/interopRequireDefault":72,"@babel/runtime/helpers/typeof":73}],395:[function(require,module,exports){
"use strict";

require("core-js/modules/es.number.constructor");

// copy from https://github.com/node-modules/utility for browser
exports.encodeURIComponent=function(text){
try{
return encodeURIComponent(text);
}catch(e){
return text;
}
};

exports.escape=require('escape-html');

exports.timestamp=function timestamp(t){
if(t){
var v=t;

if(typeof v==='string'){
v=Number(v);
}

if(String(t).length===10){
v*=1000;
}

return new Date(v);
}

return Math.round(Date.now()/1000);
};

},{"core-js/modules/es.number.constructor":250,"escape-html":295}],396:[function(require,module,exports){
(function(process,Buffer){
'use strict';

var _interopRequireDefault=require("@babel/runtime/helpers/interopRequireDefault");

require("core-js/modules/es.array.concat");

require("core-js/modules/es.array.index-of");

require("core-js/modules/es.function.name");

require("core-js/modules/es.object.to-string");

require("core-js/modules/es.promise");

require("core-js/modules/es.regexp.exec");

require("core-js/modules/es.string.split");

require("core-js/modules/es.string.trim");

var _typeof2=_interopRequireDefault(require("@babel/runtime/helpers/typeof"));

var util=require('util');

var urlutil=require('url');

var http=require('http');

var https=require('https');

var debug=require('debug')('urllib');

var ms=require('humanize-ms');

var REQUEST_ID=0;
var MAX_VALUE=Math.pow(2,31)-10;
var PROTO_RE=/^https?:\/\//i;

function getAgent(agent,defaultAgent){
return agent===undefined?defaultAgent:agent;
}

function parseContentType(str){
if(!str){
return'';
}

return str.split(';')[0].trim().toLowerCase();
}

function makeCallback(resolve,reject){
return function(err,data,res){
if(err){
return reject(err);
}

resolve({
data:data,
status:res.statusCode,
headers:res.headers,
res:res});

};
}// exports.TIMEOUT = ms('5s');


exports.TIMEOUTS=[ms('300s'),ms('300s')];
var TEXT_DATA_TYPES=['json','text'];

exports.request=function request(url,args,callback){
// request(url, callback)
if(arguments.length===2&&typeof args==='function'){
callback=args;
args=null;
}

if(typeof callback==='function'){
return exports.requestWithCallback(url,args,callback);
}

return new Promise(function(resolve,reject){
exports.requestWithCallback(url,args,makeCallback(resolve,reject));
});
};

exports.requestWithCallback=function requestWithCallback(url,args,callback){
if(!url||typeof url!=='string'&&(0,_typeof2.default)(url)!=='object'){
var msg=util.format('expect request url to be a string or a http request options, but got'+' %j',url);
throw new Error(msg);
}

if(arguments.length===2&&typeof args==='function'){
callback=args;
args=null;
}

args=args||{};

if(REQUEST_ID>=MAX_VALUE){
REQUEST_ID=0;
}

var reqId=++REQUEST_ID;
args.requestUrls=args.requestUrls||[];
var reqMeta={
requestId:reqId,
url:url,
args:args,
ctx:args.ctx};


if(args.emitter){
args.emitter.emit('request',reqMeta);
}

args.timeout=args.timeout||exports.TIMEOUTS;
args.maxRedirects=args.maxRedirects||10;
args.streaming=args.streaming||args.customResponse;
var requestStartTime=Date.now();
var parsedUrl;

if(typeof url==='string'){
if(!PROTO_RE.test(url)){
// Support `request('www.server.com')`
url='https://'+url;
}

parsedUrl=urlutil.parse(url);
}else{
parsedUrl=url;
}

var method=(args.type||args.method||parsedUrl.method||'GET').toUpperCase();
var port=parsedUrl.port||80;
var httplib=http;
var agent=getAgent(args.agent,exports.agent);
var fixJSONCtlChars=args.fixJSONCtlChars;

if(parsedUrl.protocol==='https:'){
httplib=https;
agent=getAgent(args.httpsAgent,exports.httpsAgent);

if(!parsedUrl.port){
port=443;
}
}// request through proxy tunnel
// var proxyTunnelAgent = detectProxyAgent(parsedUrl, args);
// if (proxyTunnelAgent) {
//   agent = proxyTunnelAgent;
// }


var options={
host:parsedUrl.hostname||parsedUrl.host||'localhost',
path:parsedUrl.path||'/',
method:method,
port:port,
agent:agent,
headers:args.headers||{},
// default is dns.lookup
// https://github.com/nodejs/node/blob/master/lib/net.js#L986
// custom dnslookup require node >= 4.0.0
// https://github.com/nodejs/node/blob/archived-io.js-v0.12/lib/net.js#L952
lookup:args.lookup};


if(Array.isArray(args.timeout)){
options.requestTimeout=args.timeout[args.timeout.length-1];
}else if(typeof args.timeout!=='undefined'){
options.requestTimeout=args.timeout;
}// const sslNames = [
//   'pfx',
//   'key',
//   'passphrase',
//   'cert',
//   'ca',
//   'ciphers',
//   'rejectUnauthorized',
//   'secureProtocol',
//   'secureOptions',
// ];
// for (let i = 0; i < sslNames.length; i++) {
//   const name = sslNames[i];
//   if (args.hasOwnProperty(name)) {
//     options[name] = args[name];
//   }
// }
// don't check ssl
// if (options.rejectUnauthorized === false && !options.hasOwnProperty('secureOptions')) {
//   options.secureOptions = require('constants').SSL_OP_NO_TLSv1_2;
// }


var auth=args.auth||parsedUrl.auth;

if(auth){
options.auth=auth;
}// content undefined  data 有值


var body=args.content||args.data;
var dataAsQueryString=method==='GET'||method==='HEAD'||args.dataAsQueryString;

if(!args.content){
if(body&&!(typeof body==='string'||Buffer.isBuffer(body))){
if(dataAsQueryString){
// read: GET, HEAD, use query string
body=args.nestedQuerystring?qs.stringify(body):querystring.stringify(body);
}else{
var contentType=options.headers['Content-Type']||options.headers['content-type'];// auto add application/x-www-form-urlencoded when using urlencode form request

if(!contentType){
if(args.contentType==='json'){
contentType='application/json';
}else{
contentType='application/x-www-form-urlencoded';
}

options.headers['Content-Type']=contentType;
}

if(parseContentType(contentType)==='application/json'){
body=JSON.stringify(body);
}else{
// 'application/x-www-form-urlencoded'
body=args.nestedQuerystring?qs.stringify(body):querystring.stringify(body);
}
}
}
}// if it's a GET or HEAD request, data should be sent as query string


if(dataAsQueryString&&body){
options.path+=(parsedUrl.query?'&':'?')+body;
body=null;
}

var requestSize=0;

if(body){
var length=body.length;

if(!Buffer.isBuffer(body)){
length=Buffer.byteLength(body);
}

requestSize=options.headers['Content-Length']=length;
}

if(args.dataType==='json'){
options.headers.Accept='application/json';
}

if(typeof args.beforeRequest==='function'){
// you can use this hook to change every thing.
args.beforeRequest(options);
}

var connectTimer=null;
var responseTimer=null;
var __err=null;
var connected=false;// socket connected or not

var keepAliveSocket=false;// request with keepalive socket

var responseSize=0;
var statusCode=-1;
var responseAborted=false;
var remoteAddress='';
var remotePort='';
var timing=null;

if(args.timing){
timing={
// socket assigned
queuing:0,
// dns lookup time
dnslookup:0,
// socket connected
connected:0,
// request sent
requestSent:0,
// Time to first byte (TTFB)
waiting:0,
contentDownload:0};

}

function cancelConnectTimer(){
if(connectTimer){
clearTimeout(connectTimer);
connectTimer=null;
}
}

function cancelResponseTimer(){
if(responseTimer){
clearTimeout(responseTimer);
responseTimer=null;
}
}

function done(err,data,res){
cancelResponseTimer();

if(!callback){
console.warn('[urllib:warn] [%s] [%s] [worker:%s] %s %s callback twice!!!',Date(),reqId,process.pid,options.method,url);// https://github.com/node-modules/urllib/pull/30

if(err){
console.warn('[urllib:warn] [%s] [%s] [worker:%s] %s: %s\nstack: %s',Date(),reqId,process.pid,err.name,err.message,err.stack);
}

return;
}

var cb=callback;
callback=null;
var headers={};

if(res){
statusCode=res.statusCode;
headers=res.headers;
}// handle digest auth
// if (statusCode === 401 && headers['www-authenticate']
//   && (!args.headers || !args.headers.Authorization) && args.digestAuth) {
//   const authenticate = headers['www-authenticate'];
//   if (authenticate.indexOf('Digest ') >= 0) {
//     debug('Request#%d %s: got digest auth header WWW-Authenticate: %s', reqId, url, authenticate);
//     args.headers = args.headers || {};
//     args.headers.Authorization = digestAuthHeader(options.method, options.path, authenticate, args.digestAuth);
//     debug('Request#%d %s: auth with digest header: %s', reqId, url, args.headers.Authorization);
//     if (res.headers['set-cookie']) {
//       args.headers.Cookie = res.headers['set-cookie'].join(';');
//     }
//     return exports.requestWithCallback(url, args, cb);
//   }
// }


var requestUseTime=Date.now()-requestStartTime;

if(timing){
timing.contentDownload=requestUseTime;
}

debug('[%sms] done, %s bytes HTTP %s %s %s %s, keepAliveSocket: %s, timing: %j',requestUseTime,responseSize,statusCode,options.method,options.host,options.path,keepAliveSocket,timing);
var response={
status:statusCode,
statusCode:statusCode,
headers:headers,
size:responseSize,
aborted:responseAborted,
rt:requestUseTime,
keepAliveSocket:keepAliveSocket,
data:data,
requestUrls:args.requestUrls,
timing:timing,
remoteAddress:remoteAddress,
remotePort:remotePort};


if(err){
var agentStatus='';

if(agent&&typeof agent.getCurrentStatus==='function'){
// add current agent status to error message for logging and debug
agentStatus=', agent status: '+JSON.stringify(agent.getCurrentStatus());
}

err.message+=', '+options.method+' '+url+' '+statusCode+' (connected: '+connected+', keepalive socket: '+keepAliveSocket+agentStatus+')'+'\nheaders: '+JSON.stringify(headers);
err.data=data;
err.path=options.path;
err.status=statusCode;
err.headers=headers;
err.res=response;
}

cb(err,data,args.streaming?res:response);

if(args.emitter){
// keep to use the same reqMeta object on request event before
reqMeta.url=url;
reqMeta.socket=req&&req.connection;
reqMeta.options=options;
reqMeta.size=requestSize;
args.emitter.emit('response',{
requestId:reqId,
error:err,
ctx:args.ctx,
req:reqMeta,
res:response});

}
}

function handleRedirect(res){
var err=null;

if(args.followRedirect&&statuses.redirect[res.statusCode]){
// handle redirect
args._followRedirectCount=(args._followRedirectCount||0)+1;
var location=res.headers.location;

if(!location){
err=new Error('Got statusCode '+res.statusCode+' but cannot resolve next location from headers');
err.name='FollowRedirectError';
}else if(args._followRedirectCount>args.maxRedirects){
err=new Error('Exceeded maxRedirects. Probably stuck in a redirect loop '+url);
err.name='MaxRedirectError';
}else{
var newUrl=args.formatRedirectUrl?args.formatRedirectUrl(url,location):urlutil.resolve(url,location);
debug('Request#%d %s: `redirected` from %s to %s',reqId,options.path,url,newUrl);// make sure timer stop

cancelResponseTimer();// should clean up headers.Host on `location: http://other-domain/url`

if(args.headers&&args.headers.Host&&PROTO_RE.test(location)){
args.headers.Host=null;
}// avoid done will be execute in the future change.


var cb=callback;
callback=null;
exports.requestWithCallback(newUrl,args,cb);
return{
redirect:true,
error:null};

}
}

return{
redirect:false,
error:err};

}

if(args.gzip){
if(!options.headers['Accept-Encoding']&&!options.headers['accept-encoding']){
options.headers['Accept-Encoding']='gzip';
}
}

function decodeContent(res,body,cb){
var encoding=res.headers['content-encoding'];// if (body.length === 0) {
//   return cb(null, body, encoding);
// }
// if (!encoding || encoding.toLowerCase() !== 'gzip') {

return cb(null,body,encoding);// }
// debug('gunzip %d length body', body.length);
// zlib.gunzip(body, cb);
}

var writeStream=args.writeStream;
debug('Request#%d %s %s with headers %j, options.path: %s',reqId,method,url,options.headers,options.path);
args.requestUrls.push(url);

function onResponse(res){
if(timing){
timing.waiting=Date.now()-requestStartTime;
}

debug('Request#%d %s `req response` event emit: status %d, headers: %j',reqId,url,res.statusCode,res.headers);

if(args.streaming){
var result=handleRedirect(res);

if(result.redirect){
res.resume();
return;
}

if(result.error){
res.resume();
return done(result.error,null,res);
}

return done(null,null,res);
}

res.on('close',function(){
debug('Request#%d %s: `res close` event emit, total size %d',reqId,url,responseSize);
});
res.on('error',function(){
debug('Request#%d %s: `res error` event emit, total size %d',reqId,url,responseSize);
});
res.on('aborted',function(){
responseAborted=true;
debug('Request#%d %s: `res aborted` event emit, total size %d',reqId,url,responseSize);
});

if(writeStream){
// If there's a writable stream to recieve the response data, just pipe the
// response stream to that writable stream and call the callback when it has
// finished writing.
//
// NOTE that when the response stream `res` emits an 'end' event it just
// means that it has finished piping data to another stream. In the
// meanwhile that writable stream may still writing data to the disk until
// it emits a 'close' event.
//
// That means that we should not apply callback until the 'close' of the
// writable stream is emited.
//
// See also:
// - https://github.com/TBEDP/urllib/commit/959ac3365821e0e028c231a5e8efca6af410eabb
// - http://nodejs.org/api/stream.html#stream_event_end
// - http://nodejs.org/api/stream.html#stream_event_close_1
var _result=handleRedirect(res);

if(_result.redirect){
res.resume();
return;
}

if(_result.error){
res.resume();// end ths stream first

writeStream.end();
return done(_result.error,null,res);
}// you can set consumeWriteStream false that only wait response end


if(args.consumeWriteStream===false){
res.on('end',done.bind(null,null,null,res));
}else{
// node 0.10, 0.12: only emit res aborted, writeStream close not fired
// if (isNode010 || isNode012) {
//   first([
//     [ writeStream, 'close' ],
//     [ res, 'aborted' ],
//   ], function(_, stream, event) {
//     debug('Request#%d %s: writeStream or res %s event emitted', reqId, url, event);
//     done(__err || null, null, res);
//   });
if(false){}else{
writeStream.on('close',function(){
debug('Request#%d %s: writeStream close event emitted',reqId,url);
done(__err||null,null,res);
});
}
}

return res.pipe(writeStream);
}// Otherwise, just concat those buffers.
//
// NOTE that the `chunk` is not a String but a Buffer. It means that if
// you simply concat two chunk with `+` you're actually converting both
// Buffers into Strings before concating them. It'll cause problems when
// dealing with multi-byte characters.
//
// The solution is to store each chunk in an array and concat them with
// 'buffer-concat' when all chunks is recieved.
//
// See also:
// http://cnodejs.org/topic/4faf65852e8fb5bc65113403


var chunks=[];
res.on('data',function(chunk){
debug('Request#%d %s: `res data` event emit, size %d',reqId,url,chunk.length);
responseSize+=chunk.length;
chunks.push(chunk);
});
res.on('end',function(){
var body=Buffer.concat(chunks,responseSize);
debug('Request#%d %s: `res end` event emit, total size %d, _dumped: %s',reqId,url,responseSize,res._dumped);

if(__err){
// req.abort() after `res data` event emit.
return done(__err,body,res);
}

var result=handleRedirect(res);

if(result.error){
return done(result.error,body,res);
}

if(result.redirect){
return;
}

decodeContent(res,body,function(err,data,encoding){
if(err){
return done(err,body,res);
}// if body not decode, dont touch it


if(!encoding&&TEXT_DATA_TYPES.indexOf(args.dataType)>=0){
// try to decode charset
try{
data=decodeBodyByCharset(data,res);
}catch(e){
debug('decodeBodyByCharset error: %s',e);// if error, dont touch it

return done(null,data,res);
}

if(args.dataType==='json'){
if(responseSize===0){
data=null;
}else{
var r=parseJSON(data,fixJSONCtlChars);

if(r.error){
err=r.error;
}else{
data=r.data;
}
}
}
}

if(responseAborted){
// err = new Error('Remote socket was terminated before `response.end()` was called');
// err.name = 'RemoteSocketClosedError';
debug('Request#%d %s: Remote socket was terminated before `response.end()` was called',reqId,url);
}

done(err,data,res);
});
});
}

var connectTimeout,responseTimeout;

if(Array.isArray(args.timeout)){
connectTimeout=ms(args.timeout[0]);
responseTimeout=ms(args.timeout[1]);
}else{
// set both timeout equal
connectTimeout=responseTimeout=ms(args.timeout);
}

debug('ConnectTimeout: %d, ResponseTimeout: %d',connectTimeout,responseTimeout);

function startConnectTimer(){
debug('Connect timer ticking, timeout: %d',connectTimeout);
connectTimer=setTimeout(function(){
connectTimer=null;

if(statusCode===-1){
statusCode=-2;
}

var msg='Connect timeout for '+connectTimeout+'ms';
var errorName='ConnectionTimeoutError';

if(!req.socket){
errorName='SocketAssignTimeoutError';
msg+=', working sockets is full';
}

__err=new Error(msg);
__err.name=errorName;
__err.requestId=reqId;
debug('ConnectTimeout: Request#%d %s %s: %s, connected: %s',reqId,url,__err.name,msg,connected);
abortRequest();
},connectTimeout);
}

function startResposneTimer(){
debug('Response timer ticking, timeout: %d',responseTimeout);
responseTimer=setTimeout(function(){
responseTimer=null;
var msg='Response timeout for '+responseTimeout+'ms';
var errorName='ResponseTimeoutError';
__err=new Error(msg);
__err.name=errorName;
__err.requestId=reqId;
debug('ResponseTimeout: Request#%d %s %s: %s, connected: %s',reqId,url,__err.name,msg,connected);
abortRequest();
},responseTimeout);
}

var req;// request headers checker will throw error

options.mode=args.mode?args.mode:'';

try{
req=httplib.request(options,onResponse);
}catch(err){
return done(err);
}// environment detection: browser or nodejs


if(typeof window==='undefined'){
// start connect timer just after `request` return, and just in nodejs environment
startConnectTimer();
}else{
req.on('requestTimeout',function(){
if(statusCode===-1){
statusCode=-2;
}

var msg='Connect timeout for '+connectTimeout+'ms';
var errorName='ConnectionTimeoutError';
__err=new Error(msg);
__err.name=errorName;
__err.requestId=reqId;
abortRequest();
});
}

function abortRequest(){
debug('Request#%d %s abort, connected: %s',reqId,url,connected);// it wont case error event when req haven't been assigned a socket yet.

if(!req.socket){
__err.noSocket=true;
done(__err);
}

req.abort();
}

if(timing){
// request sent
req.on('finish',function(){
timing.requestSent=Date.now()-requestStartTime;
});
}

req.once('socket',function(socket){
if(timing){
// socket queuing time
timing.queuing=Date.now()-requestStartTime;
}// https://github.com/nodejs/node/blob/master/lib/net.js#L377
// https://github.com/nodejs/node/blob/v0.10.40-release/lib/net.js#L352
// should use socket.socket on 0.10.x
// if (isNode010 && socket.socket) {
//   socket = socket.socket;
// }


var readyState=socket.readyState;

if(readyState==='opening'){
socket.once('lookup',function(err,ip,addressType){
debug('Request#%d %s lookup: %s, %s, %s',reqId,url,err,ip,addressType);

if(timing){
timing.dnslookup=Date.now()-requestStartTime;
}

if(ip){
remoteAddress=ip;
}
});
socket.once('connect',function(){
if(timing){
// socket connected
timing.connected=Date.now()-requestStartTime;
}// cancel socket timer at first and start tick for TTFB


cancelConnectTimer();
startResposneTimer();
debug('Request#%d %s new socket connected',reqId,url);
connected=true;

if(!remoteAddress){
remoteAddress=socket.remoteAddress;
}

remotePort=socket.remotePort;
});
return;
}

debug('Request#%d %s reuse socket connected, readyState: %s',reqId,url,readyState);
connected=true;
keepAliveSocket=true;

if(!remoteAddress){
remoteAddress=socket.remoteAddress;
}

remotePort=socket.remotePort;// reuse socket, timer should be canceled.

cancelConnectTimer();
startResposneTimer();
});
req.on('error',function(err){
//TypeError for browser fetch api, Error for browser xmlhttprequest api
if(err.name==='Error'||err.name==='TypeError'){
err.name=connected?'ResponseError':'RequestError';
}

err.message+=' (req "error")';
debug('Request#%d %s `req error` event emit, %s: %s',reqId,url,err.name,err.message);
done(__err||err);
});

if(writeStream){
writeStream.once('error',function(err){
err.message+=' (writeStream "error")';
__err=err;
debug('Request#%d %s `writeStream error` event emit, %s: %s',reqId,url,err.name,err.message);
abortRequest();
});
}

if(args.stream){
args.stream.pipe(req);
args.stream.once('error',function(err){
err.message+=' (stream "error")';
__err=err;
debug('Request#%d %s `readStream error` event emit, %s: %s',reqId,url,err.name,err.message);
abortRequest();
});
}else{
req.end(body);
}

req.requestId=reqId;
return req;
};

}).call(this,require('_process'),require("buffer").Buffer);
},{"@babel/runtime/helpers/interopRequireDefault":72,"@babel/runtime/helpers/typeof":73,"_process":392,"buffer":99,"core-js/modules/es.array.concat":234,"core-js/modules/es.array.index-of":241,"core-js/modules/es.function.name":249,"core-js/modules/es.object.to-string":254,"core-js/modules/es.promise":255,"core-js/modules/es.regexp.exec":256,"core-js/modules/es.string.split":263,"core-js/modules/es.string.trim":264,"debug":390,"http":80,"https":297,"humanize-ms":298,"url":393,"util":345}]},{},[1])(1);
});
/* WEBPACK VAR INJECTION */}.call(this, __webpack_require__(/*! ./../../../../../../../Applications/HBuilderX.app/Contents/HBuilderX/plugins/uniapp-cli/node_modules/webpack/buildin/global.js */ 2)))

/***/ }),
/* 77 */
/*!**********************************************************************!*\
  !*** /Users/xingmangkeji/vue/yimei/node_modules/js-base64/base64.js ***!
  \**********************************************************************/
/*! no static exports found */
/***/ (function(module, exports, __webpack_require__) {

/* WEBPACK VAR INJECTION */(function(global, Buffer) {function _toConsumableArray(arr) {return _arrayWithoutHoles(arr) || _iterableToArray(arr) || _unsupportedIterableToArray(arr) || _nonIterableSpread();}function _nonIterableSpread() {throw new TypeError("Invalid attempt to spread non-iterable instance.\nIn order to be iterable, non-array objects must have a [Symbol.iterator]() method.");}function _unsupportedIterableToArray(o, minLen) {if (!o) return;if (typeof o === "string") return _arrayLikeToArray(o, minLen);var n = Object.prototype.toString.call(o).slice(8, -1);if (n === "Object" && o.constructor) n = o.constructor.name;if (n === "Map" || n === "Set") return Array.from(o);if (n === "Arguments" || /^(?:Ui|I)nt(?:8|16|32)(?:Clamped)?Array$/.test(n)) return _arrayLikeToArray(o, minLen);}function _iterableToArray(iter) {if (typeof Symbol !== "undefined" && Symbol.iterator in Object(iter)) return Array.from(iter);}function _arrayWithoutHoles(arr) {if (Array.isArray(arr)) return _arrayLikeToArray(arr);}function _arrayLikeToArray(arr, len) {if (len == null || len > arr.length) len = arr.length;for (var i = 0, arr2 = new Array(len); i < len; i++) {arr2[i] = arr[i];}return arr2;}

//
// THIS FILE IS AUTOMATICALLY GENERATED! DO NOT EDIT BY HAND!
//
;(function (global, factory) {
   true ?
  module.exports = factory() :
  undefined;
})(typeof self !== 'undefined' ? self :
typeof window !== 'undefined' ? window :
typeof global !== 'undefined' ? global :
this,
function () {
  'use strict';

  /**
                 *  base64.ts
                 *
                 *  Licensed under the BSD 3-Clause License.
                 *    http://opensource.org/licenses/BSD-3-Clause
                 *
                 *  References:
                 *    http://en.wikipedia.org/wiki/Base64
                 *
                 * @author Dan Kogai (https://github.com/dankogai)
                 */
  var version = '3.6.1';
  /**
                          * @deprecated use lowercase `version`.
                          */
  var VERSION = version;
  var _hasatob = typeof atob === 'function';
  var _hasbtoa = typeof btoa === 'function';
  var _hasBuffer = typeof Buffer === 'function';
  var _TD = typeof TextDecoder === 'function' ? new TextDecoder() : undefined;
  var _TE = typeof TextEncoder === 'function' ? new TextEncoder() : undefined;
  var b64ch = 'ABCDEFGHIJKLMNOPQRSTUVWXYZabcdefghijklmnopqrstuvwxyz0123456789+/=';
  var b64chs = _toConsumableArray(b64ch);
  var b64tab = function (a) {
    var tab = {};
    a.forEach(function (c, i) {return tab[c] = i;});
    return tab;
  }(b64chs);
  var b64re = /^(?:[A-Za-z\d+\/]{4})*?(?:[A-Za-z\d+\/]{2}(?:==)?|[A-Za-z\d+\/]{3}=?)?$/;
  var _fromCC = String.fromCharCode.bind(String);
  var _U8Afrom = typeof Uint8Array.from === 'function' ?
  Uint8Array.from.bind(Uint8Array) :
  function (it) {var fn = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : function (x) {return x;};return new Uint8Array(Array.prototype.slice.call(it, 0).map(fn));};
  var _mkUriSafe = function _mkUriSafe(src) {return src.
    replace(/[+\/]/g, function (m0) {return m0 == '+' ? '-' : '_';}).
    replace(/=+$/m, '');};
  var _tidyB64 = function _tidyB64(s) {return s.replace(/[^A-Za-z0-9\+\/]/g, '');};
  /**
                                                                                     * polyfill version of `btoa`
                                                                                     */
  var btoaPolyfill = function btoaPolyfill(bin) {
    // console.log('polyfilled');
    var u32,c0,c1,c2,asc = '';
    var pad = bin.length % 3;
    for (var i = 0; i < bin.length;) {
      if ((c0 = bin.charCodeAt(i++)) > 255 ||
      (c1 = bin.charCodeAt(i++)) > 255 ||
      (c2 = bin.charCodeAt(i++)) > 255)
      throw new TypeError('invalid character found');
      u32 = c0 << 16 | c1 << 8 | c2;
      asc += b64chs[u32 >> 18 & 63] +
      b64chs[u32 >> 12 & 63] +
      b64chs[u32 >> 6 & 63] +
      b64chs[u32 & 63];
    }
    return pad ? asc.slice(0, pad - 3) + "===".substring(pad) : asc;
  };
  /**
      * does what `window.btoa` of web browsers do.
      * @param {String} bin binary string
      * @returns {string} Base64-encoded string
      */
  var _btoa = _hasbtoa ? function (bin) {return btoa(bin);} :
  _hasBuffer ? function (bin) {return Buffer.from(bin, 'binary').toString('base64');} :
  btoaPolyfill;
  var _fromUint8Array = _hasBuffer ?
  function (u8a) {return Buffer.from(u8a).toString('base64');} :
  function (u8a) {
    // cf. https://stackoverflow.com/questions/12710001/how-to-convert-uint8-array-to-base64-encoded-string/12713326#12713326
    var maxargs = 0x1000;
    var strs = [];
    for (var i = 0, l = u8a.length; i < l; i += maxargs) {
      strs.push(_fromCC.apply(null, u8a.subarray(i, i + maxargs)));
    }
    return _btoa(strs.join(''));
  };
  /**
      * converts a Uint8Array to a Base64 string.
      * @param {boolean} [urlsafe] URL-and-filename-safe a la RFC4648 §5
      * @returns {string} Base64 string
      */
  var fromUint8Array = function fromUint8Array(u8a) {var urlsafe = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : false;return urlsafe ? _mkUriSafe(_fromUint8Array(u8a)) : _fromUint8Array(u8a);};
  // This trick is found broken https://github.com/dankogai/js-base64/issues/130
  // const utob = (src: string) => unescape(encodeURIComponent(src));
  // reverting good old fationed regexp
  var cb_utob = function cb_utob(c) {
    if (c.length < 2) {
      var cc = c.charCodeAt(0);
      return cc < 0x80 ? c :
      cc < 0x800 ? _fromCC(0xc0 | cc >>> 6) +
      _fromCC(0x80 | cc & 0x3f) :
      _fromCC(0xe0 | cc >>> 12 & 0x0f) +
      _fromCC(0x80 | cc >>> 6 & 0x3f) +
      _fromCC(0x80 | cc & 0x3f);
    } else
    {
      var cc = 0x10000 +
      (c.charCodeAt(0) - 0xD800) * 0x400 + (
      c.charCodeAt(1) - 0xDC00);
      return _fromCC(0xf0 | cc >>> 18 & 0x07) +
      _fromCC(0x80 | cc >>> 12 & 0x3f) +
      _fromCC(0x80 | cc >>> 6 & 0x3f) +
      _fromCC(0x80 | cc & 0x3f);
    }
  };
  var re_utob = /[\uD800-\uDBFF][\uDC00-\uDFFFF]|[^\x00-\x7F]/g;
  /**
                                                                  * @deprecated should have been internal use only.
                                                                  * @param {string} src UTF-8 string
                                                                  * @returns {string} UTF-16 string
                                                                  */
  var utob = function utob(u) {return u.replace(re_utob, cb_utob);};
  //
  var _encode = _hasBuffer ?
  function (s) {return Buffer.from(s, 'utf8').toString('base64');} :
  _TE ?
  function (s) {return _fromUint8Array(_TE.encode(s));} :
  function (s) {return _btoa(utob(s));};
  /**
                                          * converts a UTF-8-encoded string to a Base64 string.
                                          * @param {boolean} [urlsafe] if `true` make the result URL-safe
                                          * @returns {string} Base64 string
                                          */
  var encode = function encode(src) {var urlsafe = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : false;return urlsafe ?
    _mkUriSafe(_encode(src)) :
    _encode(src);};
  /**
                     * converts a UTF-8-encoded string to URL-safe Base64 RFC4648 §5.
                     * @returns {string} Base64 string
                     */
  var encodeURI = function encodeURI(src) {return encode(src, true);};
  // This trick is found broken https://github.com/dankogai/js-base64/issues/130
  // const btou = (src: string) => decodeURIComponent(escape(src));
  // reverting good old fationed regexp
  var re_btou = /[\xC0-\xDF][\x80-\xBF]|[\xE0-\xEF][\x80-\xBF]{2}|[\xF0-\xF7][\x80-\xBF]{3}/g;
  var cb_btou = function cb_btou(cccc) {
    switch (cccc.length) {
      case 4:
        var cp = (0x07 & cccc.charCodeAt(0)) << 18 |
        (0x3f & cccc.charCodeAt(1)) << 12 |
        (0x3f & cccc.charCodeAt(2)) << 6 |
        0x3f & cccc.charCodeAt(3),offset = cp - 0x10000;
        return _fromCC((offset >>> 10) + 0xD800) +
        _fromCC((offset & 0x3FF) + 0xDC00);
      case 3:
        return _fromCC((0x0f & cccc.charCodeAt(0)) << 12 |
        (0x3f & cccc.charCodeAt(1)) << 6 |
        0x3f & cccc.charCodeAt(2));
      default:
        return _fromCC((0x1f & cccc.charCodeAt(0)) << 6 |
        0x3f & cccc.charCodeAt(1));}

  };
  /**
      * @deprecated should have been internal use only.
      * @param {string} src UTF-16 string
      * @returns {string} UTF-8 string
      */
  var btou = function btou(b) {return b.replace(re_btou, cb_btou);};
  /**
                                                                      * polyfill version of `atob`
                                                                      */
  var atobPolyfill = function atobPolyfill(asc) {
    // console.log('polyfilled');
    asc = asc.replace(/\s+/g, '');
    if (!b64re.test(asc))
    throw new TypeError('malformed base64.');
    asc += '=='.slice(2 - (asc.length & 3));
    var u24,bin = '',r1,r2;
    for (var i = 0; i < asc.length;) {
      u24 = b64tab[asc.charAt(i++)] << 18 |
      b64tab[asc.charAt(i++)] << 12 |
      (r1 = b64tab[asc.charAt(i++)]) << 6 | (
      r2 = b64tab[asc.charAt(i++)]);
      bin += r1 === 64 ? _fromCC(u24 >> 16 & 255) :
      r2 === 64 ? _fromCC(u24 >> 16 & 255, u24 >> 8 & 255) :
      _fromCC(u24 >> 16 & 255, u24 >> 8 & 255, u24 & 255);
    }
    return bin;
  };
  /**
      * does what `window.atob` of web browsers do.
      * @param {String} asc Base64-encoded string
      * @returns {string} binary string
      */
  var _atob = _hasatob ? function (asc) {return atob(_tidyB64(asc));} :
  _hasBuffer ? function (asc) {return Buffer.from(asc, 'base64').toString('binary');} :
  atobPolyfill;
  //
  var _toUint8Array = _hasBuffer ?
  function (a) {return _U8Afrom(Buffer.from(a, 'base64'));} :
  function (a) {return _U8Afrom(_atob(a), function (c) {return c.charCodeAt(0);});};
  /**
                                                                                      * converts a Base64 string to a Uint8Array.
                                                                                      */
  var toUint8Array = function toUint8Array(a) {return _toUint8Array(_unURI(a));};
  //
  var _decode = _hasBuffer ?
  function (a) {return Buffer.from(a, 'base64').toString('utf8');} :
  _TD ?
  function (a) {return _TD.decode(_toUint8Array(a));} :
  function (a) {return btou(_atob(a));};
  var _unURI = function _unURI(a) {return _tidyB64(a.replace(/[-_]/g, function (m0) {return m0 == '-' ? '+' : '/';}));};
  /**
                                                                                                                          * converts a Base64 string to a UTF-8 string.
                                                                                                                          * @param {String} src Base64 string.  Both normal and URL-safe are supported
                                                                                                                          * @returns {string} UTF-8 string
                                                                                                                          */
  var decode = function decode(src) {return _decode(_unURI(src));};
  /**
                                                                     * check if a value is a valid Base64 string
                                                                     * @param {String} src a value to check
                                                                      */
  var isValid = function isValid(src) {
    if (typeof src !== 'string')
    return false;
    var s = src.replace(/\s+/g, '').replace(/=+$/, '');
    return !/[^\s0-9a-zA-Z\+/]/.test(s) || !/[^\s0-9a-zA-Z\-_]/.test(s);
  };
  //
  var _noEnum = function _noEnum(v) {
    return {
      value: v, enumerable: false, writable: true, configurable: true };

  };
  /**
      * extend String.prototype with relevant methods
      */
  var extendString = function extendString() {
    var _add = function _add(name, body) {return Object.defineProperty(String.prototype, name, _noEnum(body));};
    _add('fromBase64', function () {return decode(this);});
    _add('toBase64', function (urlsafe) {return encode(this, urlsafe);});
    _add('toBase64URI', function () {return encode(this, true);});
    _add('toBase64URL', function () {return encode(this, true);});
    _add('toUint8Array', function () {return toUint8Array(this);});
  };
  /**
      * extend Uint8Array.prototype with relevant methods
      */
  var extendUint8Array = function extendUint8Array() {
    var _add = function _add(name, body) {return Object.defineProperty(Uint8Array.prototype, name, _noEnum(body));};
    _add('toBase64', function (urlsafe) {return fromUint8Array(this, urlsafe);});
    _add('toBase64URI', function () {return fromUint8Array(this, true);});
    _add('toBase64URL', function () {return fromUint8Array(this, true);});
  };
  /**
      * extend Builtin prototypes with relevant methods
      */
  var extendBuiltins = function extendBuiltins() {
    extendString();
    extendUint8Array();
  };
  var gBase64 = {
    version: version,
    VERSION: VERSION,
    atob: _atob,
    atobPolyfill: atobPolyfill,
    btoa: _btoa,
    btoaPolyfill: btoaPolyfill,
    fromBase64: decode,
    toBase64: encode,
    encode: encode,
    encodeURI: encodeURI,
    encodeURL: encodeURI,
    utob: utob,
    btou: btou,
    decode: decode,
    isValid: isValid,
    fromUint8Array: fromUint8Array,
    toUint8Array: toUint8Array,
    extendString: extendString,
    extendUint8Array: extendUint8Array,
    extendBuiltins: extendBuiltins };


  //
  // export Base64 to the namespace
  //
  // ES5 is yet to have Object.assign() that may make transpilers unhappy.
  // gBase64.Base64 = Object.assign({}, gBase64);
  gBase64.Base64 = {};
  Object.keys(gBase64).forEach(function (k) {return gBase64.Base64[k] = gBase64[k];});
  return gBase64;
});
/* WEBPACK VAR INJECTION */}.call(this, __webpack_require__(/*! ./../../../../../../Applications/HBuilderX.app/Contents/HBuilderX/plugins/uniapp-cli/node_modules/webpack/buildin/global.js */ 2), __webpack_require__(/*! ./../../../../../../Applications/HBuilderX.app/Contents/HBuilderX/plugins/uniapp-cli/node_modules/buffer/index.js */ 78).Buffer))

/***/ }),
/* 78 */
/*!**************************************!*\
  !*** ./node_modules/buffer/index.js ***!
  \**************************************/
/*! no static exports found */
/***/ (function(module, exports, __webpack_require__) {

"use strict";
/* WEBPACK VAR INJECTION */(function(global) {/*!
 * The buffer module from node.js, for the browser.
 *
 * @author   Feross Aboukhadijeh <http://feross.org>
 * @license  MIT
 */
/* eslint-disable no-proto */



var base64 = __webpack_require__(/*! base64-js */ 79)
var ieee754 = __webpack_require__(/*! ieee754 */ 80)
var isArray = __webpack_require__(/*! isarray */ 81)

exports.Buffer = Buffer
exports.SlowBuffer = SlowBuffer
exports.INSPECT_MAX_BYTES = 50

/**
 * If `Buffer.TYPED_ARRAY_SUPPORT`:
 *   === true    Use Uint8Array implementation (fastest)
 *   === false   Use Object implementation (most compatible, even IE6)
 *
 * Browsers that support typed arrays are IE 10+, Firefox 4+, Chrome 7+, Safari 5.1+,
 * Opera 11.6+, iOS 4.2+.
 *
 * Due to various browser bugs, sometimes the Object implementation will be used even
 * when the browser supports typed arrays.
 *
 * Note:
 *
 *   - Firefox 4-29 lacks support for adding new properties to `Uint8Array` instances,
 *     See: https://bugzilla.mozilla.org/show_bug.cgi?id=695438.
 *
 *   - Chrome 9-10 is missing the `TypedArray.prototype.subarray` function.
 *
 *   - IE10 has a broken `TypedArray.prototype.subarray` function which returns arrays of
 *     incorrect length in some situations.

 * We detect these buggy browsers and set `Buffer.TYPED_ARRAY_SUPPORT` to `false` so they
 * get the Object implementation, which is slower but behaves correctly.
 */
Buffer.TYPED_ARRAY_SUPPORT = global.TYPED_ARRAY_SUPPORT !== undefined
  ? global.TYPED_ARRAY_SUPPORT
  : typedArraySupport()

/*
 * Export kMaxLength after typed array support is determined.
 */
exports.kMaxLength = kMaxLength()

function typedArraySupport () {
  try {
    var arr = new Uint8Array(1)
    arr.__proto__ = {__proto__: Uint8Array.prototype, foo: function () { return 42 }}
    return arr.foo() === 42 && // typed array instances can be augmented
        typeof arr.subarray === 'function' && // chrome 9-10 lack `subarray`
        arr.subarray(1, 1).byteLength === 0 // ie10 has broken `subarray`
  } catch (e) {
    return false
  }
}

function kMaxLength () {
  return Buffer.TYPED_ARRAY_SUPPORT
    ? 0x7fffffff
    : 0x3fffffff
}

function createBuffer (that, length) {
  if (kMaxLength() < length) {
    throw new RangeError('Invalid typed array length')
  }
  if (Buffer.TYPED_ARRAY_SUPPORT) {
    // Return an augmented `Uint8Array` instance, for best performance
    that = new Uint8Array(length)
    that.__proto__ = Buffer.prototype
  } else {
    // Fallback: Return an object instance of the Buffer class
    if (that === null) {
      that = new Buffer(length)
    }
    that.length = length
  }

  return that
}

/**
 * The Buffer constructor returns instances of `Uint8Array` that have their
 * prototype changed to `Buffer.prototype`. Furthermore, `Buffer` is a subclass of
 * `Uint8Array`, so the returned instances will have all the node `Buffer` methods
 * and the `Uint8Array` methods. Square bracket notation works as expected -- it
 * returns a single octet.
 *
 * The `Uint8Array` prototype remains unmodified.
 */

function Buffer (arg, encodingOrOffset, length) {
  if (!Buffer.TYPED_ARRAY_SUPPORT && !(this instanceof Buffer)) {
    return new Buffer(arg, encodingOrOffset, length)
  }

  // Common case.
  if (typeof arg === 'number') {
    if (typeof encodingOrOffset === 'string') {
      throw new Error(
        'If encoding is specified then the first argument must be a string'
      )
    }
    return allocUnsafe(this, arg)
  }
  return from(this, arg, encodingOrOffset, length)
}

Buffer.poolSize = 8192 // not used by this implementation

// TODO: Legacy, not needed anymore. Remove in next major version.
Buffer._augment = function (arr) {
  arr.__proto__ = Buffer.prototype
  return arr
}

function from (that, value, encodingOrOffset, length) {
  if (typeof value === 'number') {
    throw new TypeError('"value" argument must not be a number')
  }

  if (typeof ArrayBuffer !== 'undefined' && value instanceof ArrayBuffer) {
    return fromArrayBuffer(that, value, encodingOrOffset, length)
  }

  if (typeof value === 'string') {
    return fromString(that, value, encodingOrOffset)
  }

  return fromObject(that, value)
}

/**
 * Functionally equivalent to Buffer(arg, encoding) but throws a TypeError
 * if value is a number.
 * Buffer.from(str[, encoding])
 * Buffer.from(array)
 * Buffer.from(buffer)
 * Buffer.from(arrayBuffer[, byteOffset[, length]])
 **/
Buffer.from = function (value, encodingOrOffset, length) {
  return from(null, value, encodingOrOffset, length)
}

if (Buffer.TYPED_ARRAY_SUPPORT) {
  Buffer.prototype.__proto__ = Uint8Array.prototype
  Buffer.__proto__ = Uint8Array
  if (typeof Symbol !== 'undefined' && Symbol.species &&
      Buffer[Symbol.species] === Buffer) {
    // Fix subarray() in ES2016. See: https://github.com/feross/buffer/pull/97
    Object.defineProperty(Buffer, Symbol.species, {
      value: null,
      configurable: true
    })
  }
}

function assertSize (size) {
  if (typeof size !== 'number') {
    throw new TypeError('"size" argument must be a number')
  } else if (size < 0) {
    throw new RangeError('"size" argument must not be negative')
  }
}

function alloc (that, size, fill, encoding) {
  assertSize(size)
  if (size <= 0) {
    return createBuffer(that, size)
  }
  if (fill !== undefined) {
    // Only pay attention to encoding if it's a string. This
    // prevents accidentally sending in a number that would
    // be interpretted as a start offset.
    return typeof encoding === 'string'
      ? createBuffer(that, size).fill(fill, encoding)
      : createBuffer(that, size).fill(fill)
  }
  return createBuffer(that, size)
}

/**
 * Creates a new filled Buffer instance.
 * alloc(size[, fill[, encoding]])
 **/
Buffer.alloc = function (size, fill, encoding) {
  return alloc(null, size, fill, encoding)
}

function allocUnsafe (that, size) {
  assertSize(size)
  that = createBuffer(that, size < 0 ? 0 : checked(size) | 0)
  if (!Buffer.TYPED_ARRAY_SUPPORT) {
    for (var i = 0; i < size; ++i) {
      that[i] = 0
    }
  }
  return that
}

/**
 * Equivalent to Buffer(num), by default creates a non-zero-filled Buffer instance.
 * */
Buffer.allocUnsafe = function (size) {
  return allocUnsafe(null, size)
}
/**
 * Equivalent to SlowBuffer(num), by default creates a non-zero-filled Buffer instance.
 */
Buffer.allocUnsafeSlow = function (size) {
  return allocUnsafe(null, size)
}

function fromString (that, string, encoding) {
  if (typeof encoding !== 'string' || encoding === '') {
    encoding = 'utf8'
  }

  if (!Buffer.isEncoding(encoding)) {
    throw new TypeError('"encoding" must be a valid string encoding')
  }

  var length = byteLength(string, encoding) | 0
  that = createBuffer(that, length)

  var actual = that.write(string, encoding)

  if (actual !== length) {
    // Writing a hex string, for example, that contains invalid characters will
    // cause everything after the first invalid character to be ignored. (e.g.
    // 'abxxcd' will be treated as 'ab')
    that = that.slice(0, actual)
  }

  return that
}

function fromArrayLike (that, array) {
  var length = array.length < 0 ? 0 : checked(array.length) | 0
  that = createBuffer(that, length)
  for (var i = 0; i < length; i += 1) {
    that[i] = array[i] & 255
  }
  return that
}

function fromArrayBuffer (that, array, byteOffset, length) {
  array.byteLength // this throws if `array` is not a valid ArrayBuffer

  if (byteOffset < 0 || array.byteLength < byteOffset) {
    throw new RangeError('\'offset\' is out of bounds')
  }

  if (array.byteLength < byteOffset + (length || 0)) {
    throw new RangeError('\'length\' is out of bounds')
  }

  if (byteOffset === undefined && length === undefined) {
    array = new Uint8Array(array)
  } else if (length === undefined) {
    array = new Uint8Array(array, byteOffset)
  } else {
    array = new Uint8Array(array, byteOffset, length)
  }

  if (Buffer.TYPED_ARRAY_SUPPORT) {
    // Return an augmented `Uint8Array` instance, for best performance
    that = array
    that.__proto__ = Buffer.prototype
  } else {
    // Fallback: Return an object instance of the Buffer class
    that = fromArrayLike(that, array)
  }
  return that
}

function fromObject (that, obj) {
  if (Buffer.isBuffer(obj)) {
    var len = checked(obj.length) | 0
    that = createBuffer(that, len)

    if (that.length === 0) {
      return that
    }

    obj.copy(that, 0, 0, len)
    return that
  }

  if (obj) {
    if ((typeof ArrayBuffer !== 'undefined' &&
        obj.buffer instanceof ArrayBuffer) || 'length' in obj) {
      if (typeof obj.length !== 'number' || isnan(obj.length)) {
        return createBuffer(that, 0)
      }
      return fromArrayLike(that, obj)
    }

    if (obj.type === 'Buffer' && isArray(obj.data)) {
      return fromArrayLike(that, obj.data)
    }
  }

  throw new TypeError('First argument must be a string, Buffer, ArrayBuffer, Array, or array-like object.')
}

function checked (length) {
  // Note: cannot use `length < kMaxLength()` here because that fails when
  // length is NaN (which is otherwise coerced to zero.)
  if (length >= kMaxLength()) {
    throw new RangeError('Attempt to allocate Buffer larger than maximum ' +
                         'size: 0x' + kMaxLength().toString(16) + ' bytes')
  }
  return length | 0
}

function SlowBuffer (length) {
  if (+length != length) { // eslint-disable-line eqeqeq
    length = 0
  }
  return Buffer.alloc(+length)
}

Buffer.isBuffer = function isBuffer (b) {
  return !!(b != null && b._isBuffer)
}

Buffer.compare = function compare (a, b) {
  if (!Buffer.isBuffer(a) || !Buffer.isBuffer(b)) {
    throw new TypeError('Arguments must be Buffers')
  }

  if (a === b) return 0

  var x = a.length
  var y = b.length

  for (var i = 0, len = Math.min(x, y); i < len; ++i) {
    if (a[i] !== b[i]) {
      x = a[i]
      y = b[i]
      break
    }
  }

  if (x < y) return -1
  if (y < x) return 1
  return 0
}

Buffer.isEncoding = function isEncoding (encoding) {
  switch (String(encoding).toLowerCase()) {
    case 'hex':
    case 'utf8':
    case 'utf-8':
    case 'ascii':
    case 'latin1':
    case 'binary':
    case 'base64':
    case 'ucs2':
    case 'ucs-2':
    case 'utf16le':
    case 'utf-16le':
      return true
    default:
      return false
  }
}

Buffer.concat = function concat (list, length) {
  if (!isArray(list)) {
    throw new TypeError('"list" argument must be an Array of Buffers')
  }

  if (list.length === 0) {
    return Buffer.alloc(0)
  }

  var i
  if (length === undefined) {
    length = 0
    for (i = 0; i < list.length; ++i) {
      length += list[i].length
    }
  }

  var buffer = Buffer.allocUnsafe(length)
  var pos = 0
  for (i = 0; i < list.length; ++i) {
    var buf = list[i]
    if (!Buffer.isBuffer(buf)) {
      throw new TypeError('"list" argument must be an Array of Buffers')
    }
    buf.copy(buffer, pos)
    pos += buf.length
  }
  return buffer
}

function byteLength (string, encoding) {
  if (Buffer.isBuffer(string)) {
    return string.length
  }
  if (typeof ArrayBuffer !== 'undefined' && typeof ArrayBuffer.isView === 'function' &&
      (ArrayBuffer.isView(string) || string instanceof ArrayBuffer)) {
    return string.byteLength
  }
  if (typeof string !== 'string') {
    string = '' + string
  }

  var len = string.length
  if (len === 0) return 0

  // Use a for loop to avoid recursion
  var loweredCase = false
  for (;;) {
    switch (encoding) {
      case 'ascii':
      case 'latin1':
      case 'binary':
        return len
      case 'utf8':
      case 'utf-8':
      case undefined:
        return utf8ToBytes(string).length
      case 'ucs2':
      case 'ucs-2':
      case 'utf16le':
      case 'utf-16le':
        return len * 2
      case 'hex':
        return len >>> 1
      case 'base64':
        return base64ToBytes(string).length
      default:
        if (loweredCase) return utf8ToBytes(string).length // assume utf8
        encoding = ('' + encoding).toLowerCase()
        loweredCase = true
    }
  }
}
Buffer.byteLength = byteLength

function slowToString (encoding, start, end) {
  var loweredCase = false

  // No need to verify that "this.length <= MAX_UINT32" since it's a read-only
  // property of a typed array.

  // This behaves neither like String nor Uint8Array in that we set start/end
  // to their upper/lower bounds if the value passed is out of range.
  // undefined is handled specially as per ECMA-262 6th Edition,
  // Section 13.3.3.7 Runtime Semantics: KeyedBindingInitialization.
  if (start === undefined || start < 0) {
    start = 0
  }
  // Return early if start > this.length. Done here to prevent potential uint32
  // coercion fail below.
  if (start > this.length) {
    return ''
  }

  if (end === undefined || end > this.length) {
    end = this.length
  }

  if (end <= 0) {
    return ''
  }

  // Force coersion to uint32. This will also coerce falsey/NaN values to 0.
  end >>>= 0
  start >>>= 0

  if (end <= start) {
    return ''
  }

  if (!encoding) encoding = 'utf8'

  while (true) {
    switch (encoding) {
      case 'hex':
        return hexSlice(this, start, end)

      case 'utf8':
      case 'utf-8':
        return utf8Slice(this, start, end)

      case 'ascii':
        return asciiSlice(this, start, end)

      case 'latin1':
      case 'binary':
        return latin1Slice(this, start, end)

      case 'base64':
        return base64Slice(this, start, end)

      case 'ucs2':
      case 'ucs-2':
      case 'utf16le':
      case 'utf-16le':
        return utf16leSlice(this, start, end)

      default:
        if (loweredCase) throw new TypeError('Unknown encoding: ' + encoding)
        encoding = (encoding + '').toLowerCase()
        loweredCase = true
    }
  }
}

// The property is used by `Buffer.isBuffer` and `is-buffer` (in Safari 5-7) to detect
// Buffer instances.
Buffer.prototype._isBuffer = true

function swap (b, n, m) {
  var i = b[n]
  b[n] = b[m]
  b[m] = i
}

Buffer.prototype.swap16 = function swap16 () {
  var len = this.length
  if (len % 2 !== 0) {
    throw new RangeError('Buffer size must be a multiple of 16-bits')
  }
  for (var i = 0; i < len; i += 2) {
    swap(this, i, i + 1)
  }
  return this
}

Buffer.prototype.swap32 = function swap32 () {
  var len = this.length
  if (len % 4 !== 0) {
    throw new RangeError('Buffer size must be a multiple of 32-bits')
  }
  for (var i = 0; i < len; i += 4) {
    swap(this, i, i + 3)
    swap(this, i + 1, i + 2)
  }
  return this
}

Buffer.prototype.swap64 = function swap64 () {
  var len = this.length
  if (len % 8 !== 0) {
    throw new RangeError('Buffer size must be a multiple of 64-bits')
  }
  for (var i = 0; i < len; i += 8) {
    swap(this, i, i + 7)
    swap(this, i + 1, i + 6)
    swap(this, i + 2, i + 5)
    swap(this, i + 3, i + 4)
  }
  return this
}

Buffer.prototype.toString = function toString () {
  var length = this.length | 0
  if (length === 0) return ''
  if (arguments.length === 0) return utf8Slice(this, 0, length)
  return slowToString.apply(this, arguments)
}

Buffer.prototype.equals = function equals (b) {
  if (!Buffer.isBuffer(b)) throw new TypeError('Argument must be a Buffer')
  if (this === b) return true
  return Buffer.compare(this, b) === 0
}

Buffer.prototype.inspect = function inspect () {
  var str = ''
  var max = exports.INSPECT_MAX_BYTES
  if (this.length > 0) {
    str = this.toString('hex', 0, max).match(/.{2}/g).join(' ')
    if (this.length > max) str += ' ... '
  }
  return '<Buffer ' + str + '>'
}

Buffer.prototype.compare = function compare (target, start, end, thisStart, thisEnd) {
  if (!Buffer.isBuffer(target)) {
    throw new TypeError('Argument must be a Buffer')
  }

  if (start === undefined) {
    start = 0
  }
  if (end === undefined) {
    end = target ? target.length : 0
  }
  if (thisStart === undefined) {
    thisStart = 0
  }
  if (thisEnd === undefined) {
    thisEnd = this.length
  }

  if (start < 0 || end > target.length || thisStart < 0 || thisEnd > this.length) {
    throw new RangeError('out of range index')
  }

  if (thisStart >= thisEnd && start >= end) {
    return 0
  }
  if (thisStart >= thisEnd) {
    return -1
  }
  if (start >= end) {
    return 1
  }

  start >>>= 0
  end >>>= 0
  thisStart >>>= 0
  thisEnd >>>= 0

  if (this === target) return 0

  var x = thisEnd - thisStart
  var y = end - start
  var len = Math.min(x, y)

  var thisCopy = this.slice(thisStart, thisEnd)
  var targetCopy = target.slice(start, end)

  for (var i = 0; i < len; ++i) {
    if (thisCopy[i] !== targetCopy[i]) {
      x = thisCopy[i]
      y = targetCopy[i]
      break
    }
  }

  if (x < y) return -1
  if (y < x) return 1
  return 0
}

// Finds either the first index of `val` in `buffer` at offset >= `byteOffset`,
// OR the last index of `val` in `buffer` at offset <= `byteOffset`.
//
// Arguments:
// - buffer - a Buffer to search
// - val - a string, Buffer, or number
// - byteOffset - an index into `buffer`; will be clamped to an int32
// - encoding - an optional encoding, relevant is val is a string
// - dir - true for indexOf, false for lastIndexOf
function bidirectionalIndexOf (buffer, val, byteOffset, encoding, dir) {
  // Empty buffer means no match
  if (buffer.length === 0) return -1

  // Normalize byteOffset
  if (typeof byteOffset === 'string') {
    encoding = byteOffset
    byteOffset = 0
  } else if (byteOffset > 0x7fffffff) {
    byteOffset = 0x7fffffff
  } else if (byteOffset < -0x80000000) {
    byteOffset = -0x80000000
  }
  byteOffset = +byteOffset  // Coerce to Number.
  if (isNaN(byteOffset)) {
    // byteOffset: it it's undefined, null, NaN, "foo", etc, search whole buffer
    byteOffset = dir ? 0 : (buffer.length - 1)
  }

  // Normalize byteOffset: negative offsets start from the end of the buffer
  if (byteOffset < 0) byteOffset = buffer.length + byteOffset
  if (byteOffset >= buffer.length) {
    if (dir) return -1
    else byteOffset = buffer.length - 1
  } else if (byteOffset < 0) {
    if (dir) byteOffset = 0
    else return -1
  }

  // Normalize val
  if (typeof val === 'string') {
    val = Buffer.from(val, encoding)
  }

  // Finally, search either indexOf (if dir is true) or lastIndexOf
  if (Buffer.isBuffer(val)) {
    // Special case: looking for empty string/buffer always fails
    if (val.length === 0) {
      return -1
    }
    return arrayIndexOf(buffer, val, byteOffset, encoding, dir)
  } else if (typeof val === 'number') {
    val = val & 0xFF // Search for a byte value [0-255]
    if (Buffer.TYPED_ARRAY_SUPPORT &&
        typeof Uint8Array.prototype.indexOf === 'function') {
      if (dir) {
        return Uint8Array.prototype.indexOf.call(buffer, val, byteOffset)
      } else {
        return Uint8Array.prototype.lastIndexOf.call(buffer, val, byteOffset)
      }
    }
    return arrayIndexOf(buffer, [ val ], byteOffset, encoding, dir)
  }

  throw new TypeError('val must be string, number or Buffer')
}

function arrayIndexOf (arr, val, byteOffset, encoding, dir) {
  var indexSize = 1
  var arrLength = arr.length
  var valLength = val.length

  if (encoding !== undefined) {
    encoding = String(encoding).toLowerCase()
    if (encoding === 'ucs2' || encoding === 'ucs-2' ||
        encoding === 'utf16le' || encoding === 'utf-16le') {
      if (arr.length < 2 || val.length < 2) {
        return -1
      }
      indexSize = 2
      arrLength /= 2
      valLength /= 2
      byteOffset /= 2
    }
  }

  function read (buf, i) {
    if (indexSize === 1) {
      return buf[i]
    } else {
      return buf.readUInt16BE(i * indexSize)
    }
  }

  var i
  if (dir) {
    var foundIndex = -1
    for (i = byteOffset; i < arrLength; i++) {
      if (read(arr, i) === read(val, foundIndex === -1 ? 0 : i - foundIndex)) {
        if (foundIndex === -1) foundIndex = i
        if (i - foundIndex + 1 === valLength) return foundIndex * indexSize
      } else {
        if (foundIndex !== -1) i -= i - foundIndex
        foundIndex = -1
      }
    }
  } else {
    if (byteOffset + valLength > arrLength) byteOffset = arrLength - valLength
    for (i = byteOffset; i >= 0; i--) {
      var found = true
      for (var j = 0; j < valLength; j++) {
        if (read(arr, i + j) !== read(val, j)) {
          found = false
          break
        }
      }
      if (found) return i
    }
  }

  return -1
}

Buffer.prototype.includes = function includes (val, byteOffset, encoding) {
  return this.indexOf(val, byteOffset, encoding) !== -1
}

Buffer.prototype.indexOf = function indexOf (val, byteOffset, encoding) {
  return bidirectionalIndexOf(this, val, byteOffset, encoding, true)
}

Buffer.prototype.lastIndexOf = function lastIndexOf (val, byteOffset, encoding) {
  return bidirectionalIndexOf(this, val, byteOffset, encoding, false)
}

function hexWrite (buf, string, offset, length) {
  offset = Number(offset) || 0
  var remaining = buf.length - offset
  if (!length) {
    length = remaining
  } else {
    length = Number(length)
    if (length > remaining) {
      length = remaining
    }
  }

  // must be an even number of digits
  var strLen = string.length
  if (strLen % 2 !== 0) throw new TypeError('Invalid hex string')

  if (length > strLen / 2) {
    length = strLen / 2
  }
  for (var i = 0; i < length; ++i) {
    var parsed = parseInt(string.substr(i * 2, 2), 16)
    if (isNaN(parsed)) return i
    buf[offset + i] = parsed
  }
  return i
}

function utf8Write (buf, string, offset, length) {
  return blitBuffer(utf8ToBytes(string, buf.length - offset), buf, offset, length)
}

function asciiWrite (buf, string, offset, length) {
  return blitBuffer(asciiToBytes(string), buf, offset, length)
}

function latin1Write (buf, string, offset, length) {
  return asciiWrite(buf, string, offset, length)
}

function base64Write (buf, string, offset, length) {
  return blitBuffer(base64ToBytes(string), buf, offset, length)
}

function ucs2Write (buf, string, offset, length) {
  return blitBuffer(utf16leToBytes(string, buf.length - offset), buf, offset, length)
}

Buffer.prototype.write = function write (string, offset, length, encoding) {
  // Buffer#write(string)
  if (offset === undefined) {
    encoding = 'utf8'
    length = this.length
    offset = 0
  // Buffer#write(string, encoding)
  } else if (length === undefined && typeof offset === 'string') {
    encoding = offset
    length = this.length
    offset = 0
  // Buffer#write(string, offset[, length][, encoding])
  } else if (isFinite(offset)) {
    offset = offset | 0
    if (isFinite(length)) {
      length = length | 0
      if (encoding === undefined) encoding = 'utf8'
    } else {
      encoding = length
      length = undefined
    }
  // legacy write(string, encoding, offset, length) - remove in v0.13
  } else {
    throw new Error(
      'Buffer.write(string, encoding, offset[, length]) is no longer supported'
    )
  }

  var remaining = this.length - offset
  if (length === undefined || length > remaining) length = remaining

  if ((string.length > 0 && (length < 0 || offset < 0)) || offset > this.length) {
    throw new RangeError('Attempt to write outside buffer bounds')
  }

  if (!encoding) encoding = 'utf8'

  var loweredCase = false
  for (;;) {
    switch (encoding) {
      case 'hex':
        return hexWrite(this, string, offset, length)

      case 'utf8':
      case 'utf-8':
        return utf8Write(this, string, offset, length)

      case 'ascii':
        return asciiWrite(this, string, offset, length)

      case 'latin1':
      case 'binary':
        return latin1Write(this, string, offset, length)

      case 'base64':
        // Warning: maxLength not taken into account in base64Write
        return base64Write(this, string, offset, length)

      case 'ucs2':
      case 'ucs-2':
      case 'utf16le':
      case 'utf-16le':
        return ucs2Write(this, string, offset, length)

      default:
        if (loweredCase) throw new TypeError('Unknown encoding: ' + encoding)
        encoding = ('' + encoding).toLowerCase()
        loweredCase = true
    }
  }
}

Buffer.prototype.toJSON = function toJSON () {
  return {
    type: 'Buffer',
    data: Array.prototype.slice.call(this._arr || this, 0)
  }
}

function base64Slice (buf, start, end) {
  if (start === 0 && end === buf.length) {
    return base64.fromByteArray(buf)
  } else {
    return base64.fromByteArray(buf.slice(start, end))
  }
}

function utf8Slice (buf, start, end) {
  end = Math.min(buf.length, end)
  var res = []

  var i = start
  while (i < end) {
    var firstByte = buf[i]
    var codePoint = null
    var bytesPerSequence = (firstByte > 0xEF) ? 4
      : (firstByte > 0xDF) ? 3
      : (firstByte > 0xBF) ? 2
      : 1

    if (i + bytesPerSequence <= end) {
      var secondByte, thirdByte, fourthByte, tempCodePoint

      switch (bytesPerSequence) {
        case 1:
          if (firstByte < 0x80) {
            codePoint = firstByte
          }
          break
        case 2:
          secondByte = buf[i + 1]
          if ((secondByte & 0xC0) === 0x80) {
            tempCodePoint = (firstByte & 0x1F) << 0x6 | (secondByte & 0x3F)
            if (tempCodePoint > 0x7F) {
              codePoint = tempCodePoint
            }
          }
          break
        case 3:
          secondByte = buf[i + 1]
          thirdByte = buf[i + 2]
          if ((secondByte & 0xC0) === 0x80 && (thirdByte & 0xC0) === 0x80) {
            tempCodePoint = (firstByte & 0xF) << 0xC | (secondByte & 0x3F) << 0x6 | (thirdByte & 0x3F)
            if (tempCodePoint > 0x7FF && (tempCodePoint < 0xD800 || tempCodePoint > 0xDFFF)) {
              codePoint = tempCodePoint
            }
          }
          break
        case 4:
          secondByte = buf[i + 1]
          thirdByte = buf[i + 2]
          fourthByte = buf[i + 3]
          if ((secondByte & 0xC0) === 0x80 && (thirdByte & 0xC0) === 0x80 && (fourthByte & 0xC0) === 0x80) {
            tempCodePoint = (firstByte & 0xF) << 0x12 | (secondByte & 0x3F) << 0xC | (thirdByte & 0x3F) << 0x6 | (fourthByte & 0x3F)
            if (tempCodePoint > 0xFFFF && tempCodePoint < 0x110000) {
              codePoint = tempCodePoint
            }
          }
      }
    }

    if (codePoint === null) {
      // we did not generate a valid codePoint so insert a
      // replacement char (U+FFFD) and advance only 1 byte
      codePoint = 0xFFFD
      bytesPerSequence = 1
    } else if (codePoint > 0xFFFF) {
      // encode to utf16 (surrogate pair dance)
      codePoint -= 0x10000
      res.push(codePoint >>> 10 & 0x3FF | 0xD800)
      codePoint = 0xDC00 | codePoint & 0x3FF
    }

    res.push(codePoint)
    i += bytesPerSequence
  }

  return decodeCodePointsArray(res)
}

// Based on http://stackoverflow.com/a/22747272/680742, the browser with
// the lowest limit is Chrome, with 0x10000 args.
// We go 1 magnitude less, for safety
var MAX_ARGUMENTS_LENGTH = 0x1000

function decodeCodePointsArray (codePoints) {
  var len = codePoints.length
  if (len <= MAX_ARGUMENTS_LENGTH) {
    return String.fromCharCode.apply(String, codePoints) // avoid extra slice()
  }

  // Decode in chunks to avoid "call stack size exceeded".
  var res = ''
  var i = 0
  while (i < len) {
    res += String.fromCharCode.apply(
      String,
      codePoints.slice(i, i += MAX_ARGUMENTS_LENGTH)
    )
  }
  return res
}

function asciiSlice (buf, start, end) {
  var ret = ''
  end = Math.min(buf.length, end)

  for (var i = start; i < end; ++i) {
    ret += String.fromCharCode(buf[i] & 0x7F)
  }
  return ret
}

function latin1Slice (buf, start, end) {
  var ret = ''
  end = Math.min(buf.length, end)

  for (var i = start; i < end; ++i) {
    ret += String.fromCharCode(buf[i])
  }
  return ret
}

function hexSlice (buf, start, end) {
  var len = buf.length

  if (!start || start < 0) start = 0
  if (!end || end < 0 || end > len) end = len

  var out = ''
  for (var i = start; i < end; ++i) {
    out += toHex(buf[i])
  }
  return out
}

function utf16leSlice (buf, start, end) {
  var bytes = buf.slice(start, end)
  var res = ''
  for (var i = 0; i < bytes.length; i += 2) {
    res += String.fromCharCode(bytes[i] + bytes[i + 1] * 256)
  }
  return res
}

Buffer.prototype.slice = function slice (start, end) {
  var len = this.length
  start = ~~start
  end = end === undefined ? len : ~~end

  if (start < 0) {
    start += len
    if (start < 0) start = 0
  } else if (start > len) {
    start = len
  }

  if (end < 0) {
    end += len
    if (end < 0) end = 0
  } else if (end > len) {
    end = len
  }

  if (end < start) end = start

  var newBuf
  if (Buffer.TYPED_ARRAY_SUPPORT) {
    newBuf = this.subarray(start, end)
    newBuf.__proto__ = Buffer.prototype
  } else {
    var sliceLen = end - start
    newBuf = new Buffer(sliceLen, undefined)
    for (var i = 0; i < sliceLen; ++i) {
      newBuf[i] = this[i + start]
    }
  }

  return newBuf
}

/*
 * Need to make sure that buffer isn't trying to write out of bounds.
 */
function checkOffset (offset, ext, length) {
  if ((offset % 1) !== 0 || offset < 0) throw new RangeError('offset is not uint')
  if (offset + ext > length) throw new RangeError('Trying to access beyond buffer length')
}

Buffer.prototype.readUIntLE = function readUIntLE (offset, byteLength, noAssert) {
  offset = offset | 0
  byteLength = byteLength | 0
  if (!noAssert) checkOffset(offset, byteLength, this.length)

  var val = this[offset]
  var mul = 1
  var i = 0
  while (++i < byteLength && (mul *= 0x100)) {
    val += this[offset + i] * mul
  }

  return val
}

Buffer.prototype.readUIntBE = function readUIntBE (offset, byteLength, noAssert) {
  offset = offset | 0
  byteLength = byteLength | 0
  if (!noAssert) {
    checkOffset(offset, byteLength, this.length)
  }

  var val = this[offset + --byteLength]
  var mul = 1
  while (byteLength > 0 && (mul *= 0x100)) {
    val += this[offset + --byteLength] * mul
  }

  return val
}

Buffer.prototype.readUInt8 = function readUInt8 (offset, noAssert) {
  if (!noAssert) checkOffset(offset, 1, this.length)
  return this[offset]
}

Buffer.prototype.readUInt16LE = function readUInt16LE (offset, noAssert) {
  if (!noAssert) checkOffset(offset, 2, this.length)
  return this[offset] | (this[offset + 1] << 8)
}

Buffer.prototype.readUInt16BE = function readUInt16BE (offset, noAssert) {
  if (!noAssert) checkOffset(offset, 2, this.length)
  return (this[offset] << 8) | this[offset + 1]
}

Buffer.prototype.readUInt32LE = function readUInt32LE (offset, noAssert) {
  if (!noAssert) checkOffset(offset, 4, this.length)

  return ((this[offset]) |
      (this[offset + 1] << 8) |
      (this[offset + 2] << 16)) +
      (this[offset + 3] * 0x1000000)
}

Buffer.prototype.readUInt32BE = function readUInt32BE (offset, noAssert) {
  if (!noAssert) checkOffset(offset, 4, this.length)

  return (this[offset] * 0x1000000) +
    ((this[offset + 1] << 16) |
    (this[offset + 2] << 8) |
    this[offset + 3])
}

Buffer.prototype.readIntLE = function readIntLE (offset, byteLength, noAssert) {
  offset = offset | 0
  byteLength = byteLength | 0
  if (!noAssert) checkOffset(offset, byteLength, this.length)

  var val = this[offset]
  var mul = 1
  var i = 0
  while (++i < byteLength && (mul *= 0x100)) {
    val += this[offset + i] * mul
  }
  mul *= 0x80

  if (val >= mul) val -= Math.pow(2, 8 * byteLength)

  return val
}

Buffer.prototype.readIntBE = function readIntBE (offset, byteLength, noAssert) {
  offset = offset | 0
  byteLength = byteLength | 0
  if (!noAssert) checkOffset(offset, byteLength, this.length)

  var i = byteLength
  var mul = 1
  var val = this[offset + --i]
  while (i > 0 && (mul *= 0x100)) {
    val += this[offset + --i] * mul
  }
  mul *= 0x80

  if (val >= mul) val -= Math.pow(2, 8 * byteLength)

  return val
}

Buffer.prototype.readInt8 = function readInt8 (offset, noAssert) {
  if (!noAssert) checkOffset(offset, 1, this.length)
  if (!(this[offset] & 0x80)) return (this[offset])
  return ((0xff - this[offset] + 1) * -1)
}

Buffer.prototype.readInt16LE = function readInt16LE (offset, noAssert) {
  if (!noAssert) checkOffset(offset, 2, this.length)
  var val = this[offset] | (this[offset + 1] << 8)
  return (val & 0x8000) ? val | 0xFFFF0000 : val
}

Buffer.prototype.readInt16BE = function readInt16BE (offset, noAssert) {
  if (!noAssert) checkOffset(offset, 2, this.length)
  var val = this[offset + 1] | (this[offset] << 8)
  return (val & 0x8000) ? val | 0xFFFF0000 : val
}

Buffer.prototype.readInt32LE = function readInt32LE (offset, noAssert) {
  if (!noAssert) checkOffset(offset, 4, this.length)

  return (this[offset]) |
    (this[offset + 1] << 8) |
    (this[offset + 2] << 16) |
    (this[offset + 3] << 24)
}

Buffer.prototype.readInt32BE = function readInt32BE (offset, noAssert) {
  if (!noAssert) checkOffset(offset, 4, this.length)

  return (this[offset] << 24) |
    (this[offset + 1] << 16) |
    (this[offset + 2] << 8) |
    (this[offset + 3])
}

Buffer.prototype.readFloatLE = function readFloatLE (offset, noAssert) {
  if (!noAssert) checkOffset(offset, 4, this.length)
  return ieee754.read(this, offset, true, 23, 4)
}

Buffer.prototype.readFloatBE = function readFloatBE (offset, noAssert) {
  if (!noAssert) checkOffset(offset, 4, this.length)
  return ieee754.read(this, offset, false, 23, 4)
}

Buffer.prototype.readDoubleLE = function readDoubleLE (offset, noAssert) {
  if (!noAssert) checkOffset(offset, 8, this.length)
  return ieee754.read(this, offset, true, 52, 8)
}

Buffer.prototype.readDoubleBE = function readDoubleBE (offset, noAssert) {
  if (!noAssert) checkOffset(offset, 8, this.length)
  return ieee754.read(this, offset, false, 52, 8)
}

function checkInt (buf, value, offset, ext, max, min) {
  if (!Buffer.isBuffer(buf)) throw new TypeError('"buffer" argument must be a Buffer instance')
  if (value > max || value < min) throw new RangeError('"value" argument is out of bounds')
  if (offset + ext > buf.length) throw new RangeError('Index out of range')
}

Buffer.prototype.writeUIntLE = function writeUIntLE (value, offset, byteLength, noAssert) {
  value = +value
  offset = offset | 0
  byteLength = byteLength | 0
  if (!noAssert) {
    var maxBytes = Math.pow(2, 8 * byteLength) - 1
    checkInt(this, value, offset, byteLength, maxBytes, 0)
  }

  var mul = 1
  var i = 0
  this[offset] = value & 0xFF
  while (++i < byteLength && (mul *= 0x100)) {
    this[offset + i] = (value / mul) & 0xFF
  }

  return offset + byteLength
}

Buffer.prototype.writeUIntBE = function writeUIntBE (value, offset, byteLength, noAssert) {
  value = +value
  offset = offset | 0
  byteLength = byteLength | 0
  if (!noAssert) {
    var maxBytes = Math.pow(2, 8 * byteLength) - 1
    checkInt(this, value, offset, byteLength, maxBytes, 0)
  }

  var i = byteLength - 1
  var mul = 1
  this[offset + i] = value & 0xFF
  while (--i >= 0 && (mul *= 0x100)) {
    this[offset + i] = (value / mul) & 0xFF
  }

  return offset + byteLength
}

Buffer.prototype.writeUInt8 = function writeUInt8 (value, offset, noAssert) {
  value = +value
  offset = offset | 0
  if (!noAssert) checkInt(this, value, offset, 1, 0xff, 0)
  if (!Buffer.TYPED_ARRAY_SUPPORT) value = Math.floor(value)
  this[offset] = (value & 0xff)
  return offset + 1
}

function objectWriteUInt16 (buf, value, offset, littleEndian) {
  if (value < 0) value = 0xffff + value + 1
  for (var i = 0, j = Math.min(buf.length - offset, 2); i < j; ++i) {
    buf[offset + i] = (value & (0xff << (8 * (littleEndian ? i : 1 - i)))) >>>
      (littleEndian ? i : 1 - i) * 8
  }
}

Buffer.prototype.writeUInt16LE = function writeUInt16LE (value, offset, noAssert) {
  value = +value
  offset = offset | 0
  if (!noAssert) checkInt(this, value, offset, 2, 0xffff, 0)
  if (Buffer.TYPED_ARRAY_SUPPORT) {
    this[offset] = (value & 0xff)
    this[offset + 1] = (value >>> 8)
  } else {
    objectWriteUInt16(this, value, offset, true)
  }
  return offset + 2
}

Buffer.prototype.writeUInt16BE = function writeUInt16BE (value, offset, noAssert) {
  value = +value
  offset = offset | 0
  if (!noAssert) checkInt(this, value, offset, 2, 0xffff, 0)
  if (Buffer.TYPED_ARRAY_SUPPORT) {
    this[offset] = (value >>> 8)
    this[offset + 1] = (value & 0xff)
  } else {
    objectWriteUInt16(this, value, offset, false)
  }
  return offset + 2
}

function objectWriteUInt32 (buf, value, offset, littleEndian) {
  if (value < 0) value = 0xffffffff + value + 1
  for (var i = 0, j = Math.min(buf.length - offset, 4); i < j; ++i) {
    buf[offset + i] = (value >>> (littleEndian ? i : 3 - i) * 8) & 0xff
  }
}

Buffer.prototype.writeUInt32LE = function writeUInt32LE (value, offset, noAssert) {
  value = +value
  offset = offset | 0
  if (!noAssert) checkInt(this, value, offset, 4, 0xffffffff, 0)
  if (Buffer.TYPED_ARRAY_SUPPORT) {
    this[offset + 3] = (value >>> 24)
    this[offset + 2] = (value >>> 16)
    this[offset + 1] = (value >>> 8)
    this[offset] = (value & 0xff)
  } else {
    objectWriteUInt32(this, value, offset, true)
  }
  return offset + 4
}

Buffer.prototype.writeUInt32BE = function writeUInt32BE (value, offset, noAssert) {
  value = +value
  offset = offset | 0
  if (!noAssert) checkInt(this, value, offset, 4, 0xffffffff, 0)
  if (Buffer.TYPED_ARRAY_SUPPORT) {
    this[offset] = (value >>> 24)
    this[offset + 1] = (value >>> 16)
    this[offset + 2] = (value >>> 8)
    this[offset + 3] = (value & 0xff)
  } else {
    objectWriteUInt32(this, value, offset, false)
  }
  return offset + 4
}

Buffer.prototype.writeIntLE = function writeIntLE (value, offset, byteLength, noAssert) {
  value = +value
  offset = offset | 0
  if (!noAssert) {
    var limit = Math.pow(2, 8 * byteLength - 1)

    checkInt(this, value, offset, byteLength, limit - 1, -limit)
  }

  var i = 0
  var mul = 1
  var sub = 0
  this[offset] = value & 0xFF
  while (++i < byteLength && (mul *= 0x100)) {
    if (value < 0 && sub === 0 && this[offset + i - 1] !== 0) {
      sub = 1
    }
    this[offset + i] = ((value / mul) >> 0) - sub & 0xFF
  }

  return offset + byteLength
}

Buffer.prototype.writeIntBE = function writeIntBE (value, offset, byteLength, noAssert) {
  value = +value
  offset = offset | 0
  if (!noAssert) {
    var limit = Math.pow(2, 8 * byteLength - 1)

    checkInt(this, value, offset, byteLength, limit - 1, -limit)
  }

  var i = byteLength - 1
  var mul = 1
  var sub = 0
  this[offset + i] = value & 0xFF
  while (--i >= 0 && (mul *= 0x100)) {
    if (value < 0 && sub === 0 && this[offset + i + 1] !== 0) {
      sub = 1
    }
    this[offset + i] = ((value / mul) >> 0) - sub & 0xFF
  }

  return offset + byteLength
}

Buffer.prototype.writeInt8 = function writeInt8 (value, offset, noAssert) {
  value = +value
  offset = offset | 0
  if (!noAssert) checkInt(this, value, offset, 1, 0x7f, -0x80)
  if (!Buffer.TYPED_ARRAY_SUPPORT) value = Math.floor(value)
  if (value < 0) value = 0xff + value + 1
  this[offset] = (value & 0xff)
  return offset + 1
}

Buffer.prototype.writeInt16LE = function writeInt16LE (value, offset, noAssert) {
  value = +value
  offset = offset | 0
  if (!noAssert) checkInt(this, value, offset, 2, 0x7fff, -0x8000)
  if (Buffer.TYPED_ARRAY_SUPPORT) {
    this[offset] = (value & 0xff)
    this[offset + 1] = (value >>> 8)
  } else {
    objectWriteUInt16(this, value, offset, true)
  }
  return offset + 2
}

Buffer.prototype.writeInt16BE = function writeInt16BE (value, offset, noAssert) {
  value = +value
  offset = offset | 0
  if (!noAssert) checkInt(this, value, offset, 2, 0x7fff, -0x8000)
  if (Buffer.TYPED_ARRAY_SUPPORT) {
    this[offset] = (value >>> 8)
    this[offset + 1] = (value & 0xff)
  } else {
    objectWriteUInt16(this, value, offset, false)
  }
  return offset + 2
}

Buffer.prototype.writeInt32LE = function writeInt32LE (value, offset, noAssert) {
  value = +value
  offset = offset | 0
  if (!noAssert) checkInt(this, value, offset, 4, 0x7fffffff, -0x80000000)
  if (Buffer.TYPED_ARRAY_SUPPORT) {
    this[offset] = (value & 0xff)
    this[offset + 1] = (value >>> 8)
    this[offset + 2] = (value >>> 16)
    this[offset + 3] = (value >>> 24)
  } else {
    objectWriteUInt32(this, value, offset, true)
  }
  return offset + 4
}

Buffer.prototype.writeInt32BE = function writeInt32BE (value, offset, noAssert) {
  value = +value
  offset = offset | 0
  if (!noAssert) checkInt(this, value, offset, 4, 0x7fffffff, -0x80000000)
  if (value < 0) value = 0xffffffff + value + 1
  if (Buffer.TYPED_ARRAY_SUPPORT) {
    this[offset] = (value >>> 24)
    this[offset + 1] = (value >>> 16)
    this[offset + 2] = (value >>> 8)
    this[offset + 3] = (value & 0xff)
  } else {
    objectWriteUInt32(this, value, offset, false)
  }
  return offset + 4
}

function checkIEEE754 (buf, value, offset, ext, max, min) {
  if (offset + ext > buf.length) throw new RangeError('Index out of range')
  if (offset < 0) throw new RangeError('Index out of range')
}

function writeFloat (buf, value, offset, littleEndian, noAssert) {
  if (!noAssert) {
    checkIEEE754(buf, value, offset, 4, 3.4028234663852886e+38, -3.4028234663852886e+38)
  }
  ieee754.write(buf, value, offset, littleEndian, 23, 4)
  return offset + 4
}

Buffer.prototype.writeFloatLE = function writeFloatLE (value, offset, noAssert) {
  return writeFloat(this, value, offset, true, noAssert)
}

Buffer.prototype.writeFloatBE = function writeFloatBE (value, offset, noAssert) {
  return writeFloat(this, value, offset, false, noAssert)
}

function writeDouble (buf, value, offset, littleEndian, noAssert) {
  if (!noAssert) {
    checkIEEE754(buf, value, offset, 8, 1.7976931348623157E+308, -1.7976931348623157E+308)
  }
  ieee754.write(buf, value, offset, littleEndian, 52, 8)
  return offset + 8
}

Buffer.prototype.writeDoubleLE = function writeDoubleLE (value, offset, noAssert) {
  return writeDouble(this, value, offset, true, noAssert)
}

Buffer.prototype.writeDoubleBE = function writeDoubleBE (value, offset, noAssert) {
  return writeDouble(this, value, offset, false, noAssert)
}

// copy(targetBuffer, targetStart=0, sourceStart=0, sourceEnd=buffer.length)
Buffer.prototype.copy = function copy (target, targetStart, start, end) {
  if (!start) start = 0
  if (!end && end !== 0) end = this.length
  if (targetStart >= target.length) targetStart = target.length
  if (!targetStart) targetStart = 0
  if (end > 0 && end < start) end = start

  // Copy 0 bytes; we're done
  if (end === start) return 0
  if (target.length === 0 || this.length === 0) return 0

  // Fatal error conditions
  if (targetStart < 0) {
    throw new RangeError('targetStart out of bounds')
  }
  if (start < 0 || start >= this.length) throw new RangeError('sourceStart out of bounds')
  if (end < 0) throw new RangeError('sourceEnd out of bounds')

  // Are we oob?
  if (end > this.length) end = this.length
  if (target.length - targetStart < end - start) {
    end = target.length - targetStart + start
  }

  var len = end - start
  var i

  if (this === target && start < targetStart && targetStart < end) {
    // descending copy from end
    for (i = len - 1; i >= 0; --i) {
      target[i + targetStart] = this[i + start]
    }
  } else if (len < 1000 || !Buffer.TYPED_ARRAY_SUPPORT) {
    // ascending copy from start
    for (i = 0; i < len; ++i) {
      target[i + targetStart] = this[i + start]
    }
  } else {
    Uint8Array.prototype.set.call(
      target,
      this.subarray(start, start + len),
      targetStart
    )
  }

  return len
}

// Usage:
//    buffer.fill(number[, offset[, end]])
//    buffer.fill(buffer[, offset[, end]])
//    buffer.fill(string[, offset[, end]][, encoding])
Buffer.prototype.fill = function fill (val, start, end, encoding) {
  // Handle string cases:
  if (typeof val === 'string') {
    if (typeof start === 'string') {
      encoding = start
      start = 0
      end = this.length
    } else if (typeof end === 'string') {
      encoding = end
      end = this.length
    }
    if (val.length === 1) {
      var code = val.charCodeAt(0)
      if (code < 256) {
        val = code
      }
    }
    if (encoding !== undefined && typeof encoding !== 'string') {
      throw new TypeError('encoding must be a string')
    }
    if (typeof encoding === 'string' && !Buffer.isEncoding(encoding)) {
      throw new TypeError('Unknown encoding: ' + encoding)
    }
  } else if (typeof val === 'number') {
    val = val & 255
  }

  // Invalid ranges are not set to a default, so can range check early.
  if (start < 0 || this.length < start || this.length < end) {
    throw new RangeError('Out of range index')
  }

  if (end <= start) {
    return this
  }

  start = start >>> 0
  end = end === undefined ? this.length : end >>> 0

  if (!val) val = 0

  var i
  if (typeof val === 'number') {
    for (i = start; i < end; ++i) {
      this[i] = val
    }
  } else {
    var bytes = Buffer.isBuffer(val)
      ? val
      : utf8ToBytes(new Buffer(val, encoding).toString())
    var len = bytes.length
    for (i = 0; i < end - start; ++i) {
      this[i + start] = bytes[i % len]
    }
  }

  return this
}

// HELPER FUNCTIONS
// ================

var INVALID_BASE64_RE = /[^+\/0-9A-Za-z-_]/g

function base64clean (str) {
  // Node strips out invalid characters like \n and \t from the string, base64-js does not
  str = stringtrim(str).replace(INVALID_BASE64_RE, '')
  // Node converts strings with length < 2 to ''
  if (str.length < 2) return ''
  // Node allows for non-padded base64 strings (missing trailing ===), base64-js does not
  while (str.length % 4 !== 0) {
    str = str + '='
  }
  return str
}

function stringtrim (str) {
  if (str.trim) return str.trim()
  return str.replace(/^\s+|\s+$/g, '')
}

function toHex (n) {
  if (n < 16) return '0' + n.toString(16)
  return n.toString(16)
}

function utf8ToBytes (string, units) {
  units = units || Infinity
  var codePoint
  var length = string.length
  var leadSurrogate = null
  var bytes = []

  for (var i = 0; i < length; ++i) {
    codePoint = string.charCodeAt(i)

    // is surrogate component
    if (codePoint > 0xD7FF && codePoint < 0xE000) {
      // last char was a lead
      if (!leadSurrogate) {
        // no lead yet
        if (codePoint > 0xDBFF) {
          // unexpected trail
          if ((units -= 3) > -1) bytes.push(0xEF, 0xBF, 0xBD)
          continue
        } else if (i + 1 === length) {
          // unpaired lead
          if ((units -= 3) > -1) bytes.push(0xEF, 0xBF, 0xBD)
          continue
        }

        // valid lead
        leadSurrogate = codePoint

        continue
      }

      // 2 leads in a row
      if (codePoint < 0xDC00) {
        if ((units -= 3) > -1) bytes.push(0xEF, 0xBF, 0xBD)
        leadSurrogate = codePoint
        continue
      }

      // valid surrogate pair
      codePoint = (leadSurrogate - 0xD800 << 10 | codePoint - 0xDC00) + 0x10000
    } else if (leadSurrogate) {
      // valid bmp char, but last char was a lead
      if ((units -= 3) > -1) bytes.push(0xEF, 0xBF, 0xBD)
    }

    leadSurrogate = null

    // encode utf8
    if (codePoint < 0x80) {
      if ((units -= 1) < 0) break
      bytes.push(codePoint)
    } else if (codePoint < 0x800) {
      if ((units -= 2) < 0) break
      bytes.push(
        codePoint >> 0x6 | 0xC0,
        codePoint & 0x3F | 0x80
      )
    } else if (codePoint < 0x10000) {
      if ((units -= 3) < 0) break
      bytes.push(
        codePoint >> 0xC | 0xE0,
        codePoint >> 0x6 & 0x3F | 0x80,
        codePoint & 0x3F | 0x80
      )
    } else if (codePoint < 0x110000) {
      if ((units -= 4) < 0) break
      bytes.push(
        codePoint >> 0x12 | 0xF0,
        codePoint >> 0xC & 0x3F | 0x80,
        codePoint >> 0x6 & 0x3F | 0x80,
        codePoint & 0x3F | 0x80
      )
    } else {
      throw new Error('Invalid code point')
    }
  }

  return bytes
}

function asciiToBytes (str) {
  var byteArray = []
  for (var i = 0; i < str.length; ++i) {
    // Node's code seems to be doing this and not & 0x7F..
    byteArray.push(str.charCodeAt(i) & 0xFF)
  }
  return byteArray
}

function utf16leToBytes (str, units) {
  var c, hi, lo
  var byteArray = []
  for (var i = 0; i < str.length; ++i) {
    if ((units -= 2) < 0) break

    c = str.charCodeAt(i)
    hi = c >> 8
    lo = c % 256
    byteArray.push(lo)
    byteArray.push(hi)
  }

  return byteArray
}

function base64ToBytes (str) {
  return base64.toByteArray(base64clean(str))
}

function blitBuffer (src, dst, offset, length) {
  for (var i = 0; i < length; ++i) {
    if ((i + offset >= dst.length) || (i >= src.length)) break
    dst[i + offset] = src[i]
  }
  return i
}

function isnan (val) {
  return val !== val // eslint-disable-line no-self-compare
}

/* WEBPACK VAR INJECTION */}.call(this, __webpack_require__(/*! ./../webpack/buildin/global.js */ 2)))

/***/ }),
/* 79 */
/*!*****************************************!*\
  !*** ./node_modules/base64-js/index.js ***!
  \*****************************************/
/*! no static exports found */
/***/ (function(module, exports, __webpack_require__) {

"use strict";


exports.byteLength = byteLength
exports.toByteArray = toByteArray
exports.fromByteArray = fromByteArray

var lookup = []
var revLookup = []
var Arr = typeof Uint8Array !== 'undefined' ? Uint8Array : Array

var code = 'ABCDEFGHIJKLMNOPQRSTUVWXYZabcdefghijklmnopqrstuvwxyz0123456789+/'
for (var i = 0, len = code.length; i < len; ++i) {
  lookup[i] = code[i]
  revLookup[code.charCodeAt(i)] = i
}

// Support decoding URL-safe base64 strings, as Node.js does.
// See: https://en.wikipedia.org/wiki/Base64#URL_applications
revLookup['-'.charCodeAt(0)] = 62
revLookup['_'.charCodeAt(0)] = 63

function getLens (b64) {
  var len = b64.length

  if (len % 4 > 0) {
    throw new Error('Invalid string. Length must be a multiple of 4')
  }

  // Trim off extra bytes after placeholder bytes are found
  // See: https://github.com/beatgammit/base64-js/issues/42
  var validLen = b64.indexOf('=')
  if (validLen === -1) validLen = len

  var placeHoldersLen = validLen === len
    ? 0
    : 4 - (validLen % 4)

  return [validLen, placeHoldersLen]
}

// base64 is 4/3 + up to two characters of the original data
function byteLength (b64) {
  var lens = getLens(b64)
  var validLen = lens[0]
  var placeHoldersLen = lens[1]
  return ((validLen + placeHoldersLen) * 3 / 4) - placeHoldersLen
}

function _byteLength (b64, validLen, placeHoldersLen) {
  return ((validLen + placeHoldersLen) * 3 / 4) - placeHoldersLen
}

function toByteArray (b64) {
  var tmp
  var lens = getLens(b64)
  var validLen = lens[0]
  var placeHoldersLen = lens[1]

  var arr = new Arr(_byteLength(b64, validLen, placeHoldersLen))

  var curByte = 0

  // if there are placeholders, only get up to the last complete 4 chars
  var len = placeHoldersLen > 0
    ? validLen - 4
    : validLen

  var i
  for (i = 0; i < len; i += 4) {
    tmp =
      (revLookup[b64.charCodeAt(i)] << 18) |
      (revLookup[b64.charCodeAt(i + 1)] << 12) |
      (revLookup[b64.charCodeAt(i + 2)] << 6) |
      revLookup[b64.charCodeAt(i + 3)]
    arr[curByte++] = (tmp >> 16) & 0xFF
    arr[curByte++] = (tmp >> 8) & 0xFF
    arr[curByte++] = tmp & 0xFF
  }

  if (placeHoldersLen === 2) {
    tmp =
      (revLookup[b64.charCodeAt(i)] << 2) |
      (revLookup[b64.charCodeAt(i + 1)] >> 4)
    arr[curByte++] = tmp & 0xFF
  }

  if (placeHoldersLen === 1) {
    tmp =
      (revLookup[b64.charCodeAt(i)] << 10) |
      (revLookup[b64.charCodeAt(i + 1)] << 4) |
      (revLookup[b64.charCodeAt(i + 2)] >> 2)
    arr[curByte++] = (tmp >> 8) & 0xFF
    arr[curByte++] = tmp & 0xFF
  }

  return arr
}

function tripletToBase64 (num) {
  return lookup[num >> 18 & 0x3F] +
    lookup[num >> 12 & 0x3F] +
    lookup[num >> 6 & 0x3F] +
    lookup[num & 0x3F]
}

function encodeChunk (uint8, start, end) {
  var tmp
  var output = []
  for (var i = start; i < end; i += 3) {
    tmp =
      ((uint8[i] << 16) & 0xFF0000) +
      ((uint8[i + 1] << 8) & 0xFF00) +
      (uint8[i + 2] & 0xFF)
    output.push(tripletToBase64(tmp))
  }
  return output.join('')
}

function fromByteArray (uint8) {
  var tmp
  var len = uint8.length
  var extraBytes = len % 3 // if we have 1 byte left, pad 2 bytes
  var parts = []
  var maxChunkLength = 16383 // must be multiple of 3

  // go through the array every three bytes, we'll deal with trailing stuff later
  for (var i = 0, len2 = len - extraBytes; i < len2; i += maxChunkLength) {
    parts.push(encodeChunk(
      uint8, i, (i + maxChunkLength) > len2 ? len2 : (i + maxChunkLength)
    ))
  }

  // pad the end with zeros, but make sure to not forget the extra bytes
  if (extraBytes === 1) {
    tmp = uint8[len - 1]
    parts.push(
      lookup[tmp >> 2] +
      lookup[(tmp << 4) & 0x3F] +
      '=='
    )
  } else if (extraBytes === 2) {
    tmp = (uint8[len - 2] << 8) + uint8[len - 1]
    parts.push(
      lookup[tmp >> 10] +
      lookup[(tmp >> 4) & 0x3F] +
      lookup[(tmp << 2) & 0x3F] +
      '='
    )
  }

  return parts.join('')
}


/***/ }),
/* 80 */
/*!***************************************!*\
  !*** ./node_modules/ieee754/index.js ***!
  \***************************************/
/*! no static exports found */
/***/ (function(module, exports) {

exports.read = function (buffer, offset, isLE, mLen, nBytes) {
  var e, m
  var eLen = (nBytes * 8) - mLen - 1
  var eMax = (1 << eLen) - 1
  var eBias = eMax >> 1
  var nBits = -7
  var i = isLE ? (nBytes - 1) : 0
  var d = isLE ? -1 : 1
  var s = buffer[offset + i]

  i += d

  e = s & ((1 << (-nBits)) - 1)
  s >>= (-nBits)
  nBits += eLen
  for (; nBits > 0; e = (e * 256) + buffer[offset + i], i += d, nBits -= 8) {}

  m = e & ((1 << (-nBits)) - 1)
  e >>= (-nBits)
  nBits += mLen
  for (; nBits > 0; m = (m * 256) + buffer[offset + i], i += d, nBits -= 8) {}

  if (e === 0) {
    e = 1 - eBias
  } else if (e === eMax) {
    return m ? NaN : ((s ? -1 : 1) * Infinity)
  } else {
    m = m + Math.pow(2, mLen)
    e = e - eBias
  }
  return (s ? -1 : 1) * m * Math.pow(2, e - mLen)
}

exports.write = function (buffer, value, offset, isLE, mLen, nBytes) {
  var e, m, c
  var eLen = (nBytes * 8) - mLen - 1
  var eMax = (1 << eLen) - 1
  var eBias = eMax >> 1
  var rt = (mLen === 23 ? Math.pow(2, -24) - Math.pow(2, -77) : 0)
  var i = isLE ? 0 : (nBytes - 1)
  var d = isLE ? 1 : -1
  var s = value < 0 || (value === 0 && 1 / value < 0) ? 1 : 0

  value = Math.abs(value)

  if (isNaN(value) || value === Infinity) {
    m = isNaN(value) ? 1 : 0
    e = eMax
  } else {
    e = Math.floor(Math.log(value) / Math.LN2)
    if (value * (c = Math.pow(2, -e)) < 1) {
      e--
      c *= 2
    }
    if (e + eBias >= 1) {
      value += rt / c
    } else {
      value += rt * Math.pow(2, 1 - eBias)
    }
    if (value * c >= 2) {
      e++
      c /= 2
    }

    if (e + eBias >= eMax) {
      m = 0
      e = eMax
    } else if (e + eBias >= 1) {
      m = ((value * c) - 1) * Math.pow(2, mLen)
      e = e + eBias
    } else {
      m = value * Math.pow(2, eBias - 1) * Math.pow(2, mLen)
      e = 0
    }
  }

  for (; mLen >= 8; buffer[offset + i] = m & 0xff, i += d, m /= 256, mLen -= 8) {}

  e = (e << mLen) | m
  eLen += mLen
  for (; eLen > 0; buffer[offset + i] = e & 0xff, i += d, e /= 256, eLen -= 8) {}

  buffer[offset + i - d] |= s * 128
}


/***/ }),
/* 81 */
/*!***************************************!*\
  !*** ./node_modules/isarray/index.js ***!
  \***************************************/
/*! no static exports found */
/***/ (function(module, exports) {

var toString = {}.toString;

module.exports = Array.isArray || function (arr) {
  return toString.call(arr) == '[object Array]';
};


/***/ }),
/* 82 */
/*!*********************************************************************!*\
  !*** /Users/xingmangkeji/vue/yimei/node_modules/crypto-js/index.js ***!
  \*********************************************************************/
/*! no static exports found */
/***/ (function(module, exports, __webpack_require__) {

;(function (root, factory, undef) {
  if (true) {
    // CommonJS
    module.exports = exports = factory(__webpack_require__(/*! ./core */ 83), __webpack_require__(/*! ./x64-core */ 85), __webpack_require__(/*! ./lib-typedarrays */ 86), __webpack_require__(/*! ./enc-utf16 */ 87), __webpack_require__(/*! ./enc-base64 */ 88), __webpack_require__(/*! ./enc-base64url */ 89), __webpack_require__(/*! ./md5 */ 90), __webpack_require__(/*! ./sha1 */ 91), __webpack_require__(/*! ./sha256 */ 92), __webpack_require__(/*! ./sha224 */ 93), __webpack_require__(/*! ./sha512 */ 94), __webpack_require__(/*! ./sha384 */ 95), __webpack_require__(/*! ./sha3 */ 96), __webpack_require__(/*! ./ripemd160 */ 97), __webpack_require__(/*! ./hmac */ 98), __webpack_require__(/*! ./pbkdf2 */ 99), __webpack_require__(/*! ./evpkdf */ 100), __webpack_require__(/*! ./cipher-core */ 101), __webpack_require__(/*! ./mode-cfb */ 102), __webpack_require__(/*! ./mode-ctr */ 103), __webpack_require__(/*! ./mode-ctr-gladman */ 104), __webpack_require__(/*! ./mode-ofb */ 105), __webpack_require__(/*! ./mode-ecb */ 106), __webpack_require__(/*! ./pad-ansix923 */ 107), __webpack_require__(/*! ./pad-iso10126 */ 108), __webpack_require__(/*! ./pad-iso97971 */ 109), __webpack_require__(/*! ./pad-zeropadding */ 110), __webpack_require__(/*! ./pad-nopadding */ 111), __webpack_require__(/*! ./format-hex */ 112), __webpack_require__(/*! ./aes */ 113), __webpack_require__(/*! ./tripledes */ 114), __webpack_require__(/*! ./rc4 */ 115), __webpack_require__(/*! ./rabbit */ 116), __webpack_require__(/*! ./rabbit-legacy */ 117));
  } else
  {}
})(this, function (CryptoJS) {

  return CryptoJS;

});

/***/ }),
/* 83 */
/*!********************************************************************!*\
  !*** /Users/xingmangkeji/vue/yimei/node_modules/crypto-js/core.js ***!
  \********************************************************************/
/*! no static exports found */
/***/ (function(module, exports, __webpack_require__) {

/* WEBPACK VAR INJECTION */(function(global) {;(function (root, factory) {
  if (true) {
    // CommonJS
    module.exports = exports = factory();
  } else
  {}
})(this, function () {

  /*globals window, global, require*/

  /**
                                       * CryptoJS core components.
                                       */
  var CryptoJS = CryptoJS || function (Math, undefined) {

    var crypto;

    // Native crypto from window (Browser)
    if (typeof window !== 'undefined' && window.crypto) {
      crypto = window.crypto;
    }

    // Native crypto in web worker (Browser)
    if (typeof self !== 'undefined' && self.crypto) {
      crypto = self.crypto;
    }

    // Native crypto from worker
    if (typeof globalThis !== 'undefined' && globalThis.crypto) {
      crypto = globalThis.crypto;
    }

    // Native (experimental IE 11) crypto from window (Browser)
    if (!crypto && typeof window !== 'undefined' && window.msCrypto) {
      crypto = window.msCrypto;
    }

    // Native crypto from global (NodeJS)
    if (!crypto && typeof global !== 'undefined' && global.crypto) {
      crypto = global.crypto;
    }

    // Native crypto import via require (NodeJS)
    if (!crypto && "function" === 'function') {
      try {
        crypto = __webpack_require__(/*! crypto */ 84);
      } catch (err) {}
    }

    /*
       * Cryptographically secure pseudorandom number generator
       *
       * As Math.random() is cryptographically not safe to use
       */
    var cryptoSecureRandomInt = function cryptoSecureRandomInt() {
      if (crypto) {
        // Use getRandomValues method (Browser)
        if (typeof crypto.getRandomValues === 'function') {
          try {
            return crypto.getRandomValues(new Uint32Array(1))[0];
          } catch (err) {}
        }

        // Use randomBytes method (NodeJS)
        if (typeof crypto.randomBytes === 'function') {
          try {
            return crypto.randomBytes(4).readInt32LE();
          } catch (err) {}
        }
      }

      throw new Error('Native crypto module could not be used to get secure random number.');
    };

    /*
        * Local polyfill of Object.create
         */

    var create = Object.create || function () {
      function F() {}

      return function (obj) {
        var subtype;

        F.prototype = obj;

        subtype = new F();

        F.prototype = null;

        return subtype;
      };
    }();

    /**
          * CryptoJS namespace.
          */
    var C = {};

    /**
                 * Library namespace.
                 */
    var C_lib = C.lib = {};

    /**
                             * Base object for prototypal inheritance.
                             */
    var Base = C_lib.Base = function () {


      return {
        /**
                * Creates a new object that inherits from this object.
                *
                * @param {Object} overrides Properties to copy into the new object.
                *
                * @return {Object} The new object.
                *
                * @static
                *
                * @example
                *
                *     var MyType = CryptoJS.lib.Base.extend({
                *         field: 'value',
                *
                *         method: function () {
                *         }
                *     });
                */
        extend: function extend(overrides) {
          // Spawn
          var subtype = create(this);

          // Augment
          if (overrides) {
            subtype.mixIn(overrides);
          }

          // Create default initializer
          if (!subtype.hasOwnProperty('init') || this.init === subtype.init) {
            subtype.init = function () {
              subtype.$super.init.apply(this, arguments);
            };
          }

          // Initializer's prototype is the subtype object
          subtype.init.prototype = subtype;

          // Reference supertype
          subtype.$super = this;

          return subtype;
        },

        /**
            * Extends this object and runs the init method.
            * Arguments to create() will be passed to init().
            *
            * @return {Object} The new object.
            *
            * @static
            *
            * @example
            *
            *     var instance = MyType.create();
            */
        create: function create() {
          var instance = this.extend();
          instance.init.apply(instance, arguments);

          return instance;
        },

        /**
            * Initializes a newly created object.
            * Override this method to add some logic when your objects are created.
            *
            * @example
            *
            *     var MyType = CryptoJS.lib.Base.extend({
            *         init: function () {
            *             // ...
            *         }
            *     });
            */
        init: function init() {
        },

        /**
            * Copies properties into this object.
            *
            * @param {Object} properties The properties to mix in.
            *
            * @example
            *
            *     MyType.mixIn({
            *         field: 'value'
            *     });
            */
        mixIn: function mixIn(properties) {
          for (var propertyName in properties) {
            if (properties.hasOwnProperty(propertyName)) {
              this[propertyName] = properties[propertyName];
            }
          }

          // IE won't copy toString using the loop above
          if (properties.hasOwnProperty('toString')) {
            this.toString = properties.toString;
          }
        },

        /**
            * Creates a copy of this object.
            *
            * @return {Object} The clone.
            *
            * @example
            *
            *     var clone = instance.clone();
            */
        clone: function clone() {
          return this.init.prototype.extend(this);
        } };

    }();

    /**
          * An array of 32-bit words.
          *
          * @property {Array} words The array of 32-bit words.
          * @property {number} sigBytes The number of significant bytes in this word array.
          */
    var WordArray = C_lib.WordArray = Base.extend({
      /**
                                                     * Initializes a newly created word array.
                                                     *
                                                     * @param {Array} words (Optional) An array of 32-bit words.
                                                     * @param {number} sigBytes (Optional) The number of significant bytes in the words.
                                                     *
                                                     * @example
                                                     *
                                                     *     var wordArray = CryptoJS.lib.WordArray.create();
                                                     *     var wordArray = CryptoJS.lib.WordArray.create([0x00010203, 0x04050607]);
                                                     *     var wordArray = CryptoJS.lib.WordArray.create([0x00010203, 0x04050607], 6);
                                                     */
      init: function init(words, sigBytes) {
        words = this.words = words || [];

        if (sigBytes != undefined) {
          this.sigBytes = sigBytes;
        } else {
          this.sigBytes = words.length * 4;
        }
      },

      /**
          * Converts this word array to a string.
          *
          * @param {Encoder} encoder (Optional) The encoding strategy to use. Default: CryptoJS.enc.Hex
          *
          * @return {string} The stringified word array.
          *
          * @example
          *
          *     var string = wordArray + '';
          *     var string = wordArray.toString();
          *     var string = wordArray.toString(CryptoJS.enc.Utf8);
          */
      toString: function toString(encoder) {
        return (encoder || Hex).stringify(this);
      },

      /**
          * Concatenates a word array to this word array.
          *
          * @param {WordArray} wordArray The word array to append.
          *
          * @return {WordArray} This word array.
          *
          * @example
          *
          *     wordArray1.concat(wordArray2);
          */
      concat: function concat(wordArray) {
        // Shortcuts
        var thisWords = this.words;
        var thatWords = wordArray.words;
        var thisSigBytes = this.sigBytes;
        var thatSigBytes = wordArray.sigBytes;

        // Clamp excess bits
        this.clamp();

        // Concat
        if (thisSigBytes % 4) {
          // Copy one byte at a time
          for (var i = 0; i < thatSigBytes; i++) {
            var thatByte = thatWords[i >>> 2] >>> 24 - i % 4 * 8 & 0xff;
            thisWords[thisSigBytes + i >>> 2] |= thatByte << 24 - (thisSigBytes + i) % 4 * 8;
          }
        } else {
          // Copy one word at a time
          for (var j = 0; j < thatSigBytes; j += 4) {
            thisWords[thisSigBytes + j >>> 2] = thatWords[j >>> 2];
          }
        }
        this.sigBytes += thatSigBytes;

        // Chainable
        return this;
      },

      /**
          * Removes insignificant bits.
          *
          * @example
          *
          *     wordArray.clamp();
          */
      clamp: function clamp() {
        // Shortcuts
        var words = this.words;
        var sigBytes = this.sigBytes;

        // Clamp
        words[sigBytes >>> 2] &= 0xffffffff << 32 - sigBytes % 4 * 8;
        words.length = Math.ceil(sigBytes / 4);
      },

      /**
          * Creates a copy of this word array.
          *
          * @return {WordArray} The clone.
          *
          * @example
          *
          *     var clone = wordArray.clone();
          */
      clone: function clone() {
        var clone = Base.clone.call(this);
        clone.words = this.words.slice(0);

        return clone;
      },

      /**
          * Creates a word array filled with random bytes.
          *
          * @param {number} nBytes The number of random bytes to generate.
          *
          * @return {WordArray} The random word array.
          *
          * @static
          *
          * @example
          *
          *     var wordArray = CryptoJS.lib.WordArray.random(16);
          */
      random: function random(nBytes) {
        var words = [];

        for (var i = 0; i < nBytes; i += 4) {
          words.push(cryptoSecureRandomInt());
        }

        return new WordArray.init(words, nBytes);
      } });


    /**
             * Encoder namespace.
             */
    var C_enc = C.enc = {};

    /**
                             * Hex encoding strategy.
                             */
    var Hex = C_enc.Hex = {
      /**
                             * Converts a word array to a hex string.
                             *
                             * @param {WordArray} wordArray The word array.
                             *
                             * @return {string} The hex string.
                             *
                             * @static
                             *
                             * @example
                             *
                             *     var hexString = CryptoJS.enc.Hex.stringify(wordArray);
                             */
      stringify: function stringify(wordArray) {
        // Shortcuts
        var words = wordArray.words;
        var sigBytes = wordArray.sigBytes;

        // Convert
        var hexChars = [];
        for (var i = 0; i < sigBytes; i++) {
          var bite = words[i >>> 2] >>> 24 - i % 4 * 8 & 0xff;
          hexChars.push((bite >>> 4).toString(16));
          hexChars.push((bite & 0x0f).toString(16));
        }

        return hexChars.join('');
      },

      /**
          * Converts a hex string to a word array.
          *
          * @param {string} hexStr The hex string.
          *
          * @return {WordArray} The word array.
          *
          * @static
          *
          * @example
          *
          *     var wordArray = CryptoJS.enc.Hex.parse(hexString);
          */
      parse: function parse(hexStr) {
        // Shortcut
        var hexStrLength = hexStr.length;

        // Convert
        var words = [];
        for (var i = 0; i < hexStrLength; i += 2) {
          words[i >>> 3] |= parseInt(hexStr.substr(i, 2), 16) << 24 - i % 8 * 4;
        }

        return new WordArray.init(words, hexStrLength / 2);
      } };


    /**
            * Latin1 encoding strategy.
            */
    var Latin1 = C_enc.Latin1 = {
      /**
                                   * Converts a word array to a Latin1 string.
                                   *
                                   * @param {WordArray} wordArray The word array.
                                   *
                                   * @return {string} The Latin1 string.
                                   *
                                   * @static
                                   *
                                   * @example
                                   *
                                   *     var latin1String = CryptoJS.enc.Latin1.stringify(wordArray);
                                   */
      stringify: function stringify(wordArray) {
        // Shortcuts
        var words = wordArray.words;
        var sigBytes = wordArray.sigBytes;

        // Convert
        var latin1Chars = [];
        for (var i = 0; i < sigBytes; i++) {
          var bite = words[i >>> 2] >>> 24 - i % 4 * 8 & 0xff;
          latin1Chars.push(String.fromCharCode(bite));
        }

        return latin1Chars.join('');
      },

      /**
          * Converts a Latin1 string to a word array.
          *
          * @param {string} latin1Str The Latin1 string.
          *
          * @return {WordArray} The word array.
          *
          * @static
          *
          * @example
          *
          *     var wordArray = CryptoJS.enc.Latin1.parse(latin1String);
          */
      parse: function parse(latin1Str) {
        // Shortcut
        var latin1StrLength = latin1Str.length;

        // Convert
        var words = [];
        for (var i = 0; i < latin1StrLength; i++) {
          words[i >>> 2] |= (latin1Str.charCodeAt(i) & 0xff) << 24 - i % 4 * 8;
        }

        return new WordArray.init(words, latin1StrLength);
      } };


    /**
            * UTF-8 encoding strategy.
            */
    var Utf8 = C_enc.Utf8 = {
      /**
                               * Converts a word array to a UTF-8 string.
                               *
                               * @param {WordArray} wordArray The word array.
                               *
                               * @return {string} The UTF-8 string.
                               *
                               * @static
                               *
                               * @example
                               *
                               *     var utf8String = CryptoJS.enc.Utf8.stringify(wordArray);
                               */
      stringify: function stringify(wordArray) {
        try {
          return decodeURIComponent(escape(Latin1.stringify(wordArray)));
        } catch (e) {
          throw new Error('Malformed UTF-8 data');
        }
      },

      /**
          * Converts a UTF-8 string to a word array.
          *
          * @param {string} utf8Str The UTF-8 string.
          *
          * @return {WordArray} The word array.
          *
          * @static
          *
          * @example
          *
          *     var wordArray = CryptoJS.enc.Utf8.parse(utf8String);
          */
      parse: function parse(utf8Str) {
        return Latin1.parse(unescape(encodeURIComponent(utf8Str)));
      } };


    /**
            * Abstract buffered block algorithm template.
            *
            * The property blockSize must be implemented in a concrete subtype.
            *
            * @property {number} _minBufferSize The number of blocks that should be kept unprocessed in the buffer. Default: 0
            */
    var BufferedBlockAlgorithm = C_lib.BufferedBlockAlgorithm = Base.extend({
      /**
                                                                               * Resets this block algorithm's data buffer to its initial state.
                                                                               *
                                                                               * @example
                                                                               *
                                                                               *     bufferedBlockAlgorithm.reset();
                                                                               */
      reset: function reset() {
        // Initial values
        this._data = new WordArray.init();
        this._nDataBytes = 0;
      },

      /**
          * Adds new data to this block algorithm's buffer.
          *
          * @param {WordArray|string} data The data to append. Strings are converted to a WordArray using UTF-8.
          *
          * @example
          *
          *     bufferedBlockAlgorithm._append('data');
          *     bufferedBlockAlgorithm._append(wordArray);
          */
      _append: function _append(data) {
        // Convert string to WordArray, else assume WordArray already
        if (typeof data == 'string') {
          data = Utf8.parse(data);
        }

        // Append
        this._data.concat(data);
        this._nDataBytes += data.sigBytes;
      },

      /**
          * Processes available data blocks.
          *
          * This method invokes _doProcessBlock(offset), which must be implemented by a concrete subtype.
          *
          * @param {boolean} doFlush Whether all blocks and partial blocks should be processed.
          *
          * @return {WordArray} The processed data.
          *
          * @example
          *
          *     var processedData = bufferedBlockAlgorithm._process();
          *     var processedData = bufferedBlockAlgorithm._process(!!'flush');
          */
      _process: function _process(doFlush) {
        var processedWords;

        // Shortcuts
        var data = this._data;
        var dataWords = data.words;
        var dataSigBytes = data.sigBytes;
        var blockSize = this.blockSize;
        var blockSizeBytes = blockSize * 4;

        // Count blocks ready
        var nBlocksReady = dataSigBytes / blockSizeBytes;
        if (doFlush) {
          // Round up to include partial blocks
          nBlocksReady = Math.ceil(nBlocksReady);
        } else {
          // Round down to include only full blocks,
          // less the number of blocks that must remain in the buffer
          nBlocksReady = Math.max((nBlocksReady | 0) - this._minBufferSize, 0);
        }

        // Count words ready
        var nWordsReady = nBlocksReady * blockSize;

        // Count bytes ready
        var nBytesReady = Math.min(nWordsReady * 4, dataSigBytes);

        // Process blocks
        if (nWordsReady) {
          for (var offset = 0; offset < nWordsReady; offset += blockSize) {
            // Perform concrete-algorithm logic
            this._doProcessBlock(dataWords, offset);
          }

          // Remove processed words
          processedWords = dataWords.splice(0, nWordsReady);
          data.sigBytes -= nBytesReady;
        }

        // Return processed words
        return new WordArray.init(processedWords, nBytesReady);
      },

      /**
          * Creates a copy of this object.
          *
          * @return {Object} The clone.
          *
          * @example
          *
          *     var clone = bufferedBlockAlgorithm.clone();
          */
      clone: function clone() {
        var clone = Base.clone.call(this);
        clone._data = this._data.clone();

        return clone;
      },

      _minBufferSize: 0 });


    /**
                             * Abstract hasher template.
                             *
                             * @property {number} blockSize The number of 32-bit words this hasher operates on. Default: 16 (512 bits)
                             */
    var Hasher = C_lib.Hasher = BufferedBlockAlgorithm.extend({
      /**
                                                                 * Configuration options.
                                                                 */
      cfg: Base.extend(),

      /**
                           * Initializes a newly created hasher.
                           *
                           * @param {Object} cfg (Optional) The configuration options to use for this hash computation.
                           *
                           * @example
                           *
                           *     var hasher = CryptoJS.algo.SHA256.create();
                           */
      init: function init(cfg) {
        // Apply config defaults
        this.cfg = this.cfg.extend(cfg);

        // Set initial values
        this.reset();
      },

      /**
          * Resets this hasher to its initial state.
          *
          * @example
          *
          *     hasher.reset();
          */
      reset: function reset() {
        // Reset data buffer
        BufferedBlockAlgorithm.reset.call(this);

        // Perform concrete-hasher logic
        this._doReset();
      },

      /**
          * Updates this hasher with a message.
          *
          * @param {WordArray|string} messageUpdate The message to append.
          *
          * @return {Hasher} This hasher.
          *
          * @example
          *
          *     hasher.update('message');
          *     hasher.update(wordArray);
          */
      update: function update(messageUpdate) {
        // Append
        this._append(messageUpdate);

        // Update the hash
        this._process();

        // Chainable
        return this;
      },

      /**
          * Finalizes the hash computation.
          * Note that the finalize operation is effectively a destructive, read-once operation.
          *
          * @param {WordArray|string} messageUpdate (Optional) A final message update.
          *
          * @return {WordArray} The hash.
          *
          * @example
          *
          *     var hash = hasher.finalize();
          *     var hash = hasher.finalize('message');
          *     var hash = hasher.finalize(wordArray);
          */
      finalize: function finalize(messageUpdate) {
        // Final message update
        if (messageUpdate) {
          this._append(messageUpdate);
        }

        // Perform concrete-hasher logic
        var hash = this._doFinalize();

        return hash;
      },

      blockSize: 512 / 32,

      /**
                            * Creates a shortcut function to a hasher's object interface.
                            *
                            * @param {Hasher} hasher The hasher to create a helper for.
                            *
                            * @return {Function} The shortcut function.
                            *
                            * @static
                            *
                            * @example
                            *
                            *     var SHA256 = CryptoJS.lib.Hasher._createHelper(CryptoJS.algo.SHA256);
                            */
      _createHelper: function _createHelper(hasher) {
        return function (message, cfg) {
          return new hasher.init(cfg).finalize(message);
        };
      },

      /**
          * Creates a shortcut function to the HMAC's object interface.
          *
          * @param {Hasher} hasher The hasher to use in this HMAC helper.
          *
          * @return {Function} The shortcut function.
          *
          * @static
          *
          * @example
          *
          *     var HmacSHA256 = CryptoJS.lib.Hasher._createHmacHelper(CryptoJS.algo.SHA256);
          */
      _createHmacHelper: function _createHmacHelper(hasher) {
        return function (message, key) {
          return new C_algo.HMAC.init(hasher, key).finalize(message);
        };
      } });


    /**
             * Algorithm namespace.
             */
    var C_algo = C.algo = {};

    return C;
  }(Math);


  return CryptoJS;

});
/* WEBPACK VAR INJECTION */}.call(this, __webpack_require__(/*! ./../../../../../../Applications/HBuilderX.app/Contents/HBuilderX/plugins/uniapp-cli/node_modules/webpack/buildin/global.js */ 2)))

/***/ }),
/* 84 */
/*!************************!*\
  !*** crypto (ignored) ***!
  \************************/
/*! no static exports found */
/***/ (function(module, exports) {

/* (ignored) */

/***/ }),
/* 85 */
/*!************************************************************************!*\
  !*** /Users/xingmangkeji/vue/yimei/node_modules/crypto-js/x64-core.js ***!
  \************************************************************************/
/*! no static exports found */
/***/ (function(module, exports, __webpack_require__) {

;(function (root, factory) {
  if (true) {
    // CommonJS
    module.exports = exports = factory(__webpack_require__(/*! ./core */ 83));
  } else
  {}
})(this, function (CryptoJS) {

  (function (undefined) {
    // Shortcuts
    var C = CryptoJS;
    var C_lib = C.lib;
    var Base = C_lib.Base;
    var X32WordArray = C_lib.WordArray;

    /**
                                         * x64 namespace.
                                         */
    var C_x64 = C.x64 = {};

    /**
                             * A 64-bit word.
                             */
    var X64Word = C_x64.Word = Base.extend({
      /**
                                              * Initializes a newly created 64-bit word.
                                              *
                                              * @param {number} high The high 32 bits.
                                              * @param {number} low The low 32 bits.
                                              *
                                              * @example
                                              *
                                              *     var x64Word = CryptoJS.x64.Word.create(0x00010203, 0x04050607);
                                              */
      init: function init(high, low) {
        this.high = high;
        this.low = low;
      }

      /**
         * Bitwise NOTs this word.
         *
         * @return {X64Word} A new x64-Word object after negating.
         *
         * @example
         *
         *     var negated = x64Word.not();
         */
      // not: function () {
      // var high = ~this.high;
      // var low = ~this.low;

      // return X64Word.create(high, low);
      // },

      /**
       * Bitwise ANDs this word with the passed word.
       *
       * @param {X64Word} word The x64-Word to AND with this word.
       *
       * @return {X64Word} A new x64-Word object after ANDing.
       *
       * @example
       *
       *     var anded = x64Word.and(anotherX64Word);
       */
      // and: function (word) {
      // var high = this.high & word.high;
      // var low = this.low & word.low;

      // return X64Word.create(high, low);
      // },

      /**
       * Bitwise ORs this word with the passed word.
       *
       * @param {X64Word} word The x64-Word to OR with this word.
       *
       * @return {X64Word} A new x64-Word object after ORing.
       *
       * @example
       *
       *     var ored = x64Word.or(anotherX64Word);
       */
      // or: function (word) {
      // var high = this.high | word.high;
      // var low = this.low | word.low;

      // return X64Word.create(high, low);
      // },

      /**
       * Bitwise XORs this word with the passed word.
       *
       * @param {X64Word} word The x64-Word to XOR with this word.
       *
       * @return {X64Word} A new x64-Word object after XORing.
       *
       * @example
       *
       *     var xored = x64Word.xor(anotherX64Word);
       */
      // xor: function (word) {
      // var high = this.high ^ word.high;
      // var low = this.low ^ word.low;

      // return X64Word.create(high, low);
      // },

      /**
       * Shifts this word n bits to the left.
       *
       * @param {number} n The number of bits to shift.
       *
       * @return {X64Word} A new x64-Word object after shifting.
       *
       * @example
       *
       *     var shifted = x64Word.shiftL(25);
       */
      // shiftL: function (n) {
      // if (n < 32) {
      // var high = (this.high << n) | (this.low >>> (32 - n));
      // var low = this.low << n;
      // } else {
      // var high = this.low << (n - 32);
      // var low = 0;
      // }

      // return X64Word.create(high, low);
      // },

      /**
       * Shifts this word n bits to the right.
       *
       * @param {number} n The number of bits to shift.
       *
       * @return {X64Word} A new x64-Word object after shifting.
       *
       * @example
       *
       *     var shifted = x64Word.shiftR(7);
       */
      // shiftR: function (n) {
      // if (n < 32) {
      // var low = (this.low >>> n) | (this.high << (32 - n));
      // var high = this.high >>> n;
      // } else {
      // var low = this.high >>> (n - 32);
      // var high = 0;
      // }

      // return X64Word.create(high, low);
      // },

      /**
       * Rotates this word n bits to the left.
       *
       * @param {number} n The number of bits to rotate.
       *
       * @return {X64Word} A new x64-Word object after rotating.
       *
       * @example
       *
       *     var rotated = x64Word.rotL(25);
       */
      // rotL: function (n) {
      // return this.shiftL(n).or(this.shiftR(64 - n));
      // },

      /**
       * Rotates this word n bits to the right.
       *
       * @param {number} n The number of bits to rotate.
       *
       * @return {X64Word} A new x64-Word object after rotating.
       *
       * @example
       *
       *     var rotated = x64Word.rotR(7);
       */
      // rotR: function (n) {
      // return this.shiftR(n).or(this.shiftL(64 - n));
      // },

      /**
       * Adds this word with the passed word.
       *
       * @param {X64Word} word The x64-Word to add with this word.
       *
       * @return {X64Word} A new x64-Word object after adding.
       *
       * @example
       *
       *     var added = x64Word.add(anotherX64Word);
       */
      // add: function (word) {
      // var low = (this.low + word.low) | 0;
      // var carry = (low >>> 0) < (this.low >>> 0) ? 1 : 0;
      // var high = (this.high + word.high + carry) | 0;

      // return X64Word.create(high, low);
      // }
    });

    /**
         * An array of 64-bit words.
         *
         * @property {Array} words The array of CryptoJS.x64.Word objects.
         * @property {number} sigBytes The number of significant bytes in this word array.
         */
    var X64WordArray = C_x64.WordArray = Base.extend({
      /**
                                                        * Initializes a newly created word array.
                                                        *
                                                        * @param {Array} words (Optional) An array of CryptoJS.x64.Word objects.
                                                        * @param {number} sigBytes (Optional) The number of significant bytes in the words.
                                                        *
                                                        * @example
                                                        *
                                                        *     var wordArray = CryptoJS.x64.WordArray.create();
                                                        *
                                                        *     var wordArray = CryptoJS.x64.WordArray.create([
                                                        *         CryptoJS.x64.Word.create(0x00010203, 0x04050607),
                                                        *         CryptoJS.x64.Word.create(0x18191a1b, 0x1c1d1e1f)
                                                        *     ]);
                                                        *
                                                        *     var wordArray = CryptoJS.x64.WordArray.create([
                                                        *         CryptoJS.x64.Word.create(0x00010203, 0x04050607),
                                                        *         CryptoJS.x64.Word.create(0x18191a1b, 0x1c1d1e1f)
                                                        *     ], 10);
                                                        */
      init: function init(words, sigBytes) {
        words = this.words = words || [];

        if (sigBytes != undefined) {
          this.sigBytes = sigBytes;
        } else {
          this.sigBytes = words.length * 8;
        }
      },

      /**
          * Converts this 64-bit word array to a 32-bit word array.
          *
          * @return {CryptoJS.lib.WordArray} This word array's data as a 32-bit word array.
          *
          * @example
          *
          *     var x32WordArray = x64WordArray.toX32();
          */
      toX32: function toX32() {
        // Shortcuts
        var x64Words = this.words;
        var x64WordsLength = x64Words.length;

        // Convert
        var x32Words = [];
        for (var i = 0; i < x64WordsLength; i++) {
          var x64Word = x64Words[i];
          x32Words.push(x64Word.high);
          x32Words.push(x64Word.low);
        }

        return X32WordArray.create(x32Words, this.sigBytes);
      },

      /**
          * Creates a copy of this word array.
          *
          * @return {X64WordArray} The clone.
          *
          * @example
          *
          *     var clone = x64WordArray.clone();
          */
      clone: function clone() {
        var clone = Base.clone.call(this);

        // Clone "words" array
        var words = clone.words = this.words.slice(0);

        // Clone each X64Word object
        var wordsLength = words.length;
        for (var i = 0; i < wordsLength; i++) {
          words[i] = words[i].clone();
        }

        return clone;
      } });

  })();


  return CryptoJS;

});

/***/ }),
/* 86 */
/*!*******************************************************************************!*\
  !*** /Users/xingmangkeji/vue/yimei/node_modules/crypto-js/lib-typedarrays.js ***!
  \*******************************************************************************/
/*! no static exports found */
/***/ (function(module, exports, __webpack_require__) {

;(function (root, factory) {
  if (true) {
    // CommonJS
    module.exports = exports = factory(__webpack_require__(/*! ./core */ 83));
  } else
  {}
})(this, function (CryptoJS) {

  (function () {
    // Check if typed arrays are supported
    if (typeof ArrayBuffer != 'function') {
      return;
    }

    // Shortcuts
    var C = CryptoJS;
    var C_lib = C.lib;
    var WordArray = C_lib.WordArray;

    // Reference original init
    var superInit = WordArray.init;

    // Augment WordArray.init to handle typed arrays
    var subInit = WordArray.init = function (typedArray) {
      // Convert buffers to uint8
      if (typedArray instanceof ArrayBuffer) {
        typedArray = new Uint8Array(typedArray);
      }

      // Convert other array views to uint8
      if (
      typedArray instanceof Int8Array ||
      typeof Uint8ClampedArray !== "undefined" && typedArray instanceof Uint8ClampedArray ||
      typedArray instanceof Int16Array ||
      typedArray instanceof Uint16Array ||
      typedArray instanceof Int32Array ||
      typedArray instanceof Uint32Array ||
      typedArray instanceof Float32Array ||
      typedArray instanceof Float64Array)
      {
        typedArray = new Uint8Array(typedArray.buffer, typedArray.byteOffset, typedArray.byteLength);
      }

      // Handle Uint8Array
      if (typedArray instanceof Uint8Array) {
        // Shortcut
        var typedArrayByteLength = typedArray.byteLength;

        // Extract bytes
        var words = [];
        for (var i = 0; i < typedArrayByteLength; i++) {
          words[i >>> 2] |= typedArray[i] << 24 - i % 4 * 8;
        }

        // Initialize this word array
        superInit.call(this, words, typedArrayByteLength);
      } else {
        // Else call normal init
        superInit.apply(this, arguments);
      }
    };

    subInit.prototype = WordArray;
  })();


  return CryptoJS.lib.WordArray;

});

/***/ }),
/* 87 */
/*!*************************************************************************!*\
  !*** /Users/xingmangkeji/vue/yimei/node_modules/crypto-js/enc-utf16.js ***!
  \*************************************************************************/
/*! no static exports found */
/***/ (function(module, exports, __webpack_require__) {

;(function (root, factory) {
  if (true) {
    // CommonJS
    module.exports = exports = factory(__webpack_require__(/*! ./core */ 83));
  } else
  {}
})(this, function (CryptoJS) {

  (function () {
    // Shortcuts
    var C = CryptoJS;
    var C_lib = C.lib;
    var WordArray = C_lib.WordArray;
    var C_enc = C.enc;

    /**
                        * UTF-16 BE encoding strategy.
                        */
    var Utf16BE = C_enc.Utf16 = C_enc.Utf16BE = {
      /**
                                                   * Converts a word array to a UTF-16 BE string.
                                                   *
                                                   * @param {WordArray} wordArray The word array.
                                                   *
                                                   * @return {string} The UTF-16 BE string.
                                                   *
                                                   * @static
                                                   *
                                                   * @example
                                                   *
                                                   *     var utf16String = CryptoJS.enc.Utf16.stringify(wordArray);
                                                   */
      stringify: function stringify(wordArray) {
        // Shortcuts
        var words = wordArray.words;
        var sigBytes = wordArray.sigBytes;

        // Convert
        var utf16Chars = [];
        for (var i = 0; i < sigBytes; i += 2) {
          var codePoint = words[i >>> 2] >>> 16 - i % 4 * 8 & 0xffff;
          utf16Chars.push(String.fromCharCode(codePoint));
        }

        return utf16Chars.join('');
      },

      /**
          * Converts a UTF-16 BE string to a word array.
          *
          * @param {string} utf16Str The UTF-16 BE string.
          *
          * @return {WordArray} The word array.
          *
          * @static
          *
          * @example
          *
          *     var wordArray = CryptoJS.enc.Utf16.parse(utf16String);
          */
      parse: function parse(utf16Str) {
        // Shortcut
        var utf16StrLength = utf16Str.length;

        // Convert
        var words = [];
        for (var i = 0; i < utf16StrLength; i++) {
          words[i >>> 1] |= utf16Str.charCodeAt(i) << 16 - i % 2 * 16;
        }

        return WordArray.create(words, utf16StrLength * 2);
      } };


    /**
            * UTF-16 LE encoding strategy.
            */
    C_enc.Utf16LE = {
      /**
                       * Converts a word array to a UTF-16 LE string.
                       *
                       * @param {WordArray} wordArray The word array.
                       *
                       * @return {string} The UTF-16 LE string.
                       *
                       * @static
                       *
                       * @example
                       *
                       *     var utf16Str = CryptoJS.enc.Utf16LE.stringify(wordArray);
                       */
      stringify: function stringify(wordArray) {
        // Shortcuts
        var words = wordArray.words;
        var sigBytes = wordArray.sigBytes;

        // Convert
        var utf16Chars = [];
        for (var i = 0; i < sigBytes; i += 2) {
          var codePoint = swapEndian(words[i >>> 2] >>> 16 - i % 4 * 8 & 0xffff);
          utf16Chars.push(String.fromCharCode(codePoint));
        }

        return utf16Chars.join('');
      },

      /**
          * Converts a UTF-16 LE string to a word array.
          *
          * @param {string} utf16Str The UTF-16 LE string.
          *
          * @return {WordArray} The word array.
          *
          * @static
          *
          * @example
          *
          *     var wordArray = CryptoJS.enc.Utf16LE.parse(utf16Str);
          */
      parse: function parse(utf16Str) {
        // Shortcut
        var utf16StrLength = utf16Str.length;

        // Convert
        var words = [];
        for (var i = 0; i < utf16StrLength; i++) {
          words[i >>> 1] |= swapEndian(utf16Str.charCodeAt(i) << 16 - i % 2 * 16);
        }

        return WordArray.create(words, utf16StrLength * 2);
      } };


    function swapEndian(word) {
      return word << 8 & 0xff00ff00 | word >>> 8 & 0x00ff00ff;
    }
  })();


  return CryptoJS.enc.Utf16;

});

/***/ }),
/* 88 */
/*!**************************************************************************!*\
  !*** /Users/xingmangkeji/vue/yimei/node_modules/crypto-js/enc-base64.js ***!
  \**************************************************************************/
/*! no static exports found */
/***/ (function(module, exports, __webpack_require__) {

;(function (root, factory) {
  if (true) {
    // CommonJS
    module.exports = exports = factory(__webpack_require__(/*! ./core */ 83));
  } else
  {}
})(this, function (CryptoJS) {

  (function () {
    // Shortcuts
    var C = CryptoJS;
    var C_lib = C.lib;
    var WordArray = C_lib.WordArray;
    var C_enc = C.enc;

    /**
                        * Base64 encoding strategy.
                        */
    var Base64 = C_enc.Base64 = {
      /**
                                   * Converts a word array to a Base64 string.
                                   *
                                   * @param {WordArray} wordArray The word array.
                                   *
                                   * @return {string} The Base64 string.
                                   *
                                   * @static
                                   *
                                   * @example
                                   *
                                   *     var base64String = CryptoJS.enc.Base64.stringify(wordArray);
                                   */
      stringify: function stringify(wordArray) {
        // Shortcuts
        var words = wordArray.words;
        var sigBytes = wordArray.sigBytes;
        var map = this._map;

        // Clamp excess bits
        wordArray.clamp();

        // Convert
        var base64Chars = [];
        for (var i = 0; i < sigBytes; i += 3) {
          var byte1 = words[i >>> 2] >>> 24 - i % 4 * 8 & 0xff;
          var byte2 = words[i + 1 >>> 2] >>> 24 - (i + 1) % 4 * 8 & 0xff;
          var byte3 = words[i + 2 >>> 2] >>> 24 - (i + 2) % 4 * 8 & 0xff;

          var triplet = byte1 << 16 | byte2 << 8 | byte3;

          for (var j = 0; j < 4 && i + j * 0.75 < sigBytes; j++) {
            base64Chars.push(map.charAt(triplet >>> 6 * (3 - j) & 0x3f));
          }
        }

        // Add padding
        var paddingChar = map.charAt(64);
        if (paddingChar) {
          while (base64Chars.length % 4) {
            base64Chars.push(paddingChar);
          }
        }

        return base64Chars.join('');
      },

      /**
          * Converts a Base64 string to a word array.
          *
          * @param {string} base64Str The Base64 string.
          *
          * @return {WordArray} The word array.
          *
          * @static
          *
          * @example
          *
          *     var wordArray = CryptoJS.enc.Base64.parse(base64String);
          */
      parse: function parse(base64Str) {
        // Shortcuts
        var base64StrLength = base64Str.length;
        var map = this._map;
        var reverseMap = this._reverseMap;

        if (!reverseMap) {
          reverseMap = this._reverseMap = [];
          for (var j = 0; j < map.length; j++) {
            reverseMap[map.charCodeAt(j)] = j;
          }
        }

        // Ignore padding
        var paddingChar = map.charAt(64);
        if (paddingChar) {
          var paddingIndex = base64Str.indexOf(paddingChar);
          if (paddingIndex !== -1) {
            base64StrLength = paddingIndex;
          }
        }

        // Convert
        return parseLoop(base64Str, base64StrLength, reverseMap);

      },

      _map: 'ABCDEFGHIJKLMNOPQRSTUVWXYZabcdefghijklmnopqrstuvwxyz0123456789+/=' };


    function parseLoop(base64Str, base64StrLength, reverseMap) {
      var words = [];
      var nBytes = 0;
      for (var i = 0; i < base64StrLength; i++) {
        if (i % 4) {
          var bits1 = reverseMap[base64Str.charCodeAt(i - 1)] << i % 4 * 2;
          var bits2 = reverseMap[base64Str.charCodeAt(i)] >>> 6 - i % 4 * 2;
          var bitsCombined = bits1 | bits2;
          words[nBytes >>> 2] |= bitsCombined << 24 - nBytes % 4 * 8;
          nBytes++;
        }
      }
      return WordArray.create(words, nBytes);
    }
  })();


  return CryptoJS.enc.Base64;

});

/***/ }),
/* 89 */
/*!*****************************************************************************!*\
  !*** /Users/xingmangkeji/vue/yimei/node_modules/crypto-js/enc-base64url.js ***!
  \*****************************************************************************/
/*! no static exports found */
/***/ (function(module, exports, __webpack_require__) {

;(function (root, factory) {
  if (true) {
    // CommonJS
    module.exports = exports = factory(__webpack_require__(/*! ./core */ 83));
  } else
  {}
})(this, function (CryptoJS) {

  (function () {
    // Shortcuts
    var C = CryptoJS;
    var C_lib = C.lib;
    var WordArray = C_lib.WordArray;
    var C_enc = C.enc;

    /**
                        * Base64url encoding strategy.
                        */
    var Base64url = C_enc.Base64url = {
      /**
                                         * Converts a word array to a Base64url string.
                                         *
                                         * @param {WordArray} wordArray The word array.
                                         *
                                         * @param {boolean} urlSafe Whether to use url safe
                                         *
                                         * @return {string} The Base64url string.
                                         *
                                         * @static
                                         *
                                         * @example
                                         *
                                         *     var base64String = CryptoJS.enc.Base64url.stringify(wordArray);
                                         */
      stringify: function stringify(wordArray) {var urlSafe = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : true;
        // Shortcuts
        var words = wordArray.words;
        var sigBytes = wordArray.sigBytes;
        var map = urlSafe ? this._safe_map : this._map;

        // Clamp excess bits
        wordArray.clamp();

        // Convert
        var base64Chars = [];
        for (var i = 0; i < sigBytes; i += 3) {
          var byte1 = words[i >>> 2] >>> 24 - i % 4 * 8 & 0xff;
          var byte2 = words[i + 1 >>> 2] >>> 24 - (i + 1) % 4 * 8 & 0xff;
          var byte3 = words[i + 2 >>> 2] >>> 24 - (i + 2) % 4 * 8 & 0xff;

          var triplet = byte1 << 16 | byte2 << 8 | byte3;

          for (var j = 0; j < 4 && i + j * 0.75 < sigBytes; j++) {
            base64Chars.push(map.charAt(triplet >>> 6 * (3 - j) & 0x3f));
          }
        }

        // Add padding
        var paddingChar = map.charAt(64);
        if (paddingChar) {
          while (base64Chars.length % 4) {
            base64Chars.push(paddingChar);
          }
        }

        return base64Chars.join('');
      },

      /**
          * Converts a Base64url string to a word array.
          *
          * @param {string} base64Str The Base64url string.
          *
          * @param {boolean} urlSafe Whether to use url safe
          *
          * @return {WordArray} The word array.
          *
          * @static
          *
          * @example
          *
          *     var wordArray = CryptoJS.enc.Base64url.parse(base64String);
          */
      parse: function parse(base64Str) {var urlSafe = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : true;
        // Shortcuts
        var base64StrLength = base64Str.length;
        var map = urlSafe ? this._safe_map : this._map;
        var reverseMap = this._reverseMap;

        if (!reverseMap) {
          reverseMap = this._reverseMap = [];
          for (var j = 0; j < map.length; j++) {
            reverseMap[map.charCodeAt(j)] = j;
          }
        }

        // Ignore padding
        var paddingChar = map.charAt(64);
        if (paddingChar) {
          var paddingIndex = base64Str.indexOf(paddingChar);
          if (paddingIndex !== -1) {
            base64StrLength = paddingIndex;
          }
        }

        // Convert
        return parseLoop(base64Str, base64StrLength, reverseMap);

      },

      _map: 'ABCDEFGHIJKLMNOPQRSTUVWXYZabcdefghijklmnopqrstuvwxyz0123456789+/=',
      _safe_map: 'ABCDEFGHIJKLMNOPQRSTUVWXYZabcdefghijklmnopqrstuvwxyz0123456789-_' };


    function parseLoop(base64Str, base64StrLength, reverseMap) {
      var words = [];
      var nBytes = 0;
      for (var i = 0; i < base64StrLength; i++) {
        if (i % 4) {
          var bits1 = reverseMap[base64Str.charCodeAt(i - 1)] << i % 4 * 2;
          var bits2 = reverseMap[base64Str.charCodeAt(i)] >>> 6 - i % 4 * 2;
          var bitsCombined = bits1 | bits2;
          words[nBytes >>> 2] |= bitsCombined << 24 - nBytes % 4 * 8;
          nBytes++;
        }
      }
      return WordArray.create(words, nBytes);
    }
  })();

  return CryptoJS.enc.Base64url;

});

/***/ }),
/* 90 */
/*!*******************************************************************!*\
  !*** /Users/xingmangkeji/vue/yimei/node_modules/crypto-js/md5.js ***!
  \*******************************************************************/
/*! no static exports found */
/***/ (function(module, exports, __webpack_require__) {

;(function (root, factory) {
  if (true) {
    // CommonJS
    module.exports = exports = factory(__webpack_require__(/*! ./core */ 83));
  } else
  {}
})(this, function (CryptoJS) {

  (function (Math) {
    // Shortcuts
    var C = CryptoJS;
    var C_lib = C.lib;
    var WordArray = C_lib.WordArray;
    var Hasher = C_lib.Hasher;
    var C_algo = C.algo;

    // Constants table
    var T = [];

    // Compute constants
    (function () {
      for (var i = 0; i < 64; i++) {
        T[i] = Math.abs(Math.sin(i + 1)) * 0x100000000 | 0;
      }
    })();

    /**
           * MD5 hash algorithm.
           */
    var MD5 = C_algo.MD5 = Hasher.extend({
      _doReset: function _doReset() {
        this._hash = new WordArray.init([
        0x67452301, 0xefcdab89,
        0x98badcfe, 0x10325476]);

      },

      _doProcessBlock: function _doProcessBlock(M, offset) {
        // Swap endian
        for (var i = 0; i < 16; i++) {
          // Shortcuts
          var offset_i = offset + i;
          var M_offset_i = M[offset_i];

          M[offset_i] =
          (M_offset_i << 8 | M_offset_i >>> 24) & 0x00ff00ff |
          (M_offset_i << 24 | M_offset_i >>> 8) & 0xff00ff00;

        }

        // Shortcuts
        var H = this._hash.words;

        var M_offset_0 = M[offset + 0];
        var M_offset_1 = M[offset + 1];
        var M_offset_2 = M[offset + 2];
        var M_offset_3 = M[offset + 3];
        var M_offset_4 = M[offset + 4];
        var M_offset_5 = M[offset + 5];
        var M_offset_6 = M[offset + 6];
        var M_offset_7 = M[offset + 7];
        var M_offset_8 = M[offset + 8];
        var M_offset_9 = M[offset + 9];
        var M_offset_10 = M[offset + 10];
        var M_offset_11 = M[offset + 11];
        var M_offset_12 = M[offset + 12];
        var M_offset_13 = M[offset + 13];
        var M_offset_14 = M[offset + 14];
        var M_offset_15 = M[offset + 15];

        // Working varialbes
        var a = H[0];
        var b = H[1];
        var c = H[2];
        var d = H[3];

        // Computation
        a = FF(a, b, c, d, M_offset_0, 7, T[0]);
        d = FF(d, a, b, c, M_offset_1, 12, T[1]);
        c = FF(c, d, a, b, M_offset_2, 17, T[2]);
        b = FF(b, c, d, a, M_offset_3, 22, T[3]);
        a = FF(a, b, c, d, M_offset_4, 7, T[4]);
        d = FF(d, a, b, c, M_offset_5, 12, T[5]);
        c = FF(c, d, a, b, M_offset_6, 17, T[6]);
        b = FF(b, c, d, a, M_offset_7, 22, T[7]);
        a = FF(a, b, c, d, M_offset_8, 7, T[8]);
        d = FF(d, a, b, c, M_offset_9, 12, T[9]);
        c = FF(c, d, a, b, M_offset_10, 17, T[10]);
        b = FF(b, c, d, a, M_offset_11, 22, T[11]);
        a = FF(a, b, c, d, M_offset_12, 7, T[12]);
        d = FF(d, a, b, c, M_offset_13, 12, T[13]);
        c = FF(c, d, a, b, M_offset_14, 17, T[14]);
        b = FF(b, c, d, a, M_offset_15, 22, T[15]);

        a = GG(a, b, c, d, M_offset_1, 5, T[16]);
        d = GG(d, a, b, c, M_offset_6, 9, T[17]);
        c = GG(c, d, a, b, M_offset_11, 14, T[18]);
        b = GG(b, c, d, a, M_offset_0, 20, T[19]);
        a = GG(a, b, c, d, M_offset_5, 5, T[20]);
        d = GG(d, a, b, c, M_offset_10, 9, T[21]);
        c = GG(c, d, a, b, M_offset_15, 14, T[22]);
        b = GG(b, c, d, a, M_offset_4, 20, T[23]);
        a = GG(a, b, c, d, M_offset_9, 5, T[24]);
        d = GG(d, a, b, c, M_offset_14, 9, T[25]);
        c = GG(c, d, a, b, M_offset_3, 14, T[26]);
        b = GG(b, c, d, a, M_offset_8, 20, T[27]);
        a = GG(a, b, c, d, M_offset_13, 5, T[28]);
        d = GG(d, a, b, c, M_offset_2, 9, T[29]);
        c = GG(c, d, a, b, M_offset_7, 14, T[30]);
        b = GG(b, c, d, a, M_offset_12, 20, T[31]);

        a = HH(a, b, c, d, M_offset_5, 4, T[32]);
        d = HH(d, a, b, c, M_offset_8, 11, T[33]);
        c = HH(c, d, a, b, M_offset_11, 16, T[34]);
        b = HH(b, c, d, a, M_offset_14, 23, T[35]);
        a = HH(a, b, c, d, M_offset_1, 4, T[36]);
        d = HH(d, a, b, c, M_offset_4, 11, T[37]);
        c = HH(c, d, a, b, M_offset_7, 16, T[38]);
        b = HH(b, c, d, a, M_offset_10, 23, T[39]);
        a = HH(a, b, c, d, M_offset_13, 4, T[40]);
        d = HH(d, a, b, c, M_offset_0, 11, T[41]);
        c = HH(c, d, a, b, M_offset_3, 16, T[42]);
        b = HH(b, c, d, a, M_offset_6, 23, T[43]);
        a = HH(a, b, c, d, M_offset_9, 4, T[44]);
        d = HH(d, a, b, c, M_offset_12, 11, T[45]);
        c = HH(c, d, a, b, M_offset_15, 16, T[46]);
        b = HH(b, c, d, a, M_offset_2, 23, T[47]);

        a = II(a, b, c, d, M_offset_0, 6, T[48]);
        d = II(d, a, b, c, M_offset_7, 10, T[49]);
        c = II(c, d, a, b, M_offset_14, 15, T[50]);
        b = II(b, c, d, a, M_offset_5, 21, T[51]);
        a = II(a, b, c, d, M_offset_12, 6, T[52]);
        d = II(d, a, b, c, M_offset_3, 10, T[53]);
        c = II(c, d, a, b, M_offset_10, 15, T[54]);
        b = II(b, c, d, a, M_offset_1, 21, T[55]);
        a = II(a, b, c, d, M_offset_8, 6, T[56]);
        d = II(d, a, b, c, M_offset_15, 10, T[57]);
        c = II(c, d, a, b, M_offset_6, 15, T[58]);
        b = II(b, c, d, a, M_offset_13, 21, T[59]);
        a = II(a, b, c, d, M_offset_4, 6, T[60]);
        d = II(d, a, b, c, M_offset_11, 10, T[61]);
        c = II(c, d, a, b, M_offset_2, 15, T[62]);
        b = II(b, c, d, a, M_offset_9, 21, T[63]);

        // Intermediate hash value
        H[0] = H[0] + a | 0;
        H[1] = H[1] + b | 0;
        H[2] = H[2] + c | 0;
        H[3] = H[3] + d | 0;
      },

      _doFinalize: function _doFinalize() {
        // Shortcuts
        var data = this._data;
        var dataWords = data.words;

        var nBitsTotal = this._nDataBytes * 8;
        var nBitsLeft = data.sigBytes * 8;

        // Add padding
        dataWords[nBitsLeft >>> 5] |= 0x80 << 24 - nBitsLeft % 32;

        var nBitsTotalH = Math.floor(nBitsTotal / 0x100000000);
        var nBitsTotalL = nBitsTotal;
        dataWords[(nBitsLeft + 64 >>> 9 << 4) + 15] =
        (nBitsTotalH << 8 | nBitsTotalH >>> 24) & 0x00ff00ff |
        (nBitsTotalH << 24 | nBitsTotalH >>> 8) & 0xff00ff00;

        dataWords[(nBitsLeft + 64 >>> 9 << 4) + 14] =
        (nBitsTotalL << 8 | nBitsTotalL >>> 24) & 0x00ff00ff |
        (nBitsTotalL << 24 | nBitsTotalL >>> 8) & 0xff00ff00;


        data.sigBytes = (dataWords.length + 1) * 4;

        // Hash final blocks
        this._process();

        // Shortcuts
        var hash = this._hash;
        var H = hash.words;

        // Swap endian
        for (var i = 0; i < 4; i++) {
          // Shortcut
          var H_i = H[i];

          H[i] = (H_i << 8 | H_i >>> 24) & 0x00ff00ff |
          (H_i << 24 | H_i >>> 8) & 0xff00ff00;
        }

        // Return final computed hash
        return hash;
      },

      clone: function clone() {
        var clone = Hasher.clone.call(this);
        clone._hash = this._hash.clone();

        return clone;
      } });


    function FF(a, b, c, d, x, s, t) {
      var n = a + (b & c | ~b & d) + x + t;
      return (n << s | n >>> 32 - s) + b;
    }

    function GG(a, b, c, d, x, s, t) {
      var n = a + (b & d | c & ~d) + x + t;
      return (n << s | n >>> 32 - s) + b;
    }

    function HH(a, b, c, d, x, s, t) {
      var n = a + (b ^ c ^ d) + x + t;
      return (n << s | n >>> 32 - s) + b;
    }

    function II(a, b, c, d, x, s, t) {
      var n = a + (c ^ (b | ~d)) + x + t;
      return (n << s | n >>> 32 - s) + b;
    }

    /**
       * Shortcut function to the hasher's object interface.
       *
       * @param {WordArray|string} message The message to hash.
       *
       * @return {WordArray} The hash.
       *
       * @static
       *
       * @example
       *
       *     var hash = CryptoJS.MD5('message');
       *     var hash = CryptoJS.MD5(wordArray);
       */
    C.MD5 = Hasher._createHelper(MD5);

    /**
                                        * Shortcut function to the HMAC's object interface.
                                        *
                                        * @param {WordArray|string} message The message to hash.
                                        * @param {WordArray|string} key The secret key.
                                        *
                                        * @return {WordArray} The HMAC.
                                        *
                                        * @static
                                        *
                                        * @example
                                        *
                                        *     var hmac = CryptoJS.HmacMD5(message, key);
                                        */
    C.HmacMD5 = Hasher._createHmacHelper(MD5);
  })(Math);


  return CryptoJS.MD5;

});

/***/ }),
/* 91 */
/*!********************************************************************!*\
  !*** /Users/xingmangkeji/vue/yimei/node_modules/crypto-js/sha1.js ***!
  \********************************************************************/
/*! no static exports found */
/***/ (function(module, exports, __webpack_require__) {

;(function (root, factory) {
  if (true) {
    // CommonJS
    module.exports = exports = factory(__webpack_require__(/*! ./core */ 83));
  } else
  {}
})(this, function (CryptoJS) {

  (function () {
    // Shortcuts
    var C = CryptoJS;
    var C_lib = C.lib;
    var WordArray = C_lib.WordArray;
    var Hasher = C_lib.Hasher;
    var C_algo = C.algo;

    // Reusable object
    var W = [];

    /**
                 * SHA-1 hash algorithm.
                 */
    var SHA1 = C_algo.SHA1 = Hasher.extend({
      _doReset: function _doReset() {
        this._hash = new WordArray.init([
        0x67452301, 0xefcdab89,
        0x98badcfe, 0x10325476,
        0xc3d2e1f0]);

      },

      _doProcessBlock: function _doProcessBlock(M, offset) {
        // Shortcut
        var H = this._hash.words;

        // Working variables
        var a = H[0];
        var b = H[1];
        var c = H[2];
        var d = H[3];
        var e = H[4];

        // Computation
        for (var i = 0; i < 80; i++) {
          if (i < 16) {
            W[i] = M[offset + i] | 0;
          } else {
            var n = W[i - 3] ^ W[i - 8] ^ W[i - 14] ^ W[i - 16];
            W[i] = n << 1 | n >>> 31;
          }

          var t = (a << 5 | a >>> 27) + e + W[i];
          if (i < 20) {
            t += (b & c | ~b & d) + 0x5a827999;
          } else if (i < 40) {
            t += (b ^ c ^ d) + 0x6ed9eba1;
          } else if (i < 60) {
            t += (b & c | b & d | c & d) - 0x70e44324;
          } else /* if (i < 80) */{
              t += (b ^ c ^ d) - 0x359d3e2a;
            }

          e = d;
          d = c;
          c = b << 30 | b >>> 2;
          b = a;
          a = t;
        }

        // Intermediate hash value
        H[0] = H[0] + a | 0;
        H[1] = H[1] + b | 0;
        H[2] = H[2] + c | 0;
        H[3] = H[3] + d | 0;
        H[4] = H[4] + e | 0;
      },

      _doFinalize: function _doFinalize() {
        // Shortcuts
        var data = this._data;
        var dataWords = data.words;

        var nBitsTotal = this._nDataBytes * 8;
        var nBitsLeft = data.sigBytes * 8;

        // Add padding
        dataWords[nBitsLeft >>> 5] |= 0x80 << 24 - nBitsLeft % 32;
        dataWords[(nBitsLeft + 64 >>> 9 << 4) + 14] = Math.floor(nBitsTotal / 0x100000000);
        dataWords[(nBitsLeft + 64 >>> 9 << 4) + 15] = nBitsTotal;
        data.sigBytes = dataWords.length * 4;

        // Hash final blocks
        this._process();

        // Return final computed hash
        return this._hash;
      },

      clone: function clone() {
        var clone = Hasher.clone.call(this);
        clone._hash = this._hash.clone();

        return clone;
      } });


    /**
             * Shortcut function to the hasher's object interface.
             *
             * @param {WordArray|string} message The message to hash.
             *
             * @return {WordArray} The hash.
             *
             * @static
             *
             * @example
             *
             *     var hash = CryptoJS.SHA1('message');
             *     var hash = CryptoJS.SHA1(wordArray);
             */
    C.SHA1 = Hasher._createHelper(SHA1);

    /**
                                          * Shortcut function to the HMAC's object interface.
                                          *
                                          * @param {WordArray|string} message The message to hash.
                                          * @param {WordArray|string} key The secret key.
                                          *
                                          * @return {WordArray} The HMAC.
                                          *
                                          * @static
                                          *
                                          * @example
                                          *
                                          *     var hmac = CryptoJS.HmacSHA1(message, key);
                                          */
    C.HmacSHA1 = Hasher._createHmacHelper(SHA1);
  })();


  return CryptoJS.SHA1;

});

/***/ }),
/* 92 */
/*!**********************************************************************!*\
  !*** /Users/xingmangkeji/vue/yimei/node_modules/crypto-js/sha256.js ***!
  \**********************************************************************/
/*! no static exports found */
/***/ (function(module, exports, __webpack_require__) {

;(function (root, factory) {
  if (true) {
    // CommonJS
    module.exports = exports = factory(__webpack_require__(/*! ./core */ 83));
  } else
  {}
})(this, function (CryptoJS) {

  (function (Math) {
    // Shortcuts
    var C = CryptoJS;
    var C_lib = C.lib;
    var WordArray = C_lib.WordArray;
    var Hasher = C_lib.Hasher;
    var C_algo = C.algo;

    // Initialization and round constants tables
    var H = [];
    var K = [];

    // Compute constants
    (function () {
      function isPrime(n) {
        var sqrtN = Math.sqrt(n);
        for (var factor = 2; factor <= sqrtN; factor++) {
          if (!(n % factor)) {
            return false;
          }
        }

        return true;
      }

      function getFractionalBits(n) {
        return (n - (n | 0)) * 0x100000000 | 0;
      }

      var n = 2;
      var nPrime = 0;
      while (nPrime < 64) {
        if (isPrime(n)) {
          if (nPrime < 8) {
            H[nPrime] = getFractionalBits(Math.pow(n, 1 / 2));
          }
          K[nPrime] = getFractionalBits(Math.pow(n, 1 / 3));

          nPrime++;
        }

        n++;
      }
    })();

    // Reusable object
    var W = [];

    /**
                 * SHA-256 hash algorithm.
                 */
    var SHA256 = C_algo.SHA256 = Hasher.extend({
      _doReset: function _doReset() {
        this._hash = new WordArray.init(H.slice(0));
      },

      _doProcessBlock: function _doProcessBlock(M, offset) {
        // Shortcut
        var H = this._hash.words;

        // Working variables
        var a = H[0];
        var b = H[1];
        var c = H[2];
        var d = H[3];
        var e = H[4];
        var f = H[5];
        var g = H[6];
        var h = H[7];

        // Computation
        for (var i = 0; i < 64; i++) {
          if (i < 16) {
            W[i] = M[offset + i] | 0;
          } else {
            var gamma0x = W[i - 15];
            var gamma0 = (gamma0x << 25 | gamma0x >>> 7) ^ (
            gamma0x << 14 | gamma0x >>> 18) ^
            gamma0x >>> 3;

            var gamma1x = W[i - 2];
            var gamma1 = (gamma1x << 15 | gamma1x >>> 17) ^ (
            gamma1x << 13 | gamma1x >>> 19) ^
            gamma1x >>> 10;

            W[i] = gamma0 + W[i - 7] + gamma1 + W[i - 16];
          }

          var ch = e & f ^ ~e & g;
          var maj = a & b ^ a & c ^ b & c;

          var sigma0 = (a << 30 | a >>> 2) ^ (a << 19 | a >>> 13) ^ (a << 10 | a >>> 22);
          var sigma1 = (e << 26 | e >>> 6) ^ (e << 21 | e >>> 11) ^ (e << 7 | e >>> 25);

          var t1 = h + sigma1 + ch + K[i] + W[i];
          var t2 = sigma0 + maj;

          h = g;
          g = f;
          f = e;
          e = d + t1 | 0;
          d = c;
          c = b;
          b = a;
          a = t1 + t2 | 0;
        }

        // Intermediate hash value
        H[0] = H[0] + a | 0;
        H[1] = H[1] + b | 0;
        H[2] = H[2] + c | 0;
        H[3] = H[3] + d | 0;
        H[4] = H[4] + e | 0;
        H[5] = H[5] + f | 0;
        H[6] = H[6] + g | 0;
        H[7] = H[7] + h | 0;
      },

      _doFinalize: function _doFinalize() {
        // Shortcuts
        var data = this._data;
        var dataWords = data.words;

        var nBitsTotal = this._nDataBytes * 8;
        var nBitsLeft = data.sigBytes * 8;

        // Add padding
        dataWords[nBitsLeft >>> 5] |= 0x80 << 24 - nBitsLeft % 32;
        dataWords[(nBitsLeft + 64 >>> 9 << 4) + 14] = Math.floor(nBitsTotal / 0x100000000);
        dataWords[(nBitsLeft + 64 >>> 9 << 4) + 15] = nBitsTotal;
        data.sigBytes = dataWords.length * 4;

        // Hash final blocks
        this._process();

        // Return final computed hash
        return this._hash;
      },

      clone: function clone() {
        var clone = Hasher.clone.call(this);
        clone._hash = this._hash.clone();

        return clone;
      } });


    /**
             * Shortcut function to the hasher's object interface.
             *
             * @param {WordArray|string} message The message to hash.
             *
             * @return {WordArray} The hash.
             *
             * @static
             *
             * @example
             *
             *     var hash = CryptoJS.SHA256('message');
             *     var hash = CryptoJS.SHA256(wordArray);
             */
    C.SHA256 = Hasher._createHelper(SHA256);

    /**
                                              * Shortcut function to the HMAC's object interface.
                                              *
                                              * @param {WordArray|string} message The message to hash.
                                              * @param {WordArray|string} key The secret key.
                                              *
                                              * @return {WordArray} The HMAC.
                                              *
                                              * @static
                                              *
                                              * @example
                                              *
                                              *     var hmac = CryptoJS.HmacSHA256(message, key);
                                              */
    C.HmacSHA256 = Hasher._createHmacHelper(SHA256);
  })(Math);


  return CryptoJS.SHA256;

});

/***/ }),
/* 93 */
/*!**********************************************************************!*\
  !*** /Users/xingmangkeji/vue/yimei/node_modules/crypto-js/sha224.js ***!
  \**********************************************************************/
/*! no static exports found */
/***/ (function(module, exports, __webpack_require__) {

;(function (root, factory, undef) {
  if (true) {
    // CommonJS
    module.exports = exports = factory(__webpack_require__(/*! ./core */ 83), __webpack_require__(/*! ./sha256 */ 92));
  } else
  {}
})(this, function (CryptoJS) {

  (function () {
    // Shortcuts
    var C = CryptoJS;
    var C_lib = C.lib;
    var WordArray = C_lib.WordArray;
    var C_algo = C.algo;
    var SHA256 = C_algo.SHA256;

    /**
                                 * SHA-224 hash algorithm.
                                 */
    var SHA224 = C_algo.SHA224 = SHA256.extend({
      _doReset: function _doReset() {
        this._hash = new WordArray.init([
        0xc1059ed8, 0x367cd507, 0x3070dd17, 0xf70e5939,
        0xffc00b31, 0x68581511, 0x64f98fa7, 0xbefa4fa4]);

      },

      _doFinalize: function _doFinalize() {
        var hash = SHA256._doFinalize.call(this);

        hash.sigBytes -= 4;

        return hash;
      } });


    /**
             * Shortcut function to the hasher's object interface.
             *
             * @param {WordArray|string} message The message to hash.
             *
             * @return {WordArray} The hash.
             *
             * @static
             *
             * @example
             *
             *     var hash = CryptoJS.SHA224('message');
             *     var hash = CryptoJS.SHA224(wordArray);
             */
    C.SHA224 = SHA256._createHelper(SHA224);

    /**
                                              * Shortcut function to the HMAC's object interface.
                                              *
                                              * @param {WordArray|string} message The message to hash.
                                              * @param {WordArray|string} key The secret key.
                                              *
                                              * @return {WordArray} The HMAC.
                                              *
                                              * @static
                                              *
                                              * @example
                                              *
                                              *     var hmac = CryptoJS.HmacSHA224(message, key);
                                              */
    C.HmacSHA224 = SHA256._createHmacHelper(SHA224);
  })();


  return CryptoJS.SHA224;

});

/***/ }),
/* 94 */
/*!**********************************************************************!*\
  !*** /Users/xingmangkeji/vue/yimei/node_modules/crypto-js/sha512.js ***!
  \**********************************************************************/
/*! no static exports found */
/***/ (function(module, exports, __webpack_require__) {

;(function (root, factory, undef) {
  if (true) {
    // CommonJS
    module.exports = exports = factory(__webpack_require__(/*! ./core */ 83), __webpack_require__(/*! ./x64-core */ 85));
  } else
  {}
})(this, function (CryptoJS) {

  (function () {
    // Shortcuts
    var C = CryptoJS;
    var C_lib = C.lib;
    var Hasher = C_lib.Hasher;
    var C_x64 = C.x64;
    var X64Word = C_x64.Word;
    var X64WordArray = C_x64.WordArray;
    var C_algo = C.algo;

    function X64Word_create() {
      return X64Word.create.apply(X64Word, arguments);
    }

    // Constants
    var K = [
    X64Word_create(0x428a2f98, 0xd728ae22), X64Word_create(0x71374491, 0x23ef65cd),
    X64Word_create(0xb5c0fbcf, 0xec4d3b2f), X64Word_create(0xe9b5dba5, 0x8189dbbc),
    X64Word_create(0x3956c25b, 0xf348b538), X64Word_create(0x59f111f1, 0xb605d019),
    X64Word_create(0x923f82a4, 0xaf194f9b), X64Word_create(0xab1c5ed5, 0xda6d8118),
    X64Word_create(0xd807aa98, 0xa3030242), X64Word_create(0x12835b01, 0x45706fbe),
    X64Word_create(0x243185be, 0x4ee4b28c), X64Word_create(0x550c7dc3, 0xd5ffb4e2),
    X64Word_create(0x72be5d74, 0xf27b896f), X64Word_create(0x80deb1fe, 0x3b1696b1),
    X64Word_create(0x9bdc06a7, 0x25c71235), X64Word_create(0xc19bf174, 0xcf692694),
    X64Word_create(0xe49b69c1, 0x9ef14ad2), X64Word_create(0xefbe4786, 0x384f25e3),
    X64Word_create(0x0fc19dc6, 0x8b8cd5b5), X64Word_create(0x240ca1cc, 0x77ac9c65),
    X64Word_create(0x2de92c6f, 0x592b0275), X64Word_create(0x4a7484aa, 0x6ea6e483),
    X64Word_create(0x5cb0a9dc, 0xbd41fbd4), X64Word_create(0x76f988da, 0x831153b5),
    X64Word_create(0x983e5152, 0xee66dfab), X64Word_create(0xa831c66d, 0x2db43210),
    X64Word_create(0xb00327c8, 0x98fb213f), X64Word_create(0xbf597fc7, 0xbeef0ee4),
    X64Word_create(0xc6e00bf3, 0x3da88fc2), X64Word_create(0xd5a79147, 0x930aa725),
    X64Word_create(0x06ca6351, 0xe003826f), X64Word_create(0x14292967, 0x0a0e6e70),
    X64Word_create(0x27b70a85, 0x46d22ffc), X64Word_create(0x2e1b2138, 0x5c26c926),
    X64Word_create(0x4d2c6dfc, 0x5ac42aed), X64Word_create(0x53380d13, 0x9d95b3df),
    X64Word_create(0x650a7354, 0x8baf63de), X64Word_create(0x766a0abb, 0x3c77b2a8),
    X64Word_create(0x81c2c92e, 0x47edaee6), X64Word_create(0x92722c85, 0x1482353b),
    X64Word_create(0xa2bfe8a1, 0x4cf10364), X64Word_create(0xa81a664b, 0xbc423001),
    X64Word_create(0xc24b8b70, 0xd0f89791), X64Word_create(0xc76c51a3, 0x0654be30),
    X64Word_create(0xd192e819, 0xd6ef5218), X64Word_create(0xd6990624, 0x5565a910),
    X64Word_create(0xf40e3585, 0x5771202a), X64Word_create(0x106aa070, 0x32bbd1b8),
    X64Word_create(0x19a4c116, 0xb8d2d0c8), X64Word_create(0x1e376c08, 0x5141ab53),
    X64Word_create(0x2748774c, 0xdf8eeb99), X64Word_create(0x34b0bcb5, 0xe19b48a8),
    X64Word_create(0x391c0cb3, 0xc5c95a63), X64Word_create(0x4ed8aa4a, 0xe3418acb),
    X64Word_create(0x5b9cca4f, 0x7763e373), X64Word_create(0x682e6ff3, 0xd6b2b8a3),
    X64Word_create(0x748f82ee, 0x5defb2fc), X64Word_create(0x78a5636f, 0x43172f60),
    X64Word_create(0x84c87814, 0xa1f0ab72), X64Word_create(0x8cc70208, 0x1a6439ec),
    X64Word_create(0x90befffa, 0x23631e28), X64Word_create(0xa4506ceb, 0xde82bde9),
    X64Word_create(0xbef9a3f7, 0xb2c67915), X64Word_create(0xc67178f2, 0xe372532b),
    X64Word_create(0xca273ece, 0xea26619c), X64Word_create(0xd186b8c7, 0x21c0c207),
    X64Word_create(0xeada7dd6, 0xcde0eb1e), X64Word_create(0xf57d4f7f, 0xee6ed178),
    X64Word_create(0x06f067aa, 0x72176fba), X64Word_create(0x0a637dc5, 0xa2c898a6),
    X64Word_create(0x113f9804, 0xbef90dae), X64Word_create(0x1b710b35, 0x131c471b),
    X64Word_create(0x28db77f5, 0x23047d84), X64Word_create(0x32caab7b, 0x40c72493),
    X64Word_create(0x3c9ebe0a, 0x15c9bebc), X64Word_create(0x431d67c4, 0x9c100d4c),
    X64Word_create(0x4cc5d4be, 0xcb3e42b6), X64Word_create(0x597f299c, 0xfc657e2a),
    X64Word_create(0x5fcb6fab, 0x3ad6faec), X64Word_create(0x6c44198c, 0x4a475817)];


    // Reusable objects
    var W = [];
    (function () {
      for (var i = 0; i < 80; i++) {
        W[i] = X64Word_create();
      }
    })();

    /**
           * SHA-512 hash algorithm.
           */
    var SHA512 = C_algo.SHA512 = Hasher.extend({
      _doReset: function _doReset() {
        this._hash = new X64WordArray.init([
        new X64Word.init(0x6a09e667, 0xf3bcc908), new X64Word.init(0xbb67ae85, 0x84caa73b),
        new X64Word.init(0x3c6ef372, 0xfe94f82b), new X64Word.init(0xa54ff53a, 0x5f1d36f1),
        new X64Word.init(0x510e527f, 0xade682d1), new X64Word.init(0x9b05688c, 0x2b3e6c1f),
        new X64Word.init(0x1f83d9ab, 0xfb41bd6b), new X64Word.init(0x5be0cd19, 0x137e2179)]);

      },

      _doProcessBlock: function _doProcessBlock(M, offset) {
        // Shortcuts
        var H = this._hash.words;

        var H0 = H[0];
        var H1 = H[1];
        var H2 = H[2];
        var H3 = H[3];
        var H4 = H[4];
        var H5 = H[5];
        var H6 = H[6];
        var H7 = H[7];

        var H0h = H0.high;
        var H0l = H0.low;
        var H1h = H1.high;
        var H1l = H1.low;
        var H2h = H2.high;
        var H2l = H2.low;
        var H3h = H3.high;
        var H3l = H3.low;
        var H4h = H4.high;
        var H4l = H4.low;
        var H5h = H5.high;
        var H5l = H5.low;
        var H6h = H6.high;
        var H6l = H6.low;
        var H7h = H7.high;
        var H7l = H7.low;

        // Working variables
        var ah = H0h;
        var al = H0l;
        var bh = H1h;
        var bl = H1l;
        var ch = H2h;
        var cl = H2l;
        var dh = H3h;
        var dl = H3l;
        var eh = H4h;
        var el = H4l;
        var fh = H5h;
        var fl = H5l;
        var gh = H6h;
        var gl = H6l;
        var hh = H7h;
        var hl = H7l;

        // Rounds
        for (var i = 0; i < 80; i++) {
          var Wil;
          var Wih;

          // Shortcut
          var Wi = W[i];

          // Extend message
          if (i < 16) {
            Wih = Wi.high = M[offset + i * 2] | 0;
            Wil = Wi.low = M[offset + i * 2 + 1] | 0;
          } else {
            // Gamma0
            var gamma0x = W[i - 15];
            var gamma0xh = gamma0x.high;
            var gamma0xl = gamma0x.low;
            var gamma0h = (gamma0xh >>> 1 | gamma0xl << 31) ^ (gamma0xh >>> 8 | gamma0xl << 24) ^ gamma0xh >>> 7;
            var gamma0l = (gamma0xl >>> 1 | gamma0xh << 31) ^ (gamma0xl >>> 8 | gamma0xh << 24) ^ (gamma0xl >>> 7 | gamma0xh << 25);

            // Gamma1
            var gamma1x = W[i - 2];
            var gamma1xh = gamma1x.high;
            var gamma1xl = gamma1x.low;
            var gamma1h = (gamma1xh >>> 19 | gamma1xl << 13) ^ (gamma1xh << 3 | gamma1xl >>> 29) ^ gamma1xh >>> 6;
            var gamma1l = (gamma1xl >>> 19 | gamma1xh << 13) ^ (gamma1xl << 3 | gamma1xh >>> 29) ^ (gamma1xl >>> 6 | gamma1xh << 26);

            // W[i] = gamma0 + W[i - 7] + gamma1 + W[i - 16]
            var Wi7 = W[i - 7];
            var Wi7h = Wi7.high;
            var Wi7l = Wi7.low;

            var Wi16 = W[i - 16];
            var Wi16h = Wi16.high;
            var Wi16l = Wi16.low;

            Wil = gamma0l + Wi7l;
            Wih = gamma0h + Wi7h + (Wil >>> 0 < gamma0l >>> 0 ? 1 : 0);
            Wil = Wil + gamma1l;
            Wih = Wih + gamma1h + (Wil >>> 0 < gamma1l >>> 0 ? 1 : 0);
            Wil = Wil + Wi16l;
            Wih = Wih + Wi16h + (Wil >>> 0 < Wi16l >>> 0 ? 1 : 0);

            Wi.high = Wih;
            Wi.low = Wil;
          }

          var chh = eh & fh ^ ~eh & gh;
          var chl = el & fl ^ ~el & gl;
          var majh = ah & bh ^ ah & ch ^ bh & ch;
          var majl = al & bl ^ al & cl ^ bl & cl;

          var sigma0h = (ah >>> 28 | al << 4) ^ (ah << 30 | al >>> 2) ^ (ah << 25 | al >>> 7);
          var sigma0l = (al >>> 28 | ah << 4) ^ (al << 30 | ah >>> 2) ^ (al << 25 | ah >>> 7);
          var sigma1h = (eh >>> 14 | el << 18) ^ (eh >>> 18 | el << 14) ^ (eh << 23 | el >>> 9);
          var sigma1l = (el >>> 14 | eh << 18) ^ (el >>> 18 | eh << 14) ^ (el << 23 | eh >>> 9);

          // t1 = h + sigma1 + ch + K[i] + W[i]
          var Ki = K[i];
          var Kih = Ki.high;
          var Kil = Ki.low;

          var t1l = hl + sigma1l;
          var t1h = hh + sigma1h + (t1l >>> 0 < hl >>> 0 ? 1 : 0);
          var t1l = t1l + chl;
          var t1h = t1h + chh + (t1l >>> 0 < chl >>> 0 ? 1 : 0);
          var t1l = t1l + Kil;
          var t1h = t1h + Kih + (t1l >>> 0 < Kil >>> 0 ? 1 : 0);
          var t1l = t1l + Wil;
          var t1h = t1h + Wih + (t1l >>> 0 < Wil >>> 0 ? 1 : 0);

          // t2 = sigma0 + maj
          var t2l = sigma0l + majl;
          var t2h = sigma0h + majh + (t2l >>> 0 < sigma0l >>> 0 ? 1 : 0);

          // Update working variables
          hh = gh;
          hl = gl;
          gh = fh;
          gl = fl;
          fh = eh;
          fl = el;
          el = dl + t1l | 0;
          eh = dh + t1h + (el >>> 0 < dl >>> 0 ? 1 : 0) | 0;
          dh = ch;
          dl = cl;
          ch = bh;
          cl = bl;
          bh = ah;
          bl = al;
          al = t1l + t2l | 0;
          ah = t1h + t2h + (al >>> 0 < t1l >>> 0 ? 1 : 0) | 0;
        }

        // Intermediate hash value
        H0l = H0.low = H0l + al;
        H0.high = H0h + ah + (H0l >>> 0 < al >>> 0 ? 1 : 0);
        H1l = H1.low = H1l + bl;
        H1.high = H1h + bh + (H1l >>> 0 < bl >>> 0 ? 1 : 0);
        H2l = H2.low = H2l + cl;
        H2.high = H2h + ch + (H2l >>> 0 < cl >>> 0 ? 1 : 0);
        H3l = H3.low = H3l + dl;
        H3.high = H3h + dh + (H3l >>> 0 < dl >>> 0 ? 1 : 0);
        H4l = H4.low = H4l + el;
        H4.high = H4h + eh + (H4l >>> 0 < el >>> 0 ? 1 : 0);
        H5l = H5.low = H5l + fl;
        H5.high = H5h + fh + (H5l >>> 0 < fl >>> 0 ? 1 : 0);
        H6l = H6.low = H6l + gl;
        H6.high = H6h + gh + (H6l >>> 0 < gl >>> 0 ? 1 : 0);
        H7l = H7.low = H7l + hl;
        H7.high = H7h + hh + (H7l >>> 0 < hl >>> 0 ? 1 : 0);
      },

      _doFinalize: function _doFinalize() {
        // Shortcuts
        var data = this._data;
        var dataWords = data.words;

        var nBitsTotal = this._nDataBytes * 8;
        var nBitsLeft = data.sigBytes * 8;

        // Add padding
        dataWords[nBitsLeft >>> 5] |= 0x80 << 24 - nBitsLeft % 32;
        dataWords[(nBitsLeft + 128 >>> 10 << 5) + 30] = Math.floor(nBitsTotal / 0x100000000);
        dataWords[(nBitsLeft + 128 >>> 10 << 5) + 31] = nBitsTotal;
        data.sigBytes = dataWords.length * 4;

        // Hash final blocks
        this._process();

        // Convert hash to 32-bit word array before returning
        var hash = this._hash.toX32();

        // Return final computed hash
        return hash;
      },

      clone: function clone() {
        var clone = Hasher.clone.call(this);
        clone._hash = this._hash.clone();

        return clone;
      },

      blockSize: 1024 / 32 });


    /**
                                * Shortcut function to the hasher's object interface.
                                *
                                * @param {WordArray|string} message The message to hash.
                                *
                                * @return {WordArray} The hash.
                                *
                                * @static
                                *
                                * @example
                                *
                                *     var hash = CryptoJS.SHA512('message');
                                *     var hash = CryptoJS.SHA512(wordArray);
                                */
    C.SHA512 = Hasher._createHelper(SHA512);

    /**
                                              * Shortcut function to the HMAC's object interface.
                                              *
                                              * @param {WordArray|string} message The message to hash.
                                              * @param {WordArray|string} key The secret key.
                                              *
                                              * @return {WordArray} The HMAC.
                                              *
                                              * @static
                                              *
                                              * @example
                                              *
                                              *     var hmac = CryptoJS.HmacSHA512(message, key);
                                              */
    C.HmacSHA512 = Hasher._createHmacHelper(SHA512);
  })();


  return CryptoJS.SHA512;

});

/***/ }),
/* 95 */
/*!**********************************************************************!*\
  !*** /Users/xingmangkeji/vue/yimei/node_modules/crypto-js/sha384.js ***!
  \**********************************************************************/
/*! no static exports found */
/***/ (function(module, exports, __webpack_require__) {

;(function (root, factory, undef) {
  if (true) {
    // CommonJS
    module.exports = exports = factory(__webpack_require__(/*! ./core */ 83), __webpack_require__(/*! ./x64-core */ 85), __webpack_require__(/*! ./sha512 */ 94));
  } else
  {}
})(this, function (CryptoJS) {

  (function () {
    // Shortcuts
    var C = CryptoJS;
    var C_x64 = C.x64;
    var X64Word = C_x64.Word;
    var X64WordArray = C_x64.WordArray;
    var C_algo = C.algo;
    var SHA512 = C_algo.SHA512;

    /**
                                 * SHA-384 hash algorithm.
                                 */
    var SHA384 = C_algo.SHA384 = SHA512.extend({
      _doReset: function _doReset() {
        this._hash = new X64WordArray.init([
        new X64Word.init(0xcbbb9d5d, 0xc1059ed8), new X64Word.init(0x629a292a, 0x367cd507),
        new X64Word.init(0x9159015a, 0x3070dd17), new X64Word.init(0x152fecd8, 0xf70e5939),
        new X64Word.init(0x67332667, 0xffc00b31), new X64Word.init(0x8eb44a87, 0x68581511),
        new X64Word.init(0xdb0c2e0d, 0x64f98fa7), new X64Word.init(0x47b5481d, 0xbefa4fa4)]);

      },

      _doFinalize: function _doFinalize() {
        var hash = SHA512._doFinalize.call(this);

        hash.sigBytes -= 16;

        return hash;
      } });


    /**
             * Shortcut function to the hasher's object interface.
             *
             * @param {WordArray|string} message The message to hash.
             *
             * @return {WordArray} The hash.
             *
             * @static
             *
             * @example
             *
             *     var hash = CryptoJS.SHA384('message');
             *     var hash = CryptoJS.SHA384(wordArray);
             */
    C.SHA384 = SHA512._createHelper(SHA384);

    /**
                                              * Shortcut function to the HMAC's object interface.
                                              *
                                              * @param {WordArray|string} message The message to hash.
                                              * @param {WordArray|string} key The secret key.
                                              *
                                              * @return {WordArray} The HMAC.
                                              *
                                              * @static
                                              *
                                              * @example
                                              *
                                              *     var hmac = CryptoJS.HmacSHA384(message, key);
                                              */
    C.HmacSHA384 = SHA512._createHmacHelper(SHA384);
  })();


  return CryptoJS.SHA384;

});

/***/ }),
/* 96 */
/*!********************************************************************!*\
  !*** /Users/xingmangkeji/vue/yimei/node_modules/crypto-js/sha3.js ***!
  \********************************************************************/
/*! no static exports found */
/***/ (function(module, exports, __webpack_require__) {

;(function (root, factory, undef) {
  if (true) {
    // CommonJS
    module.exports = exports = factory(__webpack_require__(/*! ./core */ 83), __webpack_require__(/*! ./x64-core */ 85));
  } else
  {}
})(this, function (CryptoJS) {

  (function (Math) {
    // Shortcuts
    var C = CryptoJS;
    var C_lib = C.lib;
    var WordArray = C_lib.WordArray;
    var Hasher = C_lib.Hasher;
    var C_x64 = C.x64;
    var X64Word = C_x64.Word;
    var C_algo = C.algo;

    // Constants tables
    var RHO_OFFSETS = [];
    var PI_INDEXES = [];
    var ROUND_CONSTANTS = [];

    // Compute Constants
    (function () {
      // Compute rho offset constants
      var x = 1,y = 0;
      for (var t = 0; t < 24; t++) {
        RHO_OFFSETS[x + 5 * y] = (t + 1) * (t + 2) / 2 % 64;

        var newX = y % 5;
        var newY = (2 * x + 3 * y) % 5;
        x = newX;
        y = newY;
      }

      // Compute pi index constants
      for (var x = 0; x < 5; x++) {
        for (var y = 0; y < 5; y++) {
          PI_INDEXES[x + 5 * y] = y + (2 * x + 3 * y) % 5 * 5;
        }
      }

      // Compute round constants
      var LFSR = 0x01;
      for (var i = 0; i < 24; i++) {
        var roundConstantMsw = 0;
        var roundConstantLsw = 0;

        for (var j = 0; j < 7; j++) {
          if (LFSR & 0x01) {
            var bitPosition = (1 << j) - 1;
            if (bitPosition < 32) {
              roundConstantLsw ^= 1 << bitPosition;
            } else /* if (bitPosition >= 32) */{
                roundConstantMsw ^= 1 << bitPosition - 32;
              }
          }

          // Compute next LFSR
          if (LFSR & 0x80) {
            // Primitive polynomial over GF(2): x^8 + x^6 + x^5 + x^4 + 1
            LFSR = LFSR << 1 ^ 0x71;
          } else {
            LFSR <<= 1;
          }
        }

        ROUND_CONSTANTS[i] = X64Word.create(roundConstantMsw, roundConstantLsw);
      }
    })();

    // Reusable objects for temporary values
    var T = [];
    (function () {
      for (var i = 0; i < 25; i++) {
        T[i] = X64Word.create();
      }
    })();

    /**
           * SHA-3 hash algorithm.
           */
    var SHA3 = C_algo.SHA3 = Hasher.extend({
      /**
                                              * Configuration options.
                                              *
                                              * @property {number} outputLength
                                              *   The desired number of bits in the output hash.
                                              *   Only values permitted are: 224, 256, 384, 512.
                                              *   Default: 512
                                              */
      cfg: Hasher.cfg.extend({
        outputLength: 512 }),


      _doReset: function _doReset() {
        var state = this._state = [];
        for (var i = 0; i < 25; i++) {
          state[i] = new X64Word.init();
        }

        this.blockSize = (1600 - 2 * this.cfg.outputLength) / 32;
      },

      _doProcessBlock: function _doProcessBlock(M, offset) {
        // Shortcuts
        var state = this._state;
        var nBlockSizeLanes = this.blockSize / 2;

        // Absorb
        for (var i = 0; i < nBlockSizeLanes; i++) {
          // Shortcuts
          var M2i = M[offset + 2 * i];
          var M2i1 = M[offset + 2 * i + 1];

          // Swap endian
          M2i =
          (M2i << 8 | M2i >>> 24) & 0x00ff00ff |
          (M2i << 24 | M2i >>> 8) & 0xff00ff00;

          M2i1 =
          (M2i1 << 8 | M2i1 >>> 24) & 0x00ff00ff |
          (M2i1 << 24 | M2i1 >>> 8) & 0xff00ff00;


          // Absorb message into state
          var lane = state[i];
          lane.high ^= M2i1;
          lane.low ^= M2i;
        }

        // Rounds
        for (var round = 0; round < 24; round++) {
          // Theta
          for (var x = 0; x < 5; x++) {
            // Mix column lanes
            var tMsw = 0,tLsw = 0;
            for (var y = 0; y < 5; y++) {
              var lane = state[x + 5 * y];
              tMsw ^= lane.high;
              tLsw ^= lane.low;
            }

            // Temporary values
            var Tx = T[x];
            Tx.high = tMsw;
            Tx.low = tLsw;
          }
          for (var x = 0; x < 5; x++) {
            // Shortcuts
            var Tx4 = T[(x + 4) % 5];
            var Tx1 = T[(x + 1) % 5];
            var Tx1Msw = Tx1.high;
            var Tx1Lsw = Tx1.low;

            // Mix surrounding columns
            var tMsw = Tx4.high ^ (Tx1Msw << 1 | Tx1Lsw >>> 31);
            var tLsw = Tx4.low ^ (Tx1Lsw << 1 | Tx1Msw >>> 31);
            for (var y = 0; y < 5; y++) {
              var lane = state[x + 5 * y];
              lane.high ^= tMsw;
              lane.low ^= tLsw;
            }
          }

          // Rho Pi
          for (var laneIndex = 1; laneIndex < 25; laneIndex++) {
            var tMsw;
            var tLsw;

            // Shortcuts
            var lane = state[laneIndex];
            var laneMsw = lane.high;
            var laneLsw = lane.low;
            var rhoOffset = RHO_OFFSETS[laneIndex];

            // Rotate lanes
            if (rhoOffset < 32) {
              tMsw = laneMsw << rhoOffset | laneLsw >>> 32 - rhoOffset;
              tLsw = laneLsw << rhoOffset | laneMsw >>> 32 - rhoOffset;
            } else /* if (rhoOffset >= 32) */{
                tMsw = laneLsw << rhoOffset - 32 | laneMsw >>> 64 - rhoOffset;
                tLsw = laneMsw << rhoOffset - 32 | laneLsw >>> 64 - rhoOffset;
              }

            // Transpose lanes
            var TPiLane = T[PI_INDEXES[laneIndex]];
            TPiLane.high = tMsw;
            TPiLane.low = tLsw;
          }

          // Rho pi at x = y = 0
          var T0 = T[0];
          var state0 = state[0];
          T0.high = state0.high;
          T0.low = state0.low;

          // Chi
          for (var x = 0; x < 5; x++) {
            for (var y = 0; y < 5; y++) {
              // Shortcuts
              var laneIndex = x + 5 * y;
              var lane = state[laneIndex];
              var TLane = T[laneIndex];
              var Tx1Lane = T[(x + 1) % 5 + 5 * y];
              var Tx2Lane = T[(x + 2) % 5 + 5 * y];

              // Mix rows
              lane.high = TLane.high ^ ~Tx1Lane.high & Tx2Lane.high;
              lane.low = TLane.low ^ ~Tx1Lane.low & Tx2Lane.low;
            }
          }

          // Iota
          var lane = state[0];
          var roundConstant = ROUND_CONSTANTS[round];
          lane.high ^= roundConstant.high;
          lane.low ^= roundConstant.low;
        }
      },

      _doFinalize: function _doFinalize() {
        // Shortcuts
        var data = this._data;
        var dataWords = data.words;
        var nBitsTotal = this._nDataBytes * 8;
        var nBitsLeft = data.sigBytes * 8;
        var blockSizeBits = this.blockSize * 32;

        // Add padding
        dataWords[nBitsLeft >>> 5] |= 0x1 << 24 - nBitsLeft % 32;
        dataWords[(Math.ceil((nBitsLeft + 1) / blockSizeBits) * blockSizeBits >>> 5) - 1] |= 0x80;
        data.sigBytes = dataWords.length * 4;

        // Hash final blocks
        this._process();

        // Shortcuts
        var state = this._state;
        var outputLengthBytes = this.cfg.outputLength / 8;
        var outputLengthLanes = outputLengthBytes / 8;

        // Squeeze
        var hashWords = [];
        for (var i = 0; i < outputLengthLanes; i++) {
          // Shortcuts
          var lane = state[i];
          var laneMsw = lane.high;
          var laneLsw = lane.low;

          // Swap endian
          laneMsw =
          (laneMsw << 8 | laneMsw >>> 24) & 0x00ff00ff |
          (laneMsw << 24 | laneMsw >>> 8) & 0xff00ff00;

          laneLsw =
          (laneLsw << 8 | laneLsw >>> 24) & 0x00ff00ff |
          (laneLsw << 24 | laneLsw >>> 8) & 0xff00ff00;


          // Squeeze state to retrieve hash
          hashWords.push(laneLsw);
          hashWords.push(laneMsw);
        }

        // Return final computed hash
        return new WordArray.init(hashWords, outputLengthBytes);
      },

      clone: function clone() {
        var clone = Hasher.clone.call(this);

        var state = clone._state = this._state.slice(0);
        for (var i = 0; i < 25; i++) {
          state[i] = state[i].clone();
        }

        return clone;
      } });


    /**
             * Shortcut function to the hasher's object interface.
             *
             * @param {WordArray|string} message The message to hash.
             *
             * @return {WordArray} The hash.
             *
             * @static
             *
             * @example
             *
             *     var hash = CryptoJS.SHA3('message');
             *     var hash = CryptoJS.SHA3(wordArray);
             */
    C.SHA3 = Hasher._createHelper(SHA3);

    /**
                                          * Shortcut function to the HMAC's object interface.
                                          *
                                          * @param {WordArray|string} message The message to hash.
                                          * @param {WordArray|string} key The secret key.
                                          *
                                          * @return {WordArray} The HMAC.
                                          *
                                          * @static
                                          *
                                          * @example
                                          *
                                          *     var hmac = CryptoJS.HmacSHA3(message, key);
                                          */
    C.HmacSHA3 = Hasher._createHmacHelper(SHA3);
  })(Math);


  return CryptoJS.SHA3;

});

/***/ }),
/* 97 */
/*!*************************************************************************!*\
  !*** /Users/xingmangkeji/vue/yimei/node_modules/crypto-js/ripemd160.js ***!
  \*************************************************************************/
/*! no static exports found */
/***/ (function(module, exports, __webpack_require__) {

;(function (root, factory) {
  if (true) {
    // CommonJS
    module.exports = exports = factory(__webpack_require__(/*! ./core */ 83));
  } else
  {}
})(this, function (CryptoJS) {

  /** @preserve
                              (c) 2012 by Cédric Mesnil. All rights reserved.
                              	Redistribution and use in source and binary forms, with or without modification, are permitted provided that the following conditions are met:
                              	    - Redistributions of source code must retain the above copyright notice, this list of conditions and the following disclaimer.
                                  - Redistributions in binary form must reproduce the above copyright notice, this list of conditions and the following disclaimer in the documentation and/or other materials provided with the distribution.
                              	THIS SOFTWARE IS PROVIDED BY THE COPYRIGHT HOLDERS AND CONTRIBUTORS "AS IS" AND ANY EXPRESS OR IMPLIED WARRANTIES, INCLUDING, BUT NOT LIMITED TO, THE IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS FOR A PARTICULAR PURPOSE ARE DISCLAIMED. IN NO EVENT SHALL THE COPYRIGHT HOLDER OR CONTRIBUTORS BE LIABLE FOR ANY DIRECT, INDIRECT, INCIDENTAL, SPECIAL, EXEMPLARY, OR CONSEQUENTIAL DAMAGES (INCLUDING, BUT NOT LIMITED TO, PROCUREMENT OF SUBSTITUTE GOODS OR SERVICES; LOSS OF USE, DATA, OR PROFITS; OR BUSINESS INTERRUPTION) HOWEVER CAUSED AND ON ANY THEORY OF LIABILITY, WHETHER IN CONTRACT, STRICT LIABILITY, OR TORT (INCLUDING NEGLIGENCE OR OTHERWISE) ARISING IN ANY WAY OUT OF THE USE OF THIS SOFTWARE, EVEN IF ADVISED OF THE POSSIBILITY OF SUCH DAMAGE.
                              */




  (function (Math) {
    // Shortcuts
    var C = CryptoJS;
    var C_lib = C.lib;
    var WordArray = C_lib.WordArray;
    var Hasher = C_lib.Hasher;
    var C_algo = C.algo;

    // Constants table
    var _zl = WordArray.create([
    0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15,
    7, 4, 13, 1, 10, 6, 15, 3, 12, 0, 9, 5, 2, 14, 11, 8,
    3, 10, 14, 4, 9, 15, 8, 1, 2, 7, 0, 6, 13, 11, 5, 12,
    1, 9, 11, 10, 0, 8, 12, 4, 13, 3, 7, 15, 14, 5, 6, 2,
    4, 0, 5, 9, 7, 12, 2, 10, 14, 1, 3, 8, 11, 6, 15, 13]);
    var _zr = WordArray.create([
    5, 14, 7, 0, 9, 2, 11, 4, 13, 6, 15, 8, 1, 10, 3, 12,
    6, 11, 3, 7, 0, 13, 5, 10, 14, 15, 8, 12, 4, 9, 1, 2,
    15, 5, 1, 3, 7, 14, 6, 9, 11, 8, 12, 2, 10, 0, 4, 13,
    8, 6, 4, 1, 3, 11, 15, 0, 5, 12, 2, 13, 9, 7, 10, 14,
    12, 15, 10, 4, 1, 5, 8, 7, 6, 2, 13, 14, 0, 3, 9, 11]);
    var _sl = WordArray.create([
    11, 14, 15, 12, 5, 8, 7, 9, 11, 13, 14, 15, 6, 7, 9, 8,
    7, 6, 8, 13, 11, 9, 7, 15, 7, 12, 15, 9, 11, 7, 13, 12,
    11, 13, 6, 7, 14, 9, 13, 15, 14, 8, 13, 6, 5, 12, 7, 5,
    11, 12, 14, 15, 14, 15, 9, 8, 9, 14, 5, 6, 8, 6, 5, 12,
    9, 15, 5, 11, 6, 8, 13, 12, 5, 12, 13, 14, 11, 8, 5, 6]);
    var _sr = WordArray.create([
    8, 9, 9, 11, 13, 15, 15, 5, 7, 7, 8, 11, 14, 14, 12, 6,
    9, 13, 15, 7, 12, 8, 9, 11, 7, 7, 12, 7, 6, 15, 13, 11,
    9, 7, 15, 11, 8, 6, 6, 14, 12, 13, 5, 14, 13, 13, 7, 5,
    15, 5, 8, 11, 14, 14, 6, 14, 6, 9, 12, 9, 12, 5, 15, 8,
    8, 5, 12, 9, 12, 5, 14, 6, 8, 13, 6, 5, 15, 13, 11, 11]);

    var _hl = WordArray.create([0x00000000, 0x5A827999, 0x6ED9EBA1, 0x8F1BBCDC, 0xA953FD4E]);
    var _hr = WordArray.create([0x50A28BE6, 0x5C4DD124, 0x6D703EF3, 0x7A6D76E9, 0x00000000]);

    /**
                                                                                               * RIPEMD160 hash algorithm.
                                                                                               */
    var RIPEMD160 = C_algo.RIPEMD160 = Hasher.extend({
      _doReset: function _doReset() {
        this._hash = WordArray.create([0x67452301, 0xEFCDAB89, 0x98BADCFE, 0x10325476, 0xC3D2E1F0]);
      },

      _doProcessBlock: function _doProcessBlock(M, offset) {

        // Swap endian
        for (var i = 0; i < 16; i++) {
          // Shortcuts
          var offset_i = offset + i;
          var M_offset_i = M[offset_i];

          // Swap
          M[offset_i] =
          (M_offset_i << 8 | M_offset_i >>> 24) & 0x00ff00ff |
          (M_offset_i << 24 | M_offset_i >>> 8) & 0xff00ff00;

        }
        // Shortcut
        var H = this._hash.words;
        var hl = _hl.words;
        var hr = _hr.words;
        var zl = _zl.words;
        var zr = _zr.words;
        var sl = _sl.words;
        var sr = _sr.words;

        // Working variables
        var al, bl, cl, dl, el;
        var ar, br, cr, dr, er;

        ar = al = H[0];
        br = bl = H[1];
        cr = cl = H[2];
        dr = dl = H[3];
        er = el = H[4];
        // Computation
        var t;
        for (var i = 0; i < 80; i += 1) {
          t = al + M[offset + zl[i]] | 0;
          if (i < 16) {
            t += f1(bl, cl, dl) + hl[0];
          } else if (i < 32) {
            t += f2(bl, cl, dl) + hl[1];
          } else if (i < 48) {
            t += f3(bl, cl, dl) + hl[2];
          } else if (i < 64) {
            t += f4(bl, cl, dl) + hl[3];
          } else {// if (i<80) {
            t += f5(bl, cl, dl) + hl[4];
          }
          t = t | 0;
          t = rotl(t, sl[i]);
          t = t + el | 0;
          al = el;
          el = dl;
          dl = rotl(cl, 10);
          cl = bl;
          bl = t;

          t = ar + M[offset + zr[i]] | 0;
          if (i < 16) {
            t += f5(br, cr, dr) + hr[0];
          } else if (i < 32) {
            t += f4(br, cr, dr) + hr[1];
          } else if (i < 48) {
            t += f3(br, cr, dr) + hr[2];
          } else if (i < 64) {
            t += f2(br, cr, dr) + hr[3];
          } else {// if (i<80) {
            t += f1(br, cr, dr) + hr[4];
          }
          t = t | 0;
          t = rotl(t, sr[i]);
          t = t + er | 0;
          ar = er;
          er = dr;
          dr = rotl(cr, 10);
          cr = br;
          br = t;
        }
        // Intermediate hash value
        t = H[1] + cl + dr | 0;
        H[1] = H[2] + dl + er | 0;
        H[2] = H[3] + el + ar | 0;
        H[3] = H[4] + al + br | 0;
        H[4] = H[0] + bl + cr | 0;
        H[0] = t;
      },

      _doFinalize: function _doFinalize() {
        // Shortcuts
        var data = this._data;
        var dataWords = data.words;

        var nBitsTotal = this._nDataBytes * 8;
        var nBitsLeft = data.sigBytes * 8;

        // Add padding
        dataWords[nBitsLeft >>> 5] |= 0x80 << 24 - nBitsLeft % 32;
        dataWords[(nBitsLeft + 64 >>> 9 << 4) + 14] =
        (nBitsTotal << 8 | nBitsTotal >>> 24) & 0x00ff00ff |
        (nBitsTotal << 24 | nBitsTotal >>> 8) & 0xff00ff00;

        data.sigBytes = (dataWords.length + 1) * 4;

        // Hash final blocks
        this._process();

        // Shortcuts
        var hash = this._hash;
        var H = hash.words;

        // Swap endian
        for (var i = 0; i < 5; i++) {
          // Shortcut
          var H_i = H[i];

          // Swap
          H[i] = (H_i << 8 | H_i >>> 24) & 0x00ff00ff |
          (H_i << 24 | H_i >>> 8) & 0xff00ff00;
        }

        // Return final computed hash
        return hash;
      },

      clone: function clone() {
        var clone = Hasher.clone.call(this);
        clone._hash = this._hash.clone();

        return clone;
      } });



    function f1(x, y, z) {
      return x ^ y ^ z;

    }

    function f2(x, y, z) {
      return x & y | ~x & z;
    }

    function f3(x, y, z) {
      return (x | ~y) ^ z;
    }

    function f4(x, y, z) {
      return x & z | y & ~z;
    }

    function f5(x, y, z) {
      return x ^ (y | ~z);

    }

    function rotl(x, n) {
      return x << n | x >>> 32 - n;
    }


    /**
       * Shortcut function to the hasher's object interface.
       *
       * @param {WordArray|string} message The message to hash.
       *
       * @return {WordArray} The hash.
       *
       * @static
       *
       * @example
       *
       *     var hash = CryptoJS.RIPEMD160('message');
       *     var hash = CryptoJS.RIPEMD160(wordArray);
       */
    C.RIPEMD160 = Hasher._createHelper(RIPEMD160);

    /**
                                                    * Shortcut function to the HMAC's object interface.
                                                    *
                                                    * @param {WordArray|string} message The message to hash.
                                                    * @param {WordArray|string} key The secret key.
                                                    *
                                                    * @return {WordArray} The HMAC.
                                                    *
                                                    * @static
                                                    *
                                                    * @example
                                                    *
                                                    *     var hmac = CryptoJS.HmacRIPEMD160(message, key);
                                                    */
    C.HmacRIPEMD160 = Hasher._createHmacHelper(RIPEMD160);
  })(Math);


  return CryptoJS.RIPEMD160;

});

/***/ }),
/* 98 */
/*!********************************************************************!*\
  !*** /Users/xingmangkeji/vue/yimei/node_modules/crypto-js/hmac.js ***!
  \********************************************************************/
/*! no static exports found */
/***/ (function(module, exports, __webpack_require__) {

;(function (root, factory) {
  if (true) {
    // CommonJS
    module.exports = exports = factory(__webpack_require__(/*! ./core */ 83));
  } else
  {}
})(this, function (CryptoJS) {

  (function () {
    // Shortcuts
    var C = CryptoJS;
    var C_lib = C.lib;
    var Base = C_lib.Base;
    var C_enc = C.enc;
    var Utf8 = C_enc.Utf8;
    var C_algo = C.algo;

    /**
                          * HMAC algorithm.
                          */
    var HMAC = C_algo.HMAC = Base.extend({
      /**
                                            * Initializes a newly created HMAC.
                                            *
                                            * @param {Hasher} hasher The hash algorithm to use.
                                            * @param {WordArray|string} key The secret key.
                                            *
                                            * @example
                                            *
                                            *     var hmacHasher = CryptoJS.algo.HMAC.create(CryptoJS.algo.SHA256, key);
                                            */
      init: function init(hasher, key) {
        // Init hasher
        hasher = this._hasher = new hasher.init();

        // Convert string to WordArray, else assume WordArray already
        if (typeof key == 'string') {
          key = Utf8.parse(key);
        }

        // Shortcuts
        var hasherBlockSize = hasher.blockSize;
        var hasherBlockSizeBytes = hasherBlockSize * 4;

        // Allow arbitrary length keys
        if (key.sigBytes > hasherBlockSizeBytes) {
          key = hasher.finalize(key);
        }

        // Clamp excess bits
        key.clamp();

        // Clone key for inner and outer pads
        var oKey = this._oKey = key.clone();
        var iKey = this._iKey = key.clone();

        // Shortcuts
        var oKeyWords = oKey.words;
        var iKeyWords = iKey.words;

        // XOR keys with pad constants
        for (var i = 0; i < hasherBlockSize; i++) {
          oKeyWords[i] ^= 0x5c5c5c5c;
          iKeyWords[i] ^= 0x36363636;
        }
        oKey.sigBytes = iKey.sigBytes = hasherBlockSizeBytes;

        // Set initial values
        this.reset();
      },

      /**
          * Resets this HMAC to its initial state.
          *
          * @example
          *
          *     hmacHasher.reset();
          */
      reset: function reset() {
        // Shortcut
        var hasher = this._hasher;

        // Reset
        hasher.reset();
        hasher.update(this._iKey);
      },

      /**
          * Updates this HMAC with a message.
          *
          * @param {WordArray|string} messageUpdate The message to append.
          *
          * @return {HMAC} This HMAC instance.
          *
          * @example
          *
          *     hmacHasher.update('message');
          *     hmacHasher.update(wordArray);
          */
      update: function update(messageUpdate) {
        this._hasher.update(messageUpdate);

        // Chainable
        return this;
      },

      /**
          * Finalizes the HMAC computation.
          * Note that the finalize operation is effectively a destructive, read-once operation.
          *
          * @param {WordArray|string} messageUpdate (Optional) A final message update.
          *
          * @return {WordArray} The HMAC.
          *
          * @example
          *
          *     var hmac = hmacHasher.finalize();
          *     var hmac = hmacHasher.finalize('message');
          *     var hmac = hmacHasher.finalize(wordArray);
          */
      finalize: function finalize(messageUpdate) {
        // Shortcut
        var hasher = this._hasher;

        // Compute HMAC
        var innerHash = hasher.finalize(messageUpdate);
        hasher.reset();
        var hmac = hasher.finalize(this._oKey.clone().concat(innerHash));

        return hmac;
      } });

  })();


});

/***/ }),
/* 99 */
/*!**********************************************************************!*\
  !*** /Users/xingmangkeji/vue/yimei/node_modules/crypto-js/pbkdf2.js ***!
  \**********************************************************************/
/*! no static exports found */
/***/ (function(module, exports, __webpack_require__) {

;(function (root, factory, undef) {
  if (true) {
    // CommonJS
    module.exports = exports = factory(__webpack_require__(/*! ./core */ 83), __webpack_require__(/*! ./sha1 */ 91), __webpack_require__(/*! ./hmac */ 98));
  } else
  {}
})(this, function (CryptoJS) {

  (function () {
    // Shortcuts
    var C = CryptoJS;
    var C_lib = C.lib;
    var Base = C_lib.Base;
    var WordArray = C_lib.WordArray;
    var C_algo = C.algo;
    var SHA1 = C_algo.SHA1;
    var HMAC = C_algo.HMAC;

    /**
                             * Password-Based Key Derivation Function 2 algorithm.
                             */
    var PBKDF2 = C_algo.PBKDF2 = Base.extend({
      /**
                                                * Configuration options.
                                                *
                                                * @property {number} keySize The key size in words to generate. Default: 4 (128 bits)
                                                * @property {Hasher} hasher The hasher to use. Default: SHA1
                                                * @property {number} iterations The number of iterations to perform. Default: 1
                                                */
      cfg: Base.extend({
        keySize: 128 / 32,
        hasher: SHA1,
        iterations: 1 }),


      /**
                           * Initializes a newly created key derivation function.
                           *
                           * @param {Object} cfg (Optional) The configuration options to use for the derivation.
                           *
                           * @example
                           *
                           *     var kdf = CryptoJS.algo.PBKDF2.create();
                           *     var kdf = CryptoJS.algo.PBKDF2.create({ keySize: 8 });
                           *     var kdf = CryptoJS.algo.PBKDF2.create({ keySize: 8, iterations: 1000 });
                           */
      init: function init(cfg) {
        this.cfg = this.cfg.extend(cfg);
      },

      /**
          * Computes the Password-Based Key Derivation Function 2.
          *
          * @param {WordArray|string} password The password.
          * @param {WordArray|string} salt A salt.
          *
          * @return {WordArray} The derived key.
          *
          * @example
          *
          *     var key = kdf.compute(password, salt);
          */
      compute: function compute(password, salt) {
        // Shortcut
        var cfg = this.cfg;

        // Init HMAC
        var hmac = HMAC.create(cfg.hasher, password);

        // Initial values
        var derivedKey = WordArray.create();
        var blockIndex = WordArray.create([0x00000001]);

        // Shortcuts
        var derivedKeyWords = derivedKey.words;
        var blockIndexWords = blockIndex.words;
        var keySize = cfg.keySize;
        var iterations = cfg.iterations;

        // Generate key
        while (derivedKeyWords.length < keySize) {
          var block = hmac.update(salt).finalize(blockIndex);
          hmac.reset();

          // Shortcuts
          var blockWords = block.words;
          var blockWordsLength = blockWords.length;

          // Iterations
          var intermediate = block;
          for (var i = 1; i < iterations; i++) {
            intermediate = hmac.finalize(intermediate);
            hmac.reset();

            // Shortcut
            var intermediateWords = intermediate.words;

            // XOR intermediate with block
            for (var j = 0; j < blockWordsLength; j++) {
              blockWords[j] ^= intermediateWords[j];
            }
          }

          derivedKey.concat(block);
          blockIndexWords[0]++;
        }
        derivedKey.sigBytes = keySize * 4;

        return derivedKey;
      } });


    /**
             * Computes the Password-Based Key Derivation Function 2.
             *
             * @param {WordArray|string} password The password.
             * @param {WordArray|string} salt A salt.
             * @param {Object} cfg (Optional) The configuration options to use for this computation.
             *
             * @return {WordArray} The derived key.
             *
             * @static
             *
             * @example
             *
             *     var key = CryptoJS.PBKDF2(password, salt);
             *     var key = CryptoJS.PBKDF2(password, salt, { keySize: 8 });
             *     var key = CryptoJS.PBKDF2(password, salt, { keySize: 8, iterations: 1000 });
             */
    C.PBKDF2 = function (password, salt, cfg) {
      return PBKDF2.create(cfg).compute(password, salt);
    };
  })();


  return CryptoJS.PBKDF2;

});

/***/ }),
/* 100 */
/*!**********************************************************************!*\
  !*** /Users/xingmangkeji/vue/yimei/node_modules/crypto-js/evpkdf.js ***!
  \**********************************************************************/
/*! no static exports found */
/***/ (function(module, exports, __webpack_require__) {

;(function (root, factory, undef) {
  if (true) {
    // CommonJS
    module.exports = exports = factory(__webpack_require__(/*! ./core */ 83), __webpack_require__(/*! ./sha1 */ 91), __webpack_require__(/*! ./hmac */ 98));
  } else
  {}
})(this, function (CryptoJS) {

  (function () {
    // Shortcuts
    var C = CryptoJS;
    var C_lib = C.lib;
    var Base = C_lib.Base;
    var WordArray = C_lib.WordArray;
    var C_algo = C.algo;
    var MD5 = C_algo.MD5;

    /**
                           * This key derivation function is meant to conform with EVP_BytesToKey.
                           * www.openssl.org/docs/crypto/EVP_BytesToKey.html
                           */
    var EvpKDF = C_algo.EvpKDF = Base.extend({
      /**
                                                * Configuration options.
                                                *
                                                * @property {number} keySize The key size in words to generate. Default: 4 (128 bits)
                                                * @property {Hasher} hasher The hash algorithm to use. Default: MD5
                                                * @property {number} iterations The number of iterations to perform. Default: 1
                                                */
      cfg: Base.extend({
        keySize: 128 / 32,
        hasher: MD5,
        iterations: 1 }),


      /**
                           * Initializes a newly created key derivation function.
                           *
                           * @param {Object} cfg (Optional) The configuration options to use for the derivation.
                           *
                           * @example
                           *
                           *     var kdf = CryptoJS.algo.EvpKDF.create();
                           *     var kdf = CryptoJS.algo.EvpKDF.create({ keySize: 8 });
                           *     var kdf = CryptoJS.algo.EvpKDF.create({ keySize: 8, iterations: 1000 });
                           */
      init: function init(cfg) {
        this.cfg = this.cfg.extend(cfg);
      },

      /**
          * Derives a key from a password.
          *
          * @param {WordArray|string} password The password.
          * @param {WordArray|string} salt A salt.
          *
          * @return {WordArray} The derived key.
          *
          * @example
          *
          *     var key = kdf.compute(password, salt);
          */
      compute: function compute(password, salt) {
        var block;

        // Shortcut
        var cfg = this.cfg;

        // Init hasher
        var hasher = cfg.hasher.create();

        // Initial values
        var derivedKey = WordArray.create();

        // Shortcuts
        var derivedKeyWords = derivedKey.words;
        var keySize = cfg.keySize;
        var iterations = cfg.iterations;

        // Generate key
        while (derivedKeyWords.length < keySize) {
          if (block) {
            hasher.update(block);
          }
          block = hasher.update(password).finalize(salt);
          hasher.reset();

          // Iterations
          for (var i = 1; i < iterations; i++) {
            block = hasher.finalize(block);
            hasher.reset();
          }

          derivedKey.concat(block);
        }
        derivedKey.sigBytes = keySize * 4;

        return derivedKey;
      } });


    /**
             * Derives a key from a password.
             *
             * @param {WordArray|string} password The password.
             * @param {WordArray|string} salt A salt.
             * @param {Object} cfg (Optional) The configuration options to use for this computation.
             *
             * @return {WordArray} The derived key.
             *
             * @static
             *
             * @example
             *
             *     var key = CryptoJS.EvpKDF(password, salt);
             *     var key = CryptoJS.EvpKDF(password, salt, { keySize: 8 });
             *     var key = CryptoJS.EvpKDF(password, salt, { keySize: 8, iterations: 1000 });
             */
    C.EvpKDF = function (password, salt, cfg) {
      return EvpKDF.create(cfg).compute(password, salt);
    };
  })();


  return CryptoJS.EvpKDF;

});

/***/ }),
/* 101 */
/*!***************************************************************************!*\
  !*** /Users/xingmangkeji/vue/yimei/node_modules/crypto-js/cipher-core.js ***!
  \***************************************************************************/
/*! no static exports found */
/***/ (function(module, exports, __webpack_require__) {

;(function (root, factory, undef) {
  if (true) {
    // CommonJS
    module.exports = exports = factory(__webpack_require__(/*! ./core */ 83), __webpack_require__(/*! ./evpkdf */ 100));
  } else
  {}
})(this, function (CryptoJS) {

  /**
                               * Cipher core components.
                               */
  CryptoJS.lib.Cipher || function (undefined) {
    // Shortcuts
    var C = CryptoJS;
    var C_lib = C.lib;
    var Base = C_lib.Base;
    var WordArray = C_lib.WordArray;
    var BufferedBlockAlgorithm = C_lib.BufferedBlockAlgorithm;
    var C_enc = C.enc;
    var Utf8 = C_enc.Utf8;
    var Base64 = C_enc.Base64;
    var C_algo = C.algo;
    var EvpKDF = C_algo.EvpKDF;

    /**
                                 * Abstract base cipher template.
                                 *
                                 * @property {number} keySize This cipher's key size. Default: 4 (128 bits)
                                 * @property {number} ivSize This cipher's IV size. Default: 4 (128 bits)
                                 * @property {number} _ENC_XFORM_MODE A constant representing encryption mode.
                                 * @property {number} _DEC_XFORM_MODE A constant representing decryption mode.
                                 */
    var Cipher = C_lib.Cipher = BufferedBlockAlgorithm.extend({
      /**
                                                                 * Configuration options.
                                                                 *
                                                                 * @property {WordArray} iv The IV to use for this operation.
                                                                 */
      cfg: Base.extend(),

      /**
                           * Creates this cipher in encryption mode.
                           *
                           * @param {WordArray} key The key.
                           * @param {Object} cfg (Optional) The configuration options to use for this operation.
                           *
                           * @return {Cipher} A cipher instance.
                           *
                           * @static
                           *
                           * @example
                           *
                           *     var cipher = CryptoJS.algo.AES.createEncryptor(keyWordArray, { iv: ivWordArray });
                           */
      createEncryptor: function createEncryptor(key, cfg) {
        return this.create(this._ENC_XFORM_MODE, key, cfg);
      },

      /**
          * Creates this cipher in decryption mode.
          *
          * @param {WordArray} key The key.
          * @param {Object} cfg (Optional) The configuration options to use for this operation.
          *
          * @return {Cipher} A cipher instance.
          *
          * @static
          *
          * @example
          *
          *     var cipher = CryptoJS.algo.AES.createDecryptor(keyWordArray, { iv: ivWordArray });
          */
      createDecryptor: function createDecryptor(key, cfg) {
        return this.create(this._DEC_XFORM_MODE, key, cfg);
      },

      /**
          * Initializes a newly created cipher.
          *
          * @param {number} xformMode Either the encryption or decryption transormation mode constant.
          * @param {WordArray} key The key.
          * @param {Object} cfg (Optional) The configuration options to use for this operation.
          *
          * @example
          *
          *     var cipher = CryptoJS.algo.AES.create(CryptoJS.algo.AES._ENC_XFORM_MODE, keyWordArray, { iv: ivWordArray });
          */
      init: function init(xformMode, key, cfg) {
        // Apply config defaults
        this.cfg = this.cfg.extend(cfg);

        // Store transform mode and key
        this._xformMode = xformMode;
        this._key = key;

        // Set initial values
        this.reset();
      },

      /**
          * Resets this cipher to its initial state.
          *
          * @example
          *
          *     cipher.reset();
          */
      reset: function reset() {
        // Reset data buffer
        BufferedBlockAlgorithm.reset.call(this);

        // Perform concrete-cipher logic
        this._doReset();
      },

      /**
          * Adds data to be encrypted or decrypted.
          *
          * @param {WordArray|string} dataUpdate The data to encrypt or decrypt.
          *
          * @return {WordArray} The data after processing.
          *
          * @example
          *
          *     var encrypted = cipher.process('data');
          *     var encrypted = cipher.process(wordArray);
          */
      process: function process(dataUpdate) {
        // Append
        this._append(dataUpdate);

        // Process available blocks
        return this._process();
      },

      /**
          * Finalizes the encryption or decryption process.
          * Note that the finalize operation is effectively a destructive, read-once operation.
          *
          * @param {WordArray|string} dataUpdate The final data to encrypt or decrypt.
          *
          * @return {WordArray} The data after final processing.
          *
          * @example
          *
          *     var encrypted = cipher.finalize();
          *     var encrypted = cipher.finalize('data');
          *     var encrypted = cipher.finalize(wordArray);
          */
      finalize: function finalize(dataUpdate) {
        // Final data update
        if (dataUpdate) {
          this._append(dataUpdate);
        }

        // Perform concrete-cipher logic
        var finalProcessedData = this._doFinalize();

        return finalProcessedData;
      },

      keySize: 128 / 32,

      ivSize: 128 / 32,

      _ENC_XFORM_MODE: 1,

      _DEC_XFORM_MODE: 2,

      /**
                           * Creates shortcut functions to a cipher's object interface.
                           *
                           * @param {Cipher} cipher The cipher to create a helper for.
                           *
                           * @return {Object} An object with encrypt and decrypt shortcut functions.
                           *
                           * @static
                           *
                           * @example
                           *
                           *     var AES = CryptoJS.lib.Cipher._createHelper(CryptoJS.algo.AES);
                           */
      _createHelper: function () {
        function selectCipherStrategy(key) {
          if (typeof key == 'string') {
            return PasswordBasedCipher;
          } else {
            return SerializableCipher;
          }
        }

        return function (cipher) {
          return {
            encrypt: function encrypt(message, key, cfg) {
              return selectCipherStrategy(key).encrypt(cipher, message, key, cfg);
            },

            decrypt: function decrypt(ciphertext, key, cfg) {
              return selectCipherStrategy(key).decrypt(cipher, ciphertext, key, cfg);
            } };

        };
      }() });


    /**
               * Abstract base stream cipher template.
               *
               * @property {number} blockSize The number of 32-bit words this cipher operates on. Default: 1 (32 bits)
               */
    var StreamCipher = C_lib.StreamCipher = Cipher.extend({
      _doFinalize: function _doFinalize() {
        // Process partial blocks
        var finalProcessedBlocks = this._process(!!'flush');

        return finalProcessedBlocks;
      },

      blockSize: 1 });


    /**
                        * Mode namespace.
                        */
    var C_mode = C.mode = {};

    /**
                               * Abstract base block cipher mode template.
                               */
    var BlockCipherMode = C_lib.BlockCipherMode = Base.extend({
      /**
                                                                 * Creates this mode for encryption.
                                                                 *
                                                                 * @param {Cipher} cipher A block cipher instance.
                                                                 * @param {Array} iv The IV words.
                                                                 *
                                                                 * @static
                                                                 *
                                                                 * @example
                                                                 *
                                                                 *     var mode = CryptoJS.mode.CBC.createEncryptor(cipher, iv.words);
                                                                 */
      createEncryptor: function createEncryptor(cipher, iv) {
        return this.Encryptor.create(cipher, iv);
      },

      /**
          * Creates this mode for decryption.
          *
          * @param {Cipher} cipher A block cipher instance.
          * @param {Array} iv The IV words.
          *
          * @static
          *
          * @example
          *
          *     var mode = CryptoJS.mode.CBC.createDecryptor(cipher, iv.words);
          */
      createDecryptor: function createDecryptor(cipher, iv) {
        return this.Decryptor.create(cipher, iv);
      },

      /**
          * Initializes a newly created mode.
          *
          * @param {Cipher} cipher A block cipher instance.
          * @param {Array} iv The IV words.
          *
          * @example
          *
          *     var mode = CryptoJS.mode.CBC.Encryptor.create(cipher, iv.words);
          */
      init: function init(cipher, iv) {
        this._cipher = cipher;
        this._iv = iv;
      } });


    /**
             * Cipher Block Chaining mode.
             */
    var CBC = C_mode.CBC = function () {
      /**
                                         * Abstract base CBC mode.
                                         */
      var CBC = BlockCipherMode.extend();

      /**
                                           * CBC encryptor.
                                           */
      CBC.Encryptor = CBC.extend({
        /**
                                    * Processes the data block at offset.
                                    *
                                    * @param {Array} words The data words to operate on.
                                    * @param {number} offset The offset where the block starts.
                                    *
                                    * @example
                                    *
                                    *     mode.processBlock(data.words, offset);
                                    */
        processBlock: function processBlock(words, offset) {
          // Shortcuts
          var cipher = this._cipher;
          var blockSize = cipher.blockSize;

          // XOR and encrypt
          xorBlock.call(this, words, offset, blockSize);
          cipher.encryptBlock(words, offset);

          // Remember this block to use with next block
          this._prevBlock = words.slice(offset, offset + blockSize);
        } });


      /**
               * CBC decryptor.
               */
      CBC.Decryptor = CBC.extend({
        /**
                                    * Processes the data block at offset.
                                    *
                                    * @param {Array} words The data words to operate on.
                                    * @param {number} offset The offset where the block starts.
                                    *
                                    * @example
                                    *
                                    *     mode.processBlock(data.words, offset);
                                    */
        processBlock: function processBlock(words, offset) {
          // Shortcuts
          var cipher = this._cipher;
          var blockSize = cipher.blockSize;

          // Remember this block to use with next block
          var thisBlock = words.slice(offset, offset + blockSize);

          // Decrypt and XOR
          cipher.decryptBlock(words, offset);
          xorBlock.call(this, words, offset, blockSize);

          // This block becomes the previous block
          this._prevBlock = thisBlock;
        } });


      function xorBlock(words, offset, blockSize) {
        var block;

        // Shortcut
        var iv = this._iv;

        // Choose mixing block
        if (iv) {
          block = iv;

          // Remove IV for subsequent blocks
          this._iv = undefined;
        } else {
          block = this._prevBlock;
        }

        // XOR blocks
        for (var i = 0; i < blockSize; i++) {
          words[offset + i] ^= block[i];
        }
      }

      return CBC;
    }();

    /**
          * Padding namespace.
          */
    var C_pad = C.pad = {};

    /**
                             * PKCS #5/7 padding strategy.
                             */
    var Pkcs7 = C_pad.Pkcs7 = {
      /**
                                 * Pads data using the algorithm defined in PKCS #5/7.
                                 *
                                 * @param {WordArray} data The data to pad.
                                 * @param {number} blockSize The multiple that the data should be padded to.
                                 *
                                 * @static
                                 *
                                 * @example
                                 *
                                 *     CryptoJS.pad.Pkcs7.pad(wordArray, 4);
                                 */
      pad: function pad(data, blockSize) {
        // Shortcut
        var blockSizeBytes = blockSize * 4;

        // Count padding bytes
        var nPaddingBytes = blockSizeBytes - data.sigBytes % blockSizeBytes;

        // Create padding word
        var paddingWord = nPaddingBytes << 24 | nPaddingBytes << 16 | nPaddingBytes << 8 | nPaddingBytes;

        // Create padding
        var paddingWords = [];
        for (var i = 0; i < nPaddingBytes; i += 4) {
          paddingWords.push(paddingWord);
        }
        var padding = WordArray.create(paddingWords, nPaddingBytes);

        // Add padding
        data.concat(padding);
      },

      /**
          * Unpads data that had been padded using the algorithm defined in PKCS #5/7.
          *
          * @param {WordArray} data The data to unpad.
          *
          * @static
          *
          * @example
          *
          *     CryptoJS.pad.Pkcs7.unpad(wordArray);
          */
      unpad: function unpad(data) {
        // Get number of padding bytes from last byte
        var nPaddingBytes = data.words[data.sigBytes - 1 >>> 2] & 0xff;

        // Remove padding
        data.sigBytes -= nPaddingBytes;
      } };


    /**
            * Abstract base block cipher template.
            *
            * @property {number} blockSize The number of 32-bit words this cipher operates on. Default: 4 (128 bits)
            */
    var BlockCipher = C_lib.BlockCipher = Cipher.extend({
      /**
                                                           * Configuration options.
                                                           *
                                                           * @property {Mode} mode The block mode to use. Default: CBC
                                                           * @property {Padding} padding The padding strategy to use. Default: Pkcs7
                                                           */
      cfg: Cipher.cfg.extend({
        mode: CBC,
        padding: Pkcs7 }),


      reset: function reset() {
        var modeCreator;

        // Reset cipher
        Cipher.reset.call(this);

        // Shortcuts
        var cfg = this.cfg;
        var iv = cfg.iv;
        var mode = cfg.mode;

        // Reset block mode
        if (this._xformMode == this._ENC_XFORM_MODE) {
          modeCreator = mode.createEncryptor;
        } else /* if (this._xformMode == this._DEC_XFORM_MODE) */{
            modeCreator = mode.createDecryptor;
            // Keep at least one block in the buffer for unpadding
            this._minBufferSize = 1;
          }

        if (this._mode && this._mode.__creator == modeCreator) {
          this._mode.init(this, iv && iv.words);
        } else {
          this._mode = modeCreator.call(mode, this, iv && iv.words);
          this._mode.__creator = modeCreator;
        }
      },

      _doProcessBlock: function _doProcessBlock(words, offset) {
        this._mode.processBlock(words, offset);
      },

      _doFinalize: function _doFinalize() {
        var finalProcessedBlocks;

        // Shortcut
        var padding = this.cfg.padding;

        // Finalize
        if (this._xformMode == this._ENC_XFORM_MODE) {
          // Pad data
          padding.pad(this._data, this.blockSize);

          // Process final blocks
          finalProcessedBlocks = this._process(!!'flush');
        } else /* if (this._xformMode == this._DEC_XFORM_MODE) */{
            // Process final blocks
            finalProcessedBlocks = this._process(!!'flush');

            // Unpad data
            padding.unpad(finalProcessedBlocks);
          }

        return finalProcessedBlocks;
      },

      blockSize: 128 / 32 });


    /**
                               * A collection of cipher parameters.
                               *
                               * @property {WordArray} ciphertext The raw ciphertext.
                               * @property {WordArray} key The key to this ciphertext.
                               * @property {WordArray} iv The IV used in the ciphering operation.
                               * @property {WordArray} salt The salt used with a key derivation function.
                               * @property {Cipher} algorithm The cipher algorithm.
                               * @property {Mode} mode The block mode used in the ciphering operation.
                               * @property {Padding} padding The padding scheme used in the ciphering operation.
                               * @property {number} blockSize The block size of the cipher.
                               * @property {Format} formatter The default formatting strategy to convert this cipher params object to a string.
                               */
    var CipherParams = C_lib.CipherParams = Base.extend({
      /**
                                                           * Initializes a newly created cipher params object.
                                                           *
                                                           * @param {Object} cipherParams An object with any of the possible cipher parameters.
                                                           *
                                                           * @example
                                                           *
                                                           *     var cipherParams = CryptoJS.lib.CipherParams.create({
                                                           *         ciphertext: ciphertextWordArray,
                                                           *         key: keyWordArray,
                                                           *         iv: ivWordArray,
                                                           *         salt: saltWordArray,
                                                           *         algorithm: CryptoJS.algo.AES,
                                                           *         mode: CryptoJS.mode.CBC,
                                                           *         padding: CryptoJS.pad.PKCS7,
                                                           *         blockSize: 4,
                                                           *         formatter: CryptoJS.format.OpenSSL
                                                           *     });
                                                           */
      init: function init(cipherParams) {
        this.mixIn(cipherParams);
      },

      /**
          * Converts this cipher params object to a string.
          *
          * @param {Format} formatter (Optional) The formatting strategy to use.
          *
          * @return {string} The stringified cipher params.
          *
          * @throws Error If neither the formatter nor the default formatter is set.
          *
          * @example
          *
          *     var string = cipherParams + '';
          *     var string = cipherParams.toString();
          *     var string = cipherParams.toString(CryptoJS.format.OpenSSL);
          */
      toString: function toString(formatter) {
        return (formatter || this.formatter).stringify(this);
      } });


    /**
             * Format namespace.
             */
    var C_format = C.format = {};

    /**
                                   * OpenSSL formatting strategy.
                                   */
    var OpenSSLFormatter = C_format.OpenSSL = {
      /**
                                                 * Converts a cipher params object to an OpenSSL-compatible string.
                                                 *
                                                 * @param {CipherParams} cipherParams The cipher params object.
                                                 *
                                                 * @return {string} The OpenSSL-compatible string.
                                                 *
                                                 * @static
                                                 *
                                                 * @example
                                                 *
                                                 *     var openSSLString = CryptoJS.format.OpenSSL.stringify(cipherParams);
                                                 */
      stringify: function stringify(cipherParams) {
        var wordArray;

        // Shortcuts
        var ciphertext = cipherParams.ciphertext;
        var salt = cipherParams.salt;

        // Format
        if (salt) {
          wordArray = WordArray.create([0x53616c74, 0x65645f5f]).concat(salt).concat(ciphertext);
        } else {
          wordArray = ciphertext;
        }

        return wordArray.toString(Base64);
      },

      /**
          * Converts an OpenSSL-compatible string to a cipher params object.
          *
          * @param {string} openSSLStr The OpenSSL-compatible string.
          *
          * @return {CipherParams} The cipher params object.
          *
          * @static
          *
          * @example
          *
          *     var cipherParams = CryptoJS.format.OpenSSL.parse(openSSLString);
          */
      parse: function parse(openSSLStr) {
        var salt;

        // Parse base64
        var ciphertext = Base64.parse(openSSLStr);

        // Shortcut
        var ciphertextWords = ciphertext.words;

        // Test for salt
        if (ciphertextWords[0] == 0x53616c74 && ciphertextWords[1] == 0x65645f5f) {
          // Extract salt
          salt = WordArray.create(ciphertextWords.slice(2, 4));

          // Remove salt from ciphertext
          ciphertextWords.splice(0, 4);
          ciphertext.sigBytes -= 16;
        }

        return CipherParams.create({ ciphertext: ciphertext, salt: salt });
      } };


    /**
            * A cipher wrapper that returns ciphertext as a serializable cipher params object.
            */
    var SerializableCipher = C_lib.SerializableCipher = Base.extend({
      /**
                                                                       * Configuration options.
                                                                       *
                                                                       * @property {Formatter} format The formatting strategy to convert cipher param objects to and from a string. Default: OpenSSL
                                                                       */
      cfg: Base.extend({
        format: OpenSSLFormatter }),


      /**
                                      * Encrypts a message.
                                      *
                                      * @param {Cipher} cipher The cipher algorithm to use.
                                      * @param {WordArray|string} message The message to encrypt.
                                      * @param {WordArray} key The key.
                                      * @param {Object} cfg (Optional) The configuration options to use for this operation.
                                      *
                                      * @return {CipherParams} A cipher params object.
                                      *
                                      * @static
                                      *
                                      * @example
                                      *
                                      *     var ciphertextParams = CryptoJS.lib.SerializableCipher.encrypt(CryptoJS.algo.AES, message, key);
                                      *     var ciphertextParams = CryptoJS.lib.SerializableCipher.encrypt(CryptoJS.algo.AES, message, key, { iv: iv });
                                      *     var ciphertextParams = CryptoJS.lib.SerializableCipher.encrypt(CryptoJS.algo.AES, message, key, { iv: iv, format: CryptoJS.format.OpenSSL });
                                      */
      encrypt: function encrypt(cipher, message, key, cfg) {
        // Apply config defaults
        cfg = this.cfg.extend(cfg);

        // Encrypt
        var encryptor = cipher.createEncryptor(key, cfg);
        var ciphertext = encryptor.finalize(message);

        // Shortcut
        var cipherCfg = encryptor.cfg;

        // Create and return serializable cipher params
        return CipherParams.create({
          ciphertext: ciphertext,
          key: key,
          iv: cipherCfg.iv,
          algorithm: cipher,
          mode: cipherCfg.mode,
          padding: cipherCfg.padding,
          blockSize: cipher.blockSize,
          formatter: cfg.format });

      },

      /**
          * Decrypts serialized ciphertext.
          *
          * @param {Cipher} cipher The cipher algorithm to use.
          * @param {CipherParams|string} ciphertext The ciphertext to decrypt.
          * @param {WordArray} key The key.
          * @param {Object} cfg (Optional) The configuration options to use for this operation.
          *
          * @return {WordArray} The plaintext.
          *
          * @static
          *
          * @example
          *
          *     var plaintext = CryptoJS.lib.SerializableCipher.decrypt(CryptoJS.algo.AES, formattedCiphertext, key, { iv: iv, format: CryptoJS.format.OpenSSL });
          *     var plaintext = CryptoJS.lib.SerializableCipher.decrypt(CryptoJS.algo.AES, ciphertextParams, key, { iv: iv, format: CryptoJS.format.OpenSSL });
          */
      decrypt: function decrypt(cipher, ciphertext, key, cfg) {
        // Apply config defaults
        cfg = this.cfg.extend(cfg);

        // Convert string to CipherParams
        ciphertext = this._parse(ciphertext, cfg.format);

        // Decrypt
        var plaintext = cipher.createDecryptor(key, cfg).finalize(ciphertext.ciphertext);

        return plaintext;
      },

      /**
          * Converts serialized ciphertext to CipherParams,
          * else assumed CipherParams already and returns ciphertext unchanged.
          *
          * @param {CipherParams|string} ciphertext The ciphertext.
          * @param {Formatter} format The formatting strategy to use to parse serialized ciphertext.
          *
          * @return {CipherParams} The unserialized ciphertext.
          *
          * @static
          *
          * @example
          *
          *     var ciphertextParams = CryptoJS.lib.SerializableCipher._parse(ciphertextStringOrParams, format);
          */
      _parse: function _parse(ciphertext, format) {
        if (typeof ciphertext == 'string') {
          return format.parse(ciphertext, this);
        } else {
          return ciphertext;
        }
      } });


    /**
             * Key derivation function namespace.
             */
    var C_kdf = C.kdf = {};

    /**
                             * OpenSSL key derivation function.
                             */
    var OpenSSLKdf = C_kdf.OpenSSL = {
      /**
                                        * Derives a key and IV from a password.
                                        *
                                        * @param {string} password The password to derive from.
                                        * @param {number} keySize The size in words of the key to generate.
                                        * @param {number} ivSize The size in words of the IV to generate.
                                        * @param {WordArray|string} salt (Optional) A 64-bit salt to use. If omitted, a salt will be generated randomly.
                                        *
                                        * @return {CipherParams} A cipher params object with the key, IV, and salt.
                                        *
                                        * @static
                                        *
                                        * @example
                                        *
                                        *     var derivedParams = CryptoJS.kdf.OpenSSL.execute('Password', 256/32, 128/32);
                                        *     var derivedParams = CryptoJS.kdf.OpenSSL.execute('Password', 256/32, 128/32, 'saltsalt');
                                        */
      execute: function execute(password, keySize, ivSize, salt) {
        // Generate random salt
        if (!salt) {
          salt = WordArray.random(64 / 8);
        }

        // Derive key and IV
        var key = EvpKDF.create({ keySize: keySize + ivSize }).compute(password, salt);

        // Separate key and IV
        var iv = WordArray.create(key.words.slice(keySize), ivSize * 4);
        key.sigBytes = keySize * 4;

        // Return params
        return CipherParams.create({ key: key, iv: iv, salt: salt });
      } };


    /**
            * A serializable cipher wrapper that derives the key from a password,
            * and returns ciphertext as a serializable cipher params object.
            */
    var PasswordBasedCipher = C_lib.PasswordBasedCipher = SerializableCipher.extend({
      /**
                                                                                       * Configuration options.
                                                                                       *
                                                                                       * @property {KDF} kdf The key derivation function to use to generate a key and IV from a password. Default: OpenSSL
                                                                                       */
      cfg: SerializableCipher.cfg.extend({
        kdf: OpenSSLKdf }),


      /**
                             * Encrypts a message using a password.
                             *
                             * @param {Cipher} cipher The cipher algorithm to use.
                             * @param {WordArray|string} message The message to encrypt.
                             * @param {string} password The password.
                             * @param {Object} cfg (Optional) The configuration options to use for this operation.
                             *
                             * @return {CipherParams} A cipher params object.
                             *
                             * @static
                             *
                             * @example
                             *
                             *     var ciphertextParams = CryptoJS.lib.PasswordBasedCipher.encrypt(CryptoJS.algo.AES, message, 'password');
                             *     var ciphertextParams = CryptoJS.lib.PasswordBasedCipher.encrypt(CryptoJS.algo.AES, message, 'password', { format: CryptoJS.format.OpenSSL });
                             */
      encrypt: function encrypt(cipher, message, password, cfg) {
        // Apply config defaults
        cfg = this.cfg.extend(cfg);

        // Derive key and other params
        var derivedParams = cfg.kdf.execute(password, cipher.keySize, cipher.ivSize);

        // Add IV to config
        cfg.iv = derivedParams.iv;

        // Encrypt
        var ciphertext = SerializableCipher.encrypt.call(this, cipher, message, derivedParams.key, cfg);

        // Mix in derived params
        ciphertext.mixIn(derivedParams);

        return ciphertext;
      },

      /**
          * Decrypts serialized ciphertext using a password.
          *
          * @param {Cipher} cipher The cipher algorithm to use.
          * @param {CipherParams|string} ciphertext The ciphertext to decrypt.
          * @param {string} password The password.
          * @param {Object} cfg (Optional) The configuration options to use for this operation.
          *
          * @return {WordArray} The plaintext.
          *
          * @static
          *
          * @example
          *
          *     var plaintext = CryptoJS.lib.PasswordBasedCipher.decrypt(CryptoJS.algo.AES, formattedCiphertext, 'password', { format: CryptoJS.format.OpenSSL });
          *     var plaintext = CryptoJS.lib.PasswordBasedCipher.decrypt(CryptoJS.algo.AES, ciphertextParams, 'password', { format: CryptoJS.format.OpenSSL });
          */
      decrypt: function decrypt(cipher, ciphertext, password, cfg) {
        // Apply config defaults
        cfg = this.cfg.extend(cfg);

        // Convert string to CipherParams
        ciphertext = this._parse(ciphertext, cfg.format);

        // Derive key and other params
        var derivedParams = cfg.kdf.execute(password, cipher.keySize, cipher.ivSize, ciphertext.salt);

        // Add IV to config
        cfg.iv = derivedParams.iv;

        // Decrypt
        var plaintext = SerializableCipher.decrypt.call(this, cipher, ciphertext, derivedParams.key, cfg);

        return plaintext;
      } });

  }();


});

/***/ }),
/* 102 */
/*!************************************************************************!*\
  !*** /Users/xingmangkeji/vue/yimei/node_modules/crypto-js/mode-cfb.js ***!
  \************************************************************************/
/*! no static exports found */
/***/ (function(module, exports, __webpack_require__) {

;(function (root, factory, undef) {
  if (true) {
    // CommonJS
    module.exports = exports = factory(__webpack_require__(/*! ./core */ 83), __webpack_require__(/*! ./cipher-core */ 101));
  } else
  {}
})(this, function (CryptoJS) {

  /**
                               * Cipher Feedback block mode.
                               */
  CryptoJS.mode.CFB = function () {
    var CFB = CryptoJS.lib.BlockCipherMode.extend();

    CFB.Encryptor = CFB.extend({
      processBlock: function processBlock(words, offset) {
        // Shortcuts
        var cipher = this._cipher;
        var blockSize = cipher.blockSize;

        generateKeystreamAndEncrypt.call(this, words, offset, blockSize, cipher);

        // Remember this block to use with next block
        this._prevBlock = words.slice(offset, offset + blockSize);
      } });


    CFB.Decryptor = CFB.extend({
      processBlock: function processBlock(words, offset) {
        // Shortcuts
        var cipher = this._cipher;
        var blockSize = cipher.blockSize;

        // Remember this block to use with next block
        var thisBlock = words.slice(offset, offset + blockSize);

        generateKeystreamAndEncrypt.call(this, words, offset, blockSize, cipher);

        // This block becomes the previous block
        this._prevBlock = thisBlock;
      } });


    function generateKeystreamAndEncrypt(words, offset, blockSize, cipher) {
      var keystream;

      // Shortcut
      var iv = this._iv;

      // Generate keystream
      if (iv) {
        keystream = iv.slice(0);

        // Remove IV for subsequent blocks
        this._iv = undefined;
      } else {
        keystream = this._prevBlock;
      }
      cipher.encryptBlock(keystream, 0);

      // Encrypt
      for (var i = 0; i < blockSize; i++) {
        words[offset + i] ^= keystream[i];
      }
    }

    return CFB;
  }();


  return CryptoJS.mode.CFB;

});

/***/ }),
/* 103 */
/*!************************************************************************!*\
  !*** /Users/xingmangkeji/vue/yimei/node_modules/crypto-js/mode-ctr.js ***!
  \************************************************************************/
/*! no static exports found */
/***/ (function(module, exports, __webpack_require__) {

;(function (root, factory, undef) {
  if (true) {
    // CommonJS
    module.exports = exports = factory(__webpack_require__(/*! ./core */ 83), __webpack_require__(/*! ./cipher-core */ 101));
  } else
  {}
})(this, function (CryptoJS) {

  /**
                               * Counter block mode.
                               */
  CryptoJS.mode.CTR = function () {
    var CTR = CryptoJS.lib.BlockCipherMode.extend();

    var Encryptor = CTR.Encryptor = CTR.extend({
      processBlock: function processBlock(words, offset) {
        // Shortcuts
        var cipher = this._cipher;
        var blockSize = cipher.blockSize;
        var iv = this._iv;
        var counter = this._counter;

        // Generate keystream
        if (iv) {
          counter = this._counter = iv.slice(0);

          // Remove IV for subsequent blocks
          this._iv = undefined;
        }
        var keystream = counter.slice(0);
        cipher.encryptBlock(keystream, 0);

        // Increment counter
        counter[blockSize - 1] = counter[blockSize - 1] + 1 | 0;

        // Encrypt
        for (var i = 0; i < blockSize; i++) {
          words[offset + i] ^= keystream[i];
        }
      } });


    CTR.Decryptor = Encryptor;

    return CTR;
  }();


  return CryptoJS.mode.CTR;

});

/***/ }),
/* 104 */
/*!********************************************************************************!*\
  !*** /Users/xingmangkeji/vue/yimei/node_modules/crypto-js/mode-ctr-gladman.js ***!
  \********************************************************************************/
/*! no static exports found */
/***/ (function(module, exports, __webpack_require__) {

;(function (root, factory, undef) {
  if (true) {
    // CommonJS
    module.exports = exports = factory(__webpack_require__(/*! ./core */ 83), __webpack_require__(/*! ./cipher-core */ 101));
  } else
  {}
})(this, function (CryptoJS) {

  /** @preserve
                               * Counter block mode compatible with  Dr Brian Gladman fileenc.c
                               * derived from CryptoJS.mode.CTR
                               * Jan Hruby jhruby.web@gmail.com
                               */
  CryptoJS.mode.CTRGladman = function () {
    var CTRGladman = CryptoJS.lib.BlockCipherMode.extend();

    function incWord(word)
    {
      if ((word >> 24 & 0xff) === 0xff) {//overflow
        var b1 = word >> 16 & 0xff;
        var b2 = word >> 8 & 0xff;
        var b3 = word & 0xff;

        if (b1 === 0xff) // overflow b1
          {
            b1 = 0;
            if (b2 === 0xff)
            {
              b2 = 0;
              if (b3 === 0xff)
              {
                b3 = 0;
              } else

              {
                ++b3;
              }
            } else

            {
              ++b2;
            }
          } else

        {
          ++b1;
        }

        word = 0;
        word += b1 << 16;
        word += b2 << 8;
        word += b3;
      } else

      {
        word += 0x01 << 24;
      }
      return word;
    }

    function incCounter(counter)
    {
      if ((counter[0] = incWord(counter[0])) === 0)
      {
        // encr_data in fileenc.c from  Dr Brian Gladman's counts only with DWORD j < 8
        counter[1] = incWord(counter[1]);
      }
      return counter;
    }

    var Encryptor = CTRGladman.Encryptor = CTRGladman.extend({
      processBlock: function processBlock(words, offset) {
        // Shortcuts
        var cipher = this._cipher;
        var blockSize = cipher.blockSize;
        var iv = this._iv;
        var counter = this._counter;

        // Generate keystream
        if (iv) {
          counter = this._counter = iv.slice(0);

          // Remove IV for subsequent blocks
          this._iv = undefined;
        }

        incCounter(counter);

        var keystream = counter.slice(0);
        cipher.encryptBlock(keystream, 0);

        // Encrypt
        for (var i = 0; i < blockSize; i++) {
          words[offset + i] ^= keystream[i];
        }
      } });


    CTRGladman.Decryptor = Encryptor;

    return CTRGladman;
  }();




  return CryptoJS.mode.CTRGladman;

});

/***/ }),
/* 105 */
/*!************************************************************************!*\
  !*** /Users/xingmangkeji/vue/yimei/node_modules/crypto-js/mode-ofb.js ***!
  \************************************************************************/
/*! no static exports found */
/***/ (function(module, exports, __webpack_require__) {

;(function (root, factory, undef) {
  if (true) {
    // CommonJS
    module.exports = exports = factory(__webpack_require__(/*! ./core */ 83), __webpack_require__(/*! ./cipher-core */ 101));
  } else
  {}
})(this, function (CryptoJS) {

  /**
                               * Output Feedback block mode.
                               */
  CryptoJS.mode.OFB = function () {
    var OFB = CryptoJS.lib.BlockCipherMode.extend();

    var Encryptor = OFB.Encryptor = OFB.extend({
      processBlock: function processBlock(words, offset) {
        // Shortcuts
        var cipher = this._cipher;
        var blockSize = cipher.blockSize;
        var iv = this._iv;
        var keystream = this._keystream;

        // Generate keystream
        if (iv) {
          keystream = this._keystream = iv.slice(0);

          // Remove IV for subsequent blocks
          this._iv = undefined;
        }
        cipher.encryptBlock(keystream, 0);

        // Encrypt
        for (var i = 0; i < blockSize; i++) {
          words[offset + i] ^= keystream[i];
        }
      } });


    OFB.Decryptor = Encryptor;

    return OFB;
  }();


  return CryptoJS.mode.OFB;

});

/***/ }),
/* 106 */
/*!************************************************************************!*\
  !*** /Users/xingmangkeji/vue/yimei/node_modules/crypto-js/mode-ecb.js ***!
  \************************************************************************/
/*! no static exports found */
/***/ (function(module, exports, __webpack_require__) {

;(function (root, factory, undef) {
  if (true) {
    // CommonJS
    module.exports = exports = factory(__webpack_require__(/*! ./core */ 83), __webpack_require__(/*! ./cipher-core */ 101));
  } else
  {}
})(this, function (CryptoJS) {

  /**
                               * Electronic Codebook block mode.
                               */
  CryptoJS.mode.ECB = function () {
    var ECB = CryptoJS.lib.BlockCipherMode.extend();

    ECB.Encryptor = ECB.extend({
      processBlock: function processBlock(words, offset) {
        this._cipher.encryptBlock(words, offset);
      } });


    ECB.Decryptor = ECB.extend({
      processBlock: function processBlock(words, offset) {
        this._cipher.decryptBlock(words, offset);
      } });


    return ECB;
  }();


  return CryptoJS.mode.ECB;

});

/***/ }),
/* 107 */
/*!****************************************************************************!*\
  !*** /Users/xingmangkeji/vue/yimei/node_modules/crypto-js/pad-ansix923.js ***!
  \****************************************************************************/
/*! no static exports found */
/***/ (function(module, exports, __webpack_require__) {

;(function (root, factory, undef) {
  if (true) {
    // CommonJS
    module.exports = exports = factory(__webpack_require__(/*! ./core */ 83), __webpack_require__(/*! ./cipher-core */ 101));
  } else
  {}
})(this, function (CryptoJS) {

  /**
                               * ANSI X.923 padding strategy.
                               */
  CryptoJS.pad.AnsiX923 = {
    pad: function pad(data, blockSize) {
      // Shortcuts
      var dataSigBytes = data.sigBytes;
      var blockSizeBytes = blockSize * 4;

      // Count padding bytes
      var nPaddingBytes = blockSizeBytes - dataSigBytes % blockSizeBytes;

      // Compute last byte position
      var lastBytePos = dataSigBytes + nPaddingBytes - 1;

      // Pad
      data.clamp();
      data.words[lastBytePos >>> 2] |= nPaddingBytes << 24 - lastBytePos % 4 * 8;
      data.sigBytes += nPaddingBytes;
    },

    unpad: function unpad(data) {
      // Get number of padding bytes from last byte
      var nPaddingBytes = data.words[data.sigBytes - 1 >>> 2] & 0xff;

      // Remove padding
      data.sigBytes -= nPaddingBytes;
    } };



  return CryptoJS.pad.Ansix923;

});

/***/ }),
/* 108 */
/*!****************************************************************************!*\
  !*** /Users/xingmangkeji/vue/yimei/node_modules/crypto-js/pad-iso10126.js ***!
  \****************************************************************************/
/*! no static exports found */
/***/ (function(module, exports, __webpack_require__) {

;(function (root, factory, undef) {
  if (true) {
    // CommonJS
    module.exports = exports = factory(__webpack_require__(/*! ./core */ 83), __webpack_require__(/*! ./cipher-core */ 101));
  } else
  {}
})(this, function (CryptoJS) {

  /**
                               * ISO 10126 padding strategy.
                               */
  CryptoJS.pad.Iso10126 = {
    pad: function pad(data, blockSize) {
      // Shortcut
      var blockSizeBytes = blockSize * 4;

      // Count padding bytes
      var nPaddingBytes = blockSizeBytes - data.sigBytes % blockSizeBytes;

      // Pad
      data.concat(CryptoJS.lib.WordArray.random(nPaddingBytes - 1)).
      concat(CryptoJS.lib.WordArray.create([nPaddingBytes << 24], 1));
    },

    unpad: function unpad(data) {
      // Get number of padding bytes from last byte
      var nPaddingBytes = data.words[data.sigBytes - 1 >>> 2] & 0xff;

      // Remove padding
      data.sigBytes -= nPaddingBytes;
    } };



  return CryptoJS.pad.Iso10126;

});

/***/ }),
/* 109 */
/*!****************************************************************************!*\
  !*** /Users/xingmangkeji/vue/yimei/node_modules/crypto-js/pad-iso97971.js ***!
  \****************************************************************************/
/*! no static exports found */
/***/ (function(module, exports, __webpack_require__) {

;(function (root, factory, undef) {
  if (true) {
    // CommonJS
    module.exports = exports = factory(__webpack_require__(/*! ./core */ 83), __webpack_require__(/*! ./cipher-core */ 101));
  } else
  {}
})(this, function (CryptoJS) {

  /**
                               * ISO/IEC 9797-1 Padding Method 2.
                               */
  CryptoJS.pad.Iso97971 = {
    pad: function pad(data, blockSize) {
      // Add 0x80 byte
      data.concat(CryptoJS.lib.WordArray.create([0x80000000], 1));

      // Zero pad the rest
      CryptoJS.pad.ZeroPadding.pad(data, blockSize);
    },

    unpad: function unpad(data) {
      // Remove zero padding
      CryptoJS.pad.ZeroPadding.unpad(data);

      // Remove one more byte -- the 0x80 byte
      data.sigBytes--;
    } };



  return CryptoJS.pad.Iso97971;

});

/***/ }),
/* 110 */
/*!*******************************************************************************!*\
  !*** /Users/xingmangkeji/vue/yimei/node_modules/crypto-js/pad-zeropadding.js ***!
  \*******************************************************************************/
/*! no static exports found */
/***/ (function(module, exports, __webpack_require__) {

;(function (root, factory, undef) {
  if (true) {
    // CommonJS
    module.exports = exports = factory(__webpack_require__(/*! ./core */ 83), __webpack_require__(/*! ./cipher-core */ 101));
  } else
  {}
})(this, function (CryptoJS) {

  /**
                               * Zero padding strategy.
                               */
  CryptoJS.pad.ZeroPadding = {
    pad: function pad(data, blockSize) {
      // Shortcut
      var blockSizeBytes = blockSize * 4;

      // Pad
      data.clamp();
      data.sigBytes += blockSizeBytes - (data.sigBytes % blockSizeBytes || blockSizeBytes);
    },

    unpad: function unpad(data) {
      // Shortcut
      var dataWords = data.words;

      // Unpad
      var i = data.sigBytes - 1;
      for (var i = data.sigBytes - 1; i >= 0; i--) {
        if (dataWords[i >>> 2] >>> 24 - i % 4 * 8 & 0xff) {
          data.sigBytes = i + 1;
          break;
        }
      }
    } };



  return CryptoJS.pad.ZeroPadding;

});

/***/ }),
/* 111 */
/*!*****************************************************************************!*\
  !*** /Users/xingmangkeji/vue/yimei/node_modules/crypto-js/pad-nopadding.js ***!
  \*****************************************************************************/
/*! no static exports found */
/***/ (function(module, exports, __webpack_require__) {

;(function (root, factory, undef) {
  if (true) {
    // CommonJS
    module.exports = exports = factory(__webpack_require__(/*! ./core */ 83), __webpack_require__(/*! ./cipher-core */ 101));
  } else
  {}
})(this, function (CryptoJS) {

  /**
                               * A noop padding strategy.
                               */
  CryptoJS.pad.NoPadding = {
    pad: function pad() {
    },

    unpad: function unpad() {
    } };



  return CryptoJS.pad.NoPadding;

});

/***/ }),
/* 112 */
/*!**************************************************************************!*\
  !*** /Users/xingmangkeji/vue/yimei/node_modules/crypto-js/format-hex.js ***!
  \**************************************************************************/
/*! no static exports found */
/***/ (function(module, exports, __webpack_require__) {

;(function (root, factory, undef) {
  if (true) {
    // CommonJS
    module.exports = exports = factory(__webpack_require__(/*! ./core */ 83), __webpack_require__(/*! ./cipher-core */ 101));
  } else
  {}
})(this, function (CryptoJS) {

  (function (undefined) {
    // Shortcuts
    var C = CryptoJS;
    var C_lib = C.lib;
    var CipherParams = C_lib.CipherParams;
    var C_enc = C.enc;
    var Hex = C_enc.Hex;
    var C_format = C.format;

    var HexFormatter = C_format.Hex = {
      /**
                                         * Converts the ciphertext of a cipher params object to a hexadecimally encoded string.
                                         *
                                         * @param {CipherParams} cipherParams The cipher params object.
                                         *
                                         * @return {string} The hexadecimally encoded string.
                                         *
                                         * @static
                                         *
                                         * @example
                                         *
                                         *     var hexString = CryptoJS.format.Hex.stringify(cipherParams);
                                         */
      stringify: function stringify(cipherParams) {
        return cipherParams.ciphertext.toString(Hex);
      },

      /**
          * Converts a hexadecimally encoded ciphertext string to a cipher params object.
          *
          * @param {string} input The hexadecimally encoded string.
          *
          * @return {CipherParams} The cipher params object.
          *
          * @static
          *
          * @example
          *
          *     var cipherParams = CryptoJS.format.Hex.parse(hexString);
          */
      parse: function parse(input) {
        var ciphertext = Hex.parse(input);
        return CipherParams.create({ ciphertext: ciphertext });
      } };

  })();


  return CryptoJS.format.Hex;

});

/***/ }),
/* 113 */
/*!*******************************************************************!*\
  !*** /Users/xingmangkeji/vue/yimei/node_modules/crypto-js/aes.js ***!
  \*******************************************************************/
/*! no static exports found */
/***/ (function(module, exports, __webpack_require__) {

;(function (root, factory, undef) {
  if (true) {
    // CommonJS
    module.exports = exports = factory(__webpack_require__(/*! ./core */ 83), __webpack_require__(/*! ./enc-base64 */ 88), __webpack_require__(/*! ./md5 */ 90), __webpack_require__(/*! ./evpkdf */ 100), __webpack_require__(/*! ./cipher-core */ 101));
  } else
  {}
})(this, function (CryptoJS) {

  (function () {
    // Shortcuts
    var C = CryptoJS;
    var C_lib = C.lib;
    var BlockCipher = C_lib.BlockCipher;
    var C_algo = C.algo;

    // Lookup tables
    var SBOX = [];
    var INV_SBOX = [];
    var SUB_MIX_0 = [];
    var SUB_MIX_1 = [];
    var SUB_MIX_2 = [];
    var SUB_MIX_3 = [];
    var INV_SUB_MIX_0 = [];
    var INV_SUB_MIX_1 = [];
    var INV_SUB_MIX_2 = [];
    var INV_SUB_MIX_3 = [];

    // Compute lookup tables
    (function () {
      // Compute double table
      var d = [];
      for (var i = 0; i < 256; i++) {
        if (i < 128) {
          d[i] = i << 1;
        } else {
          d[i] = i << 1 ^ 0x11b;
        }
      }

      // Walk GF(2^8)
      var x = 0;
      var xi = 0;
      for (var i = 0; i < 256; i++) {
        // Compute sbox
        var sx = xi ^ xi << 1 ^ xi << 2 ^ xi << 3 ^ xi << 4;
        sx = sx >>> 8 ^ sx & 0xff ^ 0x63;
        SBOX[x] = sx;
        INV_SBOX[sx] = x;

        // Compute multiplication
        var x2 = d[x];
        var x4 = d[x2];
        var x8 = d[x4];

        // Compute sub bytes, mix columns tables
        var t = d[sx] * 0x101 ^ sx * 0x1010100;
        SUB_MIX_0[x] = t << 24 | t >>> 8;
        SUB_MIX_1[x] = t << 16 | t >>> 16;
        SUB_MIX_2[x] = t << 8 | t >>> 24;
        SUB_MIX_3[x] = t;

        // Compute inv sub bytes, inv mix columns tables
        var t = x8 * 0x1010101 ^ x4 * 0x10001 ^ x2 * 0x101 ^ x * 0x1010100;
        INV_SUB_MIX_0[sx] = t << 24 | t >>> 8;
        INV_SUB_MIX_1[sx] = t << 16 | t >>> 16;
        INV_SUB_MIX_2[sx] = t << 8 | t >>> 24;
        INV_SUB_MIX_3[sx] = t;

        // Compute next counter
        if (!x) {
          x = xi = 1;
        } else {
          x = x2 ^ d[d[d[x8 ^ x2]]];
          xi ^= d[d[xi]];
        }
      }
    })();

    // Precomputed Rcon lookup
    var RCON = [0x00, 0x01, 0x02, 0x04, 0x08, 0x10, 0x20, 0x40, 0x80, 0x1b, 0x36];

    /**
                                                                                    * AES block cipher algorithm.
                                                                                    */
    var AES = C_algo.AES = BlockCipher.extend({
      _doReset: function _doReset() {
        var t;

        // Skip reset of nRounds has been set before and key did not change
        if (this._nRounds && this._keyPriorReset === this._key) {
          return;
        }

        // Shortcuts
        var key = this._keyPriorReset = this._key;
        var keyWords = key.words;
        var keySize = key.sigBytes / 4;

        // Compute number of rounds
        var nRounds = this._nRounds = keySize + 6;

        // Compute number of key schedule rows
        var ksRows = (nRounds + 1) * 4;

        // Compute key schedule
        var keySchedule = this._keySchedule = [];
        for (var ksRow = 0; ksRow < ksRows; ksRow++) {
          if (ksRow < keySize) {
            keySchedule[ksRow] = keyWords[ksRow];
          } else {
            t = keySchedule[ksRow - 1];

            if (!(ksRow % keySize)) {
              // Rot word
              t = t << 8 | t >>> 24;

              // Sub word
              t = SBOX[t >>> 24] << 24 | SBOX[t >>> 16 & 0xff] << 16 | SBOX[t >>> 8 & 0xff] << 8 | SBOX[t & 0xff];

              // Mix Rcon
              t ^= RCON[ksRow / keySize | 0] << 24;
            } else if (keySize > 6 && ksRow % keySize == 4) {
              // Sub word
              t = SBOX[t >>> 24] << 24 | SBOX[t >>> 16 & 0xff] << 16 | SBOX[t >>> 8 & 0xff] << 8 | SBOX[t & 0xff];
            }

            keySchedule[ksRow] = keySchedule[ksRow - keySize] ^ t;
          }
        }

        // Compute inv key schedule
        var invKeySchedule = this._invKeySchedule = [];
        for (var invKsRow = 0; invKsRow < ksRows; invKsRow++) {
          var ksRow = ksRows - invKsRow;

          if (invKsRow % 4) {
            var t = keySchedule[ksRow];
          } else {
            var t = keySchedule[ksRow - 4];
          }

          if (invKsRow < 4 || ksRow <= 4) {
            invKeySchedule[invKsRow] = t;
          } else {
            invKeySchedule[invKsRow] = INV_SUB_MIX_0[SBOX[t >>> 24]] ^ INV_SUB_MIX_1[SBOX[t >>> 16 & 0xff]] ^
            INV_SUB_MIX_2[SBOX[t >>> 8 & 0xff]] ^ INV_SUB_MIX_3[SBOX[t & 0xff]];
          }
        }
      },

      encryptBlock: function encryptBlock(M, offset) {
        this._doCryptBlock(M, offset, this._keySchedule, SUB_MIX_0, SUB_MIX_1, SUB_MIX_2, SUB_MIX_3, SBOX);
      },

      decryptBlock: function decryptBlock(M, offset) {
        // Swap 2nd and 4th rows
        var t = M[offset + 1];
        M[offset + 1] = M[offset + 3];
        M[offset + 3] = t;

        this._doCryptBlock(M, offset, this._invKeySchedule, INV_SUB_MIX_0, INV_SUB_MIX_1, INV_SUB_MIX_2, INV_SUB_MIX_3, INV_SBOX);

        // Inv swap 2nd and 4th rows
        var t = M[offset + 1];
        M[offset + 1] = M[offset + 3];
        M[offset + 3] = t;
      },

      _doCryptBlock: function _doCryptBlock(M, offset, keySchedule, SUB_MIX_0, SUB_MIX_1, SUB_MIX_2, SUB_MIX_3, SBOX) {
        // Shortcut
        var nRounds = this._nRounds;

        // Get input, add round key
        var s0 = M[offset] ^ keySchedule[0];
        var s1 = M[offset + 1] ^ keySchedule[1];
        var s2 = M[offset + 2] ^ keySchedule[2];
        var s3 = M[offset + 3] ^ keySchedule[3];

        // Key schedule row counter
        var ksRow = 4;

        // Rounds
        for (var round = 1; round < nRounds; round++) {
          // Shift rows, sub bytes, mix columns, add round key
          var t0 = SUB_MIX_0[s0 >>> 24] ^ SUB_MIX_1[s1 >>> 16 & 0xff] ^ SUB_MIX_2[s2 >>> 8 & 0xff] ^ SUB_MIX_3[s3 & 0xff] ^ keySchedule[ksRow++];
          var t1 = SUB_MIX_0[s1 >>> 24] ^ SUB_MIX_1[s2 >>> 16 & 0xff] ^ SUB_MIX_2[s3 >>> 8 & 0xff] ^ SUB_MIX_3[s0 & 0xff] ^ keySchedule[ksRow++];
          var t2 = SUB_MIX_0[s2 >>> 24] ^ SUB_MIX_1[s3 >>> 16 & 0xff] ^ SUB_MIX_2[s0 >>> 8 & 0xff] ^ SUB_MIX_3[s1 & 0xff] ^ keySchedule[ksRow++];
          var t3 = SUB_MIX_0[s3 >>> 24] ^ SUB_MIX_1[s0 >>> 16 & 0xff] ^ SUB_MIX_2[s1 >>> 8 & 0xff] ^ SUB_MIX_3[s2 & 0xff] ^ keySchedule[ksRow++];

          // Update state
          s0 = t0;
          s1 = t1;
          s2 = t2;
          s3 = t3;
        }

        // Shift rows, sub bytes, add round key
        var t0 = (SBOX[s0 >>> 24] << 24 | SBOX[s1 >>> 16 & 0xff] << 16 | SBOX[s2 >>> 8 & 0xff] << 8 | SBOX[s3 & 0xff]) ^ keySchedule[ksRow++];
        var t1 = (SBOX[s1 >>> 24] << 24 | SBOX[s2 >>> 16 & 0xff] << 16 | SBOX[s3 >>> 8 & 0xff] << 8 | SBOX[s0 & 0xff]) ^ keySchedule[ksRow++];
        var t2 = (SBOX[s2 >>> 24] << 24 | SBOX[s3 >>> 16 & 0xff] << 16 | SBOX[s0 >>> 8 & 0xff] << 8 | SBOX[s1 & 0xff]) ^ keySchedule[ksRow++];
        var t3 = (SBOX[s3 >>> 24] << 24 | SBOX[s0 >>> 16 & 0xff] << 16 | SBOX[s1 >>> 8 & 0xff] << 8 | SBOX[s2 & 0xff]) ^ keySchedule[ksRow++];

        // Set output
        M[offset] = t0;
        M[offset + 1] = t1;
        M[offset + 2] = t2;
        M[offset + 3] = t3;
      },

      keySize: 256 / 32 });


    /**
                             * Shortcut functions to the cipher's object interface.
                             *
                             * @example
                             *
                             *     var ciphertext = CryptoJS.AES.encrypt(message, key, cfg);
                             *     var plaintext  = CryptoJS.AES.decrypt(ciphertext, key, cfg);
                             */
    C.AES = BlockCipher._createHelper(AES);
  })();


  return CryptoJS.AES;

});

/***/ }),
/* 114 */
/*!*************************************************************************!*\
  !*** /Users/xingmangkeji/vue/yimei/node_modules/crypto-js/tripledes.js ***!
  \*************************************************************************/
/*! no static exports found */
/***/ (function(module, exports, __webpack_require__) {

;(function (root, factory, undef) {
  if (true) {
    // CommonJS
    module.exports = exports = factory(__webpack_require__(/*! ./core */ 83), __webpack_require__(/*! ./enc-base64 */ 88), __webpack_require__(/*! ./md5 */ 90), __webpack_require__(/*! ./evpkdf */ 100), __webpack_require__(/*! ./cipher-core */ 101));
  } else
  {}
})(this, function (CryptoJS) {

  (function () {
    // Shortcuts
    var C = CryptoJS;
    var C_lib = C.lib;
    var WordArray = C_lib.WordArray;
    var BlockCipher = C_lib.BlockCipher;
    var C_algo = C.algo;

    // Permuted Choice 1 constants
    var PC1 = [
    57, 49, 41, 33, 25, 17, 9, 1,
    58, 50, 42, 34, 26, 18, 10, 2,
    59, 51, 43, 35, 27, 19, 11, 3,
    60, 52, 44, 36, 63, 55, 47, 39,
    31, 23, 15, 7, 62, 54, 46, 38,
    30, 22, 14, 6, 61, 53, 45, 37,
    29, 21, 13, 5, 28, 20, 12, 4];


    // Permuted Choice 2 constants
    var PC2 = [
    14, 17, 11, 24, 1, 5,
    3, 28, 15, 6, 21, 10,
    23, 19, 12, 4, 26, 8,
    16, 7, 27, 20, 13, 2,
    41, 52, 31, 37, 47, 55,
    30, 40, 51, 45, 33, 48,
    44, 49, 39, 56, 34, 53,
    46, 42, 50, 36, 29, 32];


    // Cumulative bit shift constants
    var BIT_SHIFTS = [1, 2, 4, 6, 8, 10, 12, 14, 15, 17, 19, 21, 23, 25, 27, 28];

    // SBOXes and round permutation constants
    var SBOX_P = [
    {
      0x0: 0x808200,
      0x10000000: 0x8000,
      0x20000000: 0x808002,
      0x30000000: 0x2,
      0x40000000: 0x200,
      0x50000000: 0x808202,
      0x60000000: 0x800202,
      0x70000000: 0x800000,
      0x80000000: 0x202,
      0x90000000: 0x800200,
      0xa0000000: 0x8200,
      0xb0000000: 0x808000,
      0xc0000000: 0x8002,
      0xd0000000: 0x800002,
      0xe0000000: 0x0,
      0xf0000000: 0x8202,
      0x8000000: 0x0,
      0x18000000: 0x808202,
      0x28000000: 0x8202,
      0x38000000: 0x8000,
      0x48000000: 0x808200,
      0x58000000: 0x200,
      0x68000000: 0x808002,
      0x78000000: 0x2,
      0x88000000: 0x800200,
      0x98000000: 0x8200,
      0xa8000000: 0x808000,
      0xb8000000: 0x800202,
      0xc8000000: 0x800002,
      0xd8000000: 0x8002,
      0xe8000000: 0x202,
      0xf8000000: 0x800000,
      0x1: 0x8000,
      0x10000001: 0x2,
      0x20000001: 0x808200,
      0x30000001: 0x800000,
      0x40000001: 0x808002,
      0x50000001: 0x8200,
      0x60000001: 0x200,
      0x70000001: 0x800202,
      0x80000001: 0x808202,
      0x90000001: 0x808000,
      0xa0000001: 0x800002,
      0xb0000001: 0x8202,
      0xc0000001: 0x202,
      0xd0000001: 0x800200,
      0xe0000001: 0x8002,
      0xf0000001: 0x0,
      0x8000001: 0x808202,
      0x18000001: 0x808000,
      0x28000001: 0x800000,
      0x38000001: 0x200,
      0x48000001: 0x8000,
      0x58000001: 0x800002,
      0x68000001: 0x2,
      0x78000001: 0x8202,
      0x88000001: 0x8002,
      0x98000001: 0x800202,
      0xa8000001: 0x202,
      0xb8000001: 0x808200,
      0xc8000001: 0x800200,
      0xd8000001: 0x0,
      0xe8000001: 0x8200,
      0xf8000001: 0x808002 },

    {
      0x0: 0x40084010,
      0x1000000: 0x4000,
      0x2000000: 0x80000,
      0x3000000: 0x40080010,
      0x4000000: 0x40000010,
      0x5000000: 0x40084000,
      0x6000000: 0x40004000,
      0x7000000: 0x10,
      0x8000000: 0x84000,
      0x9000000: 0x40004010,
      0xa000000: 0x40000000,
      0xb000000: 0x84010,
      0xc000000: 0x80010,
      0xd000000: 0x0,
      0xe000000: 0x4010,
      0xf000000: 0x40080000,
      0x800000: 0x40004000,
      0x1800000: 0x84010,
      0x2800000: 0x10,
      0x3800000: 0x40004010,
      0x4800000: 0x40084010,
      0x5800000: 0x40000000,
      0x6800000: 0x80000,
      0x7800000: 0x40080010,
      0x8800000: 0x80010,
      0x9800000: 0x0,
      0xa800000: 0x4000,
      0xb800000: 0x40080000,
      0xc800000: 0x40000010,
      0xd800000: 0x84000,
      0xe800000: 0x40084000,
      0xf800000: 0x4010,
      0x10000000: 0x0,
      0x11000000: 0x40080010,
      0x12000000: 0x40004010,
      0x13000000: 0x40084000,
      0x14000000: 0x40080000,
      0x15000000: 0x10,
      0x16000000: 0x84010,
      0x17000000: 0x4000,
      0x18000000: 0x4010,
      0x19000000: 0x80000,
      0x1a000000: 0x80010,
      0x1b000000: 0x40000010,
      0x1c000000: 0x84000,
      0x1d000000: 0x40004000,
      0x1e000000: 0x40000000,
      0x1f000000: 0x40084010,
      0x10800000: 0x84010,
      0x11800000: 0x80000,
      0x12800000: 0x40080000,
      0x13800000: 0x4000,
      0x14800000: 0x40004000,
      0x15800000: 0x40084010,
      0x16800000: 0x10,
      0x17800000: 0x40000000,
      0x18800000: 0x40084000,
      0x19800000: 0x40000010,
      0x1a800000: 0x40004010,
      0x1b800000: 0x80010,
      0x1c800000: 0x0,
      0x1d800000: 0x4010,
      0x1e800000: 0x40080010,
      0x1f800000: 0x84000 },

    {
      0x0: 0x104,
      0x100000: 0x0,
      0x200000: 0x4000100,
      0x300000: 0x10104,
      0x400000: 0x10004,
      0x500000: 0x4000004,
      0x600000: 0x4010104,
      0x700000: 0x4010000,
      0x800000: 0x4000000,
      0x900000: 0x4010100,
      0xa00000: 0x10100,
      0xb00000: 0x4010004,
      0xc00000: 0x4000104,
      0xd00000: 0x10000,
      0xe00000: 0x4,
      0xf00000: 0x100,
      0x80000: 0x4010100,
      0x180000: 0x4010004,
      0x280000: 0x0,
      0x380000: 0x4000100,
      0x480000: 0x4000004,
      0x580000: 0x10000,
      0x680000: 0x10004,
      0x780000: 0x104,
      0x880000: 0x4,
      0x980000: 0x100,
      0xa80000: 0x4010000,
      0xb80000: 0x10104,
      0xc80000: 0x10100,
      0xd80000: 0x4000104,
      0xe80000: 0x4010104,
      0xf80000: 0x4000000,
      0x1000000: 0x4010100,
      0x1100000: 0x10004,
      0x1200000: 0x10000,
      0x1300000: 0x4000100,
      0x1400000: 0x100,
      0x1500000: 0x4010104,
      0x1600000: 0x4000004,
      0x1700000: 0x0,
      0x1800000: 0x4000104,
      0x1900000: 0x4000000,
      0x1a00000: 0x4,
      0x1b00000: 0x10100,
      0x1c00000: 0x4010000,
      0x1d00000: 0x104,
      0x1e00000: 0x10104,
      0x1f00000: 0x4010004,
      0x1080000: 0x4000000,
      0x1180000: 0x104,
      0x1280000: 0x4010100,
      0x1380000: 0x0,
      0x1480000: 0x10004,
      0x1580000: 0x4000100,
      0x1680000: 0x100,
      0x1780000: 0x4010004,
      0x1880000: 0x10000,
      0x1980000: 0x4010104,
      0x1a80000: 0x10104,
      0x1b80000: 0x4000004,
      0x1c80000: 0x4000104,
      0x1d80000: 0x4010000,
      0x1e80000: 0x4,
      0x1f80000: 0x10100 },

    {
      0x0: 0x80401000,
      0x10000: 0x80001040,
      0x20000: 0x401040,
      0x30000: 0x80400000,
      0x40000: 0x0,
      0x50000: 0x401000,
      0x60000: 0x80000040,
      0x70000: 0x400040,
      0x80000: 0x80000000,
      0x90000: 0x400000,
      0xa0000: 0x40,
      0xb0000: 0x80001000,
      0xc0000: 0x80400040,
      0xd0000: 0x1040,
      0xe0000: 0x1000,
      0xf0000: 0x80401040,
      0x8000: 0x80001040,
      0x18000: 0x40,
      0x28000: 0x80400040,
      0x38000: 0x80001000,
      0x48000: 0x401000,
      0x58000: 0x80401040,
      0x68000: 0x0,
      0x78000: 0x80400000,
      0x88000: 0x1000,
      0x98000: 0x80401000,
      0xa8000: 0x400000,
      0xb8000: 0x1040,
      0xc8000: 0x80000000,
      0xd8000: 0x400040,
      0xe8000: 0x401040,
      0xf8000: 0x80000040,
      0x100000: 0x400040,
      0x110000: 0x401000,
      0x120000: 0x80000040,
      0x130000: 0x0,
      0x140000: 0x1040,
      0x150000: 0x80400040,
      0x160000: 0x80401000,
      0x170000: 0x80001040,
      0x180000: 0x80401040,
      0x190000: 0x80000000,
      0x1a0000: 0x80400000,
      0x1b0000: 0x401040,
      0x1c0000: 0x80001000,
      0x1d0000: 0x400000,
      0x1e0000: 0x40,
      0x1f0000: 0x1000,
      0x108000: 0x80400000,
      0x118000: 0x80401040,
      0x128000: 0x0,
      0x138000: 0x401000,
      0x148000: 0x400040,
      0x158000: 0x80000000,
      0x168000: 0x80001040,
      0x178000: 0x40,
      0x188000: 0x80000040,
      0x198000: 0x1000,
      0x1a8000: 0x80001000,
      0x1b8000: 0x80400040,
      0x1c8000: 0x1040,
      0x1d8000: 0x80401000,
      0x1e8000: 0x400000,
      0x1f8000: 0x401040 },

    {
      0x0: 0x80,
      0x1000: 0x1040000,
      0x2000: 0x40000,
      0x3000: 0x20000000,
      0x4000: 0x20040080,
      0x5000: 0x1000080,
      0x6000: 0x21000080,
      0x7000: 0x40080,
      0x8000: 0x1000000,
      0x9000: 0x20040000,
      0xa000: 0x20000080,
      0xb000: 0x21040080,
      0xc000: 0x21040000,
      0xd000: 0x0,
      0xe000: 0x1040080,
      0xf000: 0x21000000,
      0x800: 0x1040080,
      0x1800: 0x21000080,
      0x2800: 0x80,
      0x3800: 0x1040000,
      0x4800: 0x40000,
      0x5800: 0x20040080,
      0x6800: 0x21040000,
      0x7800: 0x20000000,
      0x8800: 0x20040000,
      0x9800: 0x0,
      0xa800: 0x21040080,
      0xb800: 0x1000080,
      0xc800: 0x20000080,
      0xd800: 0x21000000,
      0xe800: 0x1000000,
      0xf800: 0x40080,
      0x10000: 0x40000,
      0x11000: 0x80,
      0x12000: 0x20000000,
      0x13000: 0x21000080,
      0x14000: 0x1000080,
      0x15000: 0x21040000,
      0x16000: 0x20040080,
      0x17000: 0x1000000,
      0x18000: 0x21040080,
      0x19000: 0x21000000,
      0x1a000: 0x1040000,
      0x1b000: 0x20040000,
      0x1c000: 0x40080,
      0x1d000: 0x20000080,
      0x1e000: 0x0,
      0x1f000: 0x1040080,
      0x10800: 0x21000080,
      0x11800: 0x1000000,
      0x12800: 0x1040000,
      0x13800: 0x20040080,
      0x14800: 0x20000000,
      0x15800: 0x1040080,
      0x16800: 0x80,
      0x17800: 0x21040000,
      0x18800: 0x40080,
      0x19800: 0x21040080,
      0x1a800: 0x0,
      0x1b800: 0x21000000,
      0x1c800: 0x1000080,
      0x1d800: 0x40000,
      0x1e800: 0x20040000,
      0x1f800: 0x20000080 },

    {
      0x0: 0x10000008,
      0x100: 0x2000,
      0x200: 0x10200000,
      0x300: 0x10202008,
      0x400: 0x10002000,
      0x500: 0x200000,
      0x600: 0x200008,
      0x700: 0x10000000,
      0x800: 0x0,
      0x900: 0x10002008,
      0xa00: 0x202000,
      0xb00: 0x8,
      0xc00: 0x10200008,
      0xd00: 0x202008,
      0xe00: 0x2008,
      0xf00: 0x10202000,
      0x80: 0x10200000,
      0x180: 0x10202008,
      0x280: 0x8,
      0x380: 0x200000,
      0x480: 0x202008,
      0x580: 0x10000008,
      0x680: 0x10002000,
      0x780: 0x2008,
      0x880: 0x200008,
      0x980: 0x2000,
      0xa80: 0x10002008,
      0xb80: 0x10200008,
      0xc80: 0x0,
      0xd80: 0x10202000,
      0xe80: 0x202000,
      0xf80: 0x10000000,
      0x1000: 0x10002000,
      0x1100: 0x10200008,
      0x1200: 0x10202008,
      0x1300: 0x2008,
      0x1400: 0x200000,
      0x1500: 0x10000000,
      0x1600: 0x10000008,
      0x1700: 0x202000,
      0x1800: 0x202008,
      0x1900: 0x0,
      0x1a00: 0x8,
      0x1b00: 0x10200000,
      0x1c00: 0x2000,
      0x1d00: 0x10002008,
      0x1e00: 0x10202000,
      0x1f00: 0x200008,
      0x1080: 0x8,
      0x1180: 0x202000,
      0x1280: 0x200000,
      0x1380: 0x10000008,
      0x1480: 0x10002000,
      0x1580: 0x2008,
      0x1680: 0x10202008,
      0x1780: 0x10200000,
      0x1880: 0x10202000,
      0x1980: 0x10200008,
      0x1a80: 0x2000,
      0x1b80: 0x202008,
      0x1c80: 0x200008,
      0x1d80: 0x0,
      0x1e80: 0x10000000,
      0x1f80: 0x10002008 },

    {
      0x0: 0x100000,
      0x10: 0x2000401,
      0x20: 0x400,
      0x30: 0x100401,
      0x40: 0x2100401,
      0x50: 0x0,
      0x60: 0x1,
      0x70: 0x2100001,
      0x80: 0x2000400,
      0x90: 0x100001,
      0xa0: 0x2000001,
      0xb0: 0x2100400,
      0xc0: 0x2100000,
      0xd0: 0x401,
      0xe0: 0x100400,
      0xf0: 0x2000000,
      0x8: 0x2100001,
      0x18: 0x0,
      0x28: 0x2000401,
      0x38: 0x2100400,
      0x48: 0x100000,
      0x58: 0x2000001,
      0x68: 0x2000000,
      0x78: 0x401,
      0x88: 0x100401,
      0x98: 0x2000400,
      0xa8: 0x2100000,
      0xb8: 0x100001,
      0xc8: 0x400,
      0xd8: 0x2100401,
      0xe8: 0x1,
      0xf8: 0x100400,
      0x100: 0x2000000,
      0x110: 0x100000,
      0x120: 0x2000401,
      0x130: 0x2100001,
      0x140: 0x100001,
      0x150: 0x2000400,
      0x160: 0x2100400,
      0x170: 0x100401,
      0x180: 0x401,
      0x190: 0x2100401,
      0x1a0: 0x100400,
      0x1b0: 0x1,
      0x1c0: 0x0,
      0x1d0: 0x2100000,
      0x1e0: 0x2000001,
      0x1f0: 0x400,
      0x108: 0x100400,
      0x118: 0x2000401,
      0x128: 0x2100001,
      0x138: 0x1,
      0x148: 0x2000000,
      0x158: 0x100000,
      0x168: 0x401,
      0x178: 0x2100400,
      0x188: 0x2000001,
      0x198: 0x2100000,
      0x1a8: 0x0,
      0x1b8: 0x2100401,
      0x1c8: 0x100401,
      0x1d8: 0x400,
      0x1e8: 0x2000400,
      0x1f8: 0x100001 },

    {
      0x0: 0x8000820,
      0x1: 0x20000,
      0x2: 0x8000000,
      0x3: 0x20,
      0x4: 0x20020,
      0x5: 0x8020820,
      0x6: 0x8020800,
      0x7: 0x800,
      0x8: 0x8020000,
      0x9: 0x8000800,
      0xa: 0x20800,
      0xb: 0x8020020,
      0xc: 0x820,
      0xd: 0x0,
      0xe: 0x8000020,
      0xf: 0x20820,
      0x80000000: 0x800,
      0x80000001: 0x8020820,
      0x80000002: 0x8000820,
      0x80000003: 0x8000000,
      0x80000004: 0x8020000,
      0x80000005: 0x20800,
      0x80000006: 0x20820,
      0x80000007: 0x20,
      0x80000008: 0x8000020,
      0x80000009: 0x820,
      0x8000000a: 0x20020,
      0x8000000b: 0x8020800,
      0x8000000c: 0x0,
      0x8000000d: 0x8020020,
      0x8000000e: 0x8000800,
      0x8000000f: 0x20000,
      0x10: 0x20820,
      0x11: 0x8020800,
      0x12: 0x20,
      0x13: 0x800,
      0x14: 0x8000800,
      0x15: 0x8000020,
      0x16: 0x8020020,
      0x17: 0x20000,
      0x18: 0x0,
      0x19: 0x20020,
      0x1a: 0x8020000,
      0x1b: 0x8000820,
      0x1c: 0x8020820,
      0x1d: 0x20800,
      0x1e: 0x820,
      0x1f: 0x8000000,
      0x80000010: 0x20000,
      0x80000011: 0x800,
      0x80000012: 0x8020020,
      0x80000013: 0x20820,
      0x80000014: 0x20,
      0x80000015: 0x8020000,
      0x80000016: 0x8000000,
      0x80000017: 0x8000820,
      0x80000018: 0x8020820,
      0x80000019: 0x8000020,
      0x8000001a: 0x8000800,
      0x8000001b: 0x0,
      0x8000001c: 0x20800,
      0x8000001d: 0x820,
      0x8000001e: 0x20020,
      0x8000001f: 0x8020800 }];



    // Masks that select the SBOX input
    var SBOX_MASK = [
    0xf8000001, 0x1f800000, 0x01f80000, 0x001f8000,
    0x0001f800, 0x00001f80, 0x000001f8, 0x8000001f];


    /**
                                                      * DES block cipher algorithm.
                                                      */
    var DES = C_algo.DES = BlockCipher.extend({
      _doReset: function _doReset() {
        // Shortcuts
        var key = this._key;
        var keyWords = key.words;

        // Select 56 bits according to PC1
        var keyBits = [];
        for (var i = 0; i < 56; i++) {
          var keyBitPos = PC1[i] - 1;
          keyBits[i] = keyWords[keyBitPos >>> 5] >>> 31 - keyBitPos % 32 & 1;
        }

        // Assemble 16 subkeys
        var subKeys = this._subKeys = [];
        for (var nSubKey = 0; nSubKey < 16; nSubKey++) {
          // Create subkey
          var subKey = subKeys[nSubKey] = [];

          // Shortcut
          var bitShift = BIT_SHIFTS[nSubKey];

          // Select 48 bits according to PC2
          for (var i = 0; i < 24; i++) {
            // Select from the left 28 key bits
            subKey[i / 6 | 0] |= keyBits[(PC2[i] - 1 + bitShift) % 28] << 31 - i % 6;

            // Select from the right 28 key bits
            subKey[4 + (i / 6 | 0)] |= keyBits[28 + (PC2[i + 24] - 1 + bitShift) % 28] << 31 - i % 6;
          }

          // Since each subkey is applied to an expanded 32-bit input,
          // the subkey can be broken into 8 values scaled to 32-bits,
          // which allows the key to be used without expansion
          subKey[0] = subKey[0] << 1 | subKey[0] >>> 31;
          for (var i = 1; i < 7; i++) {
            subKey[i] = subKey[i] >>> (i - 1) * 4 + 3;
          }
          subKey[7] = subKey[7] << 5 | subKey[7] >>> 27;
        }

        // Compute inverse subkeys
        var invSubKeys = this._invSubKeys = [];
        for (var i = 0; i < 16; i++) {
          invSubKeys[i] = subKeys[15 - i];
        }
      },

      encryptBlock: function encryptBlock(M, offset) {
        this._doCryptBlock(M, offset, this._subKeys);
      },

      decryptBlock: function decryptBlock(M, offset) {
        this._doCryptBlock(M, offset, this._invSubKeys);
      },

      _doCryptBlock: function _doCryptBlock(M, offset, subKeys) {
        // Get input
        this._lBlock = M[offset];
        this._rBlock = M[offset + 1];

        // Initial permutation
        exchangeLR.call(this, 4, 0x0f0f0f0f);
        exchangeLR.call(this, 16, 0x0000ffff);
        exchangeRL.call(this, 2, 0x33333333);
        exchangeRL.call(this, 8, 0x00ff00ff);
        exchangeLR.call(this, 1, 0x55555555);

        // Rounds
        for (var round = 0; round < 16; round++) {
          // Shortcuts
          var subKey = subKeys[round];
          var lBlock = this._lBlock;
          var rBlock = this._rBlock;

          // Feistel function
          var f = 0;
          for (var i = 0; i < 8; i++) {
            f |= SBOX_P[i][((rBlock ^ subKey[i]) & SBOX_MASK[i]) >>> 0];
          }
          this._lBlock = rBlock;
          this._rBlock = lBlock ^ f;
        }

        // Undo swap from last round
        var t = this._lBlock;
        this._lBlock = this._rBlock;
        this._rBlock = t;

        // Final permutation
        exchangeLR.call(this, 1, 0x55555555);
        exchangeRL.call(this, 8, 0x00ff00ff);
        exchangeRL.call(this, 2, 0x33333333);
        exchangeLR.call(this, 16, 0x0000ffff);
        exchangeLR.call(this, 4, 0x0f0f0f0f);

        // Set output
        M[offset] = this._lBlock;
        M[offset + 1] = this._rBlock;
      },

      keySize: 64 / 32,

      ivSize: 64 / 32,

      blockSize: 64 / 32 });


    // Swap bits across the left and right words
    function exchangeLR(offset, mask) {
      var t = (this._lBlock >>> offset ^ this._rBlock) & mask;
      this._rBlock ^= t;
      this._lBlock ^= t << offset;
    }

    function exchangeRL(offset, mask) {
      var t = (this._rBlock >>> offset ^ this._lBlock) & mask;
      this._lBlock ^= t;
      this._rBlock ^= t << offset;
    }

    /**
       * Shortcut functions to the cipher's object interface.
       *
       * @example
       *
       *     var ciphertext = CryptoJS.DES.encrypt(message, key, cfg);
       *     var plaintext  = CryptoJS.DES.decrypt(ciphertext, key, cfg);
       */
    C.DES = BlockCipher._createHelper(DES);

    /**
                                             * Triple-DES block cipher algorithm.
                                             */
    var TripleDES = C_algo.TripleDES = BlockCipher.extend({
      _doReset: function _doReset() {
        // Shortcuts
        var key = this._key;
        var keyWords = key.words;
        // Make sure the key length is valid (64, 128 or >= 192 bit)
        if (keyWords.length !== 2 && keyWords.length !== 4 && keyWords.length < 6) {
          throw new Error('Invalid key length - 3DES requires the key length to be 64, 128, 192 or >192.');
        }

        // Extend the key according to the keying options defined in 3DES standard
        var key1 = keyWords.slice(0, 2);
        var key2 = keyWords.length < 4 ? keyWords.slice(0, 2) : keyWords.slice(2, 4);
        var key3 = keyWords.length < 6 ? keyWords.slice(0, 2) : keyWords.slice(4, 6);

        // Create DES instances
        this._des1 = DES.createEncryptor(WordArray.create(key1));
        this._des2 = DES.createEncryptor(WordArray.create(key2));
        this._des3 = DES.createEncryptor(WordArray.create(key3));
      },

      encryptBlock: function encryptBlock(M, offset) {
        this._des1.encryptBlock(M, offset);
        this._des2.decryptBlock(M, offset);
        this._des3.encryptBlock(M, offset);
      },

      decryptBlock: function decryptBlock(M, offset) {
        this._des3.decryptBlock(M, offset);
        this._des2.encryptBlock(M, offset);
        this._des1.decryptBlock(M, offset);
      },

      keySize: 192 / 32,

      ivSize: 64 / 32,

      blockSize: 64 / 32 });


    /**
                              * Shortcut functions to the cipher's object interface.
                              *
                              * @example
                              *
                              *     var ciphertext = CryptoJS.TripleDES.encrypt(message, key, cfg);
                              *     var plaintext  = CryptoJS.TripleDES.decrypt(ciphertext, key, cfg);
                              */
    C.TripleDES = BlockCipher._createHelper(TripleDES);
  })();


  return CryptoJS.TripleDES;

});

/***/ }),
/* 115 */
/*!*******************************************************************!*\
  !*** /Users/xingmangkeji/vue/yimei/node_modules/crypto-js/rc4.js ***!
  \*******************************************************************/
/*! no static exports found */
/***/ (function(module, exports, __webpack_require__) {

;(function (root, factory, undef) {
  if (true) {
    // CommonJS
    module.exports = exports = factory(__webpack_require__(/*! ./core */ 83), __webpack_require__(/*! ./enc-base64 */ 88), __webpack_require__(/*! ./md5 */ 90), __webpack_require__(/*! ./evpkdf */ 100), __webpack_require__(/*! ./cipher-core */ 101));
  } else
  {}
})(this, function (CryptoJS) {

  (function () {
    // Shortcuts
    var C = CryptoJS;
    var C_lib = C.lib;
    var StreamCipher = C_lib.StreamCipher;
    var C_algo = C.algo;

    /**
                          * RC4 stream cipher algorithm.
                          */
    var RC4 = C_algo.RC4 = StreamCipher.extend({
      _doReset: function _doReset() {
        // Shortcuts
        var key = this._key;
        var keyWords = key.words;
        var keySigBytes = key.sigBytes;

        // Init sbox
        var S = this._S = [];
        for (var i = 0; i < 256; i++) {
          S[i] = i;
        }

        // Key setup
        for (var i = 0, j = 0; i < 256; i++) {
          var keyByteIndex = i % keySigBytes;
          var keyByte = keyWords[keyByteIndex >>> 2] >>> 24 - keyByteIndex % 4 * 8 & 0xff;

          j = (j + S[i] + keyByte) % 256;

          // Swap
          var t = S[i];
          S[i] = S[j];
          S[j] = t;
        }

        // Counters
        this._i = this._j = 0;
      },

      _doProcessBlock: function _doProcessBlock(M, offset) {
        M[offset] ^= generateKeystreamWord.call(this);
      },

      keySize: 256 / 32,

      ivSize: 0 });


    function generateKeystreamWord() {
      // Shortcuts
      var S = this._S;
      var i = this._i;
      var j = this._j;

      // Generate keystream word
      var keystreamWord = 0;
      for (var n = 0; n < 4; n++) {
        i = (i + 1) % 256;
        j = (j + S[i]) % 256;

        // Swap
        var t = S[i];
        S[i] = S[j];
        S[j] = t;

        keystreamWord |= S[(S[i] + S[j]) % 256] << 24 - n * 8;
      }

      // Update counters
      this._i = i;
      this._j = j;

      return keystreamWord;
    }

    /**
       * Shortcut functions to the cipher's object interface.
       *
       * @example
       *
       *     var ciphertext = CryptoJS.RC4.encrypt(message, key, cfg);
       *     var plaintext  = CryptoJS.RC4.decrypt(ciphertext, key, cfg);
       */
    C.RC4 = StreamCipher._createHelper(RC4);

    /**
                                              * Modified RC4 stream cipher algorithm.
                                              */
    var RC4Drop = C_algo.RC4Drop = RC4.extend({
      /**
                                                 * Configuration options.
                                                 *
                                                 * @property {number} drop The number of keystream words to drop. Default 192
                                                 */
      cfg: RC4.cfg.extend({
        drop: 192 }),


      _doReset: function _doReset() {
        RC4._doReset.call(this);

        // Drop
        for (var i = this.cfg.drop; i > 0; i--) {
          generateKeystreamWord.call(this);
        }
      } });


    /**
             * Shortcut functions to the cipher's object interface.
             *
             * @example
             *
             *     var ciphertext = CryptoJS.RC4Drop.encrypt(message, key, cfg);
             *     var plaintext  = CryptoJS.RC4Drop.decrypt(ciphertext, key, cfg);
             */
    C.RC4Drop = StreamCipher._createHelper(RC4Drop);
  })();


  return CryptoJS.RC4;

});

/***/ }),
/* 116 */
/*!**********************************************************************!*\
  !*** /Users/xingmangkeji/vue/yimei/node_modules/crypto-js/rabbit.js ***!
  \**********************************************************************/
/*! no static exports found */
/***/ (function(module, exports, __webpack_require__) {

;(function (root, factory, undef) {
  if (true) {
    // CommonJS
    module.exports = exports = factory(__webpack_require__(/*! ./core */ 83), __webpack_require__(/*! ./enc-base64 */ 88), __webpack_require__(/*! ./md5 */ 90), __webpack_require__(/*! ./evpkdf */ 100), __webpack_require__(/*! ./cipher-core */ 101));
  } else
  {}
})(this, function (CryptoJS) {

  (function () {
    // Shortcuts
    var C = CryptoJS;
    var C_lib = C.lib;
    var StreamCipher = C_lib.StreamCipher;
    var C_algo = C.algo;

    // Reusable objects
    var S = [];
    var C_ = [];
    var G = [];

    /**
                 * Rabbit stream cipher algorithm
                 */
    var Rabbit = C_algo.Rabbit = StreamCipher.extend({
      _doReset: function _doReset() {
        // Shortcuts
        var K = this._key.words;
        var iv = this.cfg.iv;

        // Swap endian
        for (var i = 0; i < 4; i++) {
          K[i] = (K[i] << 8 | K[i] >>> 24) & 0x00ff00ff |
          (K[i] << 24 | K[i] >>> 8) & 0xff00ff00;
        }

        // Generate initial state values
        var X = this._X = [
        K[0], K[3] << 16 | K[2] >>> 16,
        K[1], K[0] << 16 | K[3] >>> 16,
        K[2], K[1] << 16 | K[0] >>> 16,
        K[3], K[2] << 16 | K[1] >>> 16];


        // Generate initial counter values
        var C = this._C = [
        K[2] << 16 | K[2] >>> 16, K[0] & 0xffff0000 | K[1] & 0x0000ffff,
        K[3] << 16 | K[3] >>> 16, K[1] & 0xffff0000 | K[2] & 0x0000ffff,
        K[0] << 16 | K[0] >>> 16, K[2] & 0xffff0000 | K[3] & 0x0000ffff,
        K[1] << 16 | K[1] >>> 16, K[3] & 0xffff0000 | K[0] & 0x0000ffff];


        // Carry bit
        this._b = 0;

        // Iterate the system four times
        for (var i = 0; i < 4; i++) {
          nextState.call(this);
        }

        // Modify the counters
        for (var i = 0; i < 8; i++) {
          C[i] ^= X[i + 4 & 7];
        }

        // IV setup
        if (iv) {
          // Shortcuts
          var IV = iv.words;
          var IV_0 = IV[0];
          var IV_1 = IV[1];

          // Generate four subvectors
          var i0 = (IV_0 << 8 | IV_0 >>> 24) & 0x00ff00ff | (IV_0 << 24 | IV_0 >>> 8) & 0xff00ff00;
          var i2 = (IV_1 << 8 | IV_1 >>> 24) & 0x00ff00ff | (IV_1 << 24 | IV_1 >>> 8) & 0xff00ff00;
          var i1 = i0 >>> 16 | i2 & 0xffff0000;
          var i3 = i2 << 16 | i0 & 0x0000ffff;

          // Modify counter values
          C[0] ^= i0;
          C[1] ^= i1;
          C[2] ^= i2;
          C[3] ^= i3;
          C[4] ^= i0;
          C[5] ^= i1;
          C[6] ^= i2;
          C[7] ^= i3;

          // Iterate the system four times
          for (var i = 0; i < 4; i++) {
            nextState.call(this);
          }
        }
      },

      _doProcessBlock: function _doProcessBlock(M, offset) {
        // Shortcut
        var X = this._X;

        // Iterate the system
        nextState.call(this);

        // Generate four keystream words
        S[0] = X[0] ^ X[5] >>> 16 ^ X[3] << 16;
        S[1] = X[2] ^ X[7] >>> 16 ^ X[5] << 16;
        S[2] = X[4] ^ X[1] >>> 16 ^ X[7] << 16;
        S[3] = X[6] ^ X[3] >>> 16 ^ X[1] << 16;

        for (var i = 0; i < 4; i++) {
          // Swap endian
          S[i] = (S[i] << 8 | S[i] >>> 24) & 0x00ff00ff |
          (S[i] << 24 | S[i] >>> 8) & 0xff00ff00;

          // Encrypt
          M[offset + i] ^= S[i];
        }
      },

      blockSize: 128 / 32,

      ivSize: 64 / 32 });


    function nextState() {
      // Shortcuts
      var X = this._X;
      var C = this._C;

      // Save old counter values
      for (var i = 0; i < 8; i++) {
        C_[i] = C[i];
      }

      // Calculate new counter values
      C[0] = C[0] + 0x4d34d34d + this._b | 0;
      C[1] = C[1] + 0xd34d34d3 + (C[0] >>> 0 < C_[0] >>> 0 ? 1 : 0) | 0;
      C[2] = C[2] + 0x34d34d34 + (C[1] >>> 0 < C_[1] >>> 0 ? 1 : 0) | 0;
      C[3] = C[3] + 0x4d34d34d + (C[2] >>> 0 < C_[2] >>> 0 ? 1 : 0) | 0;
      C[4] = C[4] + 0xd34d34d3 + (C[3] >>> 0 < C_[3] >>> 0 ? 1 : 0) | 0;
      C[5] = C[5] + 0x34d34d34 + (C[4] >>> 0 < C_[4] >>> 0 ? 1 : 0) | 0;
      C[6] = C[6] + 0x4d34d34d + (C[5] >>> 0 < C_[5] >>> 0 ? 1 : 0) | 0;
      C[7] = C[7] + 0xd34d34d3 + (C[6] >>> 0 < C_[6] >>> 0 ? 1 : 0) | 0;
      this._b = C[7] >>> 0 < C_[7] >>> 0 ? 1 : 0;

      // Calculate the g-values
      for (var i = 0; i < 8; i++) {
        var gx = X[i] + C[i];

        // Construct high and low argument for squaring
        var ga = gx & 0xffff;
        var gb = gx >>> 16;

        // Calculate high and low result of squaring
        var gh = ((ga * ga >>> 17) + ga * gb >>> 15) + gb * gb;
        var gl = ((gx & 0xffff0000) * gx | 0) + ((gx & 0x0000ffff) * gx | 0);

        // High XOR low
        G[i] = gh ^ gl;
      }

      // Calculate new state values
      X[0] = G[0] + (G[7] << 16 | G[7] >>> 16) + (G[6] << 16 | G[6] >>> 16) | 0;
      X[1] = G[1] + (G[0] << 8 | G[0] >>> 24) + G[7] | 0;
      X[2] = G[2] + (G[1] << 16 | G[1] >>> 16) + (G[0] << 16 | G[0] >>> 16) | 0;
      X[3] = G[3] + (G[2] << 8 | G[2] >>> 24) + G[1] | 0;
      X[4] = G[4] + (G[3] << 16 | G[3] >>> 16) + (G[2] << 16 | G[2] >>> 16) | 0;
      X[5] = G[5] + (G[4] << 8 | G[4] >>> 24) + G[3] | 0;
      X[6] = G[6] + (G[5] << 16 | G[5] >>> 16) + (G[4] << 16 | G[4] >>> 16) | 0;
      X[7] = G[7] + (G[6] << 8 | G[6] >>> 24) + G[5] | 0;
    }

    /**
       * Shortcut functions to the cipher's object interface.
       *
       * @example
       *
       *     var ciphertext = CryptoJS.Rabbit.encrypt(message, key, cfg);
       *     var plaintext  = CryptoJS.Rabbit.decrypt(ciphertext, key, cfg);
       */
    C.Rabbit = StreamCipher._createHelper(Rabbit);
  })();


  return CryptoJS.Rabbit;

});

/***/ }),
/* 117 */
/*!*****************************************************************************!*\
  !*** /Users/xingmangkeji/vue/yimei/node_modules/crypto-js/rabbit-legacy.js ***!
  \*****************************************************************************/
/*! no static exports found */
/***/ (function(module, exports, __webpack_require__) {

;(function (root, factory, undef) {
  if (true) {
    // CommonJS
    module.exports = exports = factory(__webpack_require__(/*! ./core */ 83), __webpack_require__(/*! ./enc-base64 */ 88), __webpack_require__(/*! ./md5 */ 90), __webpack_require__(/*! ./evpkdf */ 100), __webpack_require__(/*! ./cipher-core */ 101));
  } else
  {}
})(this, function (CryptoJS) {

  (function () {
    // Shortcuts
    var C = CryptoJS;
    var C_lib = C.lib;
    var StreamCipher = C_lib.StreamCipher;
    var C_algo = C.algo;

    // Reusable objects
    var S = [];
    var C_ = [];
    var G = [];

    /**
                 * Rabbit stream cipher algorithm.
                 *
                 * This is a legacy version that neglected to convert the key to little-endian.
                 * This error doesn't affect the cipher's security,
                 * but it does affect its compatibility with other implementations.
                 */
    var RabbitLegacy = C_algo.RabbitLegacy = StreamCipher.extend({
      _doReset: function _doReset() {
        // Shortcuts
        var K = this._key.words;
        var iv = this.cfg.iv;

        // Generate initial state values
        var X = this._X = [
        K[0], K[3] << 16 | K[2] >>> 16,
        K[1], K[0] << 16 | K[3] >>> 16,
        K[2], K[1] << 16 | K[0] >>> 16,
        K[3], K[2] << 16 | K[1] >>> 16];


        // Generate initial counter values
        var C = this._C = [
        K[2] << 16 | K[2] >>> 16, K[0] & 0xffff0000 | K[1] & 0x0000ffff,
        K[3] << 16 | K[3] >>> 16, K[1] & 0xffff0000 | K[2] & 0x0000ffff,
        K[0] << 16 | K[0] >>> 16, K[2] & 0xffff0000 | K[3] & 0x0000ffff,
        K[1] << 16 | K[1] >>> 16, K[3] & 0xffff0000 | K[0] & 0x0000ffff];


        // Carry bit
        this._b = 0;

        // Iterate the system four times
        for (var i = 0; i < 4; i++) {
          nextState.call(this);
        }

        // Modify the counters
        for (var i = 0; i < 8; i++) {
          C[i] ^= X[i + 4 & 7];
        }

        // IV setup
        if (iv) {
          // Shortcuts
          var IV = iv.words;
          var IV_0 = IV[0];
          var IV_1 = IV[1];

          // Generate four subvectors
          var i0 = (IV_0 << 8 | IV_0 >>> 24) & 0x00ff00ff | (IV_0 << 24 | IV_0 >>> 8) & 0xff00ff00;
          var i2 = (IV_1 << 8 | IV_1 >>> 24) & 0x00ff00ff | (IV_1 << 24 | IV_1 >>> 8) & 0xff00ff00;
          var i1 = i0 >>> 16 | i2 & 0xffff0000;
          var i3 = i2 << 16 | i0 & 0x0000ffff;

          // Modify counter values
          C[0] ^= i0;
          C[1] ^= i1;
          C[2] ^= i2;
          C[3] ^= i3;
          C[4] ^= i0;
          C[5] ^= i1;
          C[6] ^= i2;
          C[7] ^= i3;

          // Iterate the system four times
          for (var i = 0; i < 4; i++) {
            nextState.call(this);
          }
        }
      },

      _doProcessBlock: function _doProcessBlock(M, offset) {
        // Shortcut
        var X = this._X;

        // Iterate the system
        nextState.call(this);

        // Generate four keystream words
        S[0] = X[0] ^ X[5] >>> 16 ^ X[3] << 16;
        S[1] = X[2] ^ X[7] >>> 16 ^ X[5] << 16;
        S[2] = X[4] ^ X[1] >>> 16 ^ X[7] << 16;
        S[3] = X[6] ^ X[3] >>> 16 ^ X[1] << 16;

        for (var i = 0; i < 4; i++) {
          // Swap endian
          S[i] = (S[i] << 8 | S[i] >>> 24) & 0x00ff00ff |
          (S[i] << 24 | S[i] >>> 8) & 0xff00ff00;

          // Encrypt
          M[offset + i] ^= S[i];
        }
      },

      blockSize: 128 / 32,

      ivSize: 64 / 32 });


    function nextState() {
      // Shortcuts
      var X = this._X;
      var C = this._C;

      // Save old counter values
      for (var i = 0; i < 8; i++) {
        C_[i] = C[i];
      }

      // Calculate new counter values
      C[0] = C[0] + 0x4d34d34d + this._b | 0;
      C[1] = C[1] + 0xd34d34d3 + (C[0] >>> 0 < C_[0] >>> 0 ? 1 : 0) | 0;
      C[2] = C[2] + 0x34d34d34 + (C[1] >>> 0 < C_[1] >>> 0 ? 1 : 0) | 0;
      C[3] = C[3] + 0x4d34d34d + (C[2] >>> 0 < C_[2] >>> 0 ? 1 : 0) | 0;
      C[4] = C[4] + 0xd34d34d3 + (C[3] >>> 0 < C_[3] >>> 0 ? 1 : 0) | 0;
      C[5] = C[5] + 0x34d34d34 + (C[4] >>> 0 < C_[4] >>> 0 ? 1 : 0) | 0;
      C[6] = C[6] + 0x4d34d34d + (C[5] >>> 0 < C_[5] >>> 0 ? 1 : 0) | 0;
      C[7] = C[7] + 0xd34d34d3 + (C[6] >>> 0 < C_[6] >>> 0 ? 1 : 0) | 0;
      this._b = C[7] >>> 0 < C_[7] >>> 0 ? 1 : 0;

      // Calculate the g-values
      for (var i = 0; i < 8; i++) {
        var gx = X[i] + C[i];

        // Construct high and low argument for squaring
        var ga = gx & 0xffff;
        var gb = gx >>> 16;

        // Calculate high and low result of squaring
        var gh = ((ga * ga >>> 17) + ga * gb >>> 15) + gb * gb;
        var gl = ((gx & 0xffff0000) * gx | 0) + ((gx & 0x0000ffff) * gx | 0);

        // High XOR low
        G[i] = gh ^ gl;
      }

      // Calculate new state values
      X[0] = G[0] + (G[7] << 16 | G[7] >>> 16) + (G[6] << 16 | G[6] >>> 16) | 0;
      X[1] = G[1] + (G[0] << 8 | G[0] >>> 24) + G[7] | 0;
      X[2] = G[2] + (G[1] << 16 | G[1] >>> 16) + (G[0] << 16 | G[0] >>> 16) | 0;
      X[3] = G[3] + (G[2] << 8 | G[2] >>> 24) + G[1] | 0;
      X[4] = G[4] + (G[3] << 16 | G[3] >>> 16) + (G[2] << 16 | G[2] >>> 16) | 0;
      X[5] = G[5] + (G[4] << 8 | G[4] >>> 24) + G[3] | 0;
      X[6] = G[6] + (G[5] << 16 | G[5] >>> 16) + (G[4] << 16 | G[4] >>> 16) | 0;
      X[7] = G[7] + (G[6] << 8 | G[6] >>> 24) + G[5] | 0;
    }

    /**
       * Shortcut functions to the cipher's object interface.
       *
       * @example
       *
       *     var ciphertext = CryptoJS.RabbitLegacy.encrypt(message, key, cfg);
       *     var plaintext  = CryptoJS.RabbitLegacy.decrypt(ciphertext, key, cfg);
       */
    C.RabbitLegacy = StreamCipher._createHelper(RabbitLegacy);
  })();


  return CryptoJS.RabbitLegacy;

});

/***/ }),
/* 118 */,
/* 119 */,
/* 120 */,
/* 121 */,
/* 122 */,
/* 123 */,
/* 124 */,
/* 125 */,
/* 126 */,
/* 127 */,
/* 128 */,
/* 129 */,
/* 130 */,
/* 131 */,
/* 132 */,
/* 133 */,
/* 134 */,
/* 135 */,
/* 136 */,
/* 137 */,
/* 138 */,
/* 139 */,
/* 140 */,
/* 141 */,
/* 142 */,
/* 143 */,
/* 144 */,
/* 145 */,
/* 146 */,
/* 147 */,
/* 148 */,
/* 149 */,
/* 150 */,
/* 151 */,
/* 152 */,
/* 153 */,
/* 154 */,
/* 155 */,
/* 156 */,
/* 157 */,
/* 158 */,
/* 159 */,
/* 160 */,
/* 161 */,
/* 162 */,
/* 163 */,
/* 164 */,
/* 165 */,
/* 166 */,
/* 167 */,
/* 168 */,
/* 169 */,
/* 170 */
/*!********************************************************************************!*\
  !*** /Users/xingmangkeji/vue/yimei/node_modules/uview-ui/libs/util/emitter.js ***!
  \********************************************************************************/
/*! no static exports found */
/***/ (function(module, exports, __webpack_require__) {

"use strict";
Object.defineProperty(exports, "__esModule", { value: true });exports.default = void 0; /**
                                                                                                      * 递归使用 call 方式this指向
                                                                                                      * @param componentName // 需要找的组件的名称
                                                                                                      * @param eventName // 事件名称
                                                                                                      * @param params // 需要传递的参数
                                                                                                      */
function _broadcast(componentName, eventName, params) {
  // 循环子节点找到名称一样的子节点 否则 递归 当前子节点
  this.$children.map(function (child) {
    if (componentName === child.$options.name) {
      child.$emit.apply(child, [eventName].concat(params));
    } else {
      _broadcast.apply(child, [componentName, eventName].concat(params));
    }
  });
}var _default =
{
  methods: {
    /**
              * 派发 (向上查找) (一个)
              * @param componentName // 需要找的组件的名称
              * @param eventName // 事件名称
              * @param params // 需要传递的参数
              */
    dispatch: function dispatch(componentName, eventName, params) {
      var parent = this.$parent || this.$root; //$parent 找到最近的父节点 $root 根节点
      var name = parent.$options.name; // 获取当前组件实例的name
      // 如果当前有节点 && 当前没名称 且 当前名称等于需要传进来的名称的时候就去查找当前的节点
      // 循环出当前名称的一样的组件实例
      while (parent && (!name || name !== componentName)) {
        parent = parent.$parent;
        if (parent) {
          name = parent.$options.name;
        }
      }
      // 有节点表示当前找到了name一样的实例
      if (parent) {
        parent.$emit.apply(parent, [eventName].concat(params));
      }
    },
    /**
        * 广播 (向下查找) (广播多个)
        * @param componentName // 需要找的组件的名称
        * @param eventName // 事件名称
        * @param params // 需要传递的参数
        */
    broadcast: function broadcast(componentName, eventName, params) {
      _broadcast.call(this, componentName, eventName, params);
    } } };exports.default = _default;

/***/ })
]]);
//# sourceMappingURL=../../.sourcemap/mp-weixin/common/vendor.js.map